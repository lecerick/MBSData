{"version":3,"sources":["../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/config.js","../node_modules/echarts-for-react/lib/index.js","../node_modules/echarts/theme/macarons.js","../node_modules/echarts/lib/util/layout.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/zrender/lib/core/env.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/model/Series.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/tool/color.js","../node_modules/zrender/lib/core/event.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/data/helper/dataStackHelper.js","../node_modules/zrender/lib/core/curve.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/echarts/lib/data/helper/dataProvider.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/echarts/lib/chart/helper/treeHelper.js","../node_modules/echarts/lib/visual/VisualMapping.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/chart/helper/createRenderPlanner.js","../node_modules/echarts/lib/data/helper/createDimensions.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/chart/helper/createListSimply.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/echarts/lib/data/Source.js","../node_modules/echarts/lib/data/helper/sourceType.js","../node_modules/echarts/lib/data/helper/dimensionHelper.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/layout/points.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/data/helper/sourceHelper.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/layout/barGrid.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/coord/geo/geoCreator.js","../node_modules/echarts/lib/component/helper/RoamController.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/echarts/lib/visual/visualSolution.js","../node_modules/echarts/index.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/graphic/IncrementalDisplayable.js","../node_modules/echarts/lib/model/mixin/dataFormat.js","../node_modules/echarts/lib/stream/task.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/echarts/lib/data/Tree.js","../node_modules/echarts/lib/chart/helper/LineDraw.js","../node_modules/echarts/lib/chart/helper/Line.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/coord/polar/polarCreator.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/marker/MarkerModel.js","../node_modules/echarts/lib/component/marker/markerHelper.js","../node_modules/echarts/lib/component/marker/MarkerView.js","../node_modules/zrender/lib/svg/graphic.js","../node_modules/zrender/lib/svg/core.js","../node_modules/zrender/lib/svg/helper/Definable.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/helper/fixShadow.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/echarts/lib/model/Global.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/model/referHelper.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/component/dataset.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/data/OrdinalMeta.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/chart/line/helper.js","../node_modules/echarts/lib/chart/line/poly.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","../node_modules/echarts/lib/chart/bar/BaseBarSeries.js","../node_modules/echarts/lib/chart/bar/helper.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/coord/View.js","../node_modules/echarts/lib/component/helper/MapDraw.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/roamHelper.js","../node_modules/echarts/lib/action/geoRoam.js","../node_modules/echarts/lib/action/roamHelper.js","../node_modules/echarts/lib/data/helper/linkList.js","../node_modules/echarts/lib/chart/tree/layoutHelper.js","../node_modules/echarts/lib/chart/helper/createGraphFromNodeEdge.js","../node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js","../node_modules/echarts/lib/chart/graph/circularLayoutHelper.js","../node_modules/echarts/lib/component/parallel.js","../node_modules/echarts/lib/coord/parallel/parallelCreator.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/util/array/nest.js","../node_modules/echarts/lib/chart/helper/whiskerBoxCommon.js","../node_modules/echarts/lib/chart/helper/EffectLine.js","../node_modules/echarts/lib/chart/helper/Polyline.js","../node_modules/echarts/lib/chart/lines/linesLayout.js","../node_modules/echarts/lib/component/singleAxis.js","../node_modules/echarts/lib/coord/single/singleAxisHelper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/echarts/lib/component/visualMap/preprocessor.js","../node_modules/echarts/lib/component/visualMap/typeDefaulter.js","../node_modules/echarts/lib/component/visualMap/visualEncoding.js","../node_modules/echarts/lib/component/visualMap/VisualMapModel.js","../node_modules/echarts/lib/visual/visualDefault.js","../node_modules/echarts/lib/component/visualMap/VisualMapView.js","../node_modules/echarts/lib/component/visualMap/helper.js","../node_modules/echarts/lib/component/visualMap/visualMapAction.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/zrender/lib/vml/core.js","../node_modules/size-sensor/lib/debounce.js","../node_modules/size-sensor/lib/constant.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/processor/dataStack.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/visual/aria.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/stream/Scheduler.js","../node_modules/echarts/lib/theme/light.js","../node_modules/echarts/lib/theme/dark.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/coord/axisTickLabelBuilder.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/chart/line/LineSeries.js","../node_modules/echarts/lib/chart/line/LineView.js","../node_modules/echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/echarts/lib/processor/dataSample.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/chart/bar.js","../node_modules/echarts/lib/chart/bar/BarSeries.js","../node_modules/echarts/lib/chart/bar/BarView.js","../node_modules/echarts/lib/chart/bar/barItemStyle.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/chart/scatter.js","../node_modules/echarts/lib/chart/scatter/ScatterSeries.js","../node_modules/echarts/lib/chart/scatter/ScatterView.js","../node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js","../node_modules/echarts/lib/chart/radar.js","../node_modules/echarts/lib/component/radar.js","../node_modules/echarts/lib/coord/radar/Radar.js","../node_modules/echarts/lib/coord/radar/IndicatorAxis.js","../node_modules/echarts/lib/coord/radar/RadarModel.js","../node_modules/echarts/lib/component/radar/RadarView.js","../node_modules/echarts/lib/chart/radar/RadarSeries.js","../node_modules/echarts/lib/chart/radar/RadarView.js","../node_modules/echarts/lib/chart/radar/radarLayout.js","../node_modules/echarts/lib/chart/radar/backwardCompat.js","../node_modules/echarts/lib/chart/map.js","../node_modules/echarts/lib/chart/map/MapSeries.js","../node_modules/echarts/lib/coord/geo/Geo.js","../node_modules/echarts/lib/coord/geo/fix/nanhai.js","../node_modules/echarts/lib/coord/geo/fix/textCoord.js","../node_modules/echarts/lib/coord/geo/fix/geoCoord.js","../node_modules/echarts/lib/coord/geo/fix/diaoyuIsland.js","../node_modules/echarts/lib/chart/map/MapView.js","../node_modules/echarts/lib/chart/map/mapSymbolLayout.js","../node_modules/echarts/lib/chart/map/mapVisual.js","../node_modules/echarts/lib/chart/map/mapDataStatistic.js","../node_modules/echarts/lib/chart/map/backwardCompat.js","../node_modules/echarts/lib/chart/tree.js","../node_modules/echarts/lib/chart/tree/TreeSeries.js","../node_modules/echarts/lib/chart/tree/TreeView.js","../node_modules/echarts/lib/chart/tree/treeAction.js","../node_modules/echarts/lib/chart/tree/treeLayout.js","../node_modules/echarts/lib/chart/tree/traversalHelper.js","../node_modules/echarts/lib/chart/treemap.js","../node_modules/echarts/lib/chart/treemap/TreemapSeries.js","../node_modules/echarts/lib/chart/treemap/TreemapView.js","../node_modules/echarts/lib/chart/treemap/Breadcrumb.js","../node_modules/echarts/lib/util/animation.js","../node_modules/echarts/lib/chart/treemap/treemapAction.js","../node_modules/echarts/lib/chart/treemap/treemapVisual.js","../node_modules/echarts/lib/chart/treemap/treemapLayout.js","../node_modules/echarts/lib/chart/graph.js","../node_modules/echarts/lib/chart/graph/GraphSeries.js","../node_modules/echarts/lib/data/Graph.js","../node_modules/echarts/lib/chart/graph/GraphView.js","../node_modules/echarts/lib/chart/helper/LinePath.js","../node_modules/echarts/lib/chart/graph/adjustEdge.js","../node_modules/echarts/lib/chart/graph/graphAction.js","../node_modules/echarts/lib/chart/graph/categoryFilter.js","../node_modules/echarts/lib/chart/graph/categoryVisual.js","../node_modules/echarts/lib/chart/graph/edgeVisual.js","../node_modules/echarts/lib/chart/graph/simpleLayout.js","../node_modules/echarts/lib/chart/graph/circularLayout.js","../node_modules/echarts/lib/chart/graph/forceLayout.js","../node_modules/echarts/lib/chart/graph/forceHelper.js","../node_modules/echarts/lib/chart/graph/createView.js","../node_modules/echarts/lib/chart/gauge.js","../node_modules/echarts/lib/chart/gauge/GaugeSeries.js","../node_modules/echarts/lib/chart/gauge/GaugeView.js","../node_modules/echarts/lib/chart/gauge/PointerPath.js","../node_modules/echarts/lib/chart/funnel.js","../node_modules/echarts/lib/chart/funnel/FunnelSeries.js","../node_modules/echarts/lib/chart/funnel/FunnelView.js","../node_modules/echarts/lib/chart/funnel/funnelLayout.js","../node_modules/echarts/lib/chart/parallel.js","../node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js","../node_modules/echarts/lib/coord/parallel/Parallel.js","../node_modules/echarts/lib/coord/parallel/ParallelAxis.js","../node_modules/echarts/lib/coord/parallel/ParallelModel.js","../node_modules/echarts/lib/coord/parallel/AxisModel.js","../node_modules/echarts/lib/component/parallelAxis.js","../node_modules/echarts/lib/component/axis/parallelAxisAction.js","../node_modules/echarts/lib/component/axis/ParallelAxisView.js","../node_modules/echarts/lib/chart/parallel/ParallelSeries.js","../node_modules/echarts/lib/chart/parallel/ParallelView.js","../node_modules/echarts/lib/chart/parallel/parallelVisual.js","../node_modules/echarts/lib/chart/sankey.js","../node_modules/echarts/lib/chart/sankey/SankeySeries.js","../node_modules/echarts/lib/chart/sankey/SankeyView.js","../node_modules/echarts/lib/chart/sankey/sankeyAction.js","../node_modules/echarts/lib/chart/sankey/sankeyLayout.js","../node_modules/echarts/lib/chart/sankey/sankeyVisual.js","../node_modules/echarts/lib/chart/boxplot.js","../node_modules/echarts/lib/chart/boxplot/BoxplotSeries.js","../node_modules/echarts/lib/chart/boxplot/BoxplotView.js","../node_modules/echarts/lib/chart/boxplot/boxplotVisual.js","../node_modules/echarts/lib/chart/boxplot/boxplotLayout.js","../node_modules/echarts/lib/chart/candlestick.js","../node_modules/echarts/lib/chart/candlestick/CandlestickSeries.js","../node_modules/echarts/lib/chart/candlestick/CandlestickView.js","../node_modules/echarts/lib/chart/candlestick/preprocessor.js","../node_modules/echarts/lib/chart/candlestick/candlestickVisual.js","../node_modules/echarts/lib/chart/candlestick/candlestickLayout.js","../node_modules/echarts/lib/chart/effectScatter.js","../node_modules/echarts/lib/chart/effectScatter/EffectScatterSeries.js","../node_modules/echarts/lib/chart/effectScatter/EffectScatterView.js","../node_modules/echarts/lib/chart/helper/EffectSymbol.js","../node_modules/echarts/lib/chart/lines.js","../node_modules/echarts/lib/chart/lines/LinesSeries.js","../node_modules/echarts/lib/chart/lines/LinesView.js","../node_modules/echarts/lib/chart/helper/EffectPolyline.js","../node_modules/echarts/lib/chart/helper/LargeLineDraw.js","../node_modules/echarts/lib/chart/lines/linesVisual.js","../node_modules/echarts/lib/chart/heatmap.js","../node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js","../node_modules/echarts/lib/chart/heatmap/HeatmapView.js","../node_modules/echarts/lib/chart/heatmap/HeatmapLayer.js","../node_modules/echarts/lib/chart/pictorialBar.js","../node_modules/echarts/lib/chart/bar/PictorialBarSeries.js","../node_modules/echarts/lib/chart/bar/PictorialBarView.js","../node_modules/echarts/lib/chart/themeRiver.js","../node_modules/echarts/lib/coord/single/singleCreator.js","../node_modules/echarts/lib/coord/single/Single.js","../node_modules/echarts/lib/coord/single/SingleAxis.js","../node_modules/echarts/lib/component/axis/SingleAxisView.js","../node_modules/echarts/lib/coord/single/AxisModel.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js","../node_modules/echarts/lib/chart/themeRiver/ThemeRiverSeries.js","../node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js","../node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js","../node_modules/echarts/lib/chart/themeRiver/themeRiverVisual.js","../node_modules/echarts/lib/chart/sunburst.js","../node_modules/echarts/lib/chart/sunburst/SunburstSeries.js","../node_modules/echarts/lib/chart/sunburst/SunburstView.js","../node_modules/echarts/lib/chart/sunburst/SunburstPiece.js","../node_modules/echarts/lib/chart/sunburst/sunburstAction.js","../node_modules/echarts/lib/chart/sunburst/sunburstLayout.js","../node_modules/echarts/lib/chart/custom.js","../node_modules/echarts/lib/coord/cartesian/prepareCustom.js","../node_modules/echarts/lib/coord/geo/prepareCustom.js","../node_modules/echarts/lib/coord/single/prepareCustom.js","../node_modules/echarts/lib/coord/polar/prepareCustom.js","../node_modules/echarts/lib/coord/calendar/prepareCustom.js","../node_modules/echarts/lib/component/graphic.js","../node_modules/echarts/lib/component/grid.js","../node_modules/echarts/lib/component/legendScroll.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/polar.js","../node_modules/echarts/lib/layout/barPolar.js","../node_modules/echarts/lib/coord/polar/Polar.js","../node_modules/echarts/lib/coord/polar/RadiusAxis.js","../node_modules/echarts/lib/coord/polar/AngleAxis.js","../node_modules/echarts/lib/coord/polar/PolarModel.js","../node_modules/echarts/lib/coord/polar/AxisModel.js","../node_modules/echarts/lib/component/angleAxis.js","../node_modules/echarts/lib/component/axis/AngleAxisView.js","../node_modules/echarts/lib/component/radiusAxis.js","../node_modules/echarts/lib/component/axis/RadiusAxisView.js","../node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js","../node_modules/echarts/lib/component/geo.js","../node_modules/echarts/lib/coord/geo/GeoModel.js","../node_modules/echarts/lib/component/geo/GeoView.js","../node_modules/echarts/lib/component/brush.js","../node_modules/echarts/lib/component/brush/preprocessor.js","../node_modules/echarts/lib/component/brush/visualEncoding.js","../node_modules/echarts/lib/component/brush/selector.js","../node_modules/echarts/lib/component/brush/BrushModel.js","../node_modules/echarts/lib/component/brush/BrushView.js","../node_modules/echarts/lib/component/brush/brushAction.js","../node_modules/echarts/lib/component/toolbox/feature/Brush.js","../node_modules/echarts/lib/component/calendar.js","../node_modules/echarts/lib/coord/calendar/Calendar.js","../node_modules/echarts/lib/coord/calendar/CalendarModel.js","../node_modules/echarts/lib/component/calendar/CalendarView.js","../node_modules/echarts/lib/component/title.js","../node_modules/echarts/lib/component/dataZoom.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SliderZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SliderZoomView.js","../node_modules/echarts/lib/component/dataZoom/InsideZoomModel.js","../node_modules/echarts/lib/component/dataZoom/InsideZoomView.js","../node_modules/echarts/lib/component/dataZoom/roams.js","../node_modules/echarts/lib/component/visualMap.js","../node_modules/echarts/lib/component/visualMapContinuous.js","../node_modules/echarts/lib/component/visualMap/ContinuousModel.js","../node_modules/echarts/lib/component/visualMap/ContinuousView.js","../node_modules/echarts/lib/component/visualMapPiecewise.js","../node_modules/echarts/lib/component/visualMap/PiecewiseModel.js","../node_modules/echarts/lib/component/visualMap/PiecewiseView.js","../node_modules/echarts/lib/component/markPoint.js","../node_modules/echarts/lib/component/marker/MarkPointModel.js","../node_modules/echarts/lib/component/marker/MarkPointView.js","../node_modules/echarts/lib/component/markLine.js","../node_modules/echarts/lib/component/marker/MarkLineModel.js","../node_modules/echarts/lib/component/marker/MarkLineView.js","../node_modules/echarts/lib/component/markArea.js","../node_modules/echarts/lib/component/marker/MarkAreaModel.js","../node_modules/echarts/lib/component/marker/MarkAreaView.js","../node_modules/echarts/lib/component/timeline.js","../node_modules/echarts/lib/component/timeline/preprocessor.js","../node_modules/echarts/lib/component/timeline/typeDefaulter.js","../node_modules/echarts/lib/component/timeline/timelineAction.js","../node_modules/echarts/lib/component/timeline/SliderTimelineModel.js","../node_modules/echarts/lib/component/timeline/TimelineModel.js","../node_modules/echarts/lib/component/timeline/SliderTimelineView.js","../node_modules/echarts/lib/component/timeline/TimelineView.js","../node_modules/echarts/lib/component/timeline/TimelineAxis.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/zrender/lib/vml/vml.js","../node_modules/zrender/lib/vml/graphic.js","../node_modules/zrender/lib/vml/Painter.js","../node_modules/zrender/lib/svg/svg.js","../node_modules/zrender/lib/svg/Painter.js","../node_modules/zrender/lib/core/arrayDiff2.js","../node_modules/zrender/lib/svg/helper/GradientManager.js","../node_modules/zrender/lib/svg/helper/ClippathManager.js","../node_modules/zrender/lib/svg/helper/ShadowManager.js","../node_modules/echarts-for-react/lib/core.js","../node_modules/fast-deep-equal/index.js","../node_modules/size-sensor/lib/index.js","../node_modules/size-sensor/lib/sensorPool.js","../node_modules/size-sensor/lib/id.js","../node_modules/size-sensor/lib/sensors/index.js","../node_modules/size-sensor/lib/sensors/object.js","../node_modules/size-sensor/lib/sensors/resizeObserver.js","../node_modules/echarts-for-react/lib/utils.js"],"names":["BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","prototype","toString","arrayProto","Array","nativeForEach","forEach","nativeFilter","filter","nativeSlice","slice","nativeMap","map","nativeReduce","reduce","methods","clone","source","result","typeStr","call","isPrimitive","i","len","length","Ctor","constructor","from","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","defaults","overlay","_ctx","createCanvas","each","obj","cb","context","bind","func","args","arguments","apply","concat","value","type","nodeType","ownerDocument","document","createElement","primitiveKey","HashMap","isArr","thisMap","this","visit","set","get","removeKey","exports","$override","name","fn","mergeAll","targetAndSources","extend","getContext","indexOf","array","inherits","clazz","baseClazz","clazzPrototype","F","prop","superClass","mixin","isArrayLike","data","push","memo","find","curry","isFunction","isString","isTypedArray","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","val","assert","condition","message","Error","trim","str","replace","setAsPrimitive","createHashMap","concatArray","a","b","newArray","offset","noop","__webpack_require__","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","throttle","seriesColor","aria","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","MessageCenter","ECharts","dom","theme","opts","themeStorage","id","group","_dom","zr","_zr","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","api","_api","ecInstance","coordSysMgr","getCoordinateSystems","getComponentByElement","el","modelInfo","__ecComponentInfo","_model","getComponent","mainType","index","parent","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","_pendingActions","animation","on","_onframe","ecIns","trigger","isFinished","unfinished","bindRenderedEvent","off","one","echartsProto","doConvertPixel","methodName","finder","ecModel","coordSysList","parseFinder","coordSys","_disposed","scheduler","silent","prepare","updateMethods","update","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","Date","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getSvgDataUrl","svgSupported","list","storage","getDisplayList","stopAnimation","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","connectedGroups","left","Infinity","top","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","item","img","Image","style","x","y","image","add","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","model","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","seriesModel","getData","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","payload","restoreData","create","clearColorPalette","render","setBackgroundColor","colorArr","parse","stringify","performPostUpdateFuncs","updateTransform","componentDirtyList","componentView","__alive","seriesDirtyMap","eachSeries","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","query","excludeSeriesId","normalizeToArray","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","pendingActions","shift","isComponent","viewList","viewMap","doPrepare","viewId","classType","getClass","__id","componentIndex","renderTask","dispose","remove","splice","dirtyList","updateZ","renderComponents","updatePayload","dirty","perform","getPerformArgs","blendMode","traverse","isGroup","blend","setStyle","eachPendingDisplayable","displayable","updateBlend","elCount","node","useHoverLayer","updateHoverLayerStatus","postUpdateFuncs","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","z","zlevel","eveName","e","dataModel","getDataParams","dataType","eventData","actionType","eventType","isDisposed","clear","series","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerAction","test","registerVisual","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","dependencies","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","getMap","dataTool","___ec_export","pathTool","matrix","vector","Path","Transformable","ZImage","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","round","EMPTY_OBJ","makePath","pathData","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimize","position","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","insideRollback","textFill","textStroke","textStrokeWidth","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","autoColor","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","isRectText","textPosition","getShallow","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","parentModel","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textBorderColor","textBorderWidth","originalTextPosition","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","transform","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","onload","subPixelOptimizeLine","param","shape","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","text","setText","labelModel","defaultColor","getFont","gTextStyleModel","join","initProps","getTransform","ancestor","mat","identity","mul","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","elMap1","g","elMap","anid","getElMap","oldEl","newProp","getAnimatableProps","rotation","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","RADIAN_EPSILON","TIME_REG","quantityExponent","floor","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","exec","hour","toUpperCase","UTC","quantity","nice","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","DUMMY_COMPONENT_NAME_PREFIX","isIdInner","cptOption","innerUniqueIndex","has","defaultEmphasis","subOpts","emphasis","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","isNameSpecified","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","isData","queryDataIndex","indexOfName","makeInner","random","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","global","dev","defineProperty","undefined","_echarts2","_interopRequireDefault","_core2","__esModule","default","EchartsReact","_EchartsReactCore","instance","Constructor","TypeError","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","echartsLib","subClass","enumerable","writable","configurable","setPrototypeOf","_inherits","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","echarts","msg","error","colorPalette","title","visualMap","itemWidth","toolbox","iconStyle","normal","borderColor","tooltip","axisPointer","lineStyle","crossStyle","shadowStyle","dataZoom","dataBackgroundColor","fillerColor","handleColor","grid","categoryAxis","axisLine","splitLine","valueAxis","splitArea","show","areaStyle","timeline","controlStyle","symbol","symbolSize","line","smooth","candlestick","itemStyle","color0","scatter","label","areaColor","graph","gauge","axisTick","splitNumber","pointer","module","formatUtil","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","box","vbox","hbox","getLayoutRect","positionInfo","containerRect","margin","containerWidth","containerHeight","verticalMargin","horizontalMargin","copyLayoutParams","getAvailableSize","positionElement","h","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newOption","ignoreSize","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","copy","getLayoutParams","ArrayCtor","Float32Array","sqrt","lenSquare","lengthSquare","distance","v1","v2","dist","distanceSquare","distSquare","out","scaleAndAdd","div","dot","scale","s","normalize","d","negate","lerp","t","textContain","numberUtil","replaceReg","replaceMap","&","<",">","\"","'","encodeHTML","c","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","substr","truncateText","getTextRect","addCommas","toCamelCase","upperCaseFirst","group1","charAt","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","formatTplSimple","getTooltipMarker","extraCssText","formatTime","isUTC","date","utc","M","S","capitalFirst","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","plain","_default","Displayable","PathProxy","pathContain","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","wx","getSystemInfoSync","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","detect","userAgent","Model","componentUtil","_clazz","enableClassManagement","boxLayoutMixin","inner","defaultOption","dependentModels","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","mergeOption","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","deps","getClassesByMainType","Clazz","unshift","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","_format","colorPaletteMixin","dataFormatMixin","_layout","createTask","_sourceHelper","prepareSource","_getSource","getSource","retrieveRawValue","legendDataProvider","visualColorAccessPath","dataTask","dataTaskCount","reset","dataTaskReset","getInitialData","wrapData","dataBeforeProcessed","autoSeriesName","themeSubType","hasClass","fillDataTextStyle","newSeriesOption","getRawData","task","getCurrentTask","getLinkedData","setData","modifyOutputEnd","setOutputEnd","outputData","getBaseAxis","formatTooltip","multipleSeries","formatSingleValue","tooltipDims","mapDimension","tooltipDimLen","getRawValue","isValueArr","formattedValue","vertially","dimItem","getDimensionInfo","displayName","setEachItem","dim","dimInfo","otherDims","dimType","dimHead","valStr","formatArrayValue","colorEl","getName","seriesName","animationEnabled","getColorFromPalette","scope","requestColorNum","coordDimToDataDim","coordDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","pipelineContext","dataDims","nameArr","dataDim","getSeriesAutoName","cloneShallow","dataTaskProgress","end","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","DataDiffer","Source","_dataProvider","defaultDimValueGetters","DefaultDataProvider","summarizeDimensions","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","propName","_calculationInfo","List","hostModel","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","coordDimIndex","createInvertedIndices","_dimensionInfos","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawData","_rawExtent","_extent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","getRawValueFromStore","dimIndex","rawIndex","chunkSize","chunkIndex","chunkOffset","chunk","ordinalMeta","categories","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","hasItemOption","getDimension","getDimensionsOnCoord","dataDimsOnCoord","dimensionsSummary","encodeFirstDimNotExtra","dims","initData","nameList","dimValueGetter","isInstance","_nameRepeatCount","defaultDimValueGetter","sourceFormat","_dimValueGetter","_initDataFromProvider","pure","getProvider","rawData","start","persistent","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","itemName","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","getItem","dimStorage","dimRawExtent","nameDim","nameDimChunk","clean","invertedIndices","prepareInvertedIndex","getIndices","indices","thisCount","newIndices","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","getDataExtent","dimData","initialExtent","dimExtent","currEnd","getApproximateExtent","setApproximateExtent","extent","getCalculationInfo","setCalculationInfo","getSum","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","rawDataIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","getRawDataItem","contextCompat","dimSize","filterSelf","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","getItemModel","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","r","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","SymbolClz","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","createSymbol","keepAspect","symbolPath","setColor","coordinateSystemCreators","_coordinateSystems","coordinateSystems","creater","coordinateSystemCreator","OrdinalScale","IntervalScale","Scale","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getOrdinalMeta","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","axis","barWidthAndOffset","adjustedScale","axisExtent","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tickValue","getAxisRawValue","tick","getLabel","rotateTextRect","textRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","niceScaleExtent","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","ifAxisCrossZero","estimateLabelUnionRect","axisModel","isBlank","realNumberScaleTicks","tickCount","isCategory","categoryScaleExtent","getTicks","axisLabelModel","step","ceil","singleRect","imageHelper","_util","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","font","textLines","l","measureText","adjustTextX","adjustTextY","ellipsis","options","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","parsePlainText","padding","truncate","lineHeight","lines","outerHeight","truncOuterHeight","truncOuterWidth","outerWidth","parseRichText","contentBlock","lastIndex","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","tokenStyle","token","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","getRichTextRect","getPlainTextRect","adjustTextPositionOnRect","halfHeight","makeFont","textFont","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","iv","op","ep","fname","alpha","hsla2rgba","hsla","rgba","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","arrColor","level","toHex","modifyHSL","H","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","rgba2hsla","modifyAlpha","Dispatcher","isDomLevel2","addEventListener","MOUSE_EVENT_REG","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","stop","preventDefault","stopPropagation","cancelBubble","returnValue","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","attachEvent","removeEventListener","detachEvent","notLeftMouse","TYPE_DELIMITER","IS_CONTAINER","ret","classBase","superCall","superApply","RootClass","mandatoryMethods","proto","ExtendedClass","Clz","classAttr","entity","registerClass","checkClassType","container","makeContainer","componentMainType","throwWhenNotFound","o","getAllClassMainTypes","types","hasSubTypes","originalExtend","clazzUtil","createRenderPlanner","renderPlanner","Chart","renderTaskPlan","renderTaskReset","highlight","toggleHighlight","downplay","removeAll","incrementalPrepareRender","incrementalRender","chartProto","elSetState","state","childCount","progressiveRender","progressMethodMap","progress","forceFirstProgress","createDimensions","SOURCE_FORMAT_ORIGINAL","getDimensionTypeByAxis","getCoordSysDefineBySeries","enableDataStack","seriesDataToSource","coordSysDimDefs","coordSysName","registeredCoordSys","coordSysDefine","coordSysDims","axisMap","firstCategoryDimIndex","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","categoryAxisMap","stackCalculationInfo","sampleItem","firstDataNotNull","isNeedCompleteOrdinalData","itemOpt","dimName","isDimensionStacked","stackedDim","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","isExtraCoord","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","getStackedDimension","targetDim","_vector","v2Create","v2DistSquare","mathPow","mathSqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","quadraticAt","cubicDerivativeAt","cubicRootAt","roots","A","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_t","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_number","_getPixelPrecision","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","_calculateCategoryInterval","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","inverse","onBand","fixExtentWithBands","nTick","coord","containData","dataToCoord","coordToData","pointToData","getTicksCoords","tickModel","getTickModel","ticks","ticksCoords","alignWithLabel","tickCategoryInterval","ticksLen","last","ticksItem","fixOnBandTicksCoords","getViewLabels","labels","getBandWidth","isHorizontal","getRotate","ctor","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","_sourceType","SOURCE_FORMAT_TYPED_ARRAY","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","_source","_data","_offset","_dimSize","providerMethods","seriesLayoutBy","providerProto","arrayRows_column","startIndex","appendDataSimply","arrayRows_row","row","objectRows","countSimply","getItemSimply","keyedColumns","dimensionsDefine","col","newData","newCol","oldCol","typedArray","rawValueGetters","arrayRows","getRawValueSimply","getDimValueSimply","converDataValue","parseAndCollect","retrieveRawAttr","ORIGIN_METHOD","RATE","THROTTLE_TYPE","delay","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","polygon","lineX","lineY","dataView","lang","zoom","back","magicType","bar","stack","tiled","restore","saveAsImage","typeNames","pie","effectScatter","radar","tree","treemap","boxplot","heatmap","parallel","sankey","funnel","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","allData","partialData","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","newDataIndexMap","oldDataKeyArr","newDataKeyArr","seriesType","defaultSymbolType","legendSymbol","performRawSeries","symbolKeepAspect","isSeriesFiltered","hasCallback","dataEach","rawValue","itemModel","itemSymbolType","itemSymbolSize","itemSymbolKeepAspect","matrixUtil","makeAxisEventDataBase","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","pt1","pt2","lineCap","getLineStyle","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","pos","axisTickLabel","tickEls","axisBuilder","lineStyleModel","tickLen","tickCoord","tickEl","buildAxisTick","labelEls","axisLabelShow","labelMargin","labelRotation","labelLayout","innerTextLayout","rawCategoryData","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textColor","getTextColor","textEl","targetType","decomposeTransform","buildAxisLabel","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","axisName","axisNameAvailableWidth","nameLocation","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","tooltipOpt","formatterParams","__fullText","__truncatedText","content","formatter","axisRotation","current","firstRect","nextRect","mRotationBack","axisPointerModelHelper","AxisView","_axisPointer","axisPointerClass","fixValue","_updateAxisPointer","updateAxisPointer","force","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","getPathToRoot","parentNode","reverse","retrieveTargetInfo","validPayloadTypes","root","targetNode","contains","targetNodeId","getNodeById","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","zrColor","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","mappingMethod","thisOption","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","originIndex","preprocessForPiecewise","categoryMap","cate","visualArr","setVisualToOption","preprocessForSpecifiedCategory","mapValueToVisual","normalized","getNormalizer","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","opacity","makeDoMap","liftZ","getter","setter","symbolCfg","doMapToArray","applyValue","sourceExtent","findPieceIndex","pieceIndex","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","excludes","includes","curve","bbox","CMD","Q","Z","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","originalLarge","large","originalProgressive","progressive","completeDimensions","dimsDef","encodeDef","encodeDefine","dimCount","dimensionsCount","generateCoordCount","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","dimensionsInfo","debugMode","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","Style","Element","RectText","__clipPaths","invisible","draggable","dragging","culling","cursor","incremental","inplace","afterBrush","rectContain","animateStyle","useStyle","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","SERIES_LAYOUT_BY_COLUMN","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_KEYED_COLUMNS","fromDataset","dimensionsDetectCount","SERIES_LAYOUT_BY_ROW","OTHER_DIMENSIONS","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","coordDimArr","defaultTooltip","otherDim","otherDimArr","dimArr","encodeLabel","encodeTooltip","SymbolDraw","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","isIgnore","clipShape","normalizeUpdateOpt","makeSeriesScope","getItemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","cursorStyle","updateData","oldData","SymbolCtor","seriesScope","newIdx","symbolEl","oldIdx","fadeOut","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","isLargeRender","stackResultDim","segCount","tmpIn","tmpOut","dataToPoint","gridModel","getRect","xAxis","yAxis","legendModels","findComponents","isSelected","getSpanSign","handleEnds","handleIndex","sign","restrict","minSpan","maxSpan","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","axisTrigger","link","coordSysAxesInfo","collect","helper","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","coordSysLists","coordModel","store","coordIndex","save","guid","Handler","Storage","Painter","Animation","HandlerProxy","useVML","painterCtors","ZRender","rendererType","vml","handerProxy","getViewportRoot","stage","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","config","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","getInstance","registerPainter","_children","__storage","children","childOfName","_doAdd","addBefore","nextSibling","addChildrenToStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","childRect","roundRectHelper","fixShadow","VALID_TEXT_ALIGN","center","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","textBaseline","applyTextRotation","textOrigin","placeToken","hostEl","lineTop","needDrawBackground","drawBackground","getTextXForPadding","setCtx","getFill","strokeText","fillText","isPlainBg","onBgImageLoaded","getBoxPosition","blockHeiht","baseX","baseY","maxValue","lastIndexOf","__textCotentBlock","boxPos","boxX","boxY","xLeft","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","drawRichText","renderRichText","textX","textY","needDrawBg","renderPlainText","Gradient","addColorStop","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","createDependencyGraphItem","predecessor","successor","topologicalTravel","targetNameList","fullNameList","noEntryList","thisItem","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","normalizeDimensionsDefine","nameMap","arrayRowsTravelFirst","maxLoop","doGuessOrdinal","sample","detectValue","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","seriesOption","sourceHeader","datasetIndex","getDatasetModel","datasetOption","completeResult","findPotentialName","potentialNameDimIndex","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","encodeItemName","encodeSeriesName","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","firstNotOrdinal","nameDimIndex","makeDefaultEncode","guessOrdinal","Component","componentProto","setting","_setting","_interval","getSetting","unionExtent","unionExtentFromData","thisExtent","_isBlank","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","STACK_PREFIX","LargeArr","getSeriesStackId","getAxisKey","seriesModels","eachSeriesByType","isOnCartesian","isInLargeMode","barSeries","seriesInfoList","baseAxis","bandWidth","barWidth","barMaxWidth","barGap","barCategoryGap","axisKey","stackId","doCalBarWidthAndOffset","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","largeLayout","cartesian","getOtherAxis","valueDim","baseDim","valueAxisHorizontal","valueDimIdx","largePoints","valuePair","valueAxisStart","getValueAxisStart","stacked","getAxesOnZeroOf","toGlobalCoord","getGlobalExtent","getLayoutOnAxis","widthAndOffsets","offsetCenter","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","isValueAxisH","baseValue","baseCoord","getDefaultLabel","symbolProto","getSymbolSize","getScale","driftSymbol","drift","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","elStyle","symbolInnerColor","z2Origin","__z2Origin","useNameLabel","onEmphasis","ratio","onNormal","keepLabel","axisDefault","OrdinalMeta","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","__ordinalMeta","createByAxisModel","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","axisPointerEnabled","coordSysKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","snap","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","makeAxisPointerModel","involveSeries","axisInfo","useHandle","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","collectSeriesInfo","getTargetSeries","paletteScope","seiresModelMap","__paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","Geo","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","viewWidth","viewHeight","aspectScale","useCenterAndSize","viewRect","getBoxLayoutParams","setViewRect","setCenter","setZoom","setGeoCoords","geo","geoCoord","addGeoCoord","geoCreator","geoList","mapData","zoomLimit","geoIndex","mapModelGroupBySeries","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","getFilledRegions","originRegionArr","regionsArr","dataNameMap","eventTool","interactionMutex","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","_dragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","axisHelper","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","align","verticalAlign","confineInContainer","bgColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","mappings","Creater","__hidden","createMappings","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","getValueState","visualTypesMap","eachItem","valueOrIndex","rawDataItem","valueState","incrementalApplyVisual","_echarts","_export","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","mergeAt","start1","length1","start2","length2","cursor1","cursor2","dest","count1","count2","exit","_minGallop","mergeLow","customCursor","customDest","mergeHigh","mergeRuns","forceMergeRuns","pushRun","_runStart","_runLength","remaining","ts","minRun","minRunLength","globalImageCache","imageOnLoad","cachedImgObj","__cachedImgObj","pending","pendingWrap","cbPayload","newImageOrSrc","__zrImageSrc","PI2","extremity","xDim","yDim","fromPoints","tx","ty","vec2Min","vec2Max","Displayble","IncrementalDisplayble","_displayables","_temporaryDisplayables","_cursor","notClear","clearDisplaybles","addDisplayable","notPersistent","addDisplayables","displayables","DIMENSION_LABEL_REG","componentSubType","marker","labelProp","Task","define","_reset","_plan","_onDirty","onDirty","_dirty","taskProto","performArgs","planResult","upTask","_upstream","skip","__pipeline","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","modBy","modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","doProgress","outputDueEnd","iterator","winCount","it","sStep","sCount","modNext","sequentialNext","_callingProgress","pipe","downTask","getUpstream","getDownstream","labelDims","vals","_axisHelper","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","onZero","onZeroAxisIndex","canOnZeroToAxis","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","coordBase","axisExtentSum","toLocalCoord","updateAxisTransform","labelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","xAxisModel","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","axisPosition","addAxis","isCartesian2D","axesModels","findAxesModels","axesTypes","grids","updateSelectedMap","_targetList","_selectTargetMap","targetMap","select","selected","unSelect","toggleSelected","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","topTarget","linkList","TreeNode","hostTree","depth","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","order","suppressVisitSub","updateDepthAndHeight","getAncestors","includeSelf","ancestors","getValue","levelModel","getLevelModel","isExpand","getLeavesModel","isAncestorOf","isDescendantOf","getNodeByDataIndex","getNodeByName","nodes","clearLayouts","createTree","dataRoot","treeOptions","levels","leaves","listData","dimMax","buildHierarchy","dataNode","addChild","mainData","struct","structAttr","LineGroup","LineDraw","_ctor","lineDrawProto","lineData","hoverLineStyle","isPointNaN","pt","lineNeedsDraw","pts","lineDraw","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","_clearIncremental","_incremental","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","targetShape","cp1","cpx1","cpy1","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","invScale","fromPos","pointAt","toPos","tangent","tangentAt","__position","halfPercent","cp","__verticalAlign","__textAlign","createLine","_updateCommonStl","linePoints","visualColor","visualOpacity","defaultLabelColor","showLabel","hoverShowLabel","rawVal","normalText","emphasisText","labelStyle","linePath","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","ondragend","updateBaseRect","localRange","handleSize","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","pointsToRect","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","localZero","clipPath","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","doDisableBrush","take","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","resetCursor","getLineRenderer","localTrack","ends","xyIndex","otherExtent","getLinearBrushOtherExtent","throttleUtil","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","_onHandleDragEnd","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisDim","doClear","buildLabel","Polar","updatePolarScale","polar","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","setAxis","polarCreator","polarList","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","resizePolar","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","records","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","html","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","numCalculate","markerTypeCalculator","average","valueIndex","valueDataDim","dataDimToCoordDim","baseDataDim","dataTransform","hasXAndY","dataFilter","hasXOrY","markerGroupMap","__keep","markerModelKey","arrayJoin","NONE","mathRound","degree","round4","svgEl","bindStyle","isText","pathHasFill","pathHasStroke","lineJoin","miterLimit","svgPath","__svgEl","pathStr","dataLength","cmdStr","nData","dThetaPositive","isCircle","pathDataToString","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","setAttributeNS","attrXLink","svgText","textSvgEl","__textSvgEl","getVerticalAlignForSvg","newPos","transformText","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","appendChild","createTextNode","removeChild","svgURI","createElementNS","ZText","_graphic","Definable","zrId","svgRoot","tagNames","markLabel","domName","_zrId","_svgRoot","_tagNames","_markLabel","_domName","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","element","onUpdate","addDom","removeDom","getDoms","doms","tagName","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","getTextSvgElement","getSvgElement","idStart","Animatable","afterUpdate","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","Clip","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","lastValue","getArrayDim","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","clip","life","_loop","_delay","onframe","frame","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","LinkedList","head","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","STYLE_COMMON_PROPS","createLinearGradient","createRadialGradient","styleProto","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","SHADOW_PROPS","Pattern","repeat","createPattern","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","r1","r2","r3","r4","total","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","mergeTheme","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","newCptOptionList","existComponent","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","q","indexAttr","idAttr","nameAttr","getQueryCond","components","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","_l","_a","normalizeRadian","dir","x_","shadowTemp","orignalBrush","modified","clipPaths","smoothSpline","smoothBezier","controlPoints","smoothConstraint","cp2","globalCoord","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","paletteNum","getNearestColorPalette","fetchers","cartesian2d","parallelModel","parallelAxisIndex","fetch","echartsAPIList","chartInstance","format","_throttle","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","util","genName","fromZero","sysDims","dataDimNameMap","coordDimNameMap","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","extra","_needCollect","needCollect","_deduplication","deduplication","dedplication","getOrCreateMap","getOrdinal","fixExtent","Region","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","geometry","coordinates","c2","decode","featureObj","geometries","exterior","interiors","region","polygonContain","MAX_NUMBER","loopGeo","transformTo","windingLine","isAroundEqual","prepareDataCoordInfo","valueOrigin","valueStart","getValueStart","baseAxisDim","valueAxisDim","baseDataOffset","dataDimsForPoint","getStackedOnPoint","dataCoordInfo","stackedData","fixClipWithShadow","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","prevP","ctrlLen","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","stackedOnBBox","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","getAxisType","extraOption","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","axisLabel","timeAxis","logAxis","logBase","otherAxisOnZeroOf","rawAxisPosition","rectBound","axisOffset","posBound","onZeroCoord","labelInside","createListFromArray","getMarkerPosition","clampData","legendHoverLink","barMinAngle","largeThreshold","progressiveChunkMode","fixPosition","labelPositionOutside","setLabel","actionInfos","TransformDummy","View","_roamTransformable","_rawTransformable","_center","_zoom","doConvert","_viewRect","rawTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getZoom","getRoamTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","_rawTransform","getViewRect","getViewRectAfterRoam","noRoam","roamHelper","getFixedItemStyle","updateMapSelected","mapOrGeoModel","otherRegionEl","__regions","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","draw","fromView","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","paths","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","isDataNaN","itemLayout","_updateController","mapDraw","updateMapSelectHandler","controllerHost","makeActionBase","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","ATTR","getStore","resourceKey","userKey","newZoom","zoomMin","zoomMax","zoomScale","updateCenterAndZoom","seriesGroup","previousZoom","fixX","fixY","DATAS","MAIN_DATA","transferInjection","datas","linkAll","linkSingle","changeInjection","cloneShallowInjection","datasAttr","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","moveSubtree","wl","wr","change","modifier","prelim","defaultSeparation","node1","node2","defaultAncestor","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","addEdge","nodeData","coordSysCtor","edgeData","simpleLayoutEdge","eachEdge","curveness","simpleLayout","getGraph","circularLayout","unitAngle","x12","y12","parallelPreprocessor","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","triggerOn","Parallel","graphicUtil","normalizeRect","makeRectPanelClipPath","localPoints","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","makeRectIsTargetByCursor","targetModel","keysFunction","sortKeysFunction","sortKeys","entries","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","createListSimply","seriesModelMixin","_baseAxisDim","addOrdinal","xAxisType","yAxisType","coordDims","baseAxisDimIndex","baseAxisType","otherAxisType","newOptionData","newItem","defaultValueDimensions","curveUtil","EffectLine","_updateEffectSymbol","effectLineProto","effectModel","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","__t","updateSymbolPosition","__p1","__cp1","__p2","_createPolyline","polylineProto","isPolyline","isLarge","lineCoords","totalCoordsCount","getLineCoordsCount","getLineCoords","positionMap","horizontal","vertical","onLeave","record","doEnter","currTrigger","useHandler","dis","pendings","showTip","hideTip","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","viewHelper","cartesianAxisHelper","CartesianAxisPointer","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","getAxisDimIndex","shadow","LegendModel","_updateData","legendData","hasSelected","potentialData","availableNames","isPotential","_availableNames","borderRadius","borderWidth","itemGap","itemHeight","inactiveColor","selectedMode","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","viewportSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","dataName","layoutBox","boxLayoutParams","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","scales","getScales","makePanelOpts","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","seriesModelMap","getTargetSeriesModels","overallReset","filterData","percentRange","valueRange","linkedNodesFinder","effectedModels","pieces","splitList","calculable","visualSolution","VISUAL_PRIORITY","getColorVisual","visualMapModel","targetVisuals","resultVisual","mapping","createOnAllSeries","resetDefines","isTargetSeries","getDataDimension","visualMetaList","visualMeta","getVisualMeta","stops","outerColors","concreteDim","visualDefault","replacableOptionKeys","dataBound","inRange","outOfRange","contentColor","textGap","_dataExtent","controllerVisuals","itemSize","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","eachTargetSeries","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","optDim","listDimensions","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","visuals","setSelected","active","inactive","autoPositionValues","doRender","renderBackground","getControllerVisual","targetValue","visualCluster","forceState","visualObj","visualMapping","convertOpacityToAlpha","positionGroup","getItemAlign","modelOption","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","giveStore","newSnapshot","dataZoomId","snapshot","doCreateNode","urn","win","vmlInited","doc","namespaces","zrvml","createNode","initVML","styleSheets","createStyleSheet","addRule","_key","SizeSensorId","SensorStyle","SensorClassName","Draggable","SILENT","EmptyProxy","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","dispatch","eventArgs","eventPacket","eveType","makeEventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","easingFuncs","_life","_initialized","onrestart","_pausedTime","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","arg","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","Layer","parseInt10","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","__builtin__","initContext","_domRoot","_getSize","domRoot","cssText","createRoot","_hoverlayer","_hoverElements","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_redrawId","_paintList","clearColor","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","clearRect","eachBuiltinLayer","virtual","layerList","zi","__startIndex","__drawIndex","useTimer","now","__endIndex","firstEl","prevElClipPaths","currentLayer","forcePaint","isDisplayableCulled","prevClipPaths","isClipPathChanged","doClip","insertLayer","layersMap","prevLayer","isLayerValid","prevDom","eachLayer","getLayers","updatePrevLayer","__used","incrementalLayerCount","getElementCount","_clearLayer","layerConfig","_zlevel","delLayer","display","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","imgShape","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","fillRect","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","_event","GestureMgr","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","domHandlers","touchstart","touchmove","touchend","click","isPointerFromTouch","pointerType","HandlerDomProxy","mountHandlers","makeMouseHandler","handlerDomProxyProto","eventUtil","pointPair","_doTrack","_recognize","touches","trackItem","recognizers","pinchEnd","pinchPre","pinchCenter","_getLineStyle","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","_getAreaStyle","PATH_COLOR","transformPath","cc","vMag","vRatio","u","vAngle","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathOptions","pathProxy","cs","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathProxyFromString","pathEls","pathList","pathEl","pathBundle","cubic","quadratic","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","windingArc","containPath","isStroke","mathAtan2","nPoint","unitX","unitY","polyHelper","v2Distance","interpolate","isLoop","segs","w2","w3","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","_curve","someVectorAt","isTangent","cpx2","cpy2","_updatePathDirty","_getItemStyle","getBorderLineDash","platform","gradientColor","animationDuration","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","oldOption","oldOptionBackup","newParsedOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","timelineModel","getCurrentIndex","indices1","indices2","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","isTheme","seriesOpt","clockWise","pointerColor","dataRange","componentName","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","toArr","toObj","markPoint","markLine","markArea","links","mpData","mlData","breadcrumb","processSeries","axes","axisOpt","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radarOpt","geoOpt","regionObj","toolboxOpt","feature","featureOpt","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","stackInfo","stackInfoMap","colorAccessPath","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","userConfig","maskColor","mask","labelRect","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","taskRecord","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","blockIndex","dataLen","threshold","pipelineMap","stageTaskMap","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createSeriesStageTask","overallTaskReset","overallProgress","createStub","stubReset","stubOnDirty","agent","__block","createOverallStageTask","upstreamContext","stubProgress","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","colorAll","legend","borderColor0","_dataStackHelper","_completeDimensions","_createDimensions","_symbol","createList","createScale","mixinAxisModelCommonMethods","scaleProto","_ordinalMeta","rank","scaleHelper","intervalScaleProto","mathCeil","mathFloor","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","bisect","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","originalVal","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","autoInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","labelCategoryInterval","cache","categoryInterval","onlyTick","ordinalScale","ordinalExtent","startTick","showMinMax","addItem","tVal","makeCategoryLabels","makeRealNumberLabels","ticksCache","optionTickInterval","labelsResult","makeCategoryTicks","axisRotate","fetchAutoCategoryIntervalCalculationParams","unitSpan","unitW","unitH","maxW","maxH","lastAutoInterval","lastTickCount","visualSymbol","layoutPoints","dataSample","clipOverflow","showSymbol","showAllSymbol","sampling","lineAnimationDiff","_poly","_helper","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","hasAnimation","forSymbol","radiusExtent","angleExtent","RADIAN","createPolarClipShape","xExtent","yExtent","createGridClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getIsIgnoreFunc","isAuto","getAxesByScale","availSize","canShowAllSymbolForCategory","categoryDataDim","labelMap","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","getStackedOnPoints","isIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","gradient","getVisualGradient","stackedOnSeries","_valueOrigin","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","samplers","nearest","indexSampler","sampler","Cartesian","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","coordExtent","containLabel","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitAreaColors","_splitLine","splitLineModel","lineColors","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","brushSelector","barItemStyle","BAR_BORDER_WIDTH_QUERY","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","_clear","_incrementalRenderLarge","isLargeDraw","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","createLarge","animateProperty","animateTarget","isRadial","sector","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","setLargeStyle","_getBarItemStyle","createDataSelectAction","dataColor","pieLayout","dataSelectableMixin","PieSeries","_createSelectableList","_defaultLabelLine","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","updateDataSelected","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","piePieceProto","firstCreate","sectorShape","_updateLabel","labelText","labelHoverModel","labelLineModel","labelLineHoverModel","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","leftList","rightList","avoidOverlap","LargeSymbolDraw","pointsLayout","_updateSymbolDraw","_finished","LargeSymbolPath","symbolProxy","symbolProxyShape","findDataIndex","largeSymbolProto","_setCommon","endIndex","byteOffset","isIncremental","extrudeShadow","radarLayout","IndicatorAxis","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","getIndicatorAxes","indicatorIndex","coordToPoint","closestAxis","minRadianDiff","closestAxisIdx","coodToData","viewSize","indicatorAxes","radarSeries","increaseInterval","fixedMin","fixedMax","halfSplitNumber","radarList","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","indicator","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","RadarSeries","radarIndex","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","pointsConverter","polarOptArr","polarNotRadar","polarOpt","polarIndex","mapSymbolLayout","mapDataStatistic","MapSeries","needsDrawMap","_fillOption","regionName","seriesNames","otherIndex","originalData","getRegion","showLegendSymbol","dataRangeHoverLink","scaleLimit","geoFixFuncs","_nameCoordMap","loadGeoJson","containCoord","regionsMap","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","geoCoordMap","Russia","United States","United States of America","mapModel","_mapDraw","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","__mapOriginalZ2","processedMapType","mapSymbolOffsets","subMapSeries","colorList","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","dataStatistics","mapLocation","treeLayout","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","collapsed","getOrient","realRoot","_oldTree","_mainGroup","curvature","updateNode","removeNode","getTreeNodeStyle","virtualRoot","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","isLeft","rootLayout","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","_traversalHelper","eachAfter","eachBefore","_layoutHelper","sep","kx","ky","coorX","coorY","finalCoor","commonLayout","treemapVisual","treemapLayout","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","roam","nodeClick","emptyItemWidth","upperLabel","gapWidth","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","resetViewRoot","setLayoutInfo","mapIdToIndex","idIndexMap","_idIndexMap","_idIndexMapCount","getViewRoot","Breadcrumb","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","_containerGroup","nodeGroup","background","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","containerGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","renderNode","dualTravel","thisViewChildren","oldViewChildren","parentGroup","sameTree","processNode","thisNode","oldNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","els","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","old","fadein","_onPan","_onZoom","_clearController","rootRect","findTarget","isLeafRoot","_rootToNode","_zoomToNode","linkTarget","open","bgEl","thisLayout","isInView","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","isAboveViewRoot","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","renderContent","__tmWillVisible","upperLabelRect","nodeModel","iconChar","normalLabelModel","emphasisLabelModel","isShow","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","zInLevel","zb","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","onclick","doneCallback","elExistsMap","actionTypes","originViewRoot","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeLayout","nodeItemStyleModel","levelItemStyle","visualName","buildVisuals","thisNodeColor","calculateColor","calculateBorderColor","rangeVisual","getRangeVisual","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","getValueVisualDefine","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","getUpperLabelHeight","estimateRootSize","viewRootLayout","squarify","hideChildren","halfGapWidth","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","initChildren","rowFixedLength","best","score","worst","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","childClipRect","areaMax","areaMin","squareArea","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","categoryFilter","categoryVisual","edgeVisual","forceLayout","createView","createGraphFromNodeEdge","GraphSeries","_categoriesData","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","emphasisEdgeLabelModel","emphasisFakeSeriesModel","edgeGetParent","getEdgeData","getCategoriesData","getEdgeByIndex","sourceName","targetName","categoriesData","focusNodeAdjacency","circular","rotateLabel","initLayout","repulsion","gravity","edgeLength","layoutAnimation","edgeSymbol","edgeSymbolSize","edgeLabel","nodeScaleRatio","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","isDirected","nodesMap","getNodeByIndex","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","stopped","nodeScale","groupScale","groupZoom","straightLineProto","bezierCurveProto","isLine","curveTool","v3","intersectCurveCircle","curvePoints","radiusSquare","nextDiff","tmp0","pts2","fromSymbol","toSymbol","__original","originalPoints","graphSeries","categoryNames","categoryNameIdxMap","colorQuery","opacityQuery","_simpleLayoutHelper","preservedPoints","forceModel","nodeDataExtent","edgeDataExtent","rep","forceInstance","oldStep","pp","friction","v12","nLen","repFact","coordSysType","positions","bbWidth","bbHeight","viewCoordSys","dataOpt","PointerPath","formatLabel","posInfo","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","pointerModel","titleModel","detailModel","funnelLayout","FunnelSeries","minSize","funnelAlign","FunnelPiece","funnelPieceProto","opacityAccessPath","funnelPiece","valueArr","isAscending","getSortedIndices","sizeExtent","getLinePoints","offY","parallelVisual","hasParallelSeries","createParallelIfNeeded","parallelAxis","axisOption","parallelIndex","parallelOption","mergeAxisOptionFromParallel","ParallelAxis","sliderMove","_axesLayout","_init","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWidth","axisExpandCount","axisExpandable","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","positionTable","rotationTable","axisCoordToPoint","eachActiveState","dataDimensions","hasActiveSet","hasAxisBrushed","activeState","getActiveState","axisLayout","getAxisLayout","pointCoord","triggerArea","useJump","axisExpandCenter","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","_initDimensions","setAxisExpand","activeIntervals","getAreaSelectStyle","setActiveIntervals","intervals","areaSelectStyle","parallelAxisModel","elementList","_brushController","_onBrush","fromAxisAreaSelect","areaWidth","builderOpt","_refreshBrushController","extentLen","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","dataDimIndex","setEncodeAndDimensions","getRawIndicesByActiveState","theActiveState","inactiveOpacity","activeOpacity","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","updateElCommon","_dataGroup","newDataIndex","oldDataIndex","rectEl","globalColors","opacityMap","itemOpacity","sankeyLayout","sankeyVisual","SankeySeries","setNodePosition","localPosition","localX","localY","rawDataOpt","nodeWidth","nodeGap","layoutIterations","SankeyShape","halfExtent","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","dragX","dragY","nest","resolveCollisions","nodesByBreadth","ascendingDepth","nodeY","relaxRightToLeft","weightedTarget","getEdgeValue","relaxLeftToRight","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextNode","indexEdge","nodeIndex","moveSinksRight","scaleNodeBreadths","computeNodeBreadths","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","minValue","nodeValue","mapValueToColor","customColor","boxplotVisual","boxplotLayout","BoxplotSeries","boxWidth","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","BoxplotView","constDim","createNormalBox","updateNormalBoxData","BoxPath","transInit","normalItemStyleModel","initBaseline","borderColorQuery","defaulColor","groupResult","axisList","groupSeriesByAxis","groupItem","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","calculateBase","halfWidth","cDimIdx","vDimIdx","cDim","vDims","axisDimVal","median","getPoint","end1","end2","end4","end5","addBodyEnd","layEndLine","dimIdx","point1","point2","endCenter","layoutSingleSeries","preprocessor","candlestickVisual","candlestickLayout","CandlestickSeries","barMinWidth","animationUpdate","getShadowDim","selectors","brushRect","SKIP_PROPS","CandlestickView","_incrementalRenderNormal","isSimpleBox","setBoxCommon","NormalBoxPath","__simpleBox","LargeBoxPath","__sign","elP","elN","suffix","seriesItem","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","colorP","colorN","borderColorP","getBorderColor","borderColorN","candleWidth","calculateCandleWidth","openDim","closeDim","lowestDim","highestDim","openVal","closeVal","lowestVal","highestVal","getSign","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","highestPoint","subPixelOptimizePoint","makeBrushRect","pmin","pmax","effectType","showEffectOn","rippleEffect","EffectSymbol","effectSymbolDraw","_updateGroupTransform","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","linesLayout","linesVisual","Uint32Arr","Float64Arr","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","_getCoordsFromItemModel","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","effect","trailLength","EffectPolyline","LargeLineDraw","_updateLineDraw","isSvg","_lastZlevel","_showEffect","hasEffect","_hasEffet","_isPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","lineContain","quadraticContain","LargeLineShape","largeLineProto","lineEl","blurSize","pointSize","maxOpacity","minOpacity","HeatmapLayer","visualMapOfThisSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","dataToRect","contentShape","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","isInRange","dataSpan","getIsInContinuousRange","getIsInPiecewiseRange","getPieceList","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","gradientPixels","pixelsSingleState","Uint8ClampedArray","PictorialBarSeries","symbolPosition","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolMeta","boundingLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categoryDim","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","prepareLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","rectShape","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","updateBar","themeRiverLayout","themeRiverVisual","Single","singles","SingleAxis","_axis","_adjustAxis","_updateAxisTransform","extentSum","singleAxisHelper","SingleAxisView","selfBuilderAttr","modelHelper","findPointFromSeries","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","nestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","dataByCoordSys","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","dataByAxis","valueLabelOpt","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","icon","globalListener","AxisPointerView","XY","WH","SingleAxisPointer","getPointDimIndex","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","layerNum","largestLayer","timeValue","keyIndex","getLayerSeries","lenCount","indexArr","layerSeries","timeDim","comparer","index1","index2","nearestIdx","pointNum","theValue","htmlName","htmlValue","keyGetter","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","layerGroup","baseY0","layerPoints","singleLayer","sums","temp","computeBaseline","baseLine","layerIndex","sunburstLayout","highlightPolicy","renderLabelForZeroData","SunburstPiece","newRoot","newChildren","oldChildren","_oldChildren","newId","oldId","newNode","virtualPiece","_onclickEvent","renderRollUp","unhighlight","targetFound","NodeHighlightPolicy","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","_ecModel","getRootId","getNodeColor","stateStyle","activeNode","policy","onHighlight","onDownplay","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","rootDepth","isAsc","sortOrder","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle","prepareCartesian2d","prepareGeo","prepareSingleAxis","preparePolar","prepareCalendar","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","targetStyle","elOptionStyle","oldElStyle","makeRenderItem","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currVisualColor","userAPI","updateCache","styleEmphasis","barLayout","currentSeriesIndices","userParams","dataInsideLength","wrapEncodeDef","currDirty","doCreateOrUpdate","elOptionType","__customGraphicType","__customPathData","__customImagePath","__customText","graphicType","createEl","targetProps","targetOpacity","updateEl","diffChildrenByName","processAddUpdate","processRemove","childOption","setIncrementalAndHoverLayer","dataToCoordSize","dataSize","halfSize","dataToRadius","dataToAngle","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","mergeNewElOptionToExist","existItem","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","targetElParent","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_updateElements","_relocate","rootGroup","elOptionCleaned","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","bounding","legendFilter","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","mergeAndNormalizeLayoutParams","raw","LegendView","ScrollableLegendView","_currentIndex","_controllerGroup","_showController","__rectSize","me","controllerGroup","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","setContent","contentSize","vAlign","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","getOuterSize","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","vendors","assembleCssText","transitionText","vendorPrefix","assembleTransition","borderName","camelCase","assembleFont","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","barPolar","calRadialBar","radiusSpan","angleSpan","RadiusAxis","AngleAxis","_radiusAxis","_angleAxis","pointToCoord","radiusToData","angleToData","maxAngle","foundAxisModel","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","getAxisLineShape","rExtent","getRadiusIdx","fixAngleOverlap","firstItem","ticksAngles","_axisLine","_axisTick","tickAngleItem","_axisLabel","commonLabelModel","labelTextAlign","labelTextVerticalAlign","prevAngle","axisAngle","layoutAxis","prevRadius","PolarAxisPointer","coordValue","getLabelPosition","makeAction","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","DEFAULT_TOOLBOX_BTNS","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","toolboxFeature","toolboxBrush","brushTypes","flag","removeDuplicate","selector","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","doDispatch","brushSelected","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","sels","selectorsByElementType","bSelector","sel","brushModel","setBrushOption","brushTargetManager","throttleDelay","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","linkOthers","brushed","stepAParallel","brushModelNotControll","stepAOthers","seriesBrushSelected","getBoundingRectFromMinMax","rg","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","namenda","miu","v4","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","coordInfoList","inBrush","outOfBrush","setAreas","updateController","modelId","$from","featureManager","brushLang","Brush","_brushMode","featureModel","isBrushed","setIconStatus","getIcons","availableIcons","icons","command","Calendar","calendarModel","_rangeInfo","_sw","_sh","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellSize","layoutParams","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","firstDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","CalendarModel","dayLabel","monthLabel","yearLabel","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","subtext","subtarget","subtextStyle","subtextStyleModel","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","valueWindow","useOrigin","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","seriesExtent","fixExtentByAxis","calculateDataExtent","dataWindow","minMaxSpan","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","dataBackground","handleIcon","handleStyle","labelPrecision","showDetail","showDataShadow","zoomLock","DataZoomView","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","location","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","thisAxis","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","viewExtent","_updateInterval","viewExtend","lastRange","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","dataInterval","_formatLabel","orderedHandleEnds","barTransform","textPoint","valueStr","showOrHide","changed","_dispatchZoomAction","localPoint","disabled","roams","InsideZoomView","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","zoomGetRange","roamControllerOpt","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","cleanStore","onPan","wrapAndDispatch","onZoom","getRange","dataZoomInfos","dataZoomInfo","theDataZoomId","theCoordId","newRecord","createController","controllerParams","typePriority","type_true","type_move","type_false","type_undefined","oneType","mergeControllerParams","VisualMapModel","DEFAULT_BAR_BOUND","ContinuousModel","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","auto","getSelected","findTargetDataIndices","oVals","getColorStopValues","iVals","setStop","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","VisualMapView","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_renderEndsText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","targetGroup","shapes","_createBarGroup","createPolygon","_dragHandle","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","visualMapId","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","getSelectedMapKey","hasSel","getRepresentValue","representValue","pieceInterval","splitStep","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","_getItemAlign","viewData","_getViewData","endsText","viewPieceList","_onItemClick","_enableHoverLink","indexInModelPieceList","_createItemSymbol","visualState","onHoverLink","shapeParam","newKey","markerHelper","updateMarkerLayout","xPx","yPx","markPointModel","mpModel","symbolDrawMap","coordDimsInfos","MarkerView","markLineTransform","mlModel","mlFrom","mlTo","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","markLineModel","fromData","toData","__to","lineDrawMap","optData","updateDataVisualAndLayout","lineColor","fromSymbolSize","toSymbolSize","colorUtil","markAreaTransform","maModel","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","ec2Types","controlPosition","compatibleEC2","currentIndex","setCurrentIndex","isIndexMax","setPlayState","playState","TimelineModel","SliderTimelineModel","checkpointStyle","showPlayBtn","showPrevBtn","showNextBtn","playIcon","stopIcon","nextIcon","prevIcon","autoPlay","rewind","playInterval","_names","_initData","getPlayState","dataArr","idxArr","TimelineView","TimelineAxis","_timer","_currentPointer","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","boundIdx","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","_renderControl","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","axisCoord","nextIndex","noAnimation","ToolboxModel","featureName","Feature","showTitle","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","oldName","isUserFeatureName","unusable","iconStyleModel","iconStyleEmphasisModel","titles","iconPaths","iconName","createIconPaths","iconStatus","saveAsImageLang","SaveAsImage","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","write","evt","bubbles","cancelable","dispatchEvent","magicTypeLang","MagicType","seriesOptGenreator","radioTypes","radio","newSeriesOpt","currentType","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","assembleSeriesWithCategoryAxis","tables","headers","columns","items","itemSplitRegex","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","header","parseTSVContents","blockMeta","hasName","parseListContents","DataView","tryMergeDataOption","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","seriesGroupByCategoryAxis","otherSeries","meta","groupSeries","getContentFromModel","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_isZoomActive","zoomActive","dataZoomSelectActive","retrieveAxisSetting","updateZoomBtnStatus","updateBackBtnStatus","nextActive","setBatch","found","dzModel","findDataZoom","dataZoomOpts","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","restoreLang","Restore","vmlCore","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateFillNode","dashstyle","updateStrokeNode","brushVML","vmlRoot","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","onRemove","onAdd","appendRectText","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","body","ex","offsetWidth","fromTextEl","fontString","variant","fontVariant","family","getFontStyle","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","String","zrLog","VMLPainter","vmlViewport","_vmlRoot","_vmlViewport","_firstPaint","__alreadyNotVisible","_getWidth","_getHeight","vmlViewportStyle","arrayDiff","GradientManager","ClippathManager","ShadowManager","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","gradientManager","clipPathManager","shadowManager","viewport","_viewport","_visibleList","visibleList","listLen","newVisibleList","svgProxy","svgElement","prevSvgElement","textSvgElement","added","addWithoutUpdate","_getDefs","viewportStyle","outerHTML","Diff","buildValues","componentPos","componentLen","oldPos","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","updateDom","clipPathEl","cloneNode","_textDom","hasShadow","_shadowDom","_shadowDomId","domChild","blur","stdDeviation","_extends","assign","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_propTypes2","_fastDeepEqual2","_sizeSensor","_utils","EchartsReactCore","_Component","getEchartsInstance","echartsElement","warn","rerender","_this$props","onEvents","onChartReady","echartObj","renderEchartDom","bindEvents","events","_bindEvent","loadingOption","prevProps","pickKeys","pick","shouldSetOption","className","_this2","_props","ref","propTypes","object","isRequired","bool","oneOf","oneOfType","defaultProps","keyList","equal","arrA","arrB","dateA","dateB","regexpA","regexpB","_sensorPool","sensor","getSensor","unbind","removeSensor","_id","_id2","_sensors","_constant","Sensors","sensorId","createSensor","removeAttribute","destroy","_object","_resizeObserver","ResizeObserver","_debounce","_debounce2","listeners","resizeListener","listener","contentDocument","newSensor","observe"],"mappings":"yFAIA,IAAAA,EAAA,CACAC,oBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,0BAAA,EACAC,yBAAA,EAEAC,iBAAA,EACAC,kBAAA,GAEAC,EAAA,CACAC,qBAAA,EACAC,sBAAA,EACAC,6BAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,wBAAA,EACAC,wBAAA,GAEAC,EAAAC,OAAAC,UAAAC,SACAC,EAAAC,MAAAH,UACAI,EAAAF,EAAAG,QACAC,EAAAJ,EAAAK,OACAC,EAAAN,EAAAO,MACAC,EAAAR,EAAAS,IACAC,EAAAV,EAAAW,OAEAC,EAAA,GA4BA,SAAAC,EAAAC,GACA,SAAAA,GAAA,iBAAAA,EACA,OAAAA,EAGA,IAAAC,EAAAD,EACAE,EAAApB,EAAAqB,KAAAH,GAEA,sBAAAE,GACA,IAAAE,EAAAJ,GAAA,CACAC,EAAA,GAEA,QAAAI,EAAA,EAAAC,EAAAN,EAAAO,OAA0CF,EAAAC,EAASD,IACnDJ,EAAAI,GAAAN,EAAAC,EAAAK,UAGG,GAAAjC,EAAA8B,IACH,IAAAE,EAAAJ,GAAA,CACA,IAAAQ,EAAAR,EAAAS,YAEA,GAAAT,EAAAS,YAAAC,KACAT,EAAAO,EAAAE,KAAAV,OACO,CACPC,EAAA,IAAAO,EAAAR,EAAAO,QAEA,IAAAF,EAAA,EAAAC,EAAAN,EAAAO,OAA4CF,EAAAC,EAASD,IACrDJ,EAAAI,GAAAN,EAAAC,EAAAK,WAIG,IAAA1C,EAAAuC,KAAAE,EAAAJ,KAAAW,EAAAX,GAGH,QAAAY,KAFAX,EAAA,GAEAD,EACAA,EAAAa,eAAAD,KACAX,EAAAW,GAAAb,EAAAC,EAAAY,KAKA,OAAAX,EAUA,SAAAa,EAAAC,EAAAf,EAAAgB,GAGA,IAAAC,EAAAjB,KAAAiB,EAAAF,GACA,OAAAC,EAAAjB,EAAAC,GAAAe,EAGA,QAAAH,KAAAZ,EACA,GAAAA,EAAAa,eAAAD,GAAA,CACA,IAAAM,EAAAH,EAAAH,GACAO,EAAAnB,EAAAY,IAEAK,EAAAE,KAAAF,EAAAC,IAAAE,EAAAD,IAAAC,EAAAF,IAAAP,EAAAQ,IAAAR,EAAAO,IAAAG,EAAAF,IAAAE,EAAAH,IAAAd,EAAAe,IAAAf,EAAAc,IAGOF,GAAAJ,KAAAG,IAGPA,EAAAH,GAAAb,EAAAC,EAAAY,KAJAE,EAAAI,EAAAC,EAAAH,GASA,OAAAD,EA0CA,SAAAO,EAAAP,EAAAf,EAAAuB,GACA,QAAAX,KAAAZ,EACAA,EAAAa,eAAAD,KAAAW,EAAA,MAAAvB,EAAAY,GAAA,MAAAG,EAAAH,MACAG,EAAAH,GAAAZ,EAAAY,IAIA,OAAAG,EAGA,IASAS,EATAC,EAAA,WACA,OAAA3B,EAAA2B,gBAuGA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAIA,GAAAD,EAAAtC,SAAAsC,EAAAtC,UAAAD,EACAuC,EAAAtC,QAAAuC,EAAAC,QACG,GAAAF,EAAApB,UAAAoB,EAAApB,OACH,QAAAF,EAAA,EAAAC,EAAAqB,EAAApB,OAAqCF,EAAAC,EAASD,IAC9CuB,EAAAzB,KAAA0B,EAAAF,EAAAtB,KAAAsB,QAGA,QAAAf,KAAAe,EACAA,EAAAd,eAAAD,IACAgB,EAAAzB,KAAA0B,EAAAF,EAAAf,KAAAe,GAmHA,SAAAG,EAAAC,EAAAF,GACA,IAAAG,EAAAxC,EAAAW,KAAA8B,UAAA,GACA,kBACA,OAAAF,EAAAG,MAAAL,EAAAG,EAAAG,OAAA3C,EAAAW,KAAA8B,cAuBA,SAAAb,EAAAgB,GACA,yBAAAtD,EAAAqB,KAAAiC,GA6BA,SAAAnB,EAAAmB,GAGA,IAAAC,SAAAD,EACA,mBAAAC,KAAAD,GAAA,UAAAC,EASA,SAAAhB,EAAAe,GACA,QAAAzE,EAAAmB,EAAAqB,KAAAiC,IAmBA,SAAAzB,EAAAyB,GACA,wBAAAA,GAAA,kBAAAA,EAAAE,UAAA,kBAAAF,EAAAG,cA/TAzC,EAAA2B,aAAA,WACA,OAAAe,SAAAC,cAAA,WAsaA,IAAAC,EAAA,mBASA,SAAAtC,EAAAuB,GACA,OAAAA,EAAAe,GAQA,SAAAC,EAAAhB,GACA,IAAAiB,EAAAxB,EAAAO,GACAkB,EAAAC,KAGA,SAAAC,EAAAX,EAAAxB,GACAgC,EAAAC,EAAAG,IAAAZ,EAAAxB,GAAAiC,EAAAG,IAAApC,EAAAwB,GAHAT,aAAAgB,EAAAhB,EAAAD,KAAAqB,GAAApB,GAAAD,EAAAC,EAAAoB,GAQAJ,EAAA3D,UAAA,CACAyB,YAAAkC,EAIAM,IAAA,SAAArC,GACA,OAAAkC,KAAAjC,eAAAD,GAAAkC,KAAAlC,GAAA,MAEAoC,IAAA,SAAApC,EAAAwB,GAGA,OAAAU,KAAAlC,GAAAwB,GAIAV,KAAA,SAAAE,EAAAC,GAGA,QAAAjB,UAFA,IAAAiB,IAAAD,EAAAE,EAAAF,EAAAC,IAEAiB,KACAA,KAAAjC,eAAAD,IAAAgB,EAAAkB,KAAAlC,OAIAsC,UAAA,SAAAtC,UACAkC,KAAAlC,KA0BAuC,EAAAC,UAjpBA,SAAAC,EAAAC,GAEA,iBAAAD,IACA7B,EAAA,MAGA1B,EAAAuD,GAAAC,GA4oBAH,EAAApD,QACAoD,EAAArC,QACAqC,EAAAI,SAxiBA,SAAAC,EAAAxC,GAGA,IAFA,IAAAf,EAAAuD,EAAA,GAEAnD,EAAA,EAAAC,EAAAkD,EAAAjD,OAAgDF,EAAAC,EAASD,IACzDJ,EAAAa,EAAAb,EAAAuD,EAAAnD,GAAAW,GAGA,OAAAf,GAkiBAkD,EAAAM,OAzhBA,SAAA1C,EAAAf,GACA,QAAAY,KAAAZ,EACAA,EAAAa,eAAAD,KACAG,EAAAH,GAAAZ,EAAAY,IAIA,OAAAG,GAmhBAoC,EAAA7B,WACA6B,EAAA1B,eACA0B,EAAAO,WAtfA,WAOA,OANAlC,IAGAA,EAAAC,IAAAiC,WAAA,OAGAlC,GAgfA2B,EAAAQ,QAxeA,SAAAC,EAAAxB,GACA,GAAAwB,EAAA,CACA,GAAAA,EAAAD,QACA,OAAAC,EAAAD,QAAAvB,GAGA,QAAA/B,EAAA,EAAAC,EAAAsD,EAAArD,OAAuCF,EAAAC,EAASD,IAChD,GAAAuD,EAAAvD,KAAA+B,EACA,OAAA/B,EAKA,UA4dA8C,EAAAU,SAjdA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAA9E,UAEA,SAAAiF,KAKA,QAAAC,KAHAD,EAAAjF,UAAA+E,EAAA/E,UACA8E,EAAA9E,UAAA,IAAAiF,EAEAD,EACAF,EAAA9E,UAAAkF,GAAAF,EAAAE,GAGAJ,EAAA9E,UAAAyB,YAAAqD,EACAA,EAAAK,WAAAJ,GAqcAZ,EAAAiB,MA3bA,SAAArD,EAAAf,EAAAuB,GAGAD,EAFAP,EAAA,cAAAA,IAAA/B,UAAA+B,EACAf,EAAA,cAAAA,IAAAhB,UAAAgB,EACAuB,IAybA4B,EAAAkB,YAjbA,SAAAC,GACA,GAAAA,EAIA,uBAAAA,GAIA,iBAAAA,EAAA/D,QAyaA4C,EAAAzB,OACAyB,EAAAxD,IAlYA,SAAAgC,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAAA,CAIA,GAAAD,EAAAhC,KAAAgC,EAAAhC,MAAAD,EACA,OAAAiC,EAAAhC,IAAAiC,EAAAC,GAIA,IAFA,IAAA5B,EAAA,GAEAI,EAAA,EAAAC,EAAAqB,EAAApB,OAAqCF,EAAAC,EAASD,IAC9CJ,EAAAsE,KAAA3C,EAAAzB,KAAA0B,EAAAF,EAAAtB,KAAAsB,IAGA,OAAA1B,IAqXAkD,EAAAtD,OAxWA,SAAA8B,EAAAC,EAAA4C,EAAA3C,GACA,GAAAF,GAAAC,EAAA,CAIA,GAAAD,EAAA9B,QAAA8B,EAAA9B,SAAAD,EACA,OAAA+B,EAAA9B,OAAA+B,EAAA4C,EAAA3C,GAEA,QAAAxB,EAAA,EAAAC,EAAAqB,EAAApB,OAAqCF,EAAAC,EAASD,IAC9CmE,EAAA5C,EAAAzB,KAAA0B,EAAA2C,EAAA7C,EAAAtB,KAAAsB,GAGA,OAAA6C,IA6VArB,EAAA5D,OAhVA,SAAAoC,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAAA,CAIA,GAAAD,EAAApC,QAAAoC,EAAApC,SAAAD,EACA,OAAAqC,EAAApC,OAAAqC,EAAAC,GAIA,IAFA,IAAA5B,EAAA,GAEAI,EAAA,EAAAC,EAAAqB,EAAApB,OAAqCF,EAAAC,EAASD,IAC9CuB,EAAAzB,KAAA0B,EAAAF,EAAAtB,KAAAsB,IACA1B,EAAAsE,KAAA5C,EAAAtB,IAIA,OAAAJ,IAiUAkD,EAAAsB,KApTA,SAAA9C,EAAAC,EAAAC,GACA,GAAAF,GAAAC,EAIA,QAAAvB,EAAA,EAAAC,EAAAqB,EAAApB,OAAmCF,EAAAC,EAASD,IAC5C,GAAAuB,EAAAzB,KAAA0B,EAAAF,EAAAtB,KAAAsB,GACA,OAAAA,EAAAtB,IA8SA8C,EAAArB,OACAqB,EAAAuB,MAtRA,SAAA3C,GACA,IAAAC,EAAAxC,EAAAW,KAAA8B,UAAA,GACA,kBACA,OAAAF,EAAAG,MAAAY,KAAAd,EAAAG,OAAA3C,EAAAW,KAAA8B,eAoRAkB,EAAA/B,UACA+B,EAAAwB,WAjQA,SAAAvC,GACA,0BAAAA,GAiQAe,EAAAyB,SAxPA,SAAAxC,GACA,0BAAAtD,EAAAqB,KAAAiC,IAwPAe,EAAAlC,WACAkC,EAAA9B,kBACA8B,EAAA0B,aA1NA,SAAAzC,GACA,QAAAhE,EAAAU,EAAAqB,KAAAiC,KA0NAe,EAAAxC,QACAwC,EAAA2B,MAxMA,SAAA1C,GACA,OAAAA,OAwMAe,EAAA4B,SA9LA,SAAAC,GACA,QAAA3E,EAAA,EAAAC,EAAA2B,UAAA1B,OAAyCF,EAAAC,EAASD,IAClD,SAAA4B,UAAA5B,GACA,OAAA4B,UAAA5B,IA4LA8C,EAAA8B,UAvLA,SAAAC,EAAAC,GACA,aAAAD,IAAAC,GAuLAhC,EAAAiC,UApLA,SAAAF,EAAAC,EAAAE,GACA,aAAAH,IAAA,MAAAC,IAAAE,GAoLAlC,EAAA1D,MAzKA,WACA,OAAA6F,SAAAnF,KAAA+B,MAAA1C,EAAAyC,YAyKAkB,EAAAoC,kBA5JA,SAAAC,GACA,qBAAAA,EACA,OAAAA,SAGA,IAAAlF,EAAAkF,EAAAjF,OAEA,WAAAD,EAEA,CAAAkF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACG,IAAAlF,EAEH,CAAAkF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGAA,GA8IArC,EAAAsC,OArIA,SAAAC,EAAAC,GACA,IAAAD,EACA,UAAAE,MAAAD,IAoIAxC,EAAA0C,KA1HA,SAAAC,GACA,aAAAA,EACA,KACG,oBAAAA,EAAAD,KACHC,EAAAD,OAEAC,EAAAC,QAAA,0CAqHA5C,EAAA6C,eA5GA,SAAArE,GACAA,EAAAe,IAAA,GA4GAS,EAAA/C,cACA+C,EAAA8C,cA1DA,SAAAtE,GACA,WAAAgB,EAAAhB,IA0DAwB,EAAA+C,YAvDA,SAAAC,EAAAC,GAGA,IAFA,IAAAC,EAAA,IAAAF,EAAA1F,YAAA0F,EAAA5F,OAAA6F,EAAA7F,QAEAF,EAAA,EAAiBA,EAAA8F,EAAA5F,OAAcF,IAC/BgG,EAAAhG,GAAA8F,EAAA9F,GAGA,IAAAiG,EAAAH,EAAA5F,OAEA,IAAAF,EAAA,EAAaA,EAAA+F,EAAA7F,OAAcF,IAC3BgG,EAAAhG,EAAAiG,GAAAF,EAAA/F,GAGA,OAAAgG,GA2CAlD,EAAAoD,KAxCA,kCCnrBcC,EAAQ,KAEtBC,QAFA,IAIAC,EAAcF,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBI,EAAgBJ,EAAQ,KAExBK,EAAUL,EAAQ,KAElBM,EAAcN,EAAQ,KAEtBO,EAAeP,EAAQ,KAEvBQ,EAAkBR,EAAQ,KAE1BS,EAAmBT,EAAQ,KAE3BU,EAA8BV,EAAQ,KAEtCW,EAAoBX,EAAQ,KAE5BY,EAAqBZ,EAAQ,KAE7Ba,EAAgBb,EAAQ,KAExBc,EAAqBd,EAAQ,KAE7Be,EAAkBf,EAAQ,KAE1BgB,EAAoBhB,EAAQ,KAE5BiB,EAAgBjB,EAAQ,KAExBkB,EAAclB,EAAQ,KAEtBmB,EAAgBnB,EAAQ,KAIxBoB,EAFgBpB,EAAQ,KAExBoB,SAEAC,EAAkBrB,EAAQ,KAE1BsB,EAAWtB,EAAQ,KAEnBuB,EAAqBvB,EAAQ,KAE7BwB,EAAgBxB,EAAQ,KAExByB,EAAiBzB,EAAQ,KAEzB0B,EAAgB1B,EAAQ,KAExBA,EAAQ,KAqBR,IAAAf,EAAAkB,EAAAlB,OACA/D,EAAAiF,EAAAjF,KACAiD,EAAAgC,EAAAhC,WACA1D,EAAA0F,EAAA1F,SACAkH,EAAAb,EAAAa,eAMAC,EAAA,IAEAC,EAAA,IAEAC,EAAA,IAKAC,EAAA,CACAC,UAAA,CACAC,OAAAL,EACAM,UAXA,KAaAC,OAAA,CACAC,OAAAP,EACAQ,OAbA,IAcAC,MAAAR,EACAS,UAbA,IAcAC,MAXA,MAmBAC,EAAA,sBACAC,EAAA,kBACAC,EAAA,kBAEA,SAAAC,EAAAC,GACA,gBAAAC,EAAAC,EAAA1H,GAEAyH,OAAAE,cACAzC,EAAA/H,UAAAqK,GAAAlJ,KAAA2C,KAAAwG,EAAAC,EAAA1H,IAQA,SAAA4H,IACA1C,EAAA5G,KAAA2C,MAWA,SAAA4G,EAAAC,EAAAC,EAAAC,GACAA,KAAA,GAEA,kBAAAD,IACAA,EAAAE,GAAAF,IAOA9G,KAAAiH,GAMAjH,KAAAkH,MAMAlH,KAAAmH,KAAAN,EACA,IAMAO,EAAApH,KAAAqH,IAAAzD,EAAA0D,KAAAT,EAAA,CACAU,SAAAR,EAAAQ,UAPA,SAQAC,iBAAAT,EAAAS,iBACAC,MAAAV,EAAAU,MACAC,OAAAX,EAAAW,SAQA1H,KAAA2H,kBAAA7C,EAAAjB,EAAA7E,KAAAoI,EAAAQ,MAAAR,GAAA,KACAN,EAAAjD,EAAA5G,MAAA6J,KACAxC,EAAAwC,GAAA,GAMA9G,KAAA6H,OAAAf,EAMA9G,KAAA8H,aAAA,GAMA9H,KAAA+H,WAAA,GAMA/H,KAAAgI,iBAAA,GAMAhI,KAAAiI,eAAA,GAMAjI,KAAAkI,aAAA,IAAA9D,EAMA,IAAA+D,EAAAnI,KAAAoI,KAowCA,SAAAC,GACA,IAAAC,EAAAD,EAAAH,aACA,OAAArE,EAAAlD,OAAA,IAAAwD,EAAAkE,GAAA,CAEAE,qBAAA1E,EAAA7E,KAAAsJ,EAAAC,qBAAAD,GACAE,sBAAA,SAAAC,GACA,KAAAA,GAAA,CACA,IAAAC,EAAAD,EAAAE,kBAEA,SAAAD,EACA,OAAAL,EAAAO,OAAAC,aAAAH,EAAAI,SAAAJ,EAAAK,OAGAN,IAAAO,WAjxCAC,CAAAjJ,MAEA,SAAAkJ,EAAA7F,EAAAC,GACA,OAAAD,EAAA8F,OAAA7F,EAAA6F,OAGAnF,EAAAoF,GAAAF,GACAlF,EAAAqF,GAAAH,GAKAlJ,KAAAsJ,WAAA,IAAApE,EAAAlF,KAAAmI,EAAAkB,GAAAD,IACAnF,EAAA5G,KAAA2C,MAMAA,KAAAuJ,eAAA,IAAA5C,EAEA3G,KAAAwJ,cAGAxJ,KAAAyJ,OAAA5F,EAAA7E,KAAAgB,KAAAyJ,OAAAzJ,MAEAA,KAAA0J,gBAAA,GACAtC,EAAAuC,UAAAC,GAAA,QAAA5J,KAAA6J,SAAA7J,MAw5BA,SAAAoH,EAAA0C,GACA1C,EAAAwC,GAAA,sBACAE,EAAAC,QAAA,aAQA3C,EAAAuC,UAAAK,cAAAF,EAAA1D,IAAA0D,EAAAR,WAAAW,YAAAH,EAAAJ,gBAAAjM,QACAqM,EAAAC,QAAA,cAl6BAG,CAAA9C,EAAApH,MAEA6D,EAAAX,eAAAlD,MA5HA2G,EAAAzK,UAAA0N,GAAAtD,EAAA,MACAK,EAAAzK,UAAAiO,IAAA7D,EAAA,OACAK,EAAAzK,UAAAkO,IAAA9D,EAAA,OACAzC,EAAAvC,MAAAqF,EAAA1C,GA4HA,IAAAoG,EAAAzD,EAAA1K,UAqWA,SAAAoO,EAAAC,EAAAC,EAAAlL,GACA,IAIAnC,EAJAsN,EAAAzK,KAAA4I,OAEA8B,EAAA1K,KAAAkI,aAAAK,uBAGAiC,EAAA3F,EAAA8F,YAAAF,EAAAD,GAEA,QAAAjN,EAAA,EAAiBA,EAAAmN,EAAAjN,OAAyBF,IAAA,CAC1C,IAAAqN,EAAAF,EAAAnN,GAEA,GAAAqN,EAAAL,IAAA,OAAApN,EAAAyN,EAAAL,GAAAE,EAAAD,EAAAlL,IACA,OAAAnC,GA/WAkN,EAAAR,SAAA,WACA,IAAA7J,KAAA6K,UAAA,CAIA,IAAAC,EAAA9K,KAAAsJ,WAEA,GAAAtJ,KAAAoG,GAAA,CACA,IAAA2E,EAAA/K,KAAAoG,GAAA2E,OACA/K,KAAAmG,IAAA,EACA6E,EAAAhL,MACAiL,EAAAC,OAAA7N,KAAA2C,MACAA,KAAAmG,IAAA,EACAnG,KAAAoG,IAAA,EACA+E,EAAA9N,KAAA2C,KAAA+K,GACAK,EAAA/N,KAAA2C,KAAA+K,QAEA,GAAAD,EAAAb,WAAA,CAEA,IAAAoB,EApMA,EAqMAZ,EAAAzK,KAAA4I,OACAT,EAAAnI,KAAAoI,KACA0C,EAAAb,YAAA,EAEA,GACA,IAAAqB,GAAA,IAAAC,KACAT,EAAAU,mBAAAf,GAEAK,EAAAW,0BAAAhB,GACAiB,EAAA1L,KAAAyK,GAOAK,EAAAa,mBAAAlB,GACAmB,GAAA5L,UAAA4I,OAAAT,EAAA,UACAkD,IAAA,IAAAE,KAAAD,QACOD,EAAA,GAAAP,EAAAb,YAGPa,EAAAb,YACAjK,KAAAqH,IAAAO,WAWAyC,EAAAwB,OAAA,WACA,OAAA7L,KAAAmH,MAOAkD,EAAAyB,MAAA,WACA,OAAA9L,KAAAqH,KAkBAgD,EAAA0B,UAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAnB,EAUA,GARA5M,EAAA8N,KACAC,EAAAD,EAAAC,WACAnB,EAAAkB,EAAAlB,OACAkB,cAGAjM,KAAAmG,IAAA,GAEAnG,KAAA4I,QAAAqD,EAAA,CACA,IAAAE,EAAA,IAAA9H,EAAArE,KAAAoI,MACAtB,EAAA9G,KAAA6H,OACA4C,EAAAzK,KAAA4I,OAAA,IAAA1E,EAAA,UAAA4C,EAAAqF,GACA1B,EAAAK,UAAA9K,KAAAsJ,WACAmB,EAAAnD,KAAA,UAAAR,EAAAqF,GAGAnM,KAAA4I,OAAAmD,UAAAC,EAAAI,IAEAF,GACAlM,KAAAoG,GAAA,CACA2E,UAEA/K,KAAAmG,IAAA,IAEA6E,EAAAhL,MACAiL,EAAAC,OAAA7N,KAAA2C,MAGAA,KAAAqH,IAAAO,QAEA5H,KAAAoG,IAAA,EACApG,KAAAmG,IAAA,EACAgF,EAAA9N,KAAA2C,KAAA+K,GACAK,EAAA/N,KAAA2C,KAAA+K,KAQAV,EAAAgC,SAAA,WACAC,QAAAC,IAAA,oDAOAlC,EAAAmC,SAAA,WACA,OAAAxM,KAAA4I,QAOAyB,EAAAoC,UAAA,WACA,OAAAzM,KAAA4I,QAAA5I,KAAA4I,OAAA6D,aAOApC,EAAAqC,SAAA,WACA,OAAA1M,KAAAqH,IAAAqF,YAOArC,EAAAsC,UAAA,WACA,OAAA3M,KAAAqH,IAAAsF,aAOAtC,EAAAuC,oBAAA,WACA,OAAA5M,KAAAqH,IAAAwF,QAAAC,KAAAC,OAAAvF,kBAAA,GAUA6C,EAAA2C,kBAAA,SAAAjG,GACA,GAAAhD,EAAAkJ,gBAcA,OAVAlG,KAAA,IACAmG,WAAAnG,EAAAmG,YAAA,EACAnG,EAAAoG,gBAAApG,EAAAoG,iBAAAnN,KAAA4I,OAAAzI,IAAA,mBACAH,KAAAqH,IAOAwF,QAAAG,kBAAAjG,IAQAsD,EAAA+C,cAAA,WACA,GAAArJ,EAAAsJ,aAAA,CAIA,IAAAjG,EAAApH,KAAAqH,IACAiG,EAAAlG,EAAAmG,QAAAC,iBAKA,OAHA3J,EAAAjF,KAAA0O,EAAA,SAAA7E,GACAA,EAAAgF,eAAA,KAEArG,EAAAyF,QAAAa,kBAYArD,EAAAsD,WAAA,SAAA5G,GAEA,IAAA6G,GADA7G,KAAA,IACA6G,kBACAnD,EAAAzK,KAAA4I,OACAiF,EAAA,GACAC,EAAA9N,KACApB,EAAAgP,EAAA,SAAAG,GACAtD,EAAAuD,cAAA,CACAlF,SAAAiF,GACK,SAAAE,GACL,IAAAC,EAAAJ,EAAA7F,eAAAgG,EAAAE,UAEAD,EAAAhH,MAAAkH,SACAP,EAAApM,KAAAyM,GACAA,EAAAhH,MAAAkH,QAAA,OAIA,IAAAC,EAAA,QAAArO,KAAAqH,IAAAwF,QAAAyB,UAAAtO,KAAAoN,gBAAApN,KAAAgN,kBAAAjG,GAAAwH,UAAA,UAAAxH,KAAAxH,MAAA,QAIA,OAHAX,EAAAiP,EAAA,SAAAK,GACAA,EAAAhH,MAAAkH,QAAA,IAEAC,GAWAhE,EAAAmE,oBAAA,SAAAzH,GACA,GAAAhD,EAAAkJ,gBAAA,CAIA,IAAAwB,EAAAzO,KAAAkH,MACAwH,EAAAC,KAAAC,IACAC,EAAAF,KAAAG,IAGA,GAAAC,GAAAN,GAAA,CACA,IAAAO,EAHAC,IAIAC,EAJAD,IAKAE,GALAF,IAMAG,GANAH,IAOAI,EAAA,GACAvC,EAAA/F,KAAAmG,YAAA,EACArJ,EAAAjF,KAAA0Q,GAAA,SAAAC,EAAAtI,GACA,GAAAsI,EAAArI,QAAAuH,EAAA,CACA,IAAAe,EAAAD,EAAAvC,kBAAAnJ,EAAA5G,MAAA8J,IACA0I,EAAAF,EAAA1D,SAAA6D,wBACAV,EAAAN,EAAAe,EAAAT,QACAE,EAAAR,EAAAe,EAAAP,OACAC,EAAAN,EAAAY,EAAAN,SACAC,EAAAP,EAAAY,EAAAL,UACAC,EAAA5N,KAAA,CACAoF,IAAA2I,EACAR,KAAAS,EAAAT,KACAE,IAAAO,EAAAP,SAQA,IAAAzH,GAFA0H,GAAArC,IAFAkC,GAAAlC,GAKApF,GAFA0H,GAAAtC,IAFAoC,GAAApC,GAKA6C,EAAA9L,EAAAlF,eACAgR,EAAAlI,QACAkI,EAAAjI,SACA,IAAAN,EAAAxD,EAAA0D,KAAAqI,GAYA,OAXA/Q,EAAAyQ,EAAA,SAAAO,GACA,IAAAC,EAAA,IAAAjL,EAAAkL,MAAA,CACAC,MAAA,CACAC,EAAAJ,EAAAZ,KAAAlC,EAAAkC,EACAiB,EAAAL,EAAAV,IAAApC,EAAAoC,EACAgB,MAAAN,EAAA/I,OAGAO,EAAA+I,IAAAN,KAEAzI,EAAAgJ,qBACAT,EAAApB,UAAA,UAAAxH,KAAAxH,MAAA,QAEA,OAAAS,KAAA2N,WAAA5G,KAuBAsD,EAAAgG,eAAAxM,EAAAjC,MAAA0I,EAAA,kBAoBAD,EAAAiG,iBAAAzM,EAAAjC,MAAA0I,EAAA,oBAqCAD,EAAAkG,aAAA,SAAA/F,EAAAlL,GACA,IACAnC,EADAsN,EAAAzK,KAAA4I,OAkBA,OAhBA4B,EAAA3F,EAAA8F,YAAAF,EAAAD,GACA3G,EAAAjF,KAAA4L,EAAA,SAAAgG,EAAA1S,GACAA,EAAA+C,QAAA,cAAAgD,EAAAjF,KAAA4R,EAAA,SAAAC,GACA,IAAA7F,EAAA6F,EAAAC,iBAEA,GAAA9F,KAAA+F,aACAxT,KAAAyN,EAAA+F,aAAArR,QACO,oBAAAxB,EAAA,CACP,IAAAoQ,EAAAlO,KAAA+H,WAAA0I,EAAAtC,UAEAD,KAAAyC,eACAxT,GAAA+Q,EAAAyC,aAAArR,EAAAmR,MAGKzQ,OACFA,QACH7C,GAmBAkN,EAAAuG,UAAA,SAAApG,EAAAqG,GACA,IAAApG,EAAAzK,KAAA4I,OAKApH,GAJAgJ,EAAA3F,EAAA8F,YAAAF,EAAAD,EAAA,CACAsG,gBAAA,YAEAC,YACAC,UACAC,EAAAzG,EAAAzM,eAAA,mBAAAyM,EAAAyG,gBAAAzG,EAAAzM,eAAA,aAAAyD,EAAA0P,gBAAA1G,EAAA2G,WAAA,KACA,aAAAF,EAAAzP,EAAA4P,cAAAH,EAAAJ,GAAArP,EAAAoP,UAAAC,IASAxG,EAAAgH,wBAAA,SAAAC,GACA,OAAAtR,KAAAiI,eAAAqJ,EAAAnD,WASA9D,EAAAkH,qBAAA,SAAAR,GACA,OAAA/Q,KAAA+H,WAAAgJ,EAAA5C,WAGA,IAAAlD,EAAA,CACAuG,iBAAA,SAAAC,GACAzG,EAAAhL,MACAiL,EAAAC,OAAA7N,KAAA2C,KAAAyR,IAOAvG,OAAA,SAAAuG,GAEA,IAAAhH,EAAAzK,KAAA4I,OACAT,EAAAnI,KAAAoI,KACAhB,EAAApH,KAAAqH,IACAiB,EAAAtI,KAAAkI,aACA4C,EAAA9K,KAAAsJ,WAEA,GAAAmB,EAAA,CAIAK,EAAA4G,YAAAjH,EAAAgH,GACA3G,EAAAU,mBAAAf,GAMAnC,EAAAqJ,OAAAlH,EAAAtC,GACA2C,EAAAW,0BAAAhB,EAAAgH,GAIA/F,EAAA1L,KAAAyK,GAKAnC,EAAA4C,OAAAT,EAAAtC,GACAyJ,EAAAnH,GACAK,EAAAa,mBAAAlB,EAAAgH,GACAI,GAAA7R,KAAAyK,EAAAtC,EAAAsJ,GAEA,IAAAtE,EAAA1C,EAAAtK,IAAA,kCAEA,GAAA4D,EAAAkJ,gBAQA7F,EAAA0K,mBAAA3E,OARA,CACA,IAAA4E,EAAAjO,EAAAkO,MAAA7E,GACAA,EAAArJ,EAAAmO,UAAAF,EAAA,OAEA,IAAAA,EAAA,KACA5E,EAAA,eAMA+E,GAAAzH,EAAAtC,KAOAgK,gBAAA,SAAAV,GACA,IAAAhH,EAAAzK,KAAA4I,OACAkB,EAAA9J,KACAmI,EAAAnI,KAAAoI,KAEA,GAAAqC,EAAA,CAKA,IAAA2H,EAAA,GACA3H,EAAAuD,cAAA,SAAAD,EAAAuD,GACA,IAAAe,EAAAvI,EAAAuH,wBAAAC,GAEA,GAAAe,KAAAC,QACA,GAAAD,EAAAF,gBAAA,CACA,IAAAhV,EAAAkV,EAAAF,gBAAAb,EAAA7G,EAAAtC,EAAAsJ,GACAtU,KAAA+N,QAAAkH,EAAA3Q,KAAA4Q,QAEAD,EAAA3Q,KAAA4Q,KAIA,IAAAE,EAAA1O,EAAAV,gBACAsH,EAAA+H,WAAA,SAAAzB,GACA,IAAA0B,EAAA3I,EAAA/B,WAAAgJ,EAAA5C,UAEA,GAAAsE,EAAAN,gBAAA,CACA,IAAAhV,EAAAsV,EAAAN,gBAAApB,EAAAtG,EAAAtC,EAAAsJ,GACAtU,KAAA+N,QAAAqH,EAAArS,IAAA6Q,EAAA2B,IAAA,QAEAH,EAAArS,IAAA6Q,EAAA2B,IAAA,KAGAd,EAAAnH,GAGAzK,KAAAsJ,WAAAqC,mBAAAlB,EAAAgH,EAAA,CACAkB,UAAA,EACAC,SAAAL,IAKA3G,GAAA9B,EAAAW,EAAAtC,EAAAsJ,EAAAc,GACAL,GAAAzH,EAAAzK,KAAAoI,QAOAyK,WAAA,SAAApB,GACA,IAAAhH,EAAAzK,KAAA4I,OAEA6B,IAIA9F,EAAAmO,iBAAArB,EAAA,cACAG,EAAAnH,GAEAzK,KAAAsJ,WAAAqC,mBAAAlB,EAAAgH,EAAA,CACAkB,UAAA,IAGAd,GAAA7R,UAAA4I,OAAA5I,KAAAoI,KAAAqJ,GACAS,GAAAzH,EAAAzK,KAAAoI,QAOA2K,aAAA,SAAAtB,GACAxG,EAAAC,OAAA7N,KAAA2C,KAAAyR,IAiBAuB,aAAA,SAAAvB,GACAxG,EAAAC,OAAA7N,KAAA2C,KAAAyR,KAcA,SAAAzG,EAAAlB,GACA,IAAAW,EAAAX,EAAAlB,OACAkC,EAAAhB,EAAAR,WACAwB,EAAAmI,iBAAAxI,GACAK,EAAAoI,oBACAC,EAAArJ,EAAA,YAAAW,EAAAK,GACAqI,EAAArJ,EAAA,QAAAW,EAAAK,GACAA,EAAAsI,OAOA,SAAAC,EAAAvJ,EAAAvD,EAAAkL,EAAA3I,EAAAwK,GACA,IAAA7I,EAAAX,EAAAlB,OAEA,GAAAE,EAAA,CAQA,IAAAyK,EAAA,GACAA,EAAAzK,EAAA,MAAA2I,EAAA3I,EAAA,MACAyK,EAAAzK,EAAA,SAAA2I,EAAA3I,EAAA,SACAyK,EAAAzK,EAAA,QAAA2I,EAAA3I,EAAA,QACA,IAAAlG,EAAA,CACAkG,WACAyK,SAEAD,IAAA1Q,EAAA0Q,WAEA,IAAAE,EAAA/B,EAAA+B,gBAEA,MAAAA,IACAA,EAAA3P,EAAAV,cAAA0B,EAAA4O,iBAAAD,KAIA/I,KAAAuD,cAAApL,EAAA,SAAA6N,GACA+C,GAAA,MAAAA,EAAArT,IAAAsQ,EAAAxJ,KACAyM,EAAA5J,EAAA,WAAAhB,EAAA,+BAAA2H,EAAAtC,YAEGrE,QAzBHlL,EAAAkL,EAAA9B,iBAAA3I,OAAAyK,EAAAhC,cAAA4L,GA2BA,SAAAA,EAAAxF,GACAA,KAAAoE,SAAApE,EAAA3H,IAAA2H,EAAA3H,GAAA2H,EAAAyF,QAAAlJ,EAAAX,EAAA1B,KAAAqJ,IAiCA,SAAA/F,EAAA5B,EAAAW,GACA,IAAAmJ,EAAA9J,EAAA/B,WACA+C,EAAAhB,EAAAR,WACAmB,EAAA+H,WAAA,SAAAzB,GACAjG,EAAAY,kBAAAqF,EAAA6C,EAAA7C,EAAA5C,aAsGA,SAAA0F,EAAApC,EAAA1G,GACA,IAAA+I,EAAArC,EAAAlS,KACAwU,EAAAtC,EAAAsC,cACAC,EAAAC,GAAAH,GACAI,EAAAF,EAAAE,WACAC,GAAAD,EAAAhJ,QAAA,UAAAkJ,MAAA,KACAC,EAAAF,EAAAG,MACAH,EAAA,MAAAA,EAAA,IAAA9O,EAAA8O,EAAA,IACAnU,KAAAmG,IAAA,EACA,IAAAoO,EAAA,CAAA9C,GACA+C,GAAA,EAEA/C,EAAAgD,QACAD,GAAA,EACAD,EAAA1Q,EAAAhH,IAAA4U,EAAAgD,MAAA,SAAA7E,GAGA,OAFAA,EAAA/L,EAAArF,SAAAqF,EAAAlD,OAAA,GAA6CiP,GAAA6B,IAC7CgD,MAAA,KACA7E,KAIA,IACA8E,EADAC,EAAA,GAEAC,EAAA,cAAAd,GAAA,aAAAA,EACAlV,EAAA2V,EAAA,SAAAM,IAIAH,GAFAA,EAAAV,EAAAc,OAAAD,EAAA7U,KAAA4I,OAAA5I,KAAAoI,QAEAvE,EAAAlD,OAAA,GAA2CkU,IAE3CtV,KAAA2U,EAAAa,OAAAL,EAAAnV,KACAoV,EAAAlT,KAAAiT,GAEAE,EAEAvB,EAAArT,KAAAqU,EAAAQ,EAAA,UACKV,GACLd,EAAArT,KAAAqU,EAAAQ,EAAAV,EAAAa,KAAAb,EAAAc,MAEGjV,MAEH,SAAAqU,GAAAO,GAAAT,IAEAnU,KAAAoG,IAEA4E,EAAAhL,MACAiL,EAAAC,OAAA7N,KAAA2C,KAAAyR,GACAzR,KAAAoG,IAAA,GAEA6E,EAAAoJ,GAAAhX,KAAA2C,KAAAyR,IAMAiD,EADAF,EACA,CACAjV,KAAA2U,EAAAa,OAAAjB,EACAC,gBACAU,MAAAE,GAGAA,EAAA,GAGA3U,KAAAmG,IAAA,GACA4E,GAAA/K,KAAAuJ,eAAAQ,QAAA2K,EAAAnV,KAAAmV,GAGA,SAAAvJ,EAAAJ,GAGA,IAFA,IAAAmK,EAAAlV,KAAA0J,gBAEAwL,EAAAzX,QAAA,CACA,IAAAgU,EAAAyD,EAAAC,QACAtB,EAAAxW,KAAA2C,KAAAyR,EAAA1G,IAIA,SAAAK,EAAAL,IACAA,GAAA/K,KAAA+J,QAAA,WAmEA,SAAAoJ,EAAArJ,EAAAvK,EAAAkL,EAAAK,GAOA,IANA,IAAAsK,EAAA,cAAA7V,EACA8V,EAAAD,EAAAtL,EAAA9B,iBAAA8B,EAAAhC,aACAwN,EAAAF,EAAAtL,EAAA7B,eAAA6B,EAAA/B,WACAX,EAAA0C,EAAAzC,IACAc,EAAA2B,EAAA1B,KAEA7K,EAAA,EAAiBA,EAAA8X,EAAA5X,OAAqBF,IACtC8X,EAAA9X,GAAA+U,SAAA,EAOA,SAAAiD,EAAA9E,GAEA,IAAA+E,EAAA,OAAA/E,EAAAxJ,GAAA,IAAAwJ,EAAAlR,KACA2O,EAAAoH,EAAAE,GAEA,IAAAtH,EAAA,CACA,IAAAuH,EAAApQ,EAAAoL,EAAAlR,OAEA2O,EAAA,IADAkH,EAAA1Q,EAAAgR,SAAAD,EAAAT,KAAAS,EAAAR,KAAAtQ,EAAA+Q,SAAAD,EAAAR,OAEA3N,KAAAmD,EAAAtC,GACAmN,EAAAE,GAAAtH,EACAmH,EAAA5T,KAAAyM,GACA9G,EAAA+I,IAAAjC,EAAAhH,OAGAuJ,EAAAtC,SAAAD,EAAAyH,KAAAH,EACAtH,EAAAoE,SAAA,EACApE,EAAAyF,QAAAlD,EACAvC,EAAAhH,MAAAyB,kBAAA,CACAG,SAAA2H,EAAA3H,SACAC,MAAA0H,EAAAmF,iBAEAR,GAAAtK,EAAAqI,YAAAjF,EAAAuC,EAAAhG,EAAAtC,GA1BAiN,EAAA3K,EAAAuD,cAAA,SAAAD,EAAA0C,GACA,WAAA1C,GAAAwH,EAAA9E,KACGhG,EAAA+H,WAAA+C,GA2BH,IAAAhY,EAAA,EAAiBA,EAAA8X,EAAA5X,QAAqB,CACtC,IAAAyQ,EAAAmH,EAAA9X,GAEA2Q,EAAAoE,QAQA/U,MAPA6X,GAAAlH,EAAA2H,WAAAC,UACA1O,EAAA2O,OAAA7H,EAAAhH,OACAgH,EAAA4H,QAAArL,EAAAtC,GACAkN,EAAAW,OAAAzY,EAAA,UACA+X,EAAApH,EAAAyH,MACAzH,EAAAyH,KAAAzH,EAAAhH,MAAAyB,kBAAA,OA6BA,SAAAiJ,EAAAnH,GACAA,EAAAmH,oBACAnH,EAAA+H,WAAA,SAAAzB,GACAA,EAAAa,sBAIA,SAAAC,GAAA/H,EAAAW,EAAAtC,EAAAsJ,IAcA,SAAA3H,EAAAW,EAAAtC,EAAAsJ,EAAAwE,GACArX,EAAAqX,GAAAnM,EAAA9B,iBAAA,SAAAqK,GACA,IAAAf,EAAAe,EAAAsB,QACAtB,EAAAR,OAAAP,EAAA7G,EAAAtC,EAAAsJ,GACAyE,GAAA5E,EAAAe,KAjBA8D,CAAArM,EAAAW,EAAAtC,EAAAsJ,GACA7S,EAAAkL,EAAAhC,aAAA,SAAAyH,GACAA,EAAA+C,SAAA,IAEA1G,GAAA9B,EAAAW,EAAAtC,EAAAsJ,GAEA7S,EAAAkL,EAAAhC,aAAA,SAAAyH,GACAA,EAAA+C,SACA/C,EAAAwG,OAAAtL,EAAAtC,KAkBA,SAAAyD,GAAA9B,EAAAW,EAAAtC,EAAAsJ,EAAAmB,GAEA,IACA3I,EADAa,EAAAhB,EAAAR,WAEAmB,EAAA+H,WAAA,SAAAzB,GACA,IAAA0B,EAAA3I,EAAA/B,WAAAgJ,EAAA5C,UACAsE,EAAAH,SAAA,EACA,IAAAuD,EAAApD,EAAAoD,WACA/K,EAAAsL,cAAAP,EAAApE,GAEAmB,KAAAzS,IAAA4Q,EAAA2B,MACAmD,EAAAQ,QAGApM,GAAA4L,EAAAS,QAAAxL,EAAAyL,eAAAV,IACApD,EAAAvL,MAAA6D,SAAAgG,EAAA5Q,IAAA,UACA+V,GAAAnF,EAAA0B,GA0HA,SAAA1B,EAAA0B,GACA,IAAA+D,EAAAzF,EAAA5Q,IAAA,mBACAsS,EAAAvL,MAAAuP,SAAA,SAAAhO,GAEAA,EAAAiO,SAEAjO,EAAAsH,MAAA4G,QAAAH,GACA/N,EAAAmO,SAAA,QAAAJ,GAIA/N,EAAAoO,wBACApO,EAAAoO,uBAAA,SAAAC,GACAA,EAAAF,SAAA,QAAAJ,OAtIAO,CAAAhG,EAAA0B,KAEA3H,EAAAb,cA8FA,SAAA7C,EAAAqD,GACA,IAAA8C,EAAAnG,EAAAmG,QACAyJ,EAAA,EACAzJ,EAAAkJ,SAAA,SAAAhO,GACAA,EAAAiO,SACAM,MAIAA,EAAAvM,EAAAtK,IAAA,yBAAA4D,EAAAkT,MACA1J,EAAAkJ,SAAA,SAAAhO,GACAA,EAAAiO,UAEAjO,EAAAyO,eAAA,KAzGAC,CAAArN,EAAAzC,IAAAoD,GAEAzF,EAAA8E,EAAAzC,IAAAR,IAAA4D,GAGA,SAAAyH,GAAAzH,EAAAtC,GACAvJ,EAAAwY,GAAA,SAAAnY,GACAA,EAAAwL,EAAAtC,KA5ZAkC,EAAAZ,OAAA,SAAA1C,GACA/G,KAAAqH,IAAAoC,OAAA1C,GAEA,IAAA0D,EAAAzK,KAAA4I,OAIA,GAFA5I,KAAAqX,YAAArX,KAAAqX,WAAA5N,SAEAgB,EAAA,CAIA,IAAA6M,EAAA7M,EAAA8M,YAAA,SACAxM,EAAAhE,KAAAgE,OACA/K,KAAAmG,IAAA,EACAmR,GAAAtM,EAAAhL,MACAiL,EAAAC,OAAA7N,KAAA2C,MACAA,KAAAmG,IAAA,EACAgF,EAAA9N,KAAA2C,KAAA+K,GACAK,EAAA/N,KAAA2C,KAAA+K,KAiBAV,EAAAmN,YAAA,SAAAjX,EAAAkX,GASA,GARAtZ,EAAAoC,KACAkX,EAAAlX,EACAA,EAAA,IAGAA,KAAA,UACAP,KAAA0X,cAEAC,GAAApX,GAAA,CAIA,IAAAkI,EAAAkP,GAAApX,GAAAP,KAAAoI,KAAAqP,GACArQ,EAAApH,KAAAqH,IACArH,KAAAqX,WAAA5O,EACArB,EAAA+I,IAAA1H,KAOA4B,EAAAqN,YAAA,WACA1X,KAAAqX,YAAArX,KAAAqH,IAAA0O,OAAA/V,KAAAqX,YACArX,KAAAqX,WAAA,MAQAhN,EAAAuN,oBAAA,SAAAlD,GACA,IAAAjD,EAAA5N,EAAAlD,OAAA,GAAgC+T,GAEhC,OADAjD,EAAAlS,KAAAsY,GAAAnD,EAAAnV,MACAkS,GAgBApH,EAAAyN,eAAA,SAAArG,EAAAsG,GACA5Z,EAAA4Z,KACAA,EAAA,CACAhN,SAAAgN,IAIA9D,GAAAxC,EAAAlS,OAKAS,KAAA4I,SAKA5I,KAAAmG,GACAnG,KAAA0J,gBAAAjI,KAAAgQ,IAKAoC,EAAAxW,KAAA2C,KAAAyR,EAAAsG,EAAAhN,QAEAgN,EAAAnQ,MACA5H,KAAAqH,IAAAO,OAAA,IACG,IAAAmQ,EAAAnQ,OAAA7D,EAAAiU,QAAAC,QAMHjY,KAAA2H,oBAGAwD,EAAA9N,KAAA2C,KAAA+X,EAAAhN,QACAK,EAAA/N,KAAA2C,KAAA+X,EAAAhN,WAuHAV,EAAA6N,WAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,YACApY,KAAAwM,WACA6L,iBAAAD,GACAF,WAAAC,GAQAnY,KAAAsJ,WAAAW,YAAA,GAQAI,EAAAT,GAAAtD,EAAA,MACA+D,EAAAF,IAAA7D,EAAA,OACA+D,EAAAD,IAAA9D,EAAA,OAuJA,IAAAgS,GAAA,wGAkIA,SAAApC,GAAAzF,EAAAvC,GACA,IAAAqK,EAAA9H,EAAAtQ,IAAA,KACAqY,EAAA/H,EAAAtQ,IAAA,UAEA+N,EAAAhH,MAAAuP,SAAA,SAAAhO,GACA,UAAAA,EAAAlJ,OACA,MAAAgZ,IAAA9P,EAAA8P,KACA,MAAAC,IAAA/P,EAAA+P,aApIAnO,EAAAb,YAAA,WACA5K,EAAA0Z,GAAA,SAAAG,GACAzY,KAAAqH,IAAAuC,GAAA6O,EAAA,SAAAC,GACA,IAEAP,EAFA1N,EAAAzK,KAAAwM,WACA/D,EAAAiQ,EAAAza,OAGA,iBAAAwa,EACAN,EAAA,QACO,GAAA1P,GAAA,MAAAA,EAAA0I,UAAA,CACP,IAAAwH,EAAAlQ,EAAAkQ,WAAAlO,EAAA4N,iBAAA5P,EAAA2P,aACAD,EAAAQ,KAAAC,cAAAnQ,EAAA0I,UAAA1I,EAAAoQ,WAAA,QAEApQ,KAAAqQ,YACAX,EAAAtU,EAAAlD,OAAA,GAAmC8H,EAAAqQ,YAGnCX,IACAA,EAAApD,MAAA2D,EACAP,EAAA5Y,KAAAkZ,EACAzY,KAAA+J,QAAA0O,EAAAN,KAEKnY,OACFA,MACHpB,EAAAiZ,GAAA,SAAAkB,EAAAC,GACAhZ,KAAAuJ,eAAAK,GAAAoP,EAAA,SAAAjE,GACA/U,KAAA+J,QAAAiP,EAAAjE,IACK/U,OACFA,OAOHqK,EAAA4O,WAAA,WACA,OAAAjZ,KAAA6K,WAOAR,EAAA6O,MAAA,WACAlZ,KAAA+L,UAAA,CACAoN,OAAA,KACG,IAOH9O,EAAAyL,QAAA,WACA,IAAA9V,KAAA6K,UAAA,CAIA7K,KAAA6K,WAAA,EACAhG,EAAAuU,aAAApZ,KAAA6L,SAAAwN,GAAA,IACA,IAAAlR,EAAAnI,KAAAoI,KACAqC,EAAAzK,KAAA4I,OACAhK,EAAAoB,KAAAgI,iBAAA,SAAAiG,GACAA,EAAA6H,QAAArL,EAAAtC,KAEAvJ,EAAAoB,KAAA8H,aAAA,SAAAyH,GACAA,EAAAuG,QAAArL,EAAAtC,KAGAnI,KAAAqH,IAAAyO,iBAEAxG,GAAAtP,KAAAiH,MAGApD,EAAAvC,MAAAsF,EAAA3C,GAuFA,IAAAgQ,GAAA,GAMA4D,GAAA,GAOAxO,GAAA,GAMA+C,GAAA,GAMAgL,GAAA,GAMAhO,GAAA,GAMApC,GAAA,GAKA2Q,GAAA,GACArI,GAAA,GACAP,GAAA,GACAuK,GAAA,IAAA/N,KAAA,EACAgO,GAAA,IAAAhO,KAAA,EACA8N,GAAA,qBACAG,GAAA,GAkGA,SAAAC,GAAAhL,GACAM,GAAAN,IAAA,EAOA,IAAAiL,GAAAD,GAwBA,SAAAE,GAAA9S,GACA,OAAAyI,GAAAzK,EAAA+U,aAAA/S,EAAAwS,KAgBA,SAAAQ,GAAAtZ,EAAAuG,GACAE,GAAAzG,GAAAuG,EAQA,SAAAgT,GAAAC,GACA3N,GAAA3K,KAAAsY,GAQA,SAAAC,GAAAC,EAAAC,GACAC,GAAA9Q,GAAA4Q,EAAAC,EAAA5U,GA6BA,SAAA8U,GAAAlG,EAAA1N,EAAAsO,GACA,oBAAAtO,IACAsO,EAAAtO,EACAA,EAAA,IAGA,IAAAuS,EAAA5a,EAAA+V,KAAA3U,KAAA,CAAA2U,IAAA,CACAa,MAAAvO,IACG,GAEH0N,EAAAa,OAAAb,EAAAa,OAAAgE,GAAArS,cACAF,EAAA0N,EAAAa,MAEApS,EAAA0D,EAAAgU,KAAAtB,IAAA1S,EAAAgU,KAAA7T,IAEAyN,GAAA8E,KACA9E,GAAA8E,GAAA,CACAjE,SACAZ,eAIA2D,GAAArR,GAAAuS,EA4CA,SAAAuB,GAAAL,EAAAM,GACAJ,GAAA/Q,GAAA6Q,EAAAM,EAAA/U,EAAA,UAOA,SAAA2U,GAAAK,EAAAP,EAAAzZ,EAAAia,EAAA5J,IACAhP,EAAAoY,IAAA9b,EAAA8b,MACAzZ,EAAAyZ,EACAA,EAAAQ,GAGA,IAAAC,EAAAxV,EAAAyV,iBAAAna,EAAAqQ,GAIA,OAHA6J,EAAAvR,OAAA8Q,EACAS,EAAAE,MAAApa,EACAga,EAAA/Y,KAAAiZ,GACAA,EAOA,SAAAG,GAAAta,EAAAua,GACAnD,GAAApX,GAAAua,EAmIAR,GAx3DA,IAw3DAvV,GACA+U,GAAAxV,GACA0V,GA53DA,IA43DAzV,GACAsW,GAAA,UAAA5V,GAEAmV,GAAA,CACA7a,KAAA,YACAwV,MAAA,YACA7J,OAAA,aACCrH,EAAAJ,MACD2W,GAAA,CACA7a,KAAA,WACAwV,MAAA,WACA7J,OAAA,YACCrH,EAAAJ,MAEDoW,GAAA,QAAA1U,GACA0U,GAAA,OAAAzU,GAIA/E,EAAA0a,QAr5DA,QAs5DA1a,EAAA2a,aAr5DA,CACApX,QAAA,SAq5DAvD,EAAAoF,WACApF,EAAAiH,KArYA,SAAAT,EAAAC,EAAAC,GACA,IAAAkU,EAAAtB,GAAA9S,GAEA,GAAAoU,EACA,OAAAA,EAGA,IAAA1L,EAAA,IAAA3I,EAAAC,EAAAC,EAAAC,GAKA,OAJAwI,EAAAtI,GAAA,MAAAqS,KACAhK,GAAAC,EAAAtI,IAAAsI,EACA1K,EAAAuU,aAAAvS,EAAAwS,GAAA9J,EAAAtI,IA7DA,SAAAsI,GACA,IAGA2L,EAAA,wBAEA,SAAAC,EAAAC,EAAAC,GACA,QAAA9d,EAAA,EAAmBA,EAAA6d,EAAA3d,OAAmBF,IACtC6d,EAAA7d,GACA2d,GAAAG,EAIAzc,EAAAiZ,GAAA,SAAAkB,EAAAC,GACAzJ,EAAAhG,eAAAK,GAAAoP,EAAA,SAAAjE,GACA,GAAAhG,GAAAQ,EAAArI,QAdA,IAcAqI,EAAA2L,GAAA,CACA,GAAAnG,KAAAhB,cACA,OAGA,IAAAe,EAAAvF,EAAAqI,oBAAA7C,GACAuG,EAAA,GACA1c,EAAA0Q,GAAA,SAAAiM,GACAA,IAAAhM,GAAAgM,EAAArU,QAAAqI,EAAArI,OACAoU,EAAA7Z,KAAA8Z,KAGAJ,EAAAG,EA1BA,GA2BA1c,EAAA0c,EAAA,SAAAC,GA1BA,IA2BAA,EAAAL,IACAK,EAAAzD,eAAAhD,KAGAqG,EAAAG,EA9BA,QA2DAE,CAAAjM,GACAA,GA0XAlP,EAAAob,QAnXA,SAAAhN,GAEA,GAAA5K,EAAAvF,QAAAmQ,GAAA,CACA,IAAA2M,EAAA3M,EACAA,EAAA,KAEA7P,EAAAwc,EAAA,SAAA7L,GACA,MAAAA,EAAArI,QACAuH,EAAAc,EAAArI,SAGAuH,KAAA,KAAA8K,KACA3a,EAAAwc,EAAA,SAAA7L,GACAA,EAAArI,MAAAuH,IAKA,OADAM,GAAAN,IAAA,EACAA,GAkWApO,EAAAoZ,cACApZ,EAAAqZ,cACArZ,EAAAyV,QA9UA,SAAAvG,GACA,kBAAAA,EACAA,EAAAD,GAAAC,GACGA,aAAA3I,IAEH2I,EAAAoK,GAAApK,IAGAA,aAAA3I,IAAA2I,EAAA0J,cACA1J,EAAAuG,WAsUAzV,EAAAsZ,oBACAtZ,EAAAqb,gBArTA,SAAA5d,GACA,OAAAwR,GAAAxR,IAqTAuC,EAAAwZ,iBACAxZ,EAAAyZ,wBACAzZ,EAAA2Z,qBACA3Z,EAAAsb,mBAtRA,SAAAC,GACAxE,GAAA3V,KAAAma,IAsRAvb,EAAA+Z,kBACA/Z,EAAAwb,yBArOA,SAAAtc,EAAAuc,GACA1X,EAAA2X,SAAAxc,EAAAuc,IAqOAzb,EAAA2b,8BA5NA,SAAAzc,GACA,IAAA0c,EAAA7X,EAAAjE,IAAAZ,GAEA,GAAA0c,EACA,OAAAA,EAAAC,kBAAAD,EAAAC,oBAAAD,EAAAE,WAAAxf,SAyNA0D,EAAA+b,eA5MA,SAAAnC,EAAAoC,GACAlC,GAAA/Q,GAAA6Q,EAAAoC,EAAA9W,EAAA,WA4MAlF,EAAAia,kBACAja,EAAAwa,mBACAxa,EAAAic,qBApKA,SAAAvV,GAQA,OAAAvC,EAAA7D,OAAAoG,IA6JA1G,EAAAkc,oBArJA,SAAAxV,GAQA,OAAArC,EAAA/D,OAAAoG,IA8IA1G,EAAAmc,kBAtIA,SAAAzV,GASA,OAAAtC,EAAA9D,OAAAoG,IA8HA1G,EAAAoc,gBAtHA,SAAA1V,GASA,OAAApC,EAAAhE,OAAAoG,IA8GA1G,EAAAqc,iBA1FA,SAAAC,GACA9Y,EAAAvD,UAAA,eAAAqc,IA0FAtc,EAAAuc,YAvEA,SAAAC,EAAAC,EAAAC,GACAD,cAAAE,WACAD,EAAAD,EAAAC,aACAD,aAGA,kBAAAA,IACAA,EAAA,qBAAAG,WAAAjL,MAAAiL,KAAAjL,MAAA8K,GAAA,IAAAta,SAAA,WAAAsa,EAAA,SAGAtD,GAAAqD,GAAA,CACAC,UACAC,iBA4DA1c,EAAA6c,OAnDA,SAAAL,GACA,OAAArD,GAAAqD,IAmDAxc,EAAA8c,SA5BA,GA8BA,IAAAC,GAAmB1Z,EAAQ,MAE3B,WACA,QAAA5F,KAAAsf,GACAA,GAAArf,eAAAD,KACAuC,EAAAvC,GAAAsf,GAAAtf,IAHA,sBCtgEA,IAAA+F,EAAaH,EAAQ,KAErB2Z,EAAe3Z,EAAQ,KAEvBI,EAAgBJ,EAAQ,KAExB4Z,EAAa5Z,EAAQ,KAErB6Z,EAAa7Z,EAAQ,KAErB8Z,EAAW9Z,EAAQ,KAEnB+Z,EAAoB/Z,EAAQ,KAE5Bga,EAAaha,EAAQ,KAErBrD,EAAAyP,MAAA4N,EAEA,IAAAC,EAAYja,EAAQ,KAEpBrD,EAAAsd,QAEA,IAAAC,EAAWla,EAAQ,KAEnBrD,EAAAud,OAEA,IAAAC,EAAana,EAAQ,KAErBrD,EAAAwd,SAEA,IAAAC,EAAapa,EAAQ,KAErBrD,EAAAyd,SAEA,IAAAC,EAAWra,EAAQ,KAEnBrD,EAAA0d,OAEA,IAAAC,EAActa,EAAQ,KAEtBrD,EAAA2d,UAEA,IAAAC,EAAeva,EAAQ,KAEvBrD,EAAA4d,WAEA,IAAAC,EAAWxa,EAAQ,KAEnBrD,EAAA6d,OAEA,IAAAC,EAAWza,EAAQ,KAEnBrD,EAAA8d,OAEA,IAAAC,EAAkB1a,EAAQ,KAE1BrD,EAAA+d,cAEA,IAAAC,EAAU3a,EAAQ,KAElBrD,EAAAge,MAEA,IAAAC,EAAmB5a,EAAQ,KAE3BrD,EAAAie,eAEA,IAAAC,EAAqB7a,EAAQ,KAE7BrD,EAAAke,iBAEA,IAAAC,EAAqB9a,EAAQ,KAE7BrD,EAAAme,iBAEA,IAAAC,EAAmB/a,EAAQ,KAE3BrD,EAAAoe,eAEA,IAAAC,EAA6Bhb,EAAQ,KAErCrD,EAAAqe,yBAoBA,IAAAC,EAAAhQ,KAAAgQ,MACA9P,EAAAF,KAAAG,IACAJ,EAAAC,KAAAC,IACAgQ,EAAA,GAyBA,SAAAC,EAAAC,EAAA/X,EAAAgY,EAAAC,GACA,IAAAC,EAAA5B,EAAA6B,iBAAAJ,EAAA/X,GACA0I,EAAAwP,EAAAE,kBAUA,OARAJ,IACA,WAAAC,IACAD,EAAAK,EAAAL,EAAAtP,IAGA4P,EAAAJ,EAAAF,IAGAE,EAyCA,SAAAG,EAAAL,EAAAtP,GAEA,IAEA/H,EAFA4X,EAAA7P,EAAAhI,MAAAgI,EAAA/H,OACAD,EAAAsX,EAAArX,OAAA4X,EAYA,OARA5X,EADAD,GAAAsX,EAAAtX,MACAsX,EAAArX,QAEAD,EAAAsX,EAAAtX,OACA6X,EAKA,CACAtP,EAHA+O,EAAA/O,EAAA+O,EAAAtX,MAAA,EAGAA,EAAA,EACAwI,EAHA8O,EAAA9O,EAAA8O,EAAArX,OAAA,EAGAA,EAAA,EACAD,QACAC,UAIA,IAAA6X,EAAAlC,EAAAkC,UAOA,SAAAF,EAAAJ,EAAAF,GACA,GAAAE,EAAAO,eAAA,CAIA,IACAC,EADAR,EAAAE,kBACAO,mBAAAX,GACAE,EAAAO,eAAAC,IAqEA,SAAAE,EAAAC,EAAAC,EAAAC,GAGA,IAAAC,EAAApB,EAAA,EAAAiB,GACA,OAAAG,EAAApB,EAAAkB,IAAA,MAAAE,EAAA,GAAAA,GAAAD,EAAA,SAGA,SAAAE,EAAAC,GACA,aAAAA,GAAA,QAAAA,EAGA,SAAAC,EAAAC,GACA,wBAAAA,EAAArc,EAAAsc,KAAAD,GAAA,IAAAA,EAOA,SAAAE,EAAA5X,GACA,GAAAA,EAAA6X,gBAAA,CACA,IAAAC,EAAA9X,EAAAsH,MAAAwQ,OACAC,EAAA/X,EAAAsH,MAAAyQ,KAEAC,EAAAhY,EAAAiY,WACAD,EAAAD,KAAAC,EAAAD,OAAAR,EAAAQ,GAAAN,EAAAM,GAAA,MACAC,EAAAF,OAAAE,EAAAF,SAAAP,EAAAO,GAAAL,EAAAK,GAAA,MACA,IAAAI,EAAA,GAEA,QAAApgB,KAAAkgB,EAEA,MAAAA,EAAAlgB,KACAogB,EAAApgB,GAAAkI,EAAAsH,MAAAxP,IAIAkI,EAAAmY,YAAAD,EACAlY,EAAA6X,iBAAA,GAQA,SAAAO,EAAApY,GACA,IAAAA,EAAAqY,UAAA,CAMA,GAFAT,EAAA5X,GAEAA,EAAAyO,cACAzO,EAAAsY,MAAAtY,EAAAsY,KAAAC,SAAAvY,IAAAiY,gBACG,CACH,IAAA3Q,EAAAtH,EAAAsH,MACAkR,EAAAlR,EAAAkR,kBAIAA,GAkdA,SAAAlR,GACA,IAAAmR,EAAAnR,EAAAmR,eAEAA,IACAnR,EAAAoR,SAAAD,EAAAC,SACApR,EAAAqR,WAAAF,EAAAE,WACArR,EAAAsR,gBAAAH,EAAAG,iBAxdAC,CAAAvR,GAoBAA,EAAAwR,WAAA9Y,EAAAiY,YAEAO,IACAO,EAAAzR,IAAA0R,2BAAAR,GAEA,MAAAlR,EAAAoR,WACApR,EAAAoR,SAAAF,EAAAS,YAIAjZ,EAAA4N,OAAA,GACA5N,EAAAkZ,IAAA,EAGAlZ,EAAAqY,WAAA,GAOA,SAAAc,EAAAnZ,GACA,GAAAA,EAAAqY,UAAA,CAIA,IAAAe,EAAApZ,EAAAmY,YAEAnY,EAAAyO,cACAzO,EAAAsY,MAAAtY,EAAAsY,KAAAe,YAAArZ,IAIAoZ,GAAApZ,EAAAmO,SAAAiL,GACApZ,EAAAkZ,IAAA,GAGAlZ,EAAAqY,WAAA,GAOA,SAAAiB,EAAAtZ,GACA,UAAAA,EAAAlJ,KAAAkJ,EAAAgO,SAAA,SAAAuL,GACA,UAAAA,EAAAziB,MACAshB,EAAAmB,KAEGnB,EAAApY,GAGH,SAAAwZ,EAAAxZ,GACA,UAAAA,EAAAlJ,KAAAkJ,EAAAgO,SAAA,SAAAuL,GACA,UAAAA,EAAAziB,MACAqiB,EAAAI,KAEGJ,EAAAnZ,GAOH,SAAAyZ,EAAAzZ,EAAA0Z,GAGA1Z,EAAAiY,WAAAjY,EAAAgY,YAAA0B,GAAA,GACA1Z,EAAA6X,iBAAA,EAEA7X,EAAAqY,WACAT,EAAA5X,GAQA,SAAA2Z,EAAA1J,GACA1Y,KAAAqiB,sBAAA3J,EAAA4J,YAKAtiB,KAAAuiB,cAAAR,EAAA/hB,MAOA,SAAAwiB,EAAA9J,GACA1Y,KAAAqiB,sBAAA3J,EAAA4J,YAKAtiB,KAAAuiB,cAAAN,EAAAjiB,MAOA,SAAAyiB,IACAziB,KAAAuiB,cAAA,EACAR,EAAA/hB,MAOA,SAAA0iB,IACA1iB,KAAAuiB,cAAA,EACAN,EAAAjiB,MAsGA,SAAA2iB,EAAAC,EAAAC,EAAAC,EAAA/K,EAAAgL,GAIA,OAHAC,EAAAJ,EAAAC,EAAA9K,EAAAgL,GACAD,GAAAjf,EAAAlD,OAAAiiB,EAAAE,GACAF,EAAAK,MAAAL,EAAAK,KAAA5M,OAAAuM,EAAAK,KAAA5M,OAAA,GACAuM,EA8CA,SAAAI,EAAAJ,EAAAC,EAAA9K,EAAAgL,GAIA,IAFAhL,KAAA6G,GAEAsE,WAAA,CACA,IAAAC,EAAAN,EAAAO,WAAA,cAAAL,EAAA,eAGA,YAAAI,MAAA,OACAP,EAAAO,eACAP,EAAAS,WAAAR,EAAAO,WAAA,UACA,IAAAE,EAAAT,EAAAO,WAAA,UACA,MAAAE,OAAA3U,KAAA4U,GAAA,KACAX,EAAAY,aAAAF,EACAV,EAAAa,aAAA5f,EAAA1B,UAAA0gB,EAAAO,WAAA,YAAAL,EAAA,QAGA,IAiBAW,EAjBAjZ,EAAAoY,EAAApY,QACAkZ,EAAAlZ,KAAAuB,OAAA4W,UAeAgB,EAwCA,SAAAf,GAEA,IAAAgB,EAEA,KAAAhB,SAAApY,SAAA,CACA,IAAAqZ,GAAAjB,EAAA7W,QAAA4S,GAAAkF,KAEA,GAAAA,EAGA,QAAAvjB,KAFAsjB,KAAA,GAEAC,EACAA,EAAA/lB,eAAAwC,KACAsjB,EAAAtjB,GAAA,GAKAsiB,IAAAkB,YAGA,OAAAF,EA5DAG,CAAAnB,GAGA,GAAAe,EAGA,QAAArjB,KAFAmjB,EAAA,GAEAE,EACA,GAAAA,EAAA7lB,eAAAwC,GAAA,CAEA,IAAA0jB,EAAApB,EAAArW,SAAA,QAAAjM,IAEA2jB,EAAAR,EAAAnjB,GAAA,GAA+C0jB,EAAAN,EAAA5L,EAAAgL,GAY/C,OAPAH,EAAAkB,KAAAJ,EACAQ,EAAAtB,EAAAC,EAAAc,EAAA5L,EAAAgL,GAAA,GAEAhL,EAAAoM,YAAApM,EAAA6K,YACA7K,EAAA6K,UAAA,IAGAA,EAwCA,SAAAsB,EAAAtB,EAAAC,EAAAc,EAAA5L,EAAAgL,EAAAqB,GAOA,GALAT,GAAAZ,GAAAY,GAAA/E,EACAgE,EAAAzB,SAAAkD,EAAAxB,EAAAO,WAAA,SAAArL,IAAA4L,EAAAxD,MACAyC,EAAAxB,WAAAiD,EAAAxB,EAAAO,WAAA,mBAAArL,IAAA4L,EAAAW,gBACA1B,EAAAvB,gBAAAxd,EAAA1B,UAAA0gB,EAAAO,WAAA,mBAAAO,EAAAY,kBAEAxB,EAAA,CACA,GAAAqB,EAAA,CAEA,IAAAI,EAAA5B,EAAAO,aACAP,EAAA1B,eAAAM,EAAAoB,EAAA4B,EAAAzM,GAGA6K,EAAAnB,2BAAA+C,EACA5B,EAAA3B,kBAAAlJ,EAIA,MAAA6K,EAAAzB,WACAyB,EAAAzB,SAAApJ,EAAA2J,WAOAkB,EAAA6B,UAAA5B,EAAAO,WAAA,cAAAO,EAAAc,UACA7B,EAAA8B,WAAA7B,EAAAO,WAAA,eAAAO,EAAAe,WACA9B,EAAA+B,SAAA9B,EAAAO,WAAA,aAAAO,EAAAgB,SACA/B,EAAAgC,WAAA/B,EAAAO,WAAA,eAAAO,EAAAiB,WACAhC,EAAAiC,UAAAhC,EAAAO,WAAA,SACAR,EAAAkC,kBAAAjC,EAAAO,WAAA,kBAAAP,EAAAO,WAAA,YACAR,EAAAmC,eAAAlC,EAAAO,WAAA,cACAR,EAAAoC,UAAAnC,EAAAO,WAAA,SACAR,EAAAqC,WAAApC,EAAAO,WAAA,UACAR,EAAAsC,QAAArC,EAAAO,WAAA,OAEAgB,GAAArM,EAAAoN,aACAvC,EAAAwC,oBAAAf,EAAAxB,EAAAO,WAAA,mBAAArL,GACA6K,EAAAyC,YAAAxC,EAAAO,WAAA,WACAR,EAAA0B,gBAAAD,EAAAxB,EAAAO,WAAA,eAAArL,GACA6K,EAAA2B,gBAAA1B,EAAAO,WAAA,eACAR,EAAA0C,iBAAAzC,EAAAO,WAAA,gBACAR,EAAA2C,mBAAA1C,EAAAO,WAAA,eACAR,EAAA4C,kBAAA3C,EAAAO,WAAA,cACAR,EAAA6C,qBAAA5C,EAAAO,WAAA,iBACAR,EAAA8C,qBAAA7C,EAAAO,WAAA,kBAGAR,EAAA+C,gBAAA9C,EAAAO,WAAA,oBAAAO,EAAAgC,gBACA/C,EAAAgD,eAAA/C,EAAAO,WAAA,mBAAAO,EAAAiC,eACAhD,EAAAiD,kBAAAhD,EAAAO,WAAA,sBAAAO,EAAAkC,kBACAjD,EAAAkD,kBAAAjD,EAAAO,WAAA,sBAAAO,EAAAmC,kBAGA,SAAAzB,EAAAlE,EAAApI,GACA,eAAAoI,IAAApI,KAAA2J,UAAA3J,EAAA2J,UAAA,KAGA,SAAAF,EAAAoB,EAAAO,EAAApL,GACA,IACAmJ,EADA6E,EAAAhO,EAAAgO,eAkBA,OAfA,MAAAnD,EAAAzB,WAAA,IAAA4E,KAAA,IAAAA,GAAAhO,EAAAmL,YAAAC,GACA,kBAAAA,KAAAtiB,QAAA,gBACAqgB,EAAA,CACAC,SAAA,KACAC,WAAAwB,EAAAxB,WACAC,gBAAAuB,EAAAvB,iBAEAuB,EAAAzB,SAAA,OAEA,MAAAyB,EAAAxB,aACAwB,EAAAxB,WAAArJ,EAAA2J,UACA,MAAAkB,EAAAvB,kBAAAuB,EAAAvB,gBAAA,KAIAH,EAoBA,SAAA8E,EAAAC,EAAAxd,EAAAyd,EAAAC,EAAAhV,EAAArS,GAWA,GAVA,oBAAAqS,IACArS,EAAAqS,EACAA,EAAA,MAMAgV,KAAAC,qBAEA,CACA,IAAAC,EAAAJ,EAAA,YACAK,EAAAH,EAAA/C,WAAA,oBAAAiD,GACAE,EAAAJ,EAAA/C,WAAA,kBAAAiD,GACAG,EAAAL,EAAA/C,WAAA,iBAAAiD,GAEA,oBAAAG,IACAA,IAAArV,EAAAgV,EAAAM,wBAAAN,EAAAM,wBAAAhe,EAAA0I,GAAA,OAGA,oBAAAmV,IACAA,IAAAnV,IAGAmV,EAAA,EAAA7d,EAAAie,UAAAR,EAAAI,EAAAE,GAAA,EAAAD,EAAAznB,QAAA2J,EAAAgF,gBAAAhF,EAAAke,KAAAT,GAAApnB,aAEA2J,EAAAgF,gBACAhF,EAAAke,KAAAT,GACApnB,OA2BA,SAAA8nB,GAAAne,EAAAyd,EAAAC,EAAAhV,EAAArS,GACAknB,GAAA,EAAAvd,EAAAyd,EAAAC,EAAAhV,EAAArS,GAmDA,SAAA0gB,GAAAvhB,EAAA4oB,EAAAC,GASA,OARAD,IAAAhjB,EAAAtC,YAAAslB,KACAA,EAAApJ,EAAAsJ,kBAAAF,IAGAC,IACAD,EAAAvJ,EAAAwJ,OAAA,GAAAD,IAGAtJ,EAAAiC,eAAA,GAAAvhB,EAAA4oB,GAyIAxmB,EAAA2mB,YAh9BA,SAAAjgB,GACA,OAAAyW,EAAA7c,OAAAoG,IAg9BA1G,EAAA4mB,WAz8BA,SAAAnI,EAAA/X,GACA,OAAAsW,EAAA6J,iBAAApI,EAAA/X,IAy8BA1G,EAAAwe,WACAxe,EAAA8mB,UAx6BA,SAAAC,EAAArI,EAAAC,GACA,IAAAC,EAAA,IAAAvB,EAAA,CACA3N,MAAA,CACAG,MAAAkX,EACApX,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAxI,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,QAEA2f,OAAA,SAAAxX,GACA,cAAAmP,EAAA,CACA,IAAAvP,EAAA,CACAhI,MAAAoI,EAAApI,MACAC,OAAAmI,EAAAnI,QAEAuX,EAAArI,SAAAwI,EAAAL,EAAAtP,QAIA,OAAAwP,GAs5BA5e,EAAAkf,YACAlf,EAAAgf,aACAhf,EAAAinB,qBAv1BA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,MACA3H,EAAA0H,EAAAxX,MAAA8P,UAUA,OARAlB,EAAA,EAAA6I,EAAAC,MAAA9I,EAAA,EAAA6I,EAAAE,MACAF,EAAAC,GAAAD,EAAAE,GAAA/H,EAAA6H,EAAAC,GAAA5H,GAAA,IAGAlB,EAAA,EAAA6I,EAAAG,MAAAhJ,EAAA,EAAA6I,EAAAI,MACAJ,EAAAG,GAAAH,EAAAI,GAAAjI,EAAA6H,EAAAG,GAAA9H,GAAA,IAGA0H,GA40BAlnB,EAAAwnB,qBA3zBA,SAAAN,GACA,IAAAC,EAAAD,EAAAC,MACA3H,EAAA0H,EAAAxX,MAAA8P,UACAiI,EAAAN,EAAAxX,EACA+X,EAAAP,EAAAvX,EACA+X,EAAAR,EAAA/f,MACAwgB,EAAAT,EAAA9f,OAKA,OAJA8f,EAAAxX,EAAA2P,EAAA6H,EAAAxX,EAAA6P,GAAA,GACA2H,EAAAvX,EAAA0P,EAAA6H,EAAAvX,EAAA4P,GAAA,GACA2H,EAAA/f,MAAAkH,KAAAG,IAAA6Q,EAAAmI,EAAAE,EAAAnI,GAAA,GAAA2H,EAAAxX,EAAA,IAAAgY,EAAA,KACAR,EAAA9f,OAAAiH,KAAAG,IAAA6Q,EAAAoI,EAAAE,EAAApI,GAAA,GAAA2H,EAAAvX,EAAA,IAAAgY,EAAA,KACAV,GAizBAlnB,EAAAsf,mBACAtf,EAAA6nB,cA7kBA,SAAAzf,EAAAgY,EAAA1I,GACAtP,EAAA4Z,qBAAAtK,KAAAoQ,mBACA,UAAA1f,EAAAlJ,KAAAkJ,EAAAgO,SAAA,SAAAuL,GACA,UAAAA,EAAAziB,MACA2iB,EAAAF,EAAAvB,KAEGyB,EAAAzZ,EAAAgY,GAEHhY,EAAAmB,GAAA,YAAAwY,GAAAxY,GAAA,WAAA4Y,GAEA/Z,EAAAmB,GAAA,WAAA6Y,GAAA7Y,GAAA,SAAA8Y,IAokBAriB,EAAA+nB,cAhjBA,SAAAzH,EAAA0H,EAAAC,EAAAC,EAAAxQ,EAAAyQ,EAAAC,GAEA,IAUAC,EAVAC,GADA5Q,KAAA6G,GACA+J,aACAC,EAAA7Q,EAAA6Q,eACAC,EAAA9Q,EAAA8Q,cAGAC,EAAAR,EAAAlF,WAAA,QACA2F,EAAAR,EAAAnF,WAAA,SAMA0F,GAAAC,KACAJ,IACAD,EAAAC,EAAAK,kBAAAJ,EAAA,cAAAC,IAGA,MAAAH,IACAA,EAAA7kB,EAAAhC,WAAAkW,EAAAkR,aAAAlR,EAAAkR,YAAAL,EAAA7Q,KAAAkR,cAIA,IAAAC,EAAAJ,EAAAJ,EAAA,KACAS,EAAAJ,EAAAllB,EAAA1B,UAAAwmB,IAAAK,kBAAAJ,EAAA,gBAAAC,GAAA,KAAAH,GAAA,KAEA,MAAAQ,GAAA,MAAAC,IAOAxG,EAAAhC,EAAA2H,EAAAE,EAAAzQ,GACA4K,EAAA0F,EAAAE,EAAAE,EAAA1Q,GAAA,IAGA4I,EAAAyI,KAAAF,EACAb,EAAAe,KAAAD,GA0gBA9oB,EAAAsiB,eACAtiB,EAAAgpB,QA/eA,SAAAzG,EAAA0G,EAAAC,GACA,IAGAxG,EAHAhL,EAAA,CACAmL,YAAA,IAIA,IAAAqG,EACAxG,GAAA,EAGAhL,EAAA2J,UAAA6H,EAGAvG,EAAAJ,EAAA0G,EAAAvR,EAAAgL,GACAH,EAAAK,MAAAL,EAAAK,KAAA5M,OAAAuM,EAAAK,KAAA5M,OAAA,IAkeAhW,EAAAmpB,QAlRA,SAAAzR,EAAAtN,GAEA,IAAAgf,EAAAhf,KAAA+B,SAAA,aACA,OAAA3I,EAAAd,KAAA,CACAgV,EAAA0M,WAAAgF,KAAArG,WAAA,iBAAArL,EAAA2M,YAAA+E,KAAArG,WAAA,mBAAArL,EAAA4M,UAAA8E,KAAArG,WAAA,sBAAArL,EAAA6M,YAAA6E,KAAArG,WAAA,6BAAAsG,KAAA,OA+QArpB,EAAAumB,eACAvmB,EAAAspB,UAlMA,SAAAlhB,EAAAyd,EAAAC,EAAAhV,EAAArS,GACAknB,GAAA,EAAAvd,EAAAyd,EAAAC,EAAAhV,EAAArS,IAkMAuB,EAAAupB,aAvLA,SAAA3rB,EAAA4rB,GAGA,IAFA,IAAAC,EAAAxM,EAAAyM,SAAA,IAEA9rB,OAAA4rB,GACAvM,EAAA0M,IAAAF,EAAA7rB,EAAA8oB,oBAAA+C,GACA7rB,IAAA+K,OAGA,OAAA8gB,GAgLAzpB,EAAAmf,kBACAnf,EAAA4pB,mBAjJA,SAAAC,EAAArD,EAAAC,GAEA,IAAAqD,EAAA,IAAAtD,EAAA,QAAAA,EAAA,QAAAA,EAAA,KAAAlY,KAAAyb,IAAA,EAAAvD,EAAA,GAAAA,EAAA,IACAwD,EAAA,IAAAxD,EAAA,QAAAA,EAAA,QAAAA,EAAA,KAAAlY,KAAAyb,IAAA,EAAAvD,EAAA,GAAAA,EAAA,IACAyD,EAAA,UAAAJ,GAAAC,EAAA,UAAAD,EAAAC,EAAA,UAAAD,GAAAG,EAAA,WAAAH,EAAAG,EAAA,GAEA,OADAC,EAAA9K,GAAA8K,EAAAzD,EAAAC,GACAnY,KAAAyb,IAAAE,EAAA,IAAA3b,KAAAyb,IAAAE,EAAA,IAAAA,EAAA,oBAAAA,EAAA,qBA4IAjqB,EAAAkqB,gBApIA,SAAAC,EAAAC,EAAAtE,EAAArnB,GACA,GAAA0rB,GAAAC,EAAA,CA2BA,IAAAC,EAvBA,SAAAC,GACA,IAAAC,EAAA,GAMA,OALAD,EAAAlU,SAAA,SAAAhO,IACAA,EAAAiO,SAAAjO,EAAAoiB,OACAD,EAAAniB,EAAAoiB,MAAApiB,KAGAmiB,EAgBAE,CAAAN,GACAC,EAAAhU,SAAA,SAAAhO,GACA,IAAAA,EAAAiO,SAAAjO,EAAAoiB,KAAA,CACA,IAAAE,EAAAL,EAAAjiB,EAAAoiB,MAEA,GAAAE,EAAA,CACA,IAAAC,EAAAC,EAAAxiB,GACAA,EAAAke,KAAAsE,EAAAF,IACAnE,GAAAne,EAAAuiB,EAAA7E,EAAA1d,EAAA0I,eArBA,SAAA8Z,EAAAxiB,GACA,IAAA5J,EAAA,CACA+gB,SAAArC,EAAAtgB,MAAAwL,EAAAmX,UACAsL,SAAAziB,EAAAyiB,UAOA,OAJAziB,EAAA+e,QACA3oB,EAAA2oB,MAAA3jB,EAAAlD,OAAA,GAAkC8H,EAAA+e,QAGlC3oB,IA4GAwB,EAAA8qB,iBAhFA,SAAAC,EAAArM,GACA,OAAAlb,EAAAhH,IAAAuuB,EAAA,SAAAC,GACA,IAAArb,EAAAqb,EAAA,GACArb,EAAAnB,EAAAmB,EAAA+O,EAAA/O,GACAA,EAAAtB,EAAAsB,EAAA+O,EAAA/O,EAAA+O,EAAAtX,OACA,IAAAwI,EAAAob,EAAA,GAGA,OAFApb,EAAApB,EAAAoB,EAAA8O,EAAA9O,GAEA,CAAAD,EADAC,EAAAvB,EAAAuB,EAAA8O,EAAA9O,EAAA8O,EAAArX,YA0EArH,EAAAirB,eA/DA,SAAAC,EAAAxM,GACA,IAAA/O,EAAAnB,EAAA0c,EAAAvb,EAAA+O,EAAA/O,GACA0X,EAAAhZ,EAAA6c,EAAAvb,EAAAub,EAAA9jB,MAAAsX,EAAA/O,EAAA+O,EAAAtX,OACAwI,EAAApB,EAAA0c,EAAAtb,EAAA8O,EAAA9O,GACA2X,EAAAlZ,EAAA6c,EAAAtb,EAAAsb,EAAA7jB,OAAAqX,EAAA9O,EAAA8O,EAAArX,QAEA,GAAAggB,GAAA1X,GAAA4X,GAAA3X,EACA,OACAD,IACAC,IACAxI,MAAAigB,EAAA1X,EACAtI,OAAAkgB,EAAA3X,IAqDA5P,EAAAmrB,WAzCA,SAAAC,EAAA1T,EAAAgH,GAIA,IAAAhP,GAHAgI,EAAAlU,EAAAlD,OAAA,CACA+qB,WAAA,GACG3T,IACHhI,MAAA,CACA4b,eAAA,GASA,GAPA5M,KAAA,CACA/O,GAAA,EACAC,GAAA,EACAxI,MAAA,EACAC,OAAA,GAGA+jB,EACA,WAAAA,EAAA5qB,QAAA,aAAAkP,EAAAG,MAAAub,EAAA9uB,MAAA,GAAAkH,EAAArF,SAAAuR,EAAAgP,GAAA,IAAArB,EAAA3F,IAAA8G,EAAA4M,EAAAxoB,QAAA,cAAA8U,EAAAgH,EAAA,8BCxjCA,IAAAlb,EAAaH,EAAQ,KAqBrBkoB,EAAA,KA8QA,IAAAC,EAAA,oIAyEA,SAAAC,EAAAppB,GACA,OAAAiM,KAAAod,MAAApd,KAAApC,IAAA7J,GAAAiM,KAAAqd,MA6HA3rB,EAAA4rB,UArcA,SAAAvpB,EAAAwpB,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAA,GAAAA,EAAA,GACAI,EAAAH,EAAA,GAAAA,EAAA,GAEA,OAAAE,EACA,WAAAC,EAAAH,EAAA,IAAAA,EAAA,GAAAA,EAAA,MAQA,GAAAC,EACA,GAAAC,EAAA,GACA,GAAA3pB,GAAAwpB,EAAA,GACA,OAAAC,EAAA,GACO,GAAAzpB,GAAAwpB,EAAA,GACP,OAAAC,EAAA,OAEK,CACL,GAAAzpB,GAAAwpB,EAAA,GACA,OAAAC,EAAA,GACO,GAAAzpB,GAAAwpB,EAAA,GACP,OAAAC,EAAA,OAGG,CACH,GAAAzpB,IAAAwpB,EAAA,GACA,OAAAC,EAAA,GAGA,GAAAzpB,IAAAwpB,EAAA,GACA,OAAAC,EAAA,GAIA,OAAAzpB,EAAAwpB,EAAA,IAAAG,EAAAC,EAAAH,EAAA,IAiaA9rB,EAAAksB,aArZA,SAAAC,EAAAC,GACA,OAAAD,GACA,aACA,aACAA,EAAA,MACA,MAEA,WACA,UACAA,EAAA,KACA,MAEA,YACA,aACAA,EAAA,OAIA,wBAAAA,GAjFAxpB,EAkFAwpB,EAjFAxpB,EAAAC,QAAA,WAAAA,QAAA,YAiFAypB,MAAA,MACAC,WAAAH,GAAA,IAAAC,EAGAE,WAAAH,GAGA,MAAAA,EAAAI,KAAAJ,EAzFA,IAAAxpB,GAqdA3C,EAAAse,MA/WA,SAAA3O,EAAA6c,EAAAC,GAQA,OAPA,MAAAD,IACAA,EAAA,IAIAA,EAAAle,KAAAC,IAAAD,KAAAG,IAAA,EAAA+d,GAAA,IACA7c,OAAA+c,QAAAF,GACAC,EAAA9c,MAwWA3P,EAAA2sB,IArWA,SAAAC,GAIA,OAHAA,EAAAC,KAAA,SAAA7pB,EAAAC,GACA,OAAAD,EAAAC,IAEA2pB,GAkWA5sB,EAAA8sB,aA1VA,SAAAzqB,GAGA,GAFAA,KAEA0qB,MAAA1qB,GACA,SAUA,IAHA,IAAAgW,EAAA,EACA2U,EAAA,EAEA1e,KAAAgQ,MAAAjc,EAAAgW,OAAAhW,GACAgW,GAAA,GACA2U,IAGA,OAAAA,GAwUAhtB,EAAAitB,iBAhUA,SAAA5qB,GACA,IAAAM,EAAAN,EAAAvG,WAEAoxB,EAAAvqB,EAAAnC,QAAA,KAEA,GAAA0sB,EAAA,GACA,IAAAV,GAAA7pB,EAAArG,MAAA4wB,EAAA,GACA,OAAAV,EAAA,GAAAA,EAAA,EAEA,IAAAW,EAAAxqB,EAAAnC,QAAA,KACA,OAAA2sB,EAAA,IAAAxqB,EAAAvF,OAAA,EAAA+vB,GAuTAntB,EAAAotB,kBA3SA,SAAAC,EAAAC,GACA,IAAAphB,EAAAoC,KAAApC,IACAyf,EAAArd,KAAAqd,KACA4B,EAAAjf,KAAAod,MAAAxf,EAAAmhB,EAAA,GAAAA,EAAA,IAAA1B,GACA6B,EAAAlf,KAAAgQ,MAAApS,EAAAoC,KAAAyb,IAAAuD,EAAA,GAAAA,EAAA,KAAA3B,GAEAa,EAAAle,KAAAC,IAAAD,KAAAG,KAAA8e,EAAAC,EAAA,OACA,OAAAC,SAAAjB,KAAA,IAqSAxsB,EAAA0tB,wBAtRA,SAAAC,EAAAC,EAAApB,GACA,IAAAmB,EAAAC,GACA,SAGA,IAAAC,EAAArqB,EAAA9G,OAAAixB,EAAA,SAAAG,EAAAzrB,GACA,OAAAyrB,GAAAf,MAAA1qB,GAAA,EAAAA,IACG,GAEH,OAAAwrB,EACA,SAmBA,IAhBA,IAAAE,EAAAzf,KAAA0f,IAAA,GAAAxB,GACAyB,EAAAzqB,EAAAhH,IAAAmxB,EAAA,SAAAtrB,GACA,OAAA0qB,MAAA1qB,GAAA,EAAAA,GAAAwrB,EAAAE,EAAA,MAEAG,EAAA,IAAAH,EACAI,EAAA3qB,EAAAhH,IAAAyxB,EAAA,SAAAG,GAEA,OAAA9f,KAAAod,MAAA0C,KAEAC,EAAA7qB,EAAA9G,OAAAyxB,EAAA,SAAAL,EAAAzrB,GACA,OAAAyrB,EAAAzrB,GACG,GACHisB,EAAA9qB,EAAAhH,IAAAyxB,EAAA,SAAAG,EAAAR,GACA,OAAAQ,EAAAD,EAAAP,KAGAS,EAAAH,GAAA,CAKA,IAHA,IAAAzf,EAAA8f,OAAAC,kBACAC,EAAA,KAEAvxB,EAAA,EAAAC,EAAAmxB,EAAAlxB,OAA2CF,EAAAC,IAASD,EACpDoxB,EAAApxB,GAAAuR,IACAA,EAAA6f,EAAApxB,GACAuxB,EAAAvxB,KAKAixB,EAAAM,GACAH,EAAAG,GAAA,IACAJ,EAGA,OAAAF,EAAAP,GAAAG,GAwOA/tB,EAAA0uB,iBApOA,iBAqOA1uB,EAAA2uB,UA9NA,SAAAC,GACA,IAAAC,EAAA,EAAAvgB,KAAA4U,GACA,OAAA0L,EAAAC,QA6NA7uB,EAAA8uB,mBArNA,SAAAzsB,GACA,OAAAA,GAAAkpB,GAAAlpB,EAAAkpB,GAqNAvrB,EAAA+uB,UAhMA,SAAA9vB,GACA,GAAAA,aAAAiM,KACA,OAAAjM,EACG,qBAAAA,EAAA,CAMH,IAAAotB,EAAAb,EAAAwD,KAAA/vB,GAEA,IAAAotB,EAEA,WAAAnhB,KAAAqhB,KAIA,GAAAF,EAAA,GAWA,CACA,IAAA4C,GAAA5C,EAAA,MAMA,MAJA,MAAAA,EAAA,GAAA6C,gBACAD,GAAA5C,EAAA,GAAA/vB,MAAA,MAGA,IAAA4O,UAAAikB,KAAA9C,EAAA,KAAAA,EAAA,UAAAA,EAAA,MAAA4C,IAAA5C,EAAA,QAAAA,EAAA,OAAAA,EAAA,QAfA,WAAAnhB,MAAAmhB,EAAA,KAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAiBG,aAAAptB,EACH,IAAAiM,KAAAqhB,KAGA,IAAArhB,KAAAoD,KAAAgQ,MAAArf,KAwJAe,EAAAovB,SA9IA,SAAA/sB,GACA,OAAAiM,KAAA0f,IAAA,GAAAvC,EAAAppB,KA8IArC,EAAAqvB,KA3HA,SAAAhtB,EAAAic,GACA,IAAAgR,EAAA7D,EAAAppB,GACAktB,EAAAjhB,KAAA0f,IAAA,GAAAsB,GACAE,EAAAntB,EAAAktB,EAiCA,OAHAltB,GA1BAic,EACAkR,EAAA,IACA,EACKA,EAAA,IACL,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EAEA,GAGAA,EAAA,EACA,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EAEA,IAIAD,EAGAD,IAAA,IAAAjtB,EAAAqqB,QAAA4C,EAAA,GAAAA,EAAA,GAAAjtB,GAwFArC,EAAAyvB,gBA9DA,SAAAxiB,GACAA,EAAA4f,KAAA,SAAA7pB,EAAAC,GACA,OA4BA,SAAAysB,EAAA1sB,EAAAC,EAAA0sB,GACA,OAAA3sB,EAAA4sB,SAAAD,GAAA1sB,EAAA2sB,SAAAD,IAAA3sB,EAAA4sB,SAAAD,KAAA1sB,EAAA2sB,SAAAD,KAAA3sB,EAAA6sB,MAAAF,GAAA1sB,EAAA4sB,MAAAF,SAAA,OAAAA,GAAAD,EAAA1sB,EAAAC,EAAA,IA7BAysB,CAAA1sB,EAAAC,EAAA,UAKA,IAHA,IAAA6sB,GAAA,IACAC,EAAA,EAEA7yB,EAAA,EAAiBA,EAAA+P,EAAA7P,QAAiB,CAIlC,IAHA,IAAAwyB,EAAA3iB,EAAA/P,GAAA0yB,SACAC,EAAA5iB,EAAA/P,GAAA2yB,MAEAF,EAAA,EAAoBA,EAAA,EAAQA,IAC5BC,EAAAD,IAAAG,IACAF,EAAAD,GAAAG,EACAD,EAAAF,KAAA,IAAAI,GAGAD,EAAAF,EAAAD,GACAI,EAAAF,EAAAF,GAGAC,EAAA,KAAAA,EAAA,IAAAC,EAAA,GAAAA,EAAA,OACA5iB,EAAA0I,OAAAzY,EAAA,GAEAA,IAIA,OAAA+P,GAmCAjN,EAAAgwB,UAnBA,SAAAC,GACA,OAAAA,EAAA3D,WAAA2D,IAAA,qBCveA,IAAAzsB,EAAaH,EAAQ,KAqBrB9E,EAAAiF,EAAAjF,KACAT,EAAA0F,EAAA1F,SACAG,EAAAuF,EAAAvF,QAOAiyB,EAAA,WAOA,SAAA9c,EAAAnU,GACA,OAAAA,aAAAjD,MAAAiD,EAAA,MAAAA,EAAA,IAAAA,GA0OA,SAAAkxB,EAAAC,GACA,OAAAtyB,EAAAsyB,MAAAxpB,IAAA,KAAAwpB,EAAAxpB,GAAA,IAAApG,QAAA,YA4GA,IAAA6vB,EAAA,EAkFA,SAAAC,EAAA9xB,EAAAuC,GACA,OAAAvC,KAAAd,eAAAqD,GAWAf,EAAAoT,mBACApT,EAAAuwB,gBAnaA,SAAA7Y,EAAAja,EAAA+yB,GAEA,GAAA9Y,EAAA,CACAA,EAAAja,GAAAia,EAAAja,IAAA,GACAia,EAAA+Y,SAAA/Y,EAAA+Y,UAAA,GACA/Y,EAAA+Y,SAAAhzB,GAAAia,EAAA+Y,SAAAhzB,IAAA,GAEA,QAAAP,EAAA,EAAAC,EAAAqzB,EAAApzB,OAAyCF,EAAAC,EAASD,IAAA,CAClD,IAAAwzB,EAAAF,EAAAtzB,IAEAwa,EAAA+Y,SAAAhzB,GAAAC,eAAAgzB,IAAAhZ,EAAAja,GAAAC,eAAAgzB,KACAhZ,EAAA+Y,SAAAhzB,GAAAizB,GAAAhZ,EAAAja,GAAAizB,OAyZA1wB,EAAA2wB,mBAnZA,0XAoZA3wB,EAAA4wB,iBArYA,SAAAC,GACA,OAAA/yB,EAAA+yB,IAAA5yB,EAAA4yB,iBAAA3lB,KAAA2lB,IAAA5xB,OAqYAe,EAAA8wB,iBA5XA,SAAAD,GACA,OAAA/yB,EAAA+yB,mBAAA70B,QA4XAgE,EAAA+wB,gBA9WA,SAAAC,EAAAC,GAOAA,MAAA,IAAA30B,QACA,IAAAQ,EAAA0G,EAAAhH,IAAAw0B,GAAA,YAAAxyB,EAAAkK,GACA,OACAwoB,MAAA1yB,KA+DA,OA3DAD,EAAA0yB,EAAA,SAAAb,EAAA1nB,GACA,GAAA5K,EAAAsyB,GAAA,CAKA,QAAAlzB,EAAA,EAAmBA,EAAAJ,EAAAM,OAAmBF,IACtC,IAAAJ,EAAAI,GAAAyO,QACA,MAAAykB,EAAAxpB,IAAA9J,EAAAI,GAAAg0B,MAAAtqB,KAAAwpB,EAAAxpB,GAAA,GAGA,OAFA9J,EAAAI,GAAAyO,OAAAykB,OACAa,EAAAvoB,GAAA,MAKA,IAAAxL,EAAA,EAAmBA,EAAAJ,EAAAM,OAAmBF,IAAA,CACtC,IAAAg0B,EAAAp0B,EAAAI,GAAAg0B,MAEA,IAAAp0B,EAAAI,GAAAyO,SAEA,MAAAulB,EAAAtqB,IAAA,MAAAwpB,EAAAxpB,KAAA,MAAAwpB,EAAAlwB,OAAAiwB,EAAAC,KAAAD,EAAAe,MAAAhxB,OAAAkwB,EAAAlwB,KAAA,GAGA,OAFApD,EAAAI,GAAAyO,OAAAykB,OACAa,EAAAvoB,GAAA,UAMAnK,EAAA0yB,EAAA,SAAAb,EAAA1nB,GACA,GAAA5K,EAAAsyB,GAAA,CAMA,IAFA,IAAAlzB,EAAA,EAEUA,EAAAJ,EAAAM,OAAmBF,IAAA,CAC7B,IAAAg0B,EAAAp0B,EAAAI,GAAAg0B,MAEA,IAAAp0B,EAAAI,GAAAyO,SAIAwkB,EAAAe,IAKA,MAAAd,EAAAxpB,GAAA,CACA9J,EAAAI,GAAAyO,OAAAykB,EACA,OAIAlzB,GAAAJ,EAAAM,QACAN,EAAAsE,KAAA,CACAuK,OAAAykB,OAIAtzB,GAsSAkD,EAAAmxB,cAzRA,SAAAC,GAUA,IAAAC,EAAA7tB,EAAAV,gBACAvE,EAAA6yB,EAAA,SAAA7hB,EAAA7G,GACA,IAAA4oB,EAAA/hB,EAAA2hB,MACAI,GAAAD,EAAAxxB,IAAAyxB,EAAA1qB,GAAA2I,KAEAhR,EAAA6yB,EAAA,SAAA7hB,EAAA7G,GACA,IAAAgP,EAAAnI,EAAA5D,OACAnI,EAAAlB,QAAAoV,GAAA,MAAAA,EAAA9Q,KAAAyqB,EAAAvxB,IAAA4X,EAAA9Q,KAAAyqB,EAAAvxB,IAAA4X,EAAA9Q,MAAA2I,EAAA,mBAAAmI,KAAA9Q,KACA8Q,GAAA,MAAAA,EAAA9Q,IAAAyqB,EAAAxxB,IAAA6X,EAAA9Q,GAAA2I,IACAA,EAAAgiB,UAAAhiB,EAAAgiB,QAAA,MAGAhzB,EAAA6yB,EAAA,SAAA7hB,EAAA7G,GACA,IAAA4oB,EAAA/hB,EAAA2hB,MACAxZ,EAAAnI,EAAA5D,OACA4lB,EAAAhiB,EAAAgiB,QAEA,GAAAzzB,EAAA4Z,GAAA,CAYA,GAJA6Z,EAAArxB,KAAA,MAAAwX,EAAAxX,KAAAwX,EAAAxX,KAAA,GAAAoxB,IAAApxB,KAEAgwB,EAAAxnB,EAEA4oB,EACAC,EAAA3qB,GAAA0qB,EAAA1qB,QACK,SAAA8Q,EAAA9Q,GACL2qB,EAAA3qB,GAAA8Q,EAAA9Q,GAAA,OACK,CAML,IAAA4qB,EAAA,EAEA,GACAD,EAAA3qB,GAAA,KAAA2qB,EAAArxB,KAAA,KAAAsxB,UACOH,EAAAvxB,IAAAyxB,EAAA3qB,KAGPyqB,EAAAxxB,IAAA0xB,EAAA3qB,GAAA2I,OAkOAvP,EAAAyxB,gBA9NA,SAAAxgB,GACA,IAAA/Q,EAAA+Q,EAAA/Q,KAEA,SAAAA,MAAAM,QAAA0vB,KA4NAlwB,EAAAmwB,YACAnwB,EAAA0xB,gBAvMA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,GAGA,OAFAC,EAAAJ,GAAA,GAAAE,GACAE,EAAAH,GAAA,GAAAE,EAAAD,GACA,CAAAG,EAAAH,GAAAG,EAAAF,IAEA,SAAAC,EAAAE,EAAAz1B,EAAA01B,GACA,QAAAh1B,EAAA,EAAAC,EAAA80B,EAAA70B,OAA6CF,EAAAC,EAASD,IAKtD,IAJA,IAAAi1B,EAAAF,EAAA/0B,GAAAi1B,SACAC,EAAAhf,EAAA6e,EAAA/0B,GAAA4T,WACAuhB,EAAAH,KAAAC,GAEAG,EAAA,EAAAC,EAAAH,EAAAh1B,OAAgDk1B,EAAAC,EAAUD,IAAA,CAC1D,IAAAxhB,EAAAshB,EAAAE,GAEAD,KAAAvhB,GACAuhB,EAAAvhB,GAAA,MAEAtU,EAAA21B,KAAA31B,EAAA21B,GAAA,KAA+CrhB,GAAA,GAM/C,SAAAkhB,EAAAx1B,EAAAg2B,GACA,IAAA11B,EAAA,GAEA,QAAAI,KAAAV,EACA,GAAAA,EAAAkB,eAAAR,IAAA,MAAAV,EAAAU,GACA,GAAAs1B,EACA11B,EAAAsE,MAAAlE,OACS,CACT,IAAAk1B,EAAAJ,EAAAx1B,EAAAU,IAAA,GACAk1B,EAAAh1B,QAAAN,EAAAsE,KAAA,CACA+wB,SAAAj1B,EACA4T,UAAAshB,IAMA,OAAAt1B,IA8JAkD,EAAAyyB,eAnJA,SAAAtxB,EAAAiQ,GACA,aAAAA,EAAAR,gBACAQ,EAAAR,gBACG,MAAAQ,EAAAN,UACHtN,EAAAvF,QAAAmT,EAAAN,WAAAtN,EAAAhH,IAAA4U,EAAAN,UAAA,SAAA7R,GACA,OAAAkC,EAAA0P,gBAAA5R,KACKkC,EAAA0P,gBAAAO,EAAAN,WACF,MAAAM,EAAAlR,KACHsD,EAAAvF,QAAAmT,EAAAlR,MAAAsD,EAAAhH,IAAA4U,EAAAlR,KAAA,SAAAjB,GACA,OAAAkC,EAAAuxB,YAAAzzB,KACKkC,EAAAuxB,YAAAthB,EAAAlR,WAHF,GA6IHF,EAAA2yB,UAjHA,WAEA,IAAAl1B,EAAA,gBAAA4yB,IAAA,IAAA/hB,KAAAskB,SAAAlG,QAAA,GACA,gBAAAmG,GACA,OAAAA,EAAAp1B,KAAAo1B,EAAAp1B,GAAA,MA8GAuC,EAAAsK,YArEA,SAAAF,EAAAD,EAAAuN,GACA,GAAAlU,EAAA/B,SAAA0I,GAAA,CACA,IAAA3L,EAAA,GACAA,EAAA2L,EAAA,WACAA,EAAA3L,EAGA,IAAAiS,EAAAiH,KAAAjH,iBAEAA,GAAA6f,EAAAnmB,EAAAsG,EAAA,UAAA6f,EAAAnmB,EAAAsG,EAAA,OAAA6f,EAAAnmB,EAAAsG,EAAA,UACAtG,EAAAsG,EAAA,YAGA,IAAA3T,EAAA,GA6BA,OA5BAyB,EAAA4L,EAAA,SAAAlL,EAAAxB,GAGA,GAFAwB,EAAAkL,EAAA1M,GAEA,cAAAA,GAAA,oBAAAA,EAAA,CAKA,IAAAq1B,EAAAr1B,EAAA4uB,MAAA,8BACA5jB,EAAAqqB,EAAA,GACAC,GAAAD,EAAA,QAAAzsB,cAEA,MAAAoC,IAAAsqB,GAAA,MAAA9zB,GAAA,UAAA8zB,GAAA,SAAA9zB,GAAAyY,KAAAsb,kBAAAxvB,EAAAhD,QAAAkX,EAAAsb,iBAAAvqB,GAAA,IAIA,IAAAwqB,EAAA,CACAxqB,YAGA,UAAAsqB,GAAA,QAAA9zB,IACAg0B,EAAAF,GAAA9zB,GAGA,IAAAkR,EAAA/F,EAAA8oB,gBAAAD,GACAn2B,EAAA2L,EAAA,UAAA0H,EACArT,EAAA2L,EAAA,SAAA0H,EAAA,SAtBArT,EAAAW,GAAAwB,IAwBAnC,GA4BAkD,EAAA+Y,aArBA,SAAAvS,EAAA/I,EAAAwB,GACAuH,EAAAuS,aAAAvS,EAAAuS,aAAAtb,EAAAwB,GAAAuH,EAAA/I,GAAAwB,GAqBAe,EAAAuZ,aAlBA,SAAA/S,EAAA/I,GACA,OAAA+I,EAAA+S,aAAA/S,EAAA+S,aAAA9b,GAAA+I,EAAA/I,sBCxdA,SAAA01B,GAuBA,IAAAC,EAEA,qBAAA1mB,OACA0mB,EAAA1mB,OAAApJ,QAEA,qBAAA6vB,IACAC,EAAAD,EAAA7vB,SAGA,qBAAA8vB,IACAA,GAAA,GAGA,IAAA9vB,EAAA8vB,EACApzB,EAAAsD,8DCnCA1H,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAEAe,EAAA,aAAAszB,EAEA,IAEAC,EAAAC,EAFenwB,EAAQ,MAMvBowB,EAAAD,EAFYnwB,EAAQ,OAIpB,SAAAmwB,EAAAh1B,GACA,OAAAA,KAAAk1B,WAAAl1B,EAAA,CACAm1B,QAAAn1B,GAmCA,IAAAo1B,EAAA,SAAAC,GAGA,SAAAD,EAAA/N,IAlCA,SAAAiO,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCAiCAC,CAAAt0B,KAAAi0B,GAEA,IAAAM,EA/BA,SAAAzmB,EAAAzQ,GACA,IAAAyQ,EACA,UAAA0mB,eAAA,6DAGA,OAAAn3B,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyQ,EAAAzQ,EA0BAo3B,CAAAz0B,MAAAi0B,EAAAS,WAAAz4B,OAAA04B,eAAAV,IAAA52B,KAAA2C,KAAAkmB,IAGA,OADAqO,EAAAK,WAAAhB,EAAA,QACAW,EAGA,OA7BA,SAAAM,EAAAxzB,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAgzB,UAAA,kEAAAhzB,GAGAwzB,EAAA34B,UAAAD,OAAA0V,OAAAtQ,KAAAnF,UAAA,CACAyB,YAAA,CACA2B,MAAAu1B,EACAC,YAAA,EACAC,UAAA,EACAC,cAAA,KAGA3zB,IAAApF,OAAAg5B,eAAAh5B,OAAAg5B,eAAAJ,EAAAxzB,GAAAwzB,EAAAH,UAAArzB,GAKA6zB,CAAAjB,EAYCH,EAAA,YADDG,EAZA,GAeA5zB,EAAA,QAAA4zB,mBCnEA,IAAAkB,EAAAC,EAAAC,EAqBID,EAAO,CAAC/0B,EAAWqD,EAAA,WAAmBiwB,KAAA0B,EAAA,oBAATF,EAQhC,SAAA90B,EAAAi1B,GAOD,IAAAA,EAEA,OARAC,EAOA,6BANA,qBAAAjpB,SACAA,iBAAAkpB,OAAAlpB,QAAAkpB,MAAAD,IAFA,IAAAA,EAWAE,EAAA,0MACA3uB,EAAA,CACAqZ,MAAAsV,EACAC,MAAA,CACA9S,UAAA,CACA8B,WAAA,SACAvE,MAAA,YAGAwV,UAAA,CACAC,UAAA,GACAzV,MAAA,uBAEA0V,QAAA,CACAC,UAAA,CACAC,OAAA,CACAC,YAAAP,EAAA,MAIAQ,QAAA,CACA9oB,gBAAA,qBACA+oB,YAAA,CACA32B,KAAA,OACA42B,UAAA,CACAhW,MAAA,WAEAiW,WAAA,CACAjW,MAAA,WAEAkW,YAAA,CACAlW,MAAA,2BAIAmW,SAAA,CACAC,oBAAA,UACAC,YAAA,wBACAC,YAAA,WAEAC,KAAA,CACAV,YAAA,QAEAW,aAAA,CACAC,SAAA,CACAT,UAAA,CACAhW,MAAA,YAGA0W,UAAA,CACAV,UAAA,CACAhW,MAAA,YAIA2W,UAAA,CACAF,SAAA,CACAT,UAAA,CACAhW,MAAA,YAGA4W,UAAA,CACAC,MAAA,EACAC,UAAA,CACA9W,MAAA,oDAGA0W,UAAA,CACAV,UAAA,CACAhW,MAAA,YAIA+W,SAAA,CACAf,UAAA,CACAhW,MAAA,WAEAgX,aAAA,CACApB,OAAA,CACA5V,MAAA,WAEA2Q,SAAA,CACA3Q,MAAA,YAGAiX,OAAA,cACAC,WAAA,GAEAC,KAAA,CACAC,QAAA,EACAH,OAAA,cACAC,WAAA,GAEAG,YAAA,CACAC,UAAA,CACA1B,OAAA,CACA5V,MAAA,UACAuX,OAAA,UACAvB,UAAA,CACAhW,MAAA,UACAuX,OAAA,cAKAC,QAAA,CACAP,OAAA,SACAC,WAAA,GAEAx6B,IAAA,CACA+6B,MAAA,CACA7B,OAAA,CACAnT,UAAA,CACAzC,MAAA,aAIAsX,UAAA,CACA1B,OAAA,CACAC,YAAA,OACA6B,UAAA,QAEA/G,SAAA,CACA+G,UAAA,aAIAC,MAAA,CACA3X,MAAAsV,GAEAsC,MAAA,CACAnB,SAAA,CACAT,UAAA,CACAhW,MAAA,8CACA1Y,MAAA,KAGAuwB,SAAA,CACAC,YAAA,GACAx6B,OAAA,GACA04B,UAAA,CACAhW,MAAA,SAGA0W,UAAA,CACAp5B,OAAA,GACA04B,UAAA,CACAhW,MAAA,SAGA+X,QAAA,CACAzwB,MAAA,KAIA6tB,EAAAzb,cAAA,WAAA/S,KA/K0CquB,EAAA/1B,MAAAiB,EAAA+0B,GAAAD,KAAAgD,EAAA93B,QAAAg1B,qBCrB1C,IAAAxxB,EAAaH,EAAQ,KAErB+a,EAAmB/a,EAAQ,KAI3B6oB,EAFc7oB,EAAQ,KAEtB6oB,aAEA6L,EAAiB10B,EAAQ,KAsBzB9E,EAAAiF,EAAAjF,KAKAy5B,EAAA,iDAKAC,EAAA,qDAEA,SAAAC,EAAAC,EAAAtxB,EAAAuxB,EAAAC,EAAAC,GACA,IAAA3oB,EAAA,EACAC,EAAA,EAEA,MAAAyoB,IACAA,EAAAzpB,KAGA,MAAA0pB,IACAA,EAAA1pB,KAGA,IAAA2pB,EAAA,EACA1xB,EAAA2xB,UAAA,SAAA7W,EAAAiM,GACA,IAIA6K,EACAC,EALAnZ,EAAAoC,EAAApC,SACAb,EAAAiD,EAAA7C,kBACA6Z,EAAA9xB,EAAA+xB,QAAAhL,EAAA,GACAiL,EAAAF,KAAA7Z,kBAIA,kBAAAqZ,EAAA,CACA,IAAAW,EAAApa,EAAAtX,OAAAyxB,KAAAlpB,EAAA+O,EAAA/O,EAAA,IACA8oB,EAAA9oB,EAAAmpB,GAGAT,GAAA1W,EAAAoX,SACAppB,EAAA,EACA8oB,EAAAK,EACAlpB,GAAA2oB,EAAAH,EACAG,EAAA7Z,EAAArX,QAGAkxB,EAAAjqB,KAAAG,IAAA8pB,EAAA7Z,EAAArX,YAEK,CACL,IAAA2xB,EAAAta,EAAArX,QAAAwxB,KAAAjpB,EAAA8O,EAAA9O,EAAA,IACA8oB,EAAA9oB,EAAAopB,GAEAV,GAAA3W,EAAAoX,SACAppB,GAAA4oB,EAAAH,EACAxoB,EAAA,EACA8oB,EAAAM,EACAT,EAAA7Z,EAAAtX,OAEAmxB,EAAAjqB,KAAAG,IAAA8pB,EAAA7Z,EAAAtX,OAIAua,EAAAoX,UAIAxZ,EAAA,GAAA5P,EACA4P,EAAA,GAAA3P,EACA,eAAAuoB,EAAAxoB,EAAA8oB,EAAAL,EAAAxoB,EAAA8oB,EAAAN,KAaA,IAAAa,EAAAf,EASAgB,EAAA11B,EAAAjC,MAAA22B,EAAA,YASAiB,EAAA31B,EAAAjC,MAAA22B,EAAA,cAoDA,SAAAkB,EAAAC,EAAAC,EAAAC,GACAA,EAAAxB,EAAA31B,kBAAAm3B,GAAA,GACA,IAAAC,EAAAF,EAAAlyB,MACAqyB,EAAAH,EAAAjyB,OACAsH,EAAAud,EAAAmN,EAAA1qB,KAAA6qB,GACA3qB,EAAAqd,EAAAmN,EAAAxqB,IAAA4qB,GACA3qB,EAAAod,EAAAmN,EAAAvqB,MAAA0qB,GACAzqB,EAAAmd,EAAAmN,EAAAtqB,OAAA0qB,GACAryB,EAAA8kB,EAAAmN,EAAAjyB,MAAAoyB,GACAnyB,EAAA6kB,EAAAmN,EAAAhyB,OAAAoyB,GACAC,EAAAH,EAAA,GAAAA,EAAA,GACAI,EAAAJ,EAAA,GAAAA,EAAA,GACAta,EAAAoa,EAAApa,OA8CA,OA5CA8N,MAAA3lB,KACAA,EAAAoyB,EAAA1qB,EAAA6qB,EAAAhrB,GAGAoe,MAAA1lB,KACAA,EAAAoyB,EAAA1qB,EAAA2qB,EAAA7qB,GAGA,MAAAoQ,IAQA8N,MAAA3lB,IAAA2lB,MAAA1lB,KACA4X,EAAAua,EAAAC,EACAryB,EAAA,GAAAoyB,EAEAnyB,EAAA,GAAAoyB,GAKA1M,MAAA3lB,KACAA,EAAA6X,EAAA5X,GAGA0lB,MAAA1lB,KACAA,EAAAD,EAAA6X,IAKA8N,MAAApe,KACAA,EAAA6qB,EAAA1qB,EAAA1H,EAAAuyB,GAGA5M,MAAAle,KACAA,EAAA4qB,EAAA1qB,EAAA1H,EAAAqyB,GAIAL,EAAA1qB,MAAA0qB,EAAAvqB,OACA,aACAH,EAAA6qB,EAAA,EAAApyB,EAAA,EAAAmyB,EAAA,GACA,MAEA,YACA5qB,EAAA6qB,EAAApyB,EAAAuyB,EAIA,OAAAN,EAAAxqB,KAAAwqB,EAAAtqB,QACA,aACA,aACAF,EAAA4qB,EAAA,EAAApyB,EAAA,EAAAkyB,EAAA,GACA,MAEA,aACA1qB,EAAA4qB,EAAApyB,EAAAqyB,EAKA/qB,KAAA,EACAE,KAAA,EAEAke,MAAA3lB,KAEAA,EAAAoyB,EAAAG,EAAAhrB,GAAAG,GAAA,IAGAie,MAAA1lB,KAEAA,EAAAoyB,EAAAC,EAAA7qB,GAAAE,GAAA,IAGA,IAAA2P,EAAA,IAAAN,EAAAzP,EAAA4qB,EAAA,GAAA1qB,EAAA0qB,EAAA,GAAAnyB,EAAAC,GAEA,OADAqX,EAAA6a,SACA7a,EAkNA,SAAAkb,EAAAh8B,EAAAf,GAIA,OAHAA,GAAAe,GAAAW,EAAAy5B,EAAA,SAAA93B,GACArD,EAAAa,eAAAwC,KAAAtC,EAAAsC,GAAArD,EAAAqD,MAEAtC,EAGAoC,EAAAg4B,kBACAh4B,EAAAi4B,WACAj4B,EAAAi5B,MACAj5B,EAAAk5B,OACAl5B,EAAAm5B,OACAn5B,EAAA65B,iBAhWA,SAAAR,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAlyB,MACAqyB,EAAAH,EAAAjyB,OACAsI,EAAAuc,EAAAmN,EAAA1pB,EAAA6pB,GACA5pB,EAAAsc,EAAAmN,EAAAzpB,EAAA6pB,GACApS,EAAA6E,EAAAmN,EAAAhS,GAAAmS,GACAjS,EAAA2E,EAAAmN,EAAA9R,GAAAkS,GAMA,OALA1M,MAAApd,IAAAod,MAAAT,WAAA+M,EAAA1pB,SAAA,IACAod,MAAA1F,IAAA0F,MAAAT,WAAA+M,EAAAhS,UAAAmS,IACAzM,MAAAnd,IAAAmd,MAAAT,WAAA+M,EAAAzpB,SAAA,IACAmd,MAAAxF,IAAAwF,MAAAT,WAAA+M,EAAA9R,UAAAkS,GACAF,EAAAxB,EAAA31B,kBAAAm3B,GAAA,GACA,CACAnyB,MAAAkH,KAAAG,IAAA4Y,EAAA1X,EAAA4pB,EAAA,GAAAA,EAAA,MACAlyB,OAAAiH,KAAAG,IAAA8Y,EAAA3X,EAAA2pB,EAAA,GAAAA,EAAA,QAmVAv5B,EAAAo5B,gBACAp5B,EAAA85B,gBAtLA,SAAA1xB,EAAAixB,EAAAC,EAAAC,EAAA7hB,GACA,IAAAqiB,GAAAriB,MAAAsiB,IAAAtiB,EAAAsiB,GAAA,GACA/J,GAAAvY,MAAAsiB,IAAAtiB,EAAAsiB,GAAA,GACAC,EAAAviB,KAAAuiB,cAAA,MAEA,GAAAF,GAAA9J,EAAA,CAIA,IAAAvR,EAEA,WAAAub,EACAvb,EAAA,UAAAtW,EAAAlJ,KAAA,IAAAkf,EAAA,KAAAib,EAAAjyB,OAAA,GAAAiyB,EAAAhyB,QAAA,GAAAe,EAAA0W,uBAIA,GAFAJ,EAAAtW,EAAA0W,kBAEA1W,EAAA8xB,qBAAA,CACA,IAAA1T,EAAApe,EAAAse,qBAGAhI,IAAA9hB,SACAuiB,eAAAqH,GAKA6S,EAAAD,EAAA51B,EAAArF,SAAA,CACAiJ,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,QACGgyB,GAAAC,EAAAC,GAIH,IAAAY,EAAA/xB,EAAAmX,SACA6a,EAAAL,EAAAV,EAAA1pB,EAAA+O,EAAA/O,EAAA,EACA0qB,EAAApK,EAAAoJ,EAAAzpB,EAAA8O,EAAA9O,EAAA,EACAxH,EAAAke,KAAA,mBAAA2T,EAAA,CAAAG,EAAAC,GAAA,CAAAF,EAAA,GAAAC,EAAAD,EAAA,GAAAE,MAmJAr6B,EAAAs6B,eA3IA,SAAA3uB,EAAA4uB,GACA,aAAA5uB,EAAAssB,EAAAsC,GAAA,WAAA5uB,EAAAssB,EAAAsC,GAAA,WAAA5uB,EAAAssB,EAAAsC,GAAA,KA2IAv6B,EAAAw6B,iBA9GA,SAAAC,EAAAC,EAAAhjB,IACAlU,EAAA1F,SAAA4Z,OAAA,IACA,IAAAijB,EAAAjjB,EAAAijB,YACAn3B,EAAAvF,QAAA08B,OAAA,CAAAA,MACA,IAAAC,EAAAj9B,EAAAs6B,EAAA,MACA4C,EAAAl9B,EAAAs6B,EAAA,MAIA,SAAAt6B,EAAAm9B,EAAAP,GACA,IAAAQ,EAAA,GACAC,EAAA,EACAC,EAAA,GACAC,EAAA,EAaA,GAXA38B,EAAAu8B,EAAA,SAAA56B,GACA+6B,EAAA/6B,GAAAu6B,EAAAv6B,KAEA3B,EAAAu8B,EAAA,SAAA56B,GAGAi7B,EAAAT,EAAAx6B,KAAA66B,EAAA76B,GAAA+6B,EAAA/6B,GAAAw6B,EAAAx6B,IACAk7B,EAAAL,EAAA76B,IAAA86B,IACAI,EAAAH,EAAA/6B,IAAAg7B,MAGAP,EAAAJ,GAQA,OANAa,EAAAV,EAAAI,EAAA,IACAG,EAAAH,EAAA,SACOM,EAAAV,EAAAI,EAAA,MACPG,EAAAH,EAAA,UAGAG,EAOA,GA3BA,IA2BAC,GAAAF,EAKA,IAAAA,GAhCA,EAiCA,OAAAD,EAGA,QAAA79B,EAAA,EAAuBA,EAAA49B,EAAA19B,OAAkBF,IAAA,CACzC,IAAAgD,EAAA46B,EAAA59B,GAEA,IAAAi+B,EAAAJ,EAAA76B,IAAAi7B,EAAAV,EAAAv6B,GAAA,CACA66B,EAAA76B,GAAAu6B,EAAAv6B,GACA,OAIA,OAAA66B,EAjBA,OAAAE,EAqBA,SAAAE,EAAA38B,EAAA0B,GACA,OAAA1B,EAAAd,eAAAwC,GAGA,SAAAk7B,EAAA58B,EAAA0B,GACA,aAAA1B,EAAA0B,IAAA,SAAA1B,EAAA0B,GAGA,SAAAm7B,EAAAP,EAAAl9B,EAAAf,GACA0B,EAAAu8B,EAAA,SAAA56B,GACAtC,EAAAsC,GAAArD,EAAAqD,KAnEAm7B,EAAApD,EAAA,GAAAwC,EAAAG,GACAS,EAAApD,EAAA,GAAAwC,EAAAI,IAwGA76B,EAAAs7B,gBA3BA,SAAAz+B,GACA,OAAA+8B,EAAA,GAA4B/8B,IA2B5BmD,EAAA45B,sCCvfA,IAAA2B,EAAA,qBAAAC,aAAAx/B,MAAAw/B,aA8GA,SAAAr+B,EAAA8yB,GACA,OAAA3hB,KAAAmtB,KAAAC,EAAAzL,IAGA,IAAA7yB,EAAAD,EAQA,SAAAu+B,EAAAzL,GACA,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGA,IAAA0L,EAAAD,EA8EA,SAAAE,EAAAC,EAAAC,GACA,OAAAxtB,KAAAmtB,MAAAI,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAGA,IAAAC,EAAAH,EAQA,SAAAI,EAAAH,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,IAGA,IAAAG,EAAAD,EAoEAh8B,EAAAsR,OAxRA,SAAA3B,EAAAC,GACA,IAAAssB,EAAA,IAAAX,EAAA,GAYA,OAVA,MAAA5rB,IACAA,EAAA,GAGA,MAAAC,IACAA,EAAA,GAGAssB,EAAA,GAAAvsB,EACAusB,EAAA,GAAAtsB,EACAssB,GA4QAl8B,EAAAq7B,KAlQA,SAAAa,EAAAjM,GAGA,OAFAiM,EAAA,GAAAjM,EAAA,GACAiM,EAAA,GAAAjM,EAAA,GACAiM,GAgQAl8B,EAAApD,MAvPA,SAAAqzB,GACA,IAAAiM,EAAA,IAAAX,EAAA,GAGA,OAFAW,EAAA,GAAAjM,EAAA,GACAiM,EAAA,GAAAjM,EAAA,GACAiM,GAoPAl8B,EAAAH,IAzOA,SAAAq8B,EAAAl5B,EAAAC,GAGA,OAFAi5B,EAAA,GAAAl5B,EACAk5B,EAAA,GAAAj5B,EACAi5B,GAuOAl8B,EAAA8P,IA7NA,SAAAosB,EAAAL,EAAAC,GAGA,OAFAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,GA2NAl8B,EAAAm8B,YAhNA,SAAAD,EAAAL,EAAAC,EAAA94B,GAGA,OAFAk5B,EAAA,GAAAL,EAAA,GAAAC,EAAA,GAAA94B,EACAk5B,EAAA,GAAAL,EAAA,GAAAC,EAAA,GAAA94B,EACAk5B,GA8MAl8B,EAAA4U,IApMA,SAAAsnB,EAAAL,EAAAC,GAGA,OAFAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,GAkMAl8B,EAAA7C,MACA6C,EAAA5C,SACA4C,EAAA07B,YACA17B,EAAA27B,eACA37B,EAAA2pB,IArKA,SAAAuS,EAAAL,EAAAC,GAGA,OAFAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,GAmKAl8B,EAAAo8B,IAzJA,SAAAF,EAAAL,EAAAC,GAGA,OAFAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,EAAA,GAAAL,EAAA,GAAAC,EAAA,GACAI,GAuJAl8B,EAAAq8B,IA7IA,SAAAR,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IA6IA97B,EAAAs8B,MAnIA,SAAAJ,EAAAjM,EAAAsM,GAGA,OAFAL,EAAA,GAAAjM,EAAA,GAAAsM,EACAL,EAAA,GAAAjM,EAAA,GAAAsM,EACAL,GAiIAl8B,EAAAw8B,UAxHA,SAAAN,EAAAjM,GACA,IAAAwM,EAAAt/B,EAAA8yB,GAUA,OARA,IAAAwM,GACAP,EAAA,KACAA,EAAA,OAEAA,EAAA,GAAAjM,EAAA,GAAAwM,EACAP,EAAA,GAAAjM,EAAA,GAAAwM,GAGAP,GA8GAl8B,EAAA47B,WACA57B,EAAA+7B,OACA/7B,EAAAg8B,iBACAh8B,EAAAi8B,aACAj8B,EAAA08B,OAjFA,SAAAR,EAAAjM,GAGA,OAFAiM,EAAA,IAAAjM,EAAA,GACAiM,EAAA,IAAAjM,EAAA,GACAiM,GA+EAl8B,EAAA28B,KApEA,SAAAT,EAAAL,EAAAC,EAAAc,GAGA,OAFAV,EAAA,GAAAL,EAAA,GAAAe,GAAAd,EAAA,GAAAD,EAAA,IACAK,EAAA,GAAAL,EAAA,GAAAe,GAAAd,EAAA,GAAAD,EAAA,IACAK,GAkEAl8B,EAAAmf,eAxDA,SAAA+c,EAAAjM,EAAA7Q,GACA,IAAAzP,EAAAsgB,EAAA,GACArgB,EAAAqgB,EAAA,GAGA,OAFAiM,EAAA,GAAA9c,EAAA,GAAAzP,EAAAyP,EAAA,GAAAxP,EAAAwP,EAAA,GACA8c,EAAA,GAAA9c,EAAA,GAAAzP,EAAAyP,EAAA,GAAAxP,EAAAwP,EAAA,GACA8c,GAoDAl8B,EAAAuO,IA1CA,SAAA2tB,EAAAL,EAAAC,GAGA,OAFAI,EAAA,GAAA5tB,KAAAC,IAAAstB,EAAA,GAAAC,EAAA,IACAI,EAAA,GAAA5tB,KAAAC,IAAAstB,EAAA,GAAAC,EAAA,IACAI,GAwCAl8B,EAAAyO,IA9BA,SAAAytB,EAAAL,EAAAC,GAGA,OAFAI,EAAA,GAAA5tB,KAAAG,IAAAotB,EAAA,GAAAC,EAAA,IACAI,EAAA,GAAA5tB,KAAAG,IAAAotB,EAAA,GAAAC,EAAA,IACAI,oBC7RA,IAAA14B,EAAaH,EAAQ,KAErBw5B,EAAkBx5B,EAAQ,KAE1By5B,EAAiBz5B,EAAQ,KAsDzB,IAAAjB,EAAAoB,EAAApB,kBACA26B,EAAA,aACAC,EAAA,CACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SAGA,SAAAC,EAAAzgC,GACA,aAAAA,EAAA,IAAAA,EAAA,IAAA+F,QAAAm6B,EAAA,SAAAp6B,EAAA46B,GACA,OAAAP,EAAAO,KAIA,IAAAC,EAAA,8BAEAC,EAAA,SAAAC,EAAAC,GACA,UAAWD,GAAA,MAAAC,EAAA,GAAAA,GAAA,KA+EX,SAAAC,EAAAj7B,EAAAxF,GAEA,aAAA0gC,OAAA,EAAA1gC,GADAwF,GAAA,IACAvF,QAAAuF,EAyCA,IAAAm7B,EAAAjB,EAAAiB,aACAC,EAAAlB,EAAA/d,gBACA9e,EAAAg+B,UA1KA,SAAAruB,GACA,OAAAod,MAAApd,GACA,KAGAA,KAAA,IAAAoE,MAAA,MACA,GAAAnR,QAAA,iCAA2C,QAAA+M,EAAAvS,OAAA,MAAAuS,EAAA,QAqK3C3P,EAAAi+B,YA5JA,SAAAt7B,EAAAu7B,GASA,OARAv7B,MAAA,IAAA0D,cAAAzD,QAAA,iBAAAypB,EAAA8R,GACA,OAAAA,EAAAjP,gBAGAgP,GAAAv7B,IACAA,IAAAy7B,OAAA,GAAAlP,cAAAvsB,EAAArG,MAAA,IAGAqG,GAoJA3C,EAAAoC,oBACApC,EAAAs9B,aACAt9B,EAAAq+B,UArHA,SAAAC,EAAAC,EAAAC,GACAh7B,EAAAvF,QAAAsgC,KACAA,EAAA,CAAAA,IAGA,IAAAE,EAAAF,EAAAnhC,OAEA,IAAAqhC,EACA,SAKA,IAFA,IAAAC,EAAAH,EAAA,GAAAG,OAAA,GAEAxhC,EAAA,EAAiBA,EAAAwhC,EAAAthC,OAAkBF,IAAA,CACnC,IAAAyhC,EAAAnB,EAAAtgC,GACAohC,IAAA17B,QAAA66B,EAAAkB,GAAAlB,EAAAkB,EAAA,IAGA,QAAAhB,EAAA,EAAyBA,EAAAc,EAAuBd,IAChD,QAAAiB,EAAA,EAAmBA,EAAAF,EAAAthC,OAAkBwhC,IAAA,CACrC,IAAAv8B,EAAAk8B,EAAAZ,GAAAe,EAAAE,IACAN,IAAA17B,QAAA66B,EAAAD,EAAAoB,GAAAjB,GAAAa,EAAAlB,EAAAj7B,MAIA,OAAAi8B,GA6FAt+B,EAAA6+B,gBAjFA,SAAAP,EAAApX,EAAAsX,GAIA,OAHAh7B,EAAAjF,KAAA2oB,EAAA,SAAAjoB,EAAAxB,GACA6gC,IAAA17B,QAAA,IAAwBnF,EAAA,IAAY+gC,EAAAlB,EAAAr+B,QAEpCq/B,GA8EAt+B,EAAA8+B,iBAnEA,SAAApnB,EAAAqnB,GAKA,IAAAjf,GAJApI,EAAAlU,EAAA/B,SAAAiW,GAAA,CACAoI,MAAApI,EACAqnB,gBACGrnB,GAAA,IACHoI,MACA5gB,EAAAwY,EAAAxY,KAGA,OAFA6/B,EAAArnB,EAAAqnB,aAEAjf,EAIA,YAAA5gB,EAAA,oJAAoKo+B,EAAAxd,GAAA,KAA2Cif,GAAA,iIAA4IzB,EAAAxd,GAAA,KAA2Cif,GAAA,gBAHtY,IA0DA/+B,EAAAg/B,WArCA,SAAAV,EAAAr/B,EAAAggC,GACA,SAAAX,GAAA,UAAAA,GAAA,YAAAA,GAAA,cAAAA,GAAA,SAAAA,IACAA,EAAA,eAGA,IAAAY,EAAApC,EAAA/N,UAAA9vB,GACAkgC,EAAAF,EAAA,SACArvB,EAAAsvB,EAAA,MAAAC,EAAA,cACAC,EAAAF,EAAA,MAAAC,EAAA,aACA1C,EAAAyC,EAAA,MAAAC,EAAA,UACApF,EAAAmF,EAAA,MAAAC,EAAA,WACA/f,EAAA8f,EAAA,MAAAC,EAAA,aACA5C,EAAA2C,EAAA,MAAAC,EAAA,aACAE,EAAAH,EAAA,MAAAC,EAAA,kBAEA,OADAb,IAAA17B,QAAA,KAAAg7B,EAAAwB,EAAA,IAAAx8B,QAAA,IAAAw8B,GAAAx8B,QAAA,OAAAgN,GAAAhN,QAAA,KAAAgN,EAAA,KAAAhN,QAAA,KAAAg7B,EAAAnB,EAAA,IAAA75B,QAAA,IAAA65B,GAAA75B,QAAA,KAAAg7B,EAAA7D,EAAA,IAAAn3B,QAAA,IAAAm3B,GAAAn3B,QAAA,KAAAg7B,EAAAxe,EAAA,IAAAxc,QAAA,IAAAwc,GAAAxc,QAAA,KAAAg7B,EAAArB,EAAA,IAAA35B,QAAA,IAAA25B,GAAA35B,QAAA,MAAAg7B,EAAAyB,EAAA,KAwBAr/B,EAAAs/B,aAdA,SAAA38B,GACA,OAAAA,IAAAy7B,OAAA,GAAAlP,cAAAvsB,EAAAk7B,OAAA,GAAAl7B,GAcA3C,EAAA89B,eACA99B,EAAA+9B,kCCnNA,IAAAwB,EAAWl8B,EAAQ,KAEnB4Z,EAAa5Z,EAAQ,KAMrBm8B,EAAAD,EAAApgB,eACA9Q,EAAAC,KAAAC,IACAC,EAAAF,KAAAG,IAKA,SAAA2P,EAAAzO,EAAAC,EAAAxI,EAAAC,GACAD,EAAA,IACAuI,GAAAvI,EACAA,MAGAC,EAAA,IACAuI,GAAAvI,EACAA,MAOA1H,KAAAgQ,IAKAhQ,KAAAiQ,IAKAjQ,KAAAyH,QAKAzH,KAAA0H,SAGA+W,EAAAviB,UAAA,CACAyB,YAAA8gB,EAKAqhB,MAAA,SAAAC,GACA,IAAA/vB,EAAAtB,EAAAqxB,EAAA/vB,EAAAhQ,KAAAgQ,GACAC,EAAAvB,EAAAqxB,EAAA9vB,EAAAjQ,KAAAiQ,GACAjQ,KAAAyH,MAAAoH,EAAAkxB,EAAA/vB,EAAA+vB,EAAAt4B,MAAAzH,KAAAgQ,EAAAhQ,KAAAyH,OAAAuI,EACAhQ,KAAA0H,OAAAmH,EAAAkxB,EAAA9vB,EAAA8vB,EAAAr4B,OAAA1H,KAAAiQ,EAAAjQ,KAAA0H,QAAAuI,EACAjQ,KAAAgQ,IACAhQ,KAAAiQ,KAOAuP,eAAA,WACA,IAAAwgB,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACA,gBAAA1gB,GAIA,GAAAA,EAAA,CAIAugB,EAAA,GAAAE,EAAA,GAAAlgC,KAAAgQ,EACAgwB,EAAA,GAAAG,EAAA,GAAAngC,KAAAiQ,EACAgwB,EAAA,GAAAE,EAAA,GAAAngC,KAAAgQ,EAAAhQ,KAAAyH,MACAw4B,EAAA,GAAAC,EAAA,GAAAlgC,KAAAiQ,EAAAjQ,KAAA0H,OACAm4B,EAAAG,IAAAvgB,GACAogB,EAAAI,IAAAxgB,GACAogB,EAAAK,IAAAzgB,GACAogB,EAAAM,IAAA1gB,GACAzf,KAAAgQ,EAAAtB,EAAAsxB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAngC,KAAAiQ,EAAAvB,EAAAsxB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACA,IAAAC,EAAAvxB,EAAAmxB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAE,EAAAxxB,EAAAmxB,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAngC,KAAAyH,MAAA24B,EAAApgC,KAAAgQ,EACAhQ,KAAA0H,OAAA24B,EAAArgC,KAAAiQ,IA1BA,GAmCAyP,mBAAA,SAAApc,GACA,IAAAD,EAAArD,KACAsgC,EAAAh9B,EAAAmE,MAAApE,EAAAoE,MACA84B,EAAAj9B,EAAAoE,OAAArE,EAAAqE,OACA+X,EAAAnC,EAAA3L,SAKA,OAHA2L,EAAAkjB,UAAA/gB,IAAA,EAAApc,EAAA2M,GAAA3M,EAAA4M,IACAqN,EAAAqf,MAAAld,IAAA,CAAA6gB,EAAAC,IACAjjB,EAAAkjB,UAAA/gB,IAAA,CAAAnc,EAAA0M,EAAA1M,EAAA2M,IACAwP,GAOAghB,UAAA,SAAAn9B,GACA,IAAAA,EACA,SAGAA,aAAAmb,IAEAnb,EAAAmb,EAAA9M,OAAArO,IAGA,IAAAD,EAAArD,KACA0gC,EAAAr9B,EAAA2M,EACA2wB,EAAAt9B,EAAA2M,EAAA3M,EAAAoE,MACAm5B,EAAAv9B,EAAA4M,EACA4wB,EAAAx9B,EAAA4M,EAAA5M,EAAAqE,OACAo5B,EAAAx9B,EAAA0M,EACA+wB,EAAAz9B,EAAA0M,EAAA1M,EAAAmE,MACAu5B,EAAA19B,EAAA2M,EACAgxB,EAAA39B,EAAA2M,EAAA3M,EAAAoE,OACA,QAAAi5B,EAAAG,GAAAC,EAAAL,GAAAG,EAAAG,GAAAC,EAAAL,IAEAM,QAAA,SAAAlxB,EAAAC,GAEA,OAAAD,GADAhQ,KACAgQ,MADAhQ,KACAgQ,EADAhQ,KACAyH,OAAAwI,GADAjQ,KACAiQ,MADAjQ,KACAiQ,EADAjQ,KACA0H,QAMAzK,MAAA,WACA,WAAAwhB,EAAAze,KAAAgQ,EAAAhQ,KAAAiQ,EAAAjQ,KAAAyH,MAAAzH,KAAA0H,SAMAg0B,KAAA,SAAAqE,GACA//B,KAAAgQ,EAAA+vB,EAAA/vB,EACAhQ,KAAAiQ,EAAA8vB,EAAA9vB,EACAjQ,KAAAyH,MAAAs4B,EAAAt4B,MACAzH,KAAA0H,OAAAq4B,EAAAr4B,QAEAy5B,MAAA,WACA,OACAnxB,EAAAhQ,KAAAgQ,EACAC,EAAAjQ,KAAAiQ,EACAxI,MAAAzH,KAAAyH,MACAC,OAAA1H,KAAA0H,UAaA+W,EAAA9M,OAAA,SAAAoN,GACA,WAAAN,EAAAM,EAAA/O,EAAA+O,EAAA9O,EAAA8O,EAAAtX,MAAAsX,EAAArX,SAGA,IAAA05B,EAAA3iB,EACA0Z,EAAA93B,QAAA+gC,sBCvLA,IAAAC,EAAkB39B,EAAQ,KAE1BG,EAAaH,EAAQ,KAErB49B,EAAgB59B,EAAQ,KAExB69B,EAAkB79B,EAAQ,KAI1B89B,EAFc99B,EAAQ,KAEtBxH,UAAAslC,iBACApX,EAAAzb,KAAAyb,IACAqX,EAAA,IAAAH,GAAA,GAQA,SAAA9jB,EAAAzW,GACAs6B,EAAAhkC,KAAA2C,KAAA+G,GAMA/G,KAAAif,KAAA,KAGAzB,EAAAthB,UAAA,CACAyB,YAAA6f,EACAje,KAAA,OACAmiC,aAAA,EACAC,uBAAA,EACAC,MAAA,SAAAC,EAAAC,GACA,IAcA/iB,EAdAhP,EAAA/P,KAAA+P,MACAkP,EAAAjf,KAAAif,MAAAwiB,EACAM,EAAAhyB,EAAAgyB,YACAC,EAAAjyB,EAAAiyB,UACAxhB,EAAAzQ,EAAAyQ,KACAD,EAAAxQ,EAAAwQ,OACA0hB,EAAAD,KAAAxhB,EAAA0hB,WACAC,EAAAJ,KAAAxhB,EAAA2hB,WACAE,EAAAJ,KAAAxhB,EAAAtQ,MACAmyB,EAAAN,KAAAxhB,EAAArQ,OACAH,EAAA/Q,KAAA6iC,EAAA7hC,KAAA8hC,GACA9hC,KAAAsiC,aAAAT,GAEA7hC,KAAAuiC,WAGAN,IACAljB,KAAA/e,KAAAmf,kBACAnf,KAAAwiC,cAAAzyB,EAAA0yB,YAAAZ,EAAArhB,EAAAzB,IAGAojB,IACApjB,KAAA/e,KAAAmf,kBACAnf,KAAA0iC,gBAAA3yB,EAAA0yB,YAAAZ,EAAAthB,EAAAxB,KAKAkjB,EAEAJ,EAAAc,UAAA3iC,KAAAwiC,cACKJ,IACLP,EAAAc,UAAAnB,EAAAnkC,KAAAmjB,EAAAqhB,IAGAM,EACAN,EAAAe,YAAA5iC,KAAA0iC,gBACKL,IACLR,EAAAe,YAAApB,EAAAnkC,KAAAkjB,EAAAshB,IAGA,IAAAgB,EAAA9yB,EAAA8yB,SACAC,EAAA/yB,EAAA+yB,eACAC,IAAAlB,EAAAmB,YAEArG,EAAA38B,KAAAijC,iBACAhkB,EAAAikB,SAAAvG,EAAA,GAAAA,EAAA,IAMA38B,KAAA0hC,aAAAmB,IAAAE,GAAAhB,GACA9iB,EAAAkkB,UAAAtB,GAEAgB,IAAAE,IACA9jB,EAAA+jB,YAAAH,GACA5jB,EAAAmkB,kBAAAN,IAGA9iC,KAAAqjC,UAAApkB,EAAAjf,KAAAwnB,OAAA,GAEAxnB,KAAAif,OACAjf,KAAA0hC,aAAA,KAIAG,EAAAsB,YACAnjC,KAAAif,KAAAqkB,YAAAzB,IAGAG,GAAA/iB,EAAAuB,KAAAqhB,GAEAgB,GAAAE,IACAlB,EAAAmB,YAAAH,GACAhB,EAAAiB,kBAGAf,GAAA9iB,EAAAsB,OAAAshB,GAEAgB,GAAAE,GAGAlB,EAAAmB,YAAA,IAIA,MAAAjzB,EAAAqZ,OAEAppB,KAAAujC,iBAAA1B,GACA7hC,KAAAwjC,aAAA3B,EAAA7hC,KAAAmf,qBAKAkkB,UAAA,SAAAxB,EAAA4B,EAAAC,KACAC,gBAAA,WACA3jC,KAAAif,KAAA,IAAAqiB,GAEAniB,gBAAA,WACA,IAAAJ,EAAA/e,KAAA4jC,MACA7zB,EAAA/P,KAAA+P,MACA8zB,GAAA9kB,EAEA,GAAA8kB,EAAA,CACA,IAAA5kB,EAAAjf,KAAAif,KAEAA,IAEAA,EAAAjf,KAAAif,KAAA,IAAAqiB,GAGAthC,KAAA0hC,cACAziB,EAAAkkB,YACAnjC,KAAAqjC,UAAApkB,EAAAjf,KAAAwnB,OAAA,IAGAzI,EAAAE,EAAAE,kBAKA,GAFAnf,KAAA4jC,MAAA7kB,EAEAhP,EAAAgyB,YAAA,CAIA,IAAA+B,EAAA9jC,KAAA+jC,kBAAA/jC,KAAA+jC,gBAAAhlB,EAAA9hB,SAEA,GAAA+C,KAAAuiC,SAAAsB,EAAA,CACAC,EAAApI,KAAA3c,GAEA,IAAAilB,EAAAj0B,EAAA8P,UAEAokB,EAAAl0B,EAAA4b,cAAA3rB,KAAAkkC,eAAA,EAEAn0B,EAAAiyB,YACAgC,EAAAr1B,KAAAG,IAAAk1B,EAAAhkC,KAAA2hC,wBAAA,IAKAsC,EAAA,QACAH,EAAAr8B,OAAAu8B,EAAAC,EACAH,EAAAp8B,QAAAs8B,EAAAC,EACAH,EAAA9zB,GAAAg0B,EAAAC,EAAA,EACAH,EAAA7zB,GAAA+zB,EAAAC,EAAA,GAKA,OAAAH,EAGA,OAAA/kB,GAEAmiB,QAAA,SAAAlxB,EAAAC,GACA,IAAAk0B,EAAAnkC,KAAAokC,sBAAAp0B,EAAAC,GACA8O,EAAA/e,KAAAmf,kBACApP,EAAA/P,KAAA+P,MAIA,GAHAC,EAAAm0B,EAAA,GACAl0B,EAAAk0B,EAAA,GAEAplB,EAAAmiB,QAAAlxB,EAAAC,GAAA,CACA,IAAA6O,EAAA9e,KAAAif,KAAAzd,KAEA,GAAAuO,EAAAgyB,YAAA,CACA,IAAAliB,EAAA9P,EAAA8P,UACAokB,EAAAl0B,EAAA4b,cAAA3rB,KAAAkkC,eAAA,EAEA,GAAAD,EAAA,QAEAl0B,EAAAiyB,YACAniB,EAAAlR,KAAAG,IAAA+Q,EAAA7f,KAAA2hC,yBAGAJ,EAAA8C,cAAAvlB,EAAAe,EAAAokB,EAAAj0B,EAAAC,IACA,SAKA,GAAAF,EAAAiyB,UACA,OAAAT,EAAAL,QAAApiB,EAAA9O,EAAAC,GAIA,UAMAoG,MAAA,SAAAiuB,GACA,MAAAA,IACAA,GAAA,GAIAA,IACAtkC,KAAA0hC,YAAA4C,EACAtkC,KAAA4jC,MAAA,MAGA5jC,KAAAuiC,SAAA,EACAviC,KAAA+gB,MAAA/gB,KAAA+gB,KAAAwjB,UAEAvkC,KAAAwkC,cACAxkC,KAAAwkC,aAAAnuB,SAQAouB,aAAA,SAAAC,GACA,OAAA1kC,KAAA2kC,QAAA,QAAAD,IAGAE,OAAA,SAAA9mC,EAAAwB,GAEA,UAAAxB,GACAkC,KAAA6kC,SAAAvlC,GACAU,KAAA0hC,aAAA,EACA1hC,KAAA4jC,MAAA,MAEAvC,EAAAnlC,UAAA0oC,OAAAvnC,KAAA2C,KAAAlC,EAAAwB,IAQAulC,SAAA,SAAA/mC,EAAAwB,GACA,IAAAkoB,EAAAxnB,KAAAwnB,MAEA,GAAAA,EAAA,CACA,GAAA3jB,EAAA1F,SAAAL,GACA,QAAAyC,KAAAzC,EACAA,EAAAC,eAAAwC,KACAinB,EAAAjnB,GAAAzC,EAAAyC,SAIAinB,EAAA1pB,GAAAwB,EAGAU,KAAAqW,OAAA,GAGA,OAAArW,MAEAkkC,aAAA,WACA,IAAAzkB,EAAAzf,KAAA6mB,UAKA,OAAApH,GAAA2K,EAAA3K,EAAA,aAAA2K,EAAA3K,EAAA,YAAA9Q,KAAAmtB,KAAA1R,EAAA3K,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAcAjC,EAAA7c,OAAA,SAAAnC,GACA,IAAAsmC,EAAA,SAAA/9B,GACAyW,EAAAngB,KAAA2C,KAAA+G,GAEAvI,EAAAuR,OAEA/P,KAAA+P,MAAAwR,WAAA/iB,EAAAuR,OAAA,GAIA,IAAAg1B,EAAAvmC,EAAAgpB,MAEA,GAAAud,EAAA,CACA/kC,KAAAwnB,MAAAxnB,KAAAwnB,OAAA,GACA,IAAAwd,EAAAhlC,KAAAwnB,MAEA,QAAAjnB,KAAAwkC,GACAC,EAAAjnC,eAAAwC,IAAAwkC,EAAAhnC,eAAAwC,KACAykC,EAAAzkC,GAAAwkC,EAAAxkC,IAKA/B,EAAA8I,MAAA9I,EAAA8I,KAAAjK,KAAA2C,KAAA+G,IAKA,QAAAxG,KAFAsD,EAAA9C,SAAA+jC,EAAAtnB,GAEAhf,EAEA,UAAA+B,GAAA,UAAAA,IACAukC,EAAA5oC,UAAAqE,GAAA/B,EAAA+B,IAIA,OAAAukC,GAGAjhC,EAAA9C,SAAAyc,EAAA6jB,GACA,IAAAD,EAAA5jB,EACA2a,EAAA93B,QAAA+gC,oBCtVA,IAsCAA,EApCA,kBAAA6D,IAAA,oBAAAA,GAAAC,kBAEA,CACAltB,QAAA,GACAmtB,GAAA,GACAluB,MAAA,EACAmuB,KAAA,EAEAn4B,iBAAA,EACAI,cAAA,EACAg4B,sBAAA,GAEC,qBAAA3lC,UAAA,qBAAAoO,KAED,CACAkK,QAAA,GACAmtB,GAAA,GACAluB,MAAA,EACAquB,QAAA,EACAr4B,iBAAA,GAEC,qBAAAs4B,UAED,CACAvtB,QAAA,GACAmtB,GAAA,GACAluB,MAAA,EACAquB,QAAA,EAEAr4B,iBAAA,EACAI,cAAA,GAUA,SAAAm4B,GACA,IACAxtB,EAAA,GAeAytB,EAAAD,EAAA9Y,MAAA,qBAGAgZ,EAAAF,EAAA9Y,MAAA,mBACA8Y,EAAA9Y,MAAA,6BACAiZ,EAAAH,EAAA9Y,MAAA,kBAEAzU,EAAA,kBAAAoC,KAAAmrB,GAqBAC,IACAztB,EAAAytB,SAAA,EACAztB,EAAA+C,QAAA0qB,EAAA,IAKAC,IACA1tB,EAAA0tB,IAAA,EACA1tB,EAAA+C,QAAA2qB,EAAA,IAGAC,IACA3tB,EAAA2tB,MAAA,EACA3tB,EAAA+C,QAAA4qB,EAAA,IAKA1tB,IACAD,EAAAC,QAAA,GAQA,OACAD,UACAmtB,GA1EA,GA2EAluB,MAAA,EAGAhK,kBAAAvN,SAAAC,cAAA,UAAAiB,WACAyM,aAAA,qBAAAu4B,QAIAP,qBAAA,iBAAAt4B,SAAAiL,EAAA0tB,KAAA1tB,EAAA2tB,KAEAE,uBAAA,kBAAA94B,SAIAiL,EAAA2tB,MAAA3tB,EAAA0tB,IAAA1tB,EAAA+C,SAAA,KAjGA+qB,CAAAP,UAAAQ,WAqHA5N,EAAA93B,QAAA+gC,mBC/JA,IAAAv9B,EAAaH,EAAQ,KAErBsiC,EAAYtiC,EAAQ,KAEpBuiC,EAAoBviC,EAAQ,KAE5BwiC,EAAaxiC,EAAQ,KAErByiC,EAAAD,EAAAC,sBACA9gC,EAAA6gC,EAAA7gC,eAIA2tB,EAFatvB,EAAQ,KAErBsvB,UAEAhU,EAAatb,EAAQ,KAErB0iC,EAAqB1iC,EAAQ,KA2B7B2iC,EAAArT,IASAxuB,EAAAwhC,EAAArlC,OAAA,CACApB,KAAA,YAMA0H,GAAA,GAWA1G,KAAA,GAMAuI,SAAA,GAMAwK,QAAA,GAMAsC,eAAA,EAMA0wB,cAAA,KAMA77B,QAAA,KAQA87B,gBAAA,GAMA7zB,IAAA,KAQA8zB,WAAA,KACAC,aAAA,SAAAz6B,EAAA+X,EAAAtZ,EAAAi8B,GACAV,EAAA3oC,KAAA2C,KAAAgM,EAAA+X,EAAAtZ,EAAAi8B,GACA1mC,KAAA0S,IAAAuzB,EAAAU,OAAA,iBAEAr/B,KAAA,SAAA0E,EAAA+X,EAAAtZ,EAAAi8B,GACA1mC,KAAA4mC,qBAAA56B,EAAAvB,IAEAm8B,qBAAA,SAAA56B,EAAAvB,GACA,IAAA+7B,EAAAxmC,KAAAwmC,WACAK,EAAAL,EAAAxnB,EAAA2c,gBAAA3vB,GAAA,GACA86B,EAAAr8B,EAAAs8B,WACAljC,EAAA7F,MAAAgO,EAAA86B,EAAA3mC,IAAAH,KAAA8I,WACAjF,EAAA7F,MAAAgO,EAAAhM,KAAAgnC,oBAEAR,GACAxnB,EAAA6b,iBAAA7uB,EAAA66B,EAAAL,IAGAS,YAAA,SAAAj7B,EAAA06B,GACA7iC,EAAA7F,MAAAgC,KAAAgM,UAAA,GACA,IAAAw6B,EAAAxmC,KAAAwmC,WAEAA,GACAxnB,EAAA6b,iBAAA76B,KAAAgM,SAAAw6B,IAIAU,cAAA,SAAAC,EAAAC,KACAJ,iBAAA,WACA,IAAAK,EAAAhB,EAAArmC,MAEA,IAAAqnC,EAAAf,cAAA,CAIA,IAHA,IAAAgB,EAAA,GACAC,EAAAvnC,KAAArC,YAEA4pC,GAAA,CACA,IAAAxvB,EAAAwvB,EAAArrC,UAAAoqC,cACAvuB,GAAAuvB,EAAA7lC,KAAAsW,GACAwvB,IAAAlmC,WAKA,IAFA,IAAAilC,EAAA,GAEA/oC,EAAA+pC,EAAA7pC,OAAA,EAAsCF,GAAA,EAAQA,IAC9C+oC,EAAAziC,EAAA7F,MAAAsoC,EAAAgB,EAAA/pC,IAAA,GAGA8pC,EAAAf,gBAGA,OAAAe,EAAAf,eAEAkB,uBAAA,SAAA1+B,GACA,OAAA9I,KAAAyK,QAAA8oB,gBAAA,CACAzqB,WACAC,MAAA/I,KAAAG,IAAA2I,EAAA,YACA7B,GAAAjH,KAAAG,IAAA2I,EAAA,cAkBAq9B,EAAA3hC,EAAA,CACAijC,oBAAA,IAEAxB,EAAAyB,uBAAAljC,GAEAyhC,EAAA0B,wBAAAnjC,EAEA,SAAAuJ,GACA,IAAA65B,EAAA,GACA/jC,EAAAjF,KAAA4F,EAAAqjC,qBAAA95B,GAAA,SAAA+5B,GACAF,IAAAvoC,OAAAyoC,EAAA5rC,UAAA8e,cAAA,MAGA4sB,EAAA/jC,EAAAhH,IAAA+qC,EAAA,SAAAroC,GACA,OAAA8F,EAAA9F,GAAAyV,OAGA,YAAAjH,GAAAlK,EAAAhD,QAAA+mC,EAAA,eACAA,EAAAG,QAAA,WAGA,OAAAH,IAGA/jC,EAAAvC,MAAAkD,EAAA4hC,GACA,IAAAhF,EAAA58B,EACA2zB,EAAA93B,QAAA+gC,qBChOA,IAAAv9B,EAAaH,EAAQ,KAErBK,EAAUL,EAAQ,KAIlBsvB,EAFatvB,EAAQ,KAErBsvB,UAEAkT,EAAaxiC,EAAQ,KAErBskC,EAAA9B,EAAA8B,kBACAC,EAAA/B,EAAA+B,iBAEAC,EAAqBxkC,EAAQ,KAE7BykC,EAAqBzkC,EAAQ,KAE7B0kC,EAAqB1kC,EAAQ,KAE7B2kC,EAAqB3kC,EAAQ,KAyB7BpC,EAAAuC,EAAAvC,MACA+kC,EAAArT,IASA,SAAAgT,EAAAh6B,EAAA+X,EAAAtZ,GAKAzK,KAAA+jB,cAMA/jB,KAAAyK,UAMAzK,KAAAgM,SA+GA,SAAAs8B,EAAAzpC,EAAA0pC,EAAAxkB,GACA,QAAAxmB,EAAA,EAAiBA,EAAAgrC,EAAA9qC,UAEjB8qC,EAAAhrC,IAOA,OAFAsB,KAAA,kBAAAA,IAAA0pC,EAAAhrC,IAAA,OAPqCA,KAkBrC,OAJA,MAAAsB,GAAAklB,IACAllB,EAAAklB,EAAA5jB,IAAAooC,IAGA1pC,EAIA,SAAA2pC,EAAA/3B,EAAAwO,GACA,IAAAwpB,EAAApC,EAAA51B,GAAA+3B,UACA,OAAAC,IAAAprC,KAAAoT,EAAAwO,GAAAxO,EAAAsT,YA7HAiiB,EAAA9pC,UAAA,CACAyB,YAAAqoC,EAMA1+B,KAAA,KAKA2/B,YAAA,SAAAj7B,GACAnI,EAAA7F,MAAAgC,KAAAgM,UAAA,IAQA7L,IAAA,SAAA8e,EAAAypB,GACA,aAAAzpB,EACAjf,KAAAgM,OAGAs8B,EAAAtoC,KAAAgM,OAAAhM,KAAA2oC,UAAA1pB,IAAAypB,GAAAF,EAAAxoC,KAAAif,KAQAmE,WAAA,SAAAtlB,EAAA4qC,GACA,IAAA18B,EAAAhM,KAAAgM,OACAtJ,EAAA,MAAAsJ,MAAAlO,GACAimB,GAAA2kB,GAAAF,EAAAxoC,KAAAlC,GAMA,OAJA,MAAA4E,GAAAqhB,IACArhB,EAAAqhB,EAAAX,WAAAtlB,IAGA4E,GAQA8J,SAAA,SAAAyS,EAAA8E,GACA,IACA6kB,EAEA,WAAA5C,EAHA,MAAA/mB,EAAAjf,KAAAgM,OAAAs8B,EAAAtoC,KAAAgM,OAAAiT,EAAAjf,KAAA2oC,UAAA1pB,IAEA8E,MAAA6kB,EAAAJ,EAAAxoC,KAAAif,KAAA2pB,EAAAp8B,SAAAyS,GACAjf,KAAAyK,UAMAo+B,QAAA,WACA,aAAA7oC,KAAAgM,QAEA0F,YAAA,aAEAzU,MAAA,WAEA,WAAAS,EADAsC,KAAArC,aACAkG,EAAA5G,MAAA+C,KAAAgM,UAEA88B,YAAA,SAAAC,KAGAJ,UAAA,SAAA1pB,GAKA,MAJA,kBAAAA,IACAA,IAAA7K,MAAA,MAGA6K,GAQA+pB,mBAAA,SAAAP,GACApC,EAAArmC,MAAAwoC,UAAAC,GAEAriB,mBAAA,WACA,IAAAriB,EAAAkT,KAAA,CACA,SAAAjX,KAAAgM,OAAArC,UACA,QAAA3J,KAAAgM,OAAArC,UACO,GAAA3J,KAAA+jB,YACP,OAAA/jB,KAAA+jB,YAAAqC,wBAmCA4hB,EAAAhC,GACAiC,EAAAjC,GACA1kC,EAAA0kC,EAAAkC,GACA5mC,EAAA0kC,EAAAmC,GACA7mC,EAAA0kC,EAAAoC,GACA9mC,EAAA0kC,EAAAqC,GACA,IAAAjH,EAAA4E,EACA7N,EAAA93B,QAAA+gC,mBC1Nc19B,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErBK,EAAUL,EAAQ,KAElBulC,EAAcvlC,EAAQ,KAEtB27B,EAAA4J,EAAA5J,WACA1B,EAAAsL,EAAAtL,WACAU,EAAA4K,EAAA5K,UACAc,EAAA8J,EAAA9J,iBAEAt6B,EAAgBnB,EAAQ,KAExBc,EAAqBd,EAAQ,KAE7BwlC,EAAwBxlC,EAAQ,KAEhCylC,EAAsBzlC,EAAQ,KAE9B0lC,EAAc1lC,EAAQ,KAEtBi4B,EAAAyN,EAAAzN,gBACAd,EAAAuO,EAAAvO,iBAIAwO,EAFY3lC,EAAQ,KAEpB2lC,WAEAC,EAAoB5lC,EAAQ,KAE5B6lC,EAAAD,EAAAC,cACAC,EAAAF,EAAAG,UAIAC,EAFoBhmC,EAAQ,KAE5BgmC,iBAoBArD,EAAAxhC,EAAAmuB,YACAvuB,EAAAD,EAAA7D,OAAA,CACApB,KAAA,kBAKA6Y,YAAA,EAEA1H,iBAAA,KAMA41B,cAAA,KAOAqD,mBAAA,KAKAC,sBAAA,kBAQApD,WAAA,KACAl/B,KAAA,SAAA0E,EAAA+X,EAAAtZ,EAAAi8B,GAKA1mC,KAAAoY,YAAApY,KAAA4V,eACA5V,KAAA6pC,SAAAR,EAAA,CACAhc,MAAAyc,EACAC,MAAAC,IAEAhqC,KAAA6pC,SAAA9qC,QAAA,CACA0R,MAAAzQ,MAEAA,KAAA4mC,qBAAA56B,EAAAvB,GACA8+B,EAAAvpC,MACA,IAAAwB,EAAAxB,KAAAiqC,eAAAj+B,EAAAvB,GACAy/B,EAAA1oC,EAAAxB,MACAA,KAAA6pC,SAAA9qC,QAAAyC,OAMA6kC,EAAArmC,MAAAmqC,oBAAA3oC,EAWA4oC,EAAApqC,OAQA4mC,qBAAA,SAAA56B,EAAAvB,GACA,IAAA+7B,EAAAxmC,KAAAwmC,WACAK,EAAAL,EAAA7K,EAAA3vB,GAAA,GAKAq+B,EAAArqC,KAAAsT,QAEA9O,EAAA8lC,SAAAD,KACAA,GAAA,UAGAxmC,EAAA7F,MAAAgO,EAAAvB,EAAAs8B,WAAA5mC,IAAAH,KAAAsT,UACAzP,EAAA7F,MAAAgO,EAAAhM,KAAAgnC,oBAEAniC,EAAA+rB,gBAAA5kB,EAAA,kBACAhM,KAAAuqC,kBAAAv+B,EAAAxK,MAEAglC,GACA3L,EAAA7uB,EAAA66B,EAAAL,IAGAS,YAAA,SAAAuD,EAAA//B,GAEA+/B,EAAA3mC,EAAA7F,MAAAgC,KAAAgM,OAAAw+B,GAAA,GACAxqC,KAAAuqC,kBAAAC,EAAAhpC,MACA,IAAAglC,EAAAxmC,KAAAwmC,WAEAA,GACA3L,EAAA76B,KAAAgM,OAAAw+B,EAAAhE,GAGA+C,EAAAvpC,MACA,IAAAwB,EAAAxB,KAAAiqC,eAAAO,EAAA//B,GACAy/B,EAAA1oC,EAAAxB,MACAA,KAAA6pC,SAAAxzB,QACArW,KAAA6pC,SAAA9qC,QAAAyC,OACA6kC,EAAArmC,MAAAmqC,oBAAA3oC,EACA4oC,EAAApqC,OAEAuqC,kBAAA,SAAA/oC,GAIA,GAAAA,IAAAqC,EAAA9B,aAAAP,GAGA,IAFA,IAAA0kB,EAAA,SAEA3oB,EAAA,EAAqBA,EAAAiE,EAAA/D,OAAiBF,IACtCiE,EAAAjE,IAAAiE,EAAAjE,GAAAq6B,OACA/yB,EAAA+rB,gBAAApvB,EAAAjE,GAAA,QAAA2oB,IAUA+jB,eAAA,aAOA/xB,WAAA,SAAAC,GAIAnY,KAAAyqC,aACAvyB,WAAAC,EAAA3W,OAWAwP,QAAA,SAAA6H,GACA,IAAA6xB,EAAAC,EAAA3qC,MAEA,GAAA0qC,EAAA,CACA,IAAAlpC,EAAAkpC,EAAA3rC,QAAAyC,KACA,aAAAqX,EAAArX,IAAAopC,cAAA/xB,GAMA,OAAAwtB,EAAArmC,MAAAwB,MAOAqpC,QAAA,SAAArpC,GACA,IAAAkpC,EAAAC,EAAA3qC,MAEA,GAAA0qC,EAAA,CACA,IAAA3rC,EAAA2rC,EAAA3rC,QAEAA,EAAAyC,UAAAkpC,EAAAI,iBACAJ,EAAAK,aAAAvpC,EAAA6rB,SAGAtuB,EAAAisC,WAAAxpC,EASAkpC,IAAA1qC,KAAA6pC,WACA9qC,EAAAyC,QAIA6kC,EAAArmC,MAAAwB,QAOAioC,UAAA,WACA,OAAAD,EAAAxpC,OAOAyqC,WAAA,WACA,OAAApE,EAAArmC,MAAAmqC,qBASAc,YAAA,WACA,IAAArgC,EAAA5K,KAAA0Q,iBACA,OAAA9F,KAAAqgC,aAAArgC,EAAAqgC,eAWAC,cAAA,SAAA/5B,EAAAg6B,EAAAtyB,GAkCA,SAAAuyB,EAAA1oC,GACA,OAAAi7B,EAAAU,EAAA37B,IAGA,IAAAlB,EAAAxB,KAAAgR,UACAq6B,EAAA7pC,EAAA8pC,aAAA,uBACAC,EAAAF,EAAA5tC,OACA6B,EAAAU,KAAAwrC,YAAAr6B,GACAs6B,EAAA5nC,EAAAvF,QAAAgB,GACA6gB,EAAA3e,EAAA4P,cAAAD,EAAA,SAEAtN,EAAA1F,SAAAgiB,MAAA+hB,aACA/hB,KAAA+hB,WAAA,QAAwC/hB,OAGxCA,KAAA,cAEA,IAAAurB,EAAAH,EAAA,GAAAE,IAAAF,EAlDA,SAAAjsC,GAGA,IAAAqsC,EAAA9nC,EAAA9G,OAAAuC,EAAA,SAAAqsC,EAAAjpC,EAAAurB,GACA,IAAA2d,EAAApqC,EAAAqqC,iBAAA5d,GACA,OAAA0d,GAAAC,IAAA,IAAAA,EAAA3V,SAAA,MAAA2V,EAAAE,cACO,GACP3uC,EAAA,GAMA,SAAA4uC,EAAArpC,EAAAspC,GACA,IAAAC,EAAAzqC,EAAAqqC,iBAAAG,GAEA,GAAAC,IAAA,IAAAA,EAAAC,UAAAjW,QAAA,CAIA,IAAAkW,EAAAF,EAAA1sC,KACA6sC,EAAAjN,EAAA,CACAhf,QACA5gB,KAAA,YAEA8sC,GAAAV,EAAAS,EAAAzO,EAAAsO,EAAAH,aAAA,cACAnO,EAAA,YAAAwO,EAAAzpC,EAAA,YAAAypC,EAAAhB,EAAA,GAAA9L,EAAA,sBAAA38B,GAAA27B,EAAA37B,IACA2pC,GAAAlvC,EAAAsE,KAAA4qC,IAGA,OAtBAhB,EAAA5tC,OAAAoG,EAAAjF,KAAAysC,EAAA,SAAAW,GACAD,EAAArC,EAAAloC,EAAA2P,EAAA66B,QAEAnoC,EAAAjF,KAAAU,EAAAysC,IAmBAJ,EAAA,YAAAxuC,EAAAusB,KAAAiiB,EAAA,cAoBAW,CAAAhtC,GAAA8rC,EAAAG,EAAA7B,EAAAloC,EAAA2P,EAAAk6B,EAAA,IAAAI,EAAAnsC,EAAA,GAAAA,GACAitC,EAAApN,EAAAhf,GACA5f,EAAAiB,EAAAgrC,QAAAr7B,GACAs7B,EAAAzsC,KAAAO,KAOA,OALAsE,EAAAitB,gBAAA9xB,QACAysC,EAAA,IAGAA,IAAA9O,EAAA8O,IAAAtB,EAAA,iBACAA,EAAAoB,EAAAE,EAAAf,EAAAe,EAAAF,GAAAhsC,EAAAo9B,EAAAp9B,GAAA,KAAAmrC,MAMAtlB,mBAAA,WACA,GAAAriB,EAAAkT,KACA,SAGA,IAAAy1B,EAAA1sC,KAAAojB,WAAA,aAQA,OANAspB,GACA1sC,KAAAgR,UAAAqc,QAAArtB,KAAAojB,WAAA,wBACAspB,GAAA,GAIAA,GAEAh7B,YAAA,WACA1R,KAAA6pC,SAAAxzB,SAEAs2B,oBAAA,SAAApsC,EAAAqsC,EAAAC,GACA,IAAApiC,EAAAzK,KAAAyK,QAEA0V,EAAA+oB,EAAAyD,oBAAAtvC,KAAA2C,KAAAO,EAAAqsC,EAAAC,GAMA,OAJA1sB,IACAA,EAAA1V,EAAAkiC,oBAAApsC,EAAAqsC,EAAAC,IAGA1sB,GAOA2sB,kBAAA,SAAAC,GACA,OAAA/sC,KAAAyqC,aAAAa,aAAAyB,GAAA,IAOAC,eAAA,WACA,OAAAhtC,KAAAG,IAAA,gBAOA8sC,wBAAA,WACA,OAAAjtC,KAAAG,IAAA,yBAWA+sC,mBAAA,KAQAC,mBAAA,KAKAC,SAAA,KAOAC,mBAAA,KAOAC,gBAAA,OAUA,SAAAlD,EAAAr5B,GAGA,IAAAxQ,EAAAwQ,EAAAxQ,KAEAsE,EAAAitB,gBAAA/gB,KACAA,EAAAxQ,KAIA,SAAAwQ,GACA,IAAAvP,EAAAuP,EAAA05B,aACA8C,EAAA/rC,EAAA8pC,aAAA,iBACAkC,EAAA,GAKA,OAJA3pC,EAAAjF,KAAA2uC,EAAA,SAAAE,GACA,IAAAxB,EAAAzqC,EAAAqqC,iBAAA4B,GACAxB,EAAAH,aAAA0B,EAAA/rC,KAAAwqC,EAAAH,eAEA0B,EAAA9jB,KAAA,KAZAgkB,CAAA38B,IAAAxQ,GAeA,SAAAupC,EAAA/qC,GACA,OAAAA,EAAA0R,MAAAg6B,aAAApd,QAGA,SAAA2c,EAAAjrC,GACA,IAAAgS,EAAAhS,EAAA0R,MAEA,OADAM,EAAA85B,QAAA95B,EAAA05B,aAAAkD,gBACAC,EAGA,SAAAA,EAAArmB,EAAAxoB,GAEAwoB,EAAAsmB,IAAA9uC,EAAAisC,WAAA3d,SACAtuB,EAAA0R,MAAAg6B,aAAAkD,aAAA5uC,EAAAisC,YAKA,SAAAd,EAAA1oC,EAAAuP,GACAlN,EAAAjF,KAAA4C,EAAAssC,kBAAA,SAAAvjC,GACA/I,EAAAusC,WAAAxjC,EAAA1G,EAAAjC,MAAAosC,EAAAj9B,MAIA,SAAAi9B,EAAAj9B,GACA,IAAA25B,EAAAC,EAAA55B,GAEA25B,GAEAA,EAAAK,aAAA/qC,KAAAqtB,SAIA,SAAAsd,EAAA55B,GACA,IAAAjG,GAAAiG,EAAAtG,SAAA,IAA4CK,UAC5CmjC,EAAAnjC,KAAAojC,YAAAn9B,EAAA2B,KAEA,GAAAu7B,EAAA,CAGA,IAAAvD,EAAAuD,EAAAE,YAEA,GAAAzD,EAAA,CACA,IAAA0D,EAAA1D,EAAA0D,aAEAA,IACA1D,EAAA0D,EAAAjuC,IAAA4Q,EAAA2B,MAIA,OAAAg4B,GA/EA7mC,EAAAvC,MAAAmD,EAAA0kC,GACAtlC,EAAAvC,MAAAmD,EAAAykC,GAkFA,IAAA9H,EAAA38B,EACA0zB,EAAA93B,QAAA+gC,0BC1hBA,IAAAxF,EAAA,qBAAAC,aAAAx/B,MAAAw/B,aAMA,SAAAlqB,IACA,IAAA4qB,EAAA,IAAAX,EAAA,GAEA,OADA7R,EAAAwS,GACAA,EAQA,SAAAxS,EAAAwS,GAOA,OANAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EASA,SAAAb,EAAAa,EAAA9c,GAOA,OANA8c,EAAA,GAAA9c,EAAA,GACA8c,EAAA,GAAA9c,EAAA,GACA8c,EAAA,GAAA9c,EAAA,GACA8c,EAAA,GAAA9c,EAAA,GACA8c,EAAA,GAAA9c,EAAA,GACA8c,EAAA,GAAA9c,EAAA,GACA8c,EAkIAl8B,EAAAsR,SACAtR,EAAA0pB,WACA1pB,EAAAq7B,OACAr7B,EAAA2pB,IA3HA,SAAAuS,EAAA8R,EAAAC,GAIA,IAAAC,EAAAF,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAE,EAAAH,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAG,EAAAJ,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAI,EAAAL,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAK,EAAAN,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GACAO,EAAAP,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAOA,OANA9R,EAAA,GAAAgS,EACAhS,EAAA,GAAAiS,EACAjS,EAAA,GAAAkS,EACAlS,EAAA,GAAAmS,EACAnS,EAAA,GAAAoS,EACApS,EAAA,GAAAqS,EACArS,GA4GAl8B,EAAAmgC,UAlGA,SAAAjE,EAAAl5B,EAAAitB,GAOA,OANAiM,EAAA,GAAAl5B,EAAA,GACAk5B,EAAA,GAAAl5B,EAAA,GACAk5B,EAAA,GAAAl5B,EAAA,GACAk5B,EAAA,GAAAl5B,EAAA,GACAk5B,EAAA,GAAAl5B,EAAA,GAAAitB,EAAA,GACAiM,EAAA,GAAAl5B,EAAA,GAAAitB,EAAA,GACAiM,GA4FAl8B,EAAAwuC,OAlFA,SAAAtS,EAAAl5B,EAAAyrC,GACA,IAAAC,EAAA1rC,EAAA,GACA2rC,EAAA3rC,EAAA,GACA4rC,EAAA5rC,EAAA,GACA6rC,EAAA7rC,EAAA,GACA8rC,EAAA9rC,EAAA,GACA+rC,EAAA/rC,EAAA,GACAgsC,EAAA1gC,KAAA2gC,IAAAR,GACAS,EAAA5gC,KAAA6gC,IAAAV,GAOA,OANAvS,EAAA,GAAAwS,EAAAQ,EAAAL,EAAAG,EACA9S,EAAA,IAAAwS,EAAAM,EAAAH,EAAAK,EACAhT,EAAA,GAAAyS,EAAAO,EAAAJ,EAAAE,EACA9S,EAAA,IAAAyS,EAAAK,EAAAE,EAAAJ,EACA5S,EAAA,GAAAgT,EAAAN,EAAAI,EAAAD,EACA7S,EAAA,GAAAgT,EAAAH,EAAAC,EAAAJ,EACA1S,GAoEAl8B,EAAAs8B,MA1DA,SAAAJ,EAAAl5B,EAAAitB,GACA,IAAAmf,EAAAnf,EAAA,GACAof,EAAApf,EAAA,GAOA,OANAiM,EAAA,GAAAl5B,EAAA,GAAAosC,EACAlT,EAAA,GAAAl5B,EAAA,GAAAqsC,EACAnT,EAAA,GAAAl5B,EAAA,GAAAosC,EACAlT,EAAA,GAAAl5B,EAAA,GAAAqsC,EACAnT,EAAA,GAAAl5B,EAAA,GAAAosC,EACAlT,EAAA,GAAAl5B,EAAA,GAAAqsC,EACAnT,GAkDAl8B,EAAAymB,OAzCA,SAAAyV,EAAAl5B,GACA,IAAA0rC,EAAA1rC,EAAA,GACA2rC,EAAA3rC,EAAA,GACA4rC,EAAA5rC,EAAA,GACA6rC,EAAA7rC,EAAA,GACA8rC,EAAA9rC,EAAA,GACA+rC,EAAA/rC,EAAA,GACAssC,EAAAZ,EAAAI,EAAAD,EAAAF,EAEA,OAAAW,GAIAA,EAAA,EAAAA,EACApT,EAAA,GAAA4S,EAAAQ,EACApT,EAAA,IAAA2S,EAAAS,EACApT,EAAA,IAAAyS,EAAAW,EACApT,EAAA,GAAAwS,EAAAY,EACApT,EAAA,IAAAyS,EAAAI,EAAAD,EAAAF,GAAAU,EACApT,EAAA,IAAA2S,EAAAD,EAAAF,EAAAK,GAAAO,EACApT,GAVA,MAgCAl8B,EAAApD,MAdA,SAAAoG,GACA,IAAAC,EAAAqO,IAEA,OADA+pB,EAAAp4B,EAAAD,GACAC,6BC3KcI,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErBsiC,EAAYtiC,EAAQ,KAEpBksC,EAAiBlsC,EAAQ,KAEzBmsC,EAAansC,EAAQ,KAErBosC,EAAoBpsC,EAAQ,KAE5BqsC,EAAAD,EAAAC,uBACAC,EAAAF,EAAAE,oBAIAC,EAFuBvsC,EAAQ,KAE/BusC,oBAyBA9xC,EAAA0F,EAAA1F,SAIA+xC,EAAA,QACAC,EAAA,CACAC,MALA,qBAKAC,aAAAh0C,MAAAg0C,aACAC,IANA,qBAMAC,WAAAl0C,MAAAk0C,WAEAC,QAAAn0C,MACAo0C,OAAAp0C,MACAq0C,KAAAr0C,OAIAs0C,EAdA,qBAcAC,YAAAv0C,MAAAu0C,YACAC,EAfA,qBAeAC,YAAAz0C,MAAAy0C,YAEA,SAAAC,EAAAzjC,GAEA,OAAAA,EAAA0jC,UAAA,MAAAL,EAAAE,EAGA,SAAAI,EAAAC,GACA,IAAAxzC,EAAAwzC,EAAAvzC,YAEA,OAAAD,IAAArB,MAAA60C,EAAAv0C,QAAA,IAAAe,EAAAwzC,GAGA,IAAAC,EAAA,qKACAC,EAAA,8CAEA,SAAAC,EAAApzC,EAAAf,GACA2G,EAAAjF,KAAAuyC,EAAA9xC,OAAAnC,EAAAo0C,kBAAA,aAAAC,GACAr0C,EAAAa,eAAAwzC,KACAtzC,EAAAszC,GAAAr0C,EAAAq0C,MAGAtzC,EAAAqzC,iBAAAp0C,EAAAo0C,iBACAztC,EAAAjF,KAAAwyC,EAAA,SAAAG,GACAtzC,EAAAszC,GAAA1tC,EAAA5G,MAAAC,EAAAq0C,MAEAtzC,EAAAuzC,iBAAA3tC,EAAAlD,OAAAzD,EAAAs0C,kBAiBA,IAAAC,EAAA,SAAAt1B,EAAAu1B,GACAv1B,KAAA,UAKA,IAJA,IAAAw1B,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAt0C,EAAA,EAAiBA,EAAA4e,EAAA1e,OAAuBF,IAAA,CAExC,IAAAu0C,EAAA31B,EAAA5e,GAEAsG,EAAA/B,SAAAgwC,KACAA,EAAA,CACAvxC,KAAAuxC,IAIA,IAAAC,EAAAD,EAAAvxC,KACAuxC,EAAAvyC,KAAAuyC,EAAAvyC,MAAA,QAEAuyC,EAAA/E,WACA+E,EAAA/E,SAAAgF,EACAD,EAAAE,cAAA,GAGAF,EAAA5F,UAAA4F,EAAA5F,WAAA,GACA0F,EAAAnwC,KAAAswC,GACAJ,EAAAI,GAAAD,EACAA,EAAA/oC,MAAAxL,EAEAu0C,EAAAG,wBACAJ,EAAAE,GAAA,IASA/xC,KAAAmc,WAAAy1B,EAMA5xC,KAAAkyC,gBAAAP,EAKA3xC,KAAA0xC,YAKA1xC,KAAA6Y,SAQA7Y,KAAAmyC,SAAA,KACAnyC,KAAAoyC,OAAA,EACApyC,KAAAgxC,UAAA,EAOAhxC,KAAAqyC,SAAA,GAKAryC,KAAAsyC,UAAA,GAKAtyC,KAAAuyC,QAAA,GAOAvyC,KAAAwyC,cAAA,GAOAxyC,KAAAyyC,QAAA,GAOAzyC,KAAAopC,QAAA,GAOAppC,KAAA0yC,aAAA,GAOA1yC,KAAA2yC,cAAA,GAOA3yC,KAAA4yC,aAAA,GAOA5yC,KAAA6yC,YAAA,GAOA7yC,KAAA8yC,WAAA,IAMA9yC,KAAA+yC,YAAA,EAMA/yC,KAAAgzC,SAUAhzC,KAAAizC,WAAA,GAMAjzC,KAAAkzC,QAAA,GAQAlzC,KAAAmzC,mBAAA,GAOAnzC,KAAAozC,mBAAAnD,EAAAjwC,MAMAA,KAAAqzC,oBAAAxB,EAMA7xC,KAAAwxC,iBAAA,IAGA8B,EAAA7B,EAAAv1C,UAoTA,SAAAq3C,EAAAjmC,EAAAkmC,EAAAC,GACA,IAAA/wC,EAEA,SAAA8wC,EAAA,CACA,IAAAE,EAAApmC,EAAAwlC,WACAa,EAAAhlC,KAAAod,MAAA0nB,EAAAC,GACAE,EAAAH,EAAAC,EACA1H,EAAA1+B,EAAA6O,WAAAq3B,GACAK,EAAAvmC,EAAA+kC,SAAArG,GAAA2H,GAEA,GAAAE,EAAA,CACAnxC,EAAAmxC,EAAAD,GACA,IAAAE,EAAAxmC,EAAA4kC,gBAAAlG,GAAA8H,YAEAA,KAAAC,WAAAt2C,SACAiF,EAAAoxC,EAAAC,WAAArxC,KAKA,OAAAA,EAkeA,SAAAsxC,EAAA/lB,GACA,OAAAA,EAGA,SAAAgmB,EAAAhmB,GACA,OAAAA,EAAAjuB,KAAAoyC,QAAAnkB,GAAA,EACAjuB,KAAAmyC,SAAAlkB,IAGA,EA6CA,SAAAimB,EAAA5mC,EAAAmmC,GACA,IAAAxsC,EAAAqG,EAAAilC,QAAAkB,GAWA,OATA,MAAAxsC,IACAA,EAAAssC,EAAAjmC,IAAA6mC,UAAAV,IAGA,MAAAxsC,IAEAA,EAAAipC,EAAAuD,GAGAxsC,EAGA,SAAAmtC,EAAAj4B,GAKA,OAJAtY,EAAAvF,QAAA6d,KACAA,EAAA,CAAAA,IAGAA,EAkTA,SAAAk4B,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAn4B,WACA7O,EAAA,IAAAmkC,EAAA5tC,EAAAhH,IAAA23C,EAAAF,EAAAzI,iBAAAyI,KAAA5C,WAEAL,EAAA/jC,EAAAgnC,GAIA,IAHA,IAAA/mC,EAAAD,EAAA+kC,SAAA,GACAoC,EAAAH,EAAAjC,SAEA90C,EAAA,EAAiBA,EAAAi3C,EAAA/2C,OAA0BF,IAAA,CAC3C,IAAAyuC,EAAAwI,EAAAj3C,GAEAk3C,EAAAzI,KAGAnoC,EAAAhD,QAAA0zC,EAAAvI,IAAA,GACAz+B,EAAAy+B,GAAA0I,EAAAD,EAAAzI,IACA1+B,EAAA2lC,WAAAjH,GAAA2I,IACArnC,EAAA4lC,QAAAlH,GAAA,MAGAz+B,EAAAy+B,GAAAyI,EAAAzI,IAKA,OAAA1+B,EAGA,SAAAonC,EAAAE,GAGA,IAFA,IAAAC,EAAA,IAAAx4C,MAAAu4C,EAAAn3C,QAEAk1B,EAAA,EAAiBA,EAAAiiB,EAAAn3C,OAA6Bk1B,IAC9CkiB,EAAAliB,GAAAse,EAAA2D,EAAAjiB,IAGA,OAAAkiB,EAGA,SAAAF,IACA,OAAA1lC,UA5sCAqkC,EAAA/zC,KAAA,OAMA+zC,EAAAwB,eAAA,EASAxB,EAAAyB,aAAA,SAAA/I,GAKA,OAJA5e,MAAA4e,KACAA,EAAAhsC,KAAAmc,WAAA6vB,OAGAA,GAUAsH,EAAAzH,iBAAA,SAAAG,GAEA,OAAAhsC,KAAAkyC,gBAAAlyC,KAAA+0C,aAAA/I,KAOAsH,EAAA0B,qBAAA,WACA,OAAAh1C,KAAAozC,mBAAA6B,gBAAAt4C,SAaA22C,EAAAhI,aAAA,SAAAyB,EAAA9e,GACA,IAAAinB,EAAAl1C,KAAAozC,mBAEA,SAAAnlB,EACA,OAAAinB,EAAAC,uBAAApI,GAGA,IAAAqI,EAAAF,EAAArW,OAAAkO,GACA,WAAA9e,GACAmnB,GAAA,IAAAz4C,QAAAy4C,KAAAnnB,IAcAqlB,EAAA+B,SAAA,SAAA7zC,EAAA8zC,EAAAC,IACA1F,EAAA2F,WAAAh0C,IAAAqC,EAAAtC,YAAAC,MAGAA,EAAA,IAAAwuC,EAAAxuC,EAAAxB,KAAAmc,WAAA1e,SAGAuC,KAAAgzC,SAAAxxC,EAEAxB,KAAAqyC,SAAA,GACAryC,KAAAmyC,SAAA,KACAnyC,KAAAsyC,UAAAgD,GAAA,GACAt1C,KAAAuyC,QAAA,GACAvyC,KAAAy1C,iBAAA,GAEAF,IACAv1C,KAAA80C,eAAA,GAOA90C,KAAA01C,sBAAA3F,EAAA/vC,KAAAgzC,SAAAvJ,YAAAkM,cAEA31C,KAAA41C,gBAAAL,KAAAv1C,KAAA01C,sBAEA11C,KAAAizC,WAAA,GAEAjzC,KAAA61C,sBAAA,EAAAr0C,EAAA6rB,SAGA7rB,EAAAs0C,OACA91C,KAAA80C,eAAA,IAIAxB,EAAAyC,YAAA,WACA,OAAA/1C,KAAAgzC,UAGAM,EAAAp7B,WAAA,SAAA1W,GACA,IAAAw0C,EAAAh2C,KAAAgzC,SACAiD,EAAAj2C,KAAAqtB,QACA2oB,EAAA99B,WAAA1W,GACA,IAAAqsC,EAAAmI,EAAA3oB,QAEA2oB,EAAAE,aACArI,GAAAoI,GAGAj2C,KAAA61C,sBAAAI,EAAApI,IAGAyF,EAAAuC,sBAAA,SAAAI,EAAApI,GAEA,KAAAoI,GAAApI,GAAA,CAkBA,IAdA,IAUAsI,EAVAzC,EAAA1zC,KAAA8yC,WACAkD,EAAAh2C,KAAAgzC,SACAzlC,EAAAvN,KAAAqyC,SACAl2B,EAAAnc,KAAAmc,WACAi6B,EAAAj6B,EAAA1e,OACA44C,EAAAr2C,KAAAkyC,gBACAoD,EAAAt1C,KAAAsyC,UACAgE,EAAAt2C,KAAAuyC,QACAgE,EAAAv2C,KAAAizC,WACAuD,EAAAx2C,KAAAy1C,iBAAA,GAEAgB,EAAAz2C,KAAA+yC,YACA2D,EAAAD,EAAA,EAEAl5C,EAAA,EAAiBA,EAAA64C,EAAY74C,IAAA,CAG7Bg5C,EAFAvK,EAAA7vB,EAAA5e,MAGAg5C,EAAAvK,GAAA2I,KAGA,IAAA1I,EAAAoK,EAAArK,GAEA,IAAAC,EAAAC,UAAAyK,WACAR,EAAAn2C,KAAA42C,YAAAr5C,GAGA,IAAA0uC,EAAAC,UAAA2K,SACA72C,KAAAm0C,UAAA52C,GAGA,IAAAu5C,EAAA3G,EAAAlE,EAAA1sC,MAEAgO,EAAAy+B,KACAz+B,EAAAy+B,GAAA,IAGA,IAAA+K,EAAAxpC,EAAAy+B,GAAA0K,GAEA,GAAAK,KAAAt5C,OAAAi2C,EAAA,CAIA,IAHA,IAAAsD,EAAA,IAAAF,EAAAnoC,KAAAC,IAAAi/B,EAAA6I,EAAAhD,MAGA/gB,EAAA,EAAqBA,EAAAokB,EAAAt5C,OAA6Bk1B,IAClDqkB,EAAArkB,GAAAokB,EAAApkB,GAGAplB,EAAAy+B,GAAA0K,GAAAM,EAIA,QAAA/X,EAAAwX,EAAA/C,EAAwCzU,EAAA4O,EAAS5O,GAAAyU,EACjDnmC,EAAAy+B,GAAAvqC,KAAA,IAAAq1C,EAAAnoC,KAAAC,IAAAi/B,EAAA5O,EAAAyU,KAGA1zC,KAAA+yC,YAAAxlC,EAAAy+B,GAAAvuC,OAKA,IAFA,IAAAyzB,EAAA,IAAA70B,MAAA+5C,GAEAnoB,EAAAgoB,EAAuBhoB,EAAA4f,EAAW5f,IAAA,CAElCiD,EAAA8kB,EAAAiB,QAAAhpB,EAAAiD,GAOA,IAAAyiB,EAAAhlC,KAAAod,MAAAkC,EAAAylB,GACAE,EAAA3lB,EAAAylB,EAEA,IAAAzU,EAAA,EAAmBA,EAAAmX,EAAYnX,IAAA,CAC/B,IAAA+M,EACAkL,EAAA3pC,EADAy+B,EAAA7vB,EAAA8iB,IACA0U,GAEAjxC,EAAA1C,KAAA41C,gBAAA1kB,EAAA8a,EAAA/d,EAAAgR,GAEAiY,EAAAtD,GAAAlxC,EACA,IAAAy0C,EAAAZ,EAAAvK,GAEAtpC,EAAAy0C,EAAA,KACAA,EAAA,GAAAz0C,GAGAA,EAAAy0C,EAAA,KACAA,EAAA,GAAAz0C,GAMA,IAAAszC,EAAAF,KAAA,CACA,IAAAv1C,EAAA+0C,EAAArnB,GAEA,GAAAiD,GAAA,MAAA3wB,EAGA,SAAA2wB,EAAA3wB,KAGA+0C,EAAArnB,GAAA1tB,EAAA2wB,EAAA3wB,UACS,SAAA41C,EAAA,CACT,IAAAiB,EAAAj7B,EAAAg6B,GACAkB,EAAA9pC,EAAA6pC,GAAAzD,GAEA,GAAA0D,EAAA,CACA92C,EAAA82C,EAAAzD,GACA,IAAAE,EAAAuC,EAAAe,GAAAtD,YAEAA,KAAAC,WAAAt2C,SACA8C,EAAAuzC,EAAAC,WAAAxzC,KAQA,IAAA0G,EAAA,MAAAiqB,EAAA,KAAAA,EAAAjqB,GAEA,MAAAA,GAAA,MAAA1G,IAEAi2C,EAAAj2C,GAAAi2C,EAAAj2C,IAAA,EACA0G,EAAA1G,EAEAi2C,EAAAj2C,GAAA,IACA0G,GAAA,SAAAuvC,EAAAj2C,IAGAi2C,EAAAj2C,MAGA,MAAA0G,IAAAqvC,EAAAroB,GAAAhnB,KAIA+uC,EAAAE,YAAAF,EAAAsB,OAEAtB,EAAAsB,QAGAt3C,KAAAgxC,UAAAhxC,KAAAoyC,OAAAvE,EAEA7tC,KAAAkzC,QAAA,GAIA,SAAA5lC,GACA,IAAAukC,EAAAvkC,EAAA+lC,oBACAxvC,EAAAjF,KAAAizC,EAAA,SAAA0F,EAAAvL,GACA,IAAAC,EAAA3+B,EAAA4kC,gBAAAlG,GAEA8H,EAAA7H,EAAA6H,YAEA,GAAAA,EAAA,CACAyD,EAAA1F,EAAA7F,GAAA,IAAA2E,EAAAmD,EAAAC,WAAAt2C,QAGA,QAAAF,EAAA,EAAqBA,EAAAg6C,EAAA95C,OAA4BF,IACjDg6C,EAAAh6C,GAAAqvB,IAGA,QAAArvB,EAAA,EAAqBA,EAAA+P,EAAA8kC,OAAiB70C,IAEtCg6C,EAAAjqC,EAAAnN,IAAA6rC,EAAAzuC,SApBAi6C,CAAAx3C,QAqDAszC,EAAAjmB,MAAA,WACA,OAAArtB,KAAAoyC,QAGAkB,EAAAmE,WAAA,WACA,IACAC,EAAA13C,KAAAmyC,SAEA,GAAAuF,EAAA,CACA,IAAAh6C,EAAAg6C,EAAA/5C,YACAg6C,EAAA33C,KAAAoyC,OAEA,GAAA10C,IAAArB,MAAA,CACAu7C,EAAA,IAAAl6C,EAAAi6C,GAEA,QAAAp6C,EAAA,EAAqBA,EAAAo6C,EAAep6C,IACpCq6C,EAAAr6C,GAAAm6C,EAAAn6C,QAGAq6C,EAAA,IAAAl6C,EAAAg6C,EAAAG,OAAA,EAAAF,OAGA,KACAC,EAAA,IADAl6C,EAAAqzC,EAAA/wC,OACAA,KAAAqtB,SAEA,IAAA9vB,EAAA,EAAmBA,EAAAq6C,EAAAn6C,OAAuBF,IAC1Cq6C,EAAAr6C,KAIA,OAAAq6C,GAWAtE,EAAAnzC,IAAA,SAAA6rC,EAAA/d,GAGA,KAAAA,GAAA,GAAAA,EAAAjuB,KAAAoyC,QACA,OAAAxlB,IAGA,IAAArf,EAAAvN,KAAAqyC,SAEA,IAAA9kC,EAAAy+B,GAEA,OAAApf,IAGAqB,EAAAjuB,KAAA83C,YAAA7pB,GACA,IAAA0lB,EAAAhlC,KAAAod,MAAAkC,EAAAjuB,KAAA8yC,YACAc,EAAA3lB,EAAAjuB,KAAA8yC,WAqBA,OApBAvlC,EAAAy+B,GAAA2H,GACAC,IA4BAN,EAAAyE,cAAA,SAAA/L,EAAAgM,GACA,KAAAA,GAAA,GAAAA,EAAAh4C,KAAAgxC,WACA,OAAApkB,IAGA,IAAAqrB,EAAAj4C,KAAAqyC,SAAArG,GAEA,IAAAiM,EAEA,OAAArrB,IAGA,IAAA+mB,EAAAhlC,KAAAod,MAAAisB,EAAAh4C,KAAA8yC,YACAc,EAAAoE,EAAAh4C,KAAA8yC,WAEA,OADAmF,EAAAtE,GACAC,IASAN,EAAA4E,SAAA,SAAAlM,EAAAgM,GACA,IAAArE,EAAAhlC,KAAAod,MAAAisB,EAAAh4C,KAAA8yC,YACAc,EAAAoE,EAAAh4C,KAAA8yC,WAEA,OADA9yC,KAAAqyC,SAAArG,GAAA2H,GACAC,IAUAN,EAAA6E,UAAA,SAAAh8B,EAAA8R,GAGA,IAAA/rB,EAAA,GAEA2B,EAAAvF,QAAA6d,KAEA8R,EAAA9R,EACAA,EAAAnc,KAAAmc,YAGA,QAAA5e,EAAA,EAAAC,EAAA2e,EAAA1e,OAA0CF,EAAAC,EAASD,IACnD2E,EAAAT,KAAAzB,KAAAG,IAAAgc,EAAA5e,GAAA0wB,IAKA,OAAA/rB,GAWAoxC,EAAA7X,SAAA,SAAAxN,GAIA,IAHA,IAAAgnB,EAAAj1C,KAAAozC,mBAAA6B,gBACAtD,EAAA3xC,KAAAkyC,gBAEA30C,EAAA,EAAAC,EAAAy3C,EAAAx3C,OAA+CF,EAAAC,EAASD,IACxD,GACA,YAAAo0C,EAAAsD,EAAA13C,IAAAgC,MACA6tB,MAAAptB,KAAAG,IAAA80C,EAAA13C,GAAA0wB,IACA,SAIA,UASAqlB,EAAA8E,cAAA,SAAApM,GAIAA,EAAAhsC,KAAA+0C,aAAA/I,GACA,IAAAqM,EAAAr4C,KAAAqyC,SAAArG,GACAsM,EAAA3D,IAEA,IAAA0D,EACA,OAAAC,EAIA,IAQAC,EARAC,EAAAx4C,KAAAqtB,QAUA,IAJArtB,KAAAmyC,SAKA,OAAAnyC,KAAAizC,WAAAjH,GAAArvC,QAKA,GAFA47C,EAAAv4C,KAAAkzC,QAAAlH,GAGA,OAAAuM,EAAA57C,QAOA,IAHA,IAAAiS,GADA2pC,EAAAD,GACA,GACAxpC,EAAAypC,EAAA,GAEAh7C,EAAA,EAAiBA,EAAAi7C,EAAaj7C,IAAA,CAE9B,IAAA+B,EAAAU,KAAAk4C,SAAAlM,EAAAhsC,KAAA83C,YAAAv6C,IAEA+B,EAAAsP,MAAAtP,GACAA,EAAAwP,MAAAxP,GAKA,OAFAi5C,EAAA,CAAA3pC,EAAAE,GACA9O,KAAAkzC,QAAAlH,GAAAuM,EACAA,GAUAjF,EAAAmF,qBAAA,SAAAzM,GAIA,OADAA,EAAAhsC,KAAA+0C,aAAA/I,GACAhsC,KAAAmzC,mBAAAnH,IAAAhsC,KAAAo4C,cAAApM,IAKAsH,EAAAoF,qBAAA,SAAAC,EAAA3M,GAGAA,EAAAhsC,KAAA+0C,aAAA/I,GACAhsC,KAAAmzC,mBAAAnH,GAAA2M,EAAAh8C,SAQA22C,EAAAsF,mBAAA,SAAA96C,GACA,OAAAkC,KAAAwxC,iBAAA1zC,IAQAw1C,EAAAuF,mBAAA,SAAA/6C,EAAAwB,GACAnB,EAAAL,GAAA+F,EAAAlD,OAAAX,KAAAwxC,iBAAA1zC,GAAAkC,KAAAwxC,iBAAA1zC,GAAAwB,GAQAg0C,EAAAwF,OAAA,SAAA9M,GAGA,IACA9d,EAAA,EAEA,GAHAluB,KAAAqyC,SAAArG,GAIA,QAAAzuC,EAAA,EAAAC,EAAAwC,KAAAqtB,QAAuC9vB,EAAAC,EAASD,IAAA,CAChD,IAAA+B,EAAAU,KAAAG,IAAA6rC,EAAAzuC,GAIA6vB,MAAA9tB,KACA4uB,GAAA5uB,GAKA,OAAA4uB,GAQAolB,EAAAyF,UAAA,SAAA/M,GAGA,IAAAgN,EAAA,GAEAh5C,KAAApB,KAAAotC,EAAA,SAAAtpC,EAAAurB,GACAb,MAAA1qB,IACAs2C,EAAAv3C,KAAAiB,KAMA,IAAAu2C,EAAA,GAAA55C,OAAA25C,GAAA9rB,KAAA,SAAA7pB,EAAAC,GACA,OAAAD,EAAAC,IAEA9F,EAAAwC,KAAAqtB,QAEA,WAAA7vB,EAAA,EAAAA,EAAA,MAAAy7C,GAAAz7C,EAAA,OAAAy7C,EAAAz7C,EAAA,GAAAy7C,EAAAz7C,EAAA,SAmCA81C,EAAA4F,WAAA,SAAAlN,EAAA1sC,GACA,IACAm0C,GADAzH,GAAAhsC,KAAAqzC,oBAAArH,IACA1sC,GAEA,aAAAm0C,GAAArmB,MAAAqmB,IACA,EAGAA,GAUAH,EAAAvgB,YAAA,SAAAxyB,GACA,QAAAhD,EAAA,EAAAC,EAAAwC,KAAAqtB,QAAqC9vB,EAAAC,EAASD,IAC9C,GAAAyC,KAAAwsC,QAAAjvC,KAAAgD,EACA,OAAAhD,EAIA,UAUA+1C,EAAApiC,gBAAA,SAAAuiC,GACA,IAAAzzC,KAAAmyC,SACA,OAAAsB,EAGA,GAAAA,GAAAzzC,KAAAgxC,WAAAyC,EAAA,EACA,SAIA,IAAAiE,EAAA13C,KAAAmyC,SAEAgH,EAAAzB,EAAAjE,GAEA,SAAA0F,KAAAn5C,KAAAoyC,QAAA+G,IAAA1F,EACA,OAAAA,EAMA,IAHA,IAAAzkC,EAAA,EACAG,EAAAnP,KAAAoyC,OAAA,EAEApjC,GAAAG,GAAA,CACA,IAAAiqC,GAAApqC,EAAAG,GAAA,IAEA,GAAAuoC,EAAA0B,GAAA3F,EACAzkC,EAAAoqC,EAAA,MACK,MAAA1B,EAAA0B,GAAA3F,GAGL,OAAA2F,EAFAjqC,EAAAiqC,EAAA,GAMA,UAWA9F,EAAA+F,iBAAA,SAAArN,EAAA1sC,EAAAg6C,GACA,IAEAC,EAAA,GAEA,IAJAv5C,KAAAqyC,SACArG,GAIA,OAAAuN,EAGA,MAAAD,IACAA,EAAArqC,KAMA,IAHA,IAAAuqC,EAAA5qB,OAAA6qB,UACAC,GAAA,EAEAn8C,EAAA,EAAAC,EAAAwC,KAAAqtB,QAAqC9vB,EAAAC,EAASD,IAAA,CAC9C,IAAAo8C,EAAAr6C,EAAAU,KAAAG,IAAA6rC,EAAAzuC,GAGA6+B,EAAAztB,KAAAyb,IAAAuvB,GAEAA,GAAAL,GAAAld,GAAAod,KAIApd,EAAAod,GAAAG,GAAA,GAAAD,EAAA,KACAF,EAAApd,EACAsd,EAAAC,EACAJ,EAAA97C,OAAA,GAGA87C,EAAA93C,KAAAlE,IAIA,OAAAg8C,GASAjG,EAAAwE,YAAA9D,EAoBAV,EAAAsG,eAAA,SAAA3rB,GACA,GAAAjuB,KAAAgzC,SAAAkD,WAUA,OAAAl2C,KAAAgzC,SAAAiE,QAAAj3C,KAAA83C,YAAA7pB,IAPA,IAFA,IAAAvrB,EAAA,GAEAnF,EAAA,EAAmBA,EAAAyC,KAAAmc,WAAA1e,OAA4BF,IAAA,CAC/C,IAAAyuC,EAAAhsC,KAAAmc,WAAA5e,GACAmF,EAAAjB,KAAAzB,KAAAG,IAAA6rC,EAAA/d,IAGA,OAAAvrB,GAYA4wC,EAAA9G,QAAA,SAAAve,GACA,IAAAwlB,EAAAzzC,KAAA83C,YAAA7pB,GACA,OAAAjuB,KAAAsyC,UAAAmB,IAAAF,EAAAvzC,UAAA42C,YAAAnD,IAAA,IASAH,EAAAY,MAAA,SAAAjmB,GACA,OAAAimB,EAAAl0C,UAAA83C,YAAA7pB,KAgDAqlB,EAAA10C,KAAA,SAAAw2C,EAAAt2C,EAAAC,EAAA86C,GACA,aAEA,GAAA75C,KAAAoyC,OAAA,CAIA,oBAAAgD,IACAyE,EAAA96C,EACAA,EAAAD,EACAA,EAAAs2C,EACAA,EAAA,IAIAr2C,KAAA86C,GAAA75C,KAIA,IAFA,IAAA85C,GADA1E,EAAAvxC,EAAAhH,IAAAu3C,EAAAgB,GAAAp1C,KAAA+0C,aAAA/0C,OACAvC,OAEAF,EAAA,EAAiBA,EAAAyC,KAAAqtB,QAAkB9vB,IAEnC,OAAAu8C,GACA,OACAh7C,EAAAzB,KAAA0B,EAAAxB,GACA,MAEA,OACAuB,EAAAzB,KAAA0B,EAAAiB,KAAAG,IAAAi1C,EAAA,GAAA73C,MACA,MAEA,OACAuB,EAAAzB,KAAA0B,EAAAiB,KAAAG,IAAAi1C,EAAA,GAAA73C,GAAAyC,KAAAG,IAAAi1C,EAAA,GAAA73C,MACA,MAEA,QAIA,IAHA,IAAA0hC,EAAA,EACA3/B,EAAA,GAEc2/B,EAAA6a,EAAa7a,IAC3B3/B,EAAA2/B,GAAAj/B,KAAAG,IAAAi1C,EAAAnW,GAAA1hC,GAIA+B,EAAA2/B,GAAA1hC,EACAuB,EAAAM,MAAAL,EAAAO,MAYAg0C,EAAAyG,WAAA,SAAA59B,EAAArd,EAAAC,EAAA86C,GACA,aAEA,GAAA75C,KAAAoyC,OAAA,CAIA,oBAAAj2B,IACA09B,EAAA96C,EACAA,EAAAD,EACAA,EAAAqd,EACAA,EAAA,IAIApd,KAAA86C,GAAA75C,KACAmc,EAAAtY,EAAAhH,IAAAu3C,EAAAj4B,GAAAnc,KAAA+0C,aAAA/0C,MASA,IARA,IAAAqtB,EAAArtB,KAAAqtB,QAEAuqB,EAAA,IADA7G,EAAA/wC,MACA,CAAAqtB,GACA/tB,EAAA,GACAw6C,EAAA39B,EAAA1e,OACA+F,EAAA,EACAw2C,EAAA79B,EAAA,GAEA5e,EAAA,EAAiBA,EAAA8vB,EAAW9vB,IAAA,CAC5B,IAAA08C,EACAjC,EAAAh4C,KAAA83C,YAAAv6C,GAEA,OAAAu8C,EACAG,EAAAn7C,EAAAzB,KAAA0B,EAAAxB,QACK,OAAAu8C,EAAA,CACL,IAAAp3C,EAAA1C,KAAAk4C,SAAA8B,EAAAhC,GAEAiC,EAAAn7C,EAAAzB,KAAA0B,EAAA2D,EAAAnF,OACK,CACL,QAAA0hC,EAAA,EAAqBA,EAAA6a,EAAa7a,IAClC3/B,EAAA2/B,GAAAj/B,KAAAk4C,SAAA8B,EAAAhC,GAGA14C,EAAA2/B,GAAA1hC,EACA08C,EAAAn7C,EAAAM,MAAAL,EAAAO,GAGA26C,IACArC,EAAAp0C,KAAAw0C,GAaA,OARAx0C,EAAA6pB,IACArtB,KAAAmyC,SAAAyF,GAGA53C,KAAAoyC,OAAA5uC,EAEAxD,KAAAkzC,QAAA,GACAlzC,KAAA83C,YAAA93C,KAAAmyC,SAAA8B,EAAAD,EACAh0C,OAQAszC,EAAA4G,YAAA,SAAA/tB,GACA,aAEA,GAAAnsB,KAAAoyC,OAAA,CAIA,IAAAj2B,EAAA,GAEA,QAAA6vB,KAAA7f,EACAA,EAAApuB,eAAAiuC,IACA7vB,EAAA1a,KAAAuqC,GAIA,IAAA8N,EAAA39B,EAAA1e,OAEA,GAAAq8C,EAAA,CAIA,IAAAK,EAAAn6C,KAAAqtB,QAEAuqB,EAAA,IADA7G,EAAA/wC,MACA,CAAAm6C,GACA32C,EAAA,EACAw2C,EAAA79B,EAAA,GACAvN,EAAAud,EAAA6tB,GAAA,GACAlrC,EAAAqd,EAAA6tB,GAAA,GACAI,GAAA,EAEA,IAAAp6C,KAAAmyC,SAAA,CAEA,IAAAlkB,EAAA,EAEA,OAAA6rB,EAAA,CAGA,IAFA,IAAA5C,EAAAl3C,KAAAqyC,SAAAl2B,EAAA,IAEA8iB,EAAA,EAAqBA,EAAAj/B,KAAA+yC,YAAsB9T,IAI3C,IAHA,IAAAob,EAAAnD,EAAAjY,GACAzhC,EAAAmR,KAAAC,IAAA5O,KAAAoyC,OAAAnT,EAAAj/B,KAAA8yC,WAAA9yC,KAAA8yC,YAEAv1C,EAAA,EAAuBA,EAAAC,EAASD,IAAA,GAChCmF,EAAA23C,EAAA98C,KAMAqR,GAAAlM,GAAAoM,GAAAse,MAAA1qB,MACAk1C,EAAAp0C,KAAAyqB,GAGAA,IAIAmsB,GAAA,OACK,OAAAN,EAAA,CACL5C,EAAAl3C,KAAAqyC,SAAA2H,GAAA,IACAM,EAAAt6C,KAAAqyC,SAAAl2B,EAAA,IACAo+B,EAAApuB,EAAAhQ,EAAA,OACAq+B,EAAAruB,EAAAhQ,EAAA,OAEA,IAAA8iB,EAAA,EAAqBA,EAAAj/B,KAAA+yC,YAAsB9T,IAC3C,CAAAob,EAAAnD,EAAAjY,GAAA,IACAwb,EAAAH,EAAArb,GAGA,IAFAzhC,EAAAmR,KAAAC,IAAA5O,KAAAoyC,OAAAnT,EAAAj/B,KAAA8yC,WAAA9yC,KAAA8yC,YAEAv1C,EAAA,EAAuBA,EAAAC,EAASD,IAAA,CAChC,IAAAmF,EAAA23C,EAAA98C,GACAm9C,EAAAD,EAAAl9C,IAEAmF,GAAAkM,GAAAlM,GAAAoM,GAAAse,MAAA1qB,MAAAg4C,GAAAH,GAAAG,GAAAF,GAAAptB,MAAAstB,MACA9C,EAAAp0C,KAAAyqB,GAGAA,KAIAmsB,GAAA,GAIA,IAAAA,EACA,OAAAN,EACA,IAAAv8C,EAAA,EAAqBA,EAAA48C,EAAmB58C,IAAA,CACxC,IAAAk2C,EAAAzzC,KAAA83C,YAAAv6C,KAEAmF,EAAA1C,KAAAk4C,SAAA8B,EAAAvG,KAGA7kC,GAAAlM,GAAAoM,GAAAse,MAAA1qB,MACAk1C,EAAAp0C,KAAAiwC,QAIA,IAAAl2C,EAAA,EAAqBA,EAAA48C,EAAmB58C,IAAA,CACxC,IAAA08C,GAAA,EAGA,IAFAxG,EAAAzzC,KAAA83C,YAAAv6C,GAEA0hC,EAAA,EAAuBA,EAAA6a,EAAa7a,IAAA,CACpC,IAAA0b,EAAAx+B,EAAA8iB,KAEAv8B,EAAA1C,KAAAk4C,SAAAlM,EAAAyH,IAGAtnB,EAAAwuB,GAAA,IAAAj4C,EAAAypB,EAAAwuB,GAAA,MACAV,GAAA,GAIAA,IACArC,EAAAp0C,KAAAxD,KAAA83C,YAAAv6C,IAeA,OARAiG,EAAA22C,IACAn6C,KAAAmyC,SAAAyF,GAGA53C,KAAAoyC,OAAA5uC,EAEAxD,KAAAkzC,QAAA,GACAlzC,KAAA83C,YAAA93C,KAAAmyC,SAAA8B,EAAAD,EACAh0C,QAWAszC,EAAAsH,SAAA,SAAAz+B,EAAArd,EAAAC,EAAA86C,GACA,aAEA,oBAAA19B,IACA09B,EAAA96C,EACAA,EAAAD,EACAA,EAAAqd,EACAA,EAAA,IAIApd,KAAA86C,GAAA75C,KACA,IAAA7C,EAAA,GAIA,OAHA6C,KAAApB,KAAAud,EAAA,WACAhf,EAAAsE,KAAA3C,KAAAM,MAAAY,KAAAb,aACGJ,GACH5B,GAsDAm2C,EAAAz2C,IAAA,SAAAsf,EAAArd,EAAAC,EAAA86C,GACA,aAEA96C,KAAA86C,GAAA75C,KAEA,IAAAsN,EAAA+mC,EAAAr0C,KADAmc,EAAAtY,EAAAhH,IAAAu3C,EAAAj4B,GAAAnc,KAAA+0C,aAAA/0C,OAIAsN,EAAA6kC,SAAAnyC,KAAAmyC,SACA7kC,EAAAwqC,YAAAxqC,EAAA6kC,SAAA8B,EAAAD,EASA,IARA,IAAAzmC,EAAAD,EAAA+kC,SACAwI,EAAA,GACAnH,EAAA1zC,KAAA8yC,WACAgH,EAAA39B,EAAA1e,OACAq9C,EAAA96C,KAAAqtB,QACAnrB,EAAA,GACAq0C,EAAAjpC,EAAA2lC,WAEA9hC,EAAA,EAAyBA,EAAA2pC,EAAuB3pC,IAAA,CAChD,QAAAqiC,EAAA,EAA0BA,EAAAsG,EAAoBtG,IAC9CtxC,EAAAsxC,GAAAxzC,KAAAG,IAAAgc,EAAAq3B,GAAAriC,GAKAjP,EAAA43C,GAAA3oC,EACA,IAAA4pC,EAAAj8C,KAAAM,MAAAL,EAAAmD,GAEA,SAAA64C,EAAA,CAEA,kBAAAA,IACAF,EAAA,GAAAE,EACAA,EAAAF,GAOA,IAJA,IAAApH,EAAAzzC,KAAA83C,YAAA3mC,GACAwiC,EAAAhlC,KAAAod,MAAA0nB,EAAAC,GACAE,EAAAH,EAAAC,EAEAn2C,EAAA,EAAqBA,EAAAw9C,EAAAt9C,OAAqBF,IAAA,CAC1C,IAAAyuC,EAAA7vB,EAAA5e,GACAmF,EAAAq4C,EAAAx9C,GACAy9C,EAAAzE,EAAAvK,GACAiM,EAAA1qC,EAAAy+B,GAEAiM,IACAA,EAAAtE,GAAAC,GAAAlxC,GAGAA,EAAAs4C,EAAA,KACAA,EAAA,GAAAt4C,GAGAA,EAAAs4C,EAAA,KACAA,EAAA,GAAAt4C,KAMA,OAAA4K,GAWAgmC,EAAA2H,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAYA,IAXA,IAAA/tC,EAAA+mC,EAAAr0C,KAAA,CAAAk7C,IACAI,EAAAhuC,EAAA+kC,SACAkJ,EAAA,GACAC,EAAA7sC,KAAAod,MAAA,EAAAovB,GACAlD,EAAAqD,EAAAJ,GACA19C,EAAAwC,KAAAqtB,QACAqmB,EAAA1zC,KAAA8yC,WACAkI,EAAA1tC,EAAA2lC,WAAAiI,GACAtD,EAAA,IAAA7G,EAAA/wC,MAAA,CAAAxC,GACAgG,EAAA,EAEAjG,EAAA,EAAiBA,EAAAC,EAASD,GAAAi+C,EAAA,CAE1BA,EAAAh+C,EAAAD,IACAi+C,EAAAh+C,EAAAD,EACAg+C,EAAA99C,OAAA+9C,GAGA,QAAAvc,EAAA,EAAmBA,EAAAuc,EAAevc,IAAA,CAClC,IAAAwc,EAAAz7C,KAAA83C,YAAAv6C,EAAA0hC,GACAyc,EAAA/sC,KAAAod,MAAA0vB,EAAA/H,GACAiI,EAAAF,EAAA/H,EACA6H,EAAAtc,GAAAgZ,EAAAyD,GAAAC,GAGA,IAAAr8C,EAAA87C,EAAAG,GACAK,EAAA57C,KAAA83C,YAAAnpC,KAAAC,IAAArR,EAAA89C,EAAAE,EAAAj8C,IAAA,EAAA9B,EAAA,IAEAq+C,EAAAD,EAAAlI,EAEAuE,EAHAtpC,KAAAod,MAAA6vB,EAAAlI,IAGAmI,GAAAv8C,EAEAA,EAAA07C,EAAA,KACAA,EAAA,GAAA17C,GAGAA,EAAA07C,EAAA,KACAA,EAAA,GAAA17C,GAGAs4C,EAAAp0C,KAAAo4C,EAMA,OAHAtuC,EAAA8kC,OAAA5uC,EACA8J,EAAA6kC,SAAAyF,EACAtqC,EAAAwqC,YAAA7D,EACA3mC,GAUAgmC,EAAAwI,aAAA,SAAA7tB,GACA,IAAAyjB,EAAA1xC,KAAA0xC,UACA,WAAA1L,EAAAhmC,KAAA45C,eAAA3rB,GAAAyjB,OAAAjnC,UASA6oC,EAAAqG,KAAA,SAAAoC,GACA,IAAAC,EAAAh8C,KACA,WAAA4vC,EAAAmM,IAAAtE,aAAA,GAAAz3C,KAAAy3C,aAAA,SAAAxpB,GACA,OAAAimB,EAAA6H,EAAA9tB,IACG,SAAAA,GACH,OAAAimB,EAAA8H,EAAA/tB,MASAqlB,EAAA1iC,UAAA,SAAA9S,GACA,IAAAm+C,EAAAj8C,KAAAyyC,QACA,OAAAwJ,KAAAn+C,IAeAw1C,EAAA4I,UAAA,SAAAp+C,EAAA4E,GACA,GAAAvE,EAAAL,GACA,QAAAyC,KAAAzC,EACAA,EAAAC,eAAAwC,IACAP,KAAAk8C,UAAA37C,EAAAzC,EAAAyC,SAOAP,KAAAyyC,QAAAzyC,KAAAyyC,SAAA,GACAzyC,KAAAyyC,QAAA30C,GAAA4E,GASA4wC,EAAA6I,UAAA,SAAAr+C,EAAA4E,GACA,GAAAvE,EAAAL,GACA,QAAAyC,KAAAzC,EACAA,EAAAC,eAAAwC,IACAP,KAAAm8C,UAAA57C,EAAAzC,EAAAyC,SAOAP,KAAAopC,QAAAtrC,GAAA4E,GASA4wC,EAAA8I,UAAA,SAAAt+C,GACA,OAAAkC,KAAAopC,QAAAtrC,IAQAw1C,EAAA+I,cAAA,SAAApuB,GACA,OAAAjuB,KAAA4yC,aAAA3kB,IAUAqlB,EAAAgJ,cAAA,SAAAruB,EAAAjP,EAAAhhB,GACAgC,KAAA4yC,aAAA3kB,GAAAjwB,EAAA6F,EAAAlD,OAAAX,KAAA4yC,aAAA3kB,IAAA,GAA6EjP,MAO7Es0B,EAAAiJ,iBAAA,WACAv8C,KAAA4yC,aAAAn1C,OAAA,GAUA61C,EAAAliC,cAAA,SAAA6c,EAAAnwB,EAAA4qC,GACA,IAAA8T,EAAAx8C,KAAA0yC,aAAAzkB,GACAvrB,EAAA85C,KAAA1+C,GAEA,aAAA4E,GAAAgmC,EAKAhmC,EAHA1C,KAAA4Q,UAAA9S,IAoBAw1C,EAAAmJ,cAAA,SAAAxuB,EAAAnwB,EAAAwB,GACA,IAAAk9C,EAAAx8C,KAAA0yC,aAAAzkB,IAAA,GACA0kB,EAAA3yC,KAAA2yC,cAGA,GAFA3yC,KAAA0yC,aAAAzkB,GAAAuuB,EAEAr+C,EAAAL,GACA,QAAAyC,KAAAzC,EACAA,EAAAC,eAAAwC,KACAi8C,EAAAj8C,GAAAzC,EAAAyC,GACAoyC,EAAApyC,IAAA,QAOAi8C,EAAA1+C,GAAAwB,EACAqzC,EAAA70C,IAAA,GAOAw1C,EAAAoJ,eAAA,WACA18C,KAAAyyC,QAAA,GACAzyC,KAAA0yC,aAAA,GACA1yC,KAAA2yC,cAAA,IAGA,IAAAgK,EAAA,SAAA36B,GACAA,EAAA5J,YAAApY,KAAAoY,YACA4J,EAAA7Q,UAAAnR,KAAAmR,UACA6Q,EAAAnJ,SAAA7Y,KAAA6Y,UASAy6B,EAAAsJ,iBAAA,SAAA3uB,EAAAxlB,GACA,IAAAipC,EAAA1xC,KAAA0xC,UAEAjpC,IAGAA,EAAA0I,UAAA8c,EACAxlB,EAAAoQ,SAAA7Y,KAAA6Y,SACApQ,EAAA2P,YAAAs5B,KAAAt5B,YAEA,UAAA3P,EAAAlJ,MACAkJ,EAAAgO,SAAAkmC,EAAAl0C,IAIAzI,KAAA6yC,YAAA5kB,GAAAxlB,GAQA6qC,EAAAuJ,iBAAA,SAAA5uB,GACA,OAAAjuB,KAAA6yC,YAAA5kB,IAQAqlB,EAAAwJ,kBAAA,SAAAh+C,EAAAC,GACA8E,EAAAjF,KAAAoB,KAAA6yC,YAAA,SAAApqC,EAAAwlB,GACAxlB,GACA3J,KAAAzB,KAAA0B,EAAA0J,EAAAwlB,MAUAqlB,EAAA3F,aAAA,SAAArgC,GACA,IAAAA,EAAA,CACA,IAAAyvC,EAAAl5C,EAAAhH,IAAAmD,KAAAmc,WAAAnc,KAAA6rC,iBAAA7rC,MACAsN,EAAA,IAAAmkC,EAAAsL,EAAA/8C,KAAA0xC,WAOA,GAHApkC,EAAA+kC,SAAAryC,KAAAqyC,SACAhB,EAAA/jC,EAAAtN,MAEAA,KAAAmyC,SAAA,CACA,IAAAz0C,EAAAsC,KAAAmyC,SAAAx0C,YACA2P,EAAA6kC,SAAA,IAAAz0C,EAAAsC,KAAAmyC,eAEA7kC,EAAA6kC,SAAA,KAIA,OADA7kC,EAAAwqC,YAAAxqC,EAAA6kC,SAAA8B,EAAAD,EACA1mC,GASAgmC,EAAAvF,WAAA,SAAAxjC,EAAAyyC,GACA,IAAAC,EAAAj9C,KAAAuK,GAEA,oBAAA0yC,IAIAj9C,KAAAsxC,iBAAAtxC,KAAAsxC,kBAAA,GAEAtxC,KAAAsxC,iBAAA7vC,KAAA8I,GAEAvK,KAAAuK,GAAA,WACA,IAAA2yC,EAAAD,EAAA79C,MAAAY,KAAAb,WACA,OAAA69C,EAAA59C,MAAAY,KAAA,CAAAk9C,GAAA79C,OAAAwE,EAAAlH,MAAAwC,gBAMAm0C,EAAA6J,qBAAA,oCAEA7J,EAAAxF,kBAAA,6BACA,IAAA1M,EAAAqQ,EACAtZ,EAAA93B,QAAA+gC,mBCh6DA,IAAAv9B,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtB+a,EAAmB/a,EAAQ,KA2B3B05C,EAAAx4C,EAAAoiB,YAAA,CACAznB,KAAA,WACAioB,MAAA,CACA61B,GAAA,EACAC,GAAA,EACA71C,MAAA,EACAC,OAAA,GAEA27B,UAAA,SAAApkB,EAAAuI,GACA,IAAA61B,EAAA71B,EAAA61B,GACAC,EAAA91B,EAAA81B,GACA71C,EAAA+f,EAAA/f,MAAA,EACAC,EAAA8f,EAAA9f,OAAA,EACAuX,EAAAs+B,OAAAF,EAAAC,EAAA51C,GACAuX,EAAAu+B,OAAAH,EAAA51C,EAAA61C,EAAA51C,GACAuX,EAAAu+B,OAAAH,EAAA51C,EAAA61C,EAAA51C,GACAuX,EAAAw+B,eAQAC,EAAA94C,EAAAoiB,YAAA,CACAznB,KAAA,UACAioB,MAAA,CACA61B,GAAA,EACAC,GAAA,EACA71C,MAAA,EACAC,OAAA,GAEA27B,UAAA,SAAApkB,EAAAuI,GACA,IAAA61B,EAAA71B,EAAA61B,GACAC,EAAA91B,EAAA81B,GACA71C,EAAA+f,EAAA/f,MAAA,EACAC,EAAA8f,EAAA9f,OAAA,EACAuX,EAAAs+B,OAAAF,EAAAC,EAAA51C,GACAuX,EAAAu+B,OAAAH,EAAA51C,EAAA61C,GACAr+B,EAAAu+B,OAAAH,EAAAC,EAAA51C,GACAuX,EAAAu+B,OAAAH,EAAA51C,EAAA61C,GACAr+B,EAAAw+B,eAQAE,EAAA/4C,EAAAoiB,YAAA,CACAznB,KAAA,MACAioB,MAAA,CAEAxX,EAAA,EACAC,EAAA,EACAxI,MAAA,EACAC,OAAA,GAEA27B,UAAA,SAAApkB,EAAAuI,GACA,IAAAxX,EAAAwX,EAAAxX,EACAC,EAAAuX,EAAAvX,EACA+zB,EAAAxc,EAAA/f,MAAA,IAEA2yB,EAAAzrB,KAAAG,IAAAk1B,EAAAxc,EAAA9f,QACAk2C,EAAA5Z,EAAA,EAEAtJ,EAAAkjB,KAAAxjB,EAAAwjB,GACAN,EAAArtC,EAAAmqB,EAAAwjB,EAAAljB,EACAmjB,EAAAlvC,KAAAmvC,KAAApjB,EAAAkjB,GAEAnjB,EAAA9rB,KAAA6gC,IAAAqO,GAAAD,EACAG,EAAApvC,KAAA2gC,IAAAuO,GACAG,EAAArvC,KAAA6gC,IAAAqO,GACAI,EAAA,GAAAL,EACAM,EAAA,GAAAN,EACA3+B,EAAAs+B,OAAAvtC,EAAAyqB,EAAA6iB,EAAA5iB,GACAzb,EAAAk/B,IAAAnuC,EAAAstC,EAAAM,EAAAjvC,KAAA4U,GAAAs6B,EAAA,EAAAlvC,KAAA4U,GAAAs6B,GACA5+B,EAAAm/B,cAAApuC,EAAAyqB,EAAAsjB,EAAAE,EAAAX,EAAA5iB,EAAAsjB,EAAAC,EAAAjuC,EAAAC,EAAAiuC,EAAAluC,EAAAC,GACAgP,EAAAm/B,cAAApuC,EAAAC,EAAAiuC,EAAAluC,EAAAyqB,EAAAsjB,EAAAE,EAAAX,EAAA5iB,EAAAsjB,EAAAC,EAAAjuC,EAAAyqB,EAAA6iB,EAAA5iB,GACAzb,EAAAw+B,eAQAY,EAAAz5C,EAAAoiB,YAAA,CACAznB,KAAA,QACAioB,MAAA,CACAxX,EAAA,EACAC,EAAA,EACAxI,MAAA,EACAC,OAAA,GAEA27B,UAAA,SAAAxB,EAAAra,GACA,IAAA9f,EAAA8f,EAAA9f,OACAD,EAAA+f,EAAA/f,MACAuI,EAAAwX,EAAAxX,EACAC,EAAAuX,EAAAvX,EACAwqB,EAAAhzB,EAAA,IACAo6B,EAAA0b,OAAAvtC,EAAAC,GACA4xB,EAAA2b,OAAAxtC,EAAAyqB,EAAAxqB,EAAAvI,GACAm6B,EAAA2b,OAAAxtC,EAAAC,EAAAvI,EAAA,KACAm6B,EAAA2b,OAAAxtC,EAAAyqB,EAAAxqB,EAAAvI,GACAm6B,EAAA2b,OAAAxtC,EAAAC,GACA4xB,EAAA4b,eAQAa,EAAA,CACAhnB,KAAA1yB,EAAAuZ,KACAY,KAAAna,EAAAsZ,KACAqgC,UAAA35C,EAAAsZ,KACAsgC,OAAA55C,EAAAsZ,KACAugC,OAAA75C,EAAAiZ,OACA6gC,QAAAhB,EACAiB,IAAAhB,EACAiB,MAAAP,EACAQ,SAAAzB,GAEA0B,EAAA,CACAxnB,KAAA,SAAAtnB,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GAEAA,EAAAC,GAAAzX,EACAwX,EAAAG,GAAA1X,EAAAmqB,EAAA,EACA5S,EAAAE,GAAA1X,EAAAg0B,EACAxc,EAAAI,GAAA3X,EAAAmqB,EAAA,GAEArb,KAAA,SAAA/O,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GACAA,EAAAxX,IACAwX,EAAAvX,IACAuX,EAAA/f,MAAAu8B,EACAxc,EAAA9f,OAAA0yB,GAEAmkB,UAAA,SAAAvuC,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GACAA,EAAAxX,IACAwX,EAAAvX,IACAuX,EAAA/f,MAAAu8B,EACAxc,EAAA9f,OAAA0yB,EACA5S,EAAAo2B,EAAAjvC,KAAAC,IAAAo1B,EAAA5J,GAAA,GAEAokB,OAAA,SAAAxuC,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GACA,IAAAu3B,EAAApwC,KAAAC,IAAAo1B,EAAA5J,GACA5S,EAAAxX,IACAwX,EAAAvX,IACAuX,EAAA/f,MAAAs3C,EACAv3B,EAAA9f,OAAAq3C,GAEAN,OAAA,SAAAzuC,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GAEAA,EAAA61B,GAAArtC,EAAAg0B,EAAA,EACAxc,EAAA81B,GAAArtC,EAAAmqB,EAAA,EACA5S,EAAAo2B,EAAAjvC,KAAAC,IAAAo1B,EAAA5J,GAAA,GAEAskB,QAAA,SAAA1uC,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GACAA,EAAA61B,GAAArtC,EAAAg0B,EAAA,EACAxc,EAAA81B,GAAArtC,EAAAmqB,EAAA,EACA5S,EAAA/f,MAAAu8B,EACAxc,EAAA9f,OAAA0yB,GAEAukB,IAAA,SAAA3uC,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GACAA,EAAAxX,IAAAg0B,EAAA,EACAxc,EAAAvX,IAAAmqB,EAAA,EACA5S,EAAA/f,MAAAu8B,EACAxc,EAAA9f,OAAA0yB,GAEAwkB,MAAA,SAAA5uC,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GACAA,EAAAxX,IAAAg0B,EAAA,EACAxc,EAAAvX,IAAAmqB,EAAA,EACA5S,EAAA/f,MAAAu8B,EACAxc,EAAA9f,OAAA0yB,GAEAykB,SAAA,SAAA7uC,EAAAC,EAAA+zB,EAAA5J,EAAA5S,GACAA,EAAA61B,GAAArtC,EAAAg0B,EAAA,EACAxc,EAAA81B,GAAArtC,EAAAmqB,EAAA,EACA5S,EAAA/f,MAAAu8B,EACAxc,EAAA9f,OAAA0yB,IAGA4kB,EAAA,GACAn7C,EAAAjF,KAAA0/C,EAAA,SAAA5gD,EAAA6C,GACAy+C,EAAAz+C,GAAA,IAAA7C,IAEA,IAAAuhD,EAAAr6C,EAAAoiB,YAAA,CACAznB,KAAA,SACAioB,MAAA,CACA03B,WAAA,GACAlvC,EAAA,EACAC,EAAA,EACAxI,MAAA,EACAC,OAAA,GAEAy3C,YAAA,WACA,IAAApvC,EAAA/P,KAAA+P,MAGA,QAFA/P,KAAAwnB,MAEA03B,YAAA,WAAAnvC,EAAAoT,eACApT,EAAAoT,aAAA,cACApT,EAAA8U,UAAA,SACA9U,EAAA+U,kBAAA,WAGAue,UAAA,SAAAxB,EAAAra,EAAAkc,GACA,IAAAwb,EAAA13B,EAAA03B,WACAE,EAAAJ,EAAAE,GAEA,SAAA13B,EAAA03B,aACAE,IAGAA,EAAAJ,EADAE,EAAA,SAIAJ,EAAAI,GAAA13B,EAAAxX,EAAAwX,EAAAvX,EAAAuX,EAAA/f,MAAA+f,EAAA9f,OAAA03C,EAAA53B,OACA43B,EAAA/b,UAAAxB,EAAAud,EAAA53B,MAAAkc,OAKA,SAAA2b,EAAAl/B,EAAAm/B,GACA,aAAAt/C,KAAAT,KAAA,CACA,IAAAggD,EAAAv/C,KAAA+P,MACAyvC,EAAAx/C,KAAAwnB,MAEAg4B,GAAA,SAAAA,EAAAN,WACAK,EAAAh/B,OAAAJ,EACKngB,KAAAy/C,gBACLF,EAAAh/B,OAAAJ,EACAo/B,EAAA/+B,KAAA8+B,GAAA,SAGAC,EAAA/+B,OAAA++B,EAAA/+B,KAAAL,GACAo/B,EAAAh/B,SAAAg/B,EAAAh/B,OAAAJ,IAGAngB,KAAAqW,OAAA,IAgDAhW,EAAAq/C,aAhCA,SAAAR,EAAAlvC,EAAAC,EAAA+zB,EAAA5J,EAAAja,EAAAw/B,GAEA,IAMAC,EANA/W,EAAA,IAAAqW,EAAAr+C,QAAA,SA2BA,OAzBAgoC,IACAqW,IAAAhhB,OAAA,KAAAx3B,cAAAw4C,EAAAhhB,OAAA,KAMA0hB,EADA,IAAAV,EAAAr+C,QAAA,YACA+D,EAAAuiB,UAAA+3B,EAAAviD,MAAA,OAAA8hB,EAAAzO,EAAAC,EAAA+zB,EAAA5J,GAAAulB,EAAA,kBACG,IAAAT,EAAAr+C,QAAA,WACH+D,EAAAia,SAAAqgC,EAAAviD,MAAA,MAAyD,IAAA8hB,EAAAzO,EAAAC,EAAA+zB,EAAA5J,GAAAulB,EAAA,kBAEzD,IAAAV,EAAA,CACAz3B,MAAA,CACA03B,aACAlvC,IACAC,IACAxI,MAAAu8B,EACAt8B,OAAA0yB,MAKAqlB,eAAA5W,EACA+W,EAAAC,SAAAR,EACAO,EAAAC,SAAA1/B,GACAy/B,2BC5TA,IAAA/7C,EAAaH,EAAQ,KAqBrBo8C,EAAA,GAEA,SAAA17C,IACApE,KAAA+/C,mBAAA,GAGA37C,EAAAlI,UAAA,CACAyB,YAAAyG,EACAuN,OAAA,SAAAlH,EAAAtC,GACA,IAAA63C,EAAA,GACAn8C,EAAAjF,KAAAkhD,EAAA,SAAAG,EAAA1gD,GACA,IAAA+N,EAAA2yC,EAAAtuC,OAAAlH,EAAAtC,GACA63C,IAAA3gD,OAAAiO,GAAA,MAEAtN,KAAA+/C,mBAAAC,GAEA90C,OAAA,SAAAT,EAAAtC,GACAtE,EAAAjF,KAAAoB,KAAA+/C,mBAAA,SAAAn1C,GACAA,EAAAM,QAAAN,EAAAM,OAAAT,EAAAtC,MAGAI,qBAAA,WACA,OAAAvI,KAAA+/C,mBAAApjD,UAIAyH,EAAA2X,SAAA,SAAAxc,EAAA2gD,GACAJ,EAAAvgD,GAAA2gD,GAGA97C,EAAAjE,IAAA,SAAAZ,GACA,OAAAugD,EAAAvgD,IAGA,IAAA6hC,EAAAh9B,EACA+zB,EAAA93B,QAAA+gC,mBCxDc19B,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErBy8C,EAAmBz8C,EAAQ,KAE3B08C,EAAoB18C,EAAQ,KAE5B28C,EAAY38C,EAAQ,KAEpBy5B,EAAiBz5B,EAAQ,KAEzB48C,EAAe58C,EAAQ,KAEvB68C,EAAAD,EAAAC,uBACAC,EAAAF,EAAAE,iBACAC,EAAAH,EAAAG,qBAEAhiC,EAAmB/a,EAAQ,KA8B3B,SAAAg9C,EAAA/jB,EAAAlsB,GACA,IAMAkwC,EACAC,EACAC,EARAC,EAAAnkB,EAAAp9B,KACAqP,EAAA6B,EAAAswC,SACAjyC,EAAA2B,EAAAuwC,SACAC,EAAA,MAAAryC,EACAsyC,EAAA,MAAApyC,EACAqyC,EAAAxkB,EAAAykB,YAKA,YAAAN,EACAH,EAAAlwC,EAAA4wC,gBAAA5jD,QAEAmjD,EAAAnwC,EAAAtQ,IAAA,eAEA0D,EAAAvF,QAAAsiD,KACAA,EAAA,CAAAA,GAAA,EAAAA,GAAA,IAGA,mBAAAA,EAAA,KACAA,EAAA,OAGAA,EAAA,GAAAzjB,EAAA5Q,aAAAq0B,EAAA,MACAA,EAAA,GAAAzjB,EAAA5Q,aAAAq0B,EAAA,MACAC,EAAAM,EAAA,GAAAA,EAAA,IAAAxyC,KAAAyb,IAAA+2B,EAAA,KAgBA,MAAAvyC,IACAA,EAAA,YAAAkyC,EAAAH,EAAA,EAAA/zB,IAAAu0B,EAAA,GAAAP,EAAA,GAAAC,GAGA,MAAA/xC,IACAA,EAAA,YAAAgyC,EAAAH,IAAA,EAAA/zB,IAAAu0B,EAAA,GAAAP,EAAA,GAAAC,GAGA,YAAAjyC,EACAA,EAAAuyC,EAAA,GACG,oBAAAvyC,IACHA,IAAA,CACAA,IAAAuyC,EAAA,GACAryC,IAAAqyC,EAAA,MAIA,YAAAryC,EACAA,EAAAqyC,EAAA,GACG,oBAAAryC,IACHA,IAAA,CACAF,IAAAuyC,EAAA,GACAryC,IAAAqyC,EAAA,OAIA,MAAAvyC,IAAAkf,SAAAlf,QAAAge,MACA,MAAA9d,IAAAgf,SAAAhf,QAAA8d,KACA+P,EAAA2kB,SAAAz9C,EAAA7B,MAAA4M,IAAA/K,EAAA7B,MAAA8M,IAAA,YAAAgyC,IAAAnkB,EAAA4kB,iBAAAxN,WAAAt2C,QAEAgT,EAAA+wC,qBAEA5yC,EAAA,GAAAE,EAAA,IAAAmyC,IACAryC,EAAA,GAIAA,EAAA,GAAAE,EAAA,IAAAoyC,IACApyC,EAAA,IAaA,IAAArE,EAAAgG,EAAAhG,QAEA,GAAAA,GAAA,SAAAq2C,EAEA,CACA,IACAW,EADAC,EAAAnB,EAAA,MAAA91C,GAMA,GAJA5G,EAAAjF,KAAA8iD,EAAA,SAAA3wC,GACA0wC,GAAA1wC,EAAAk6B,gBAAAx6B,EAAAkxC,OAGAF,EAAA,CAEA,IAAAG,EAAApB,EAAAkB,GAEAG,EASA,SAAAjzC,EAAAE,EAAA2B,EAAAmxC,GAEA,IAAAE,EAAArxC,EAAAkxC,KAAAP,YACAW,EAAAD,EAAA,GAAAA,EAAA,GAEAE,EAAAvB,EAAAmB,EAAAnxC,EAAAkxC,MAEA,QAAAhuB,IAAAquB,EACA,OACApzC,MACAE,OAIA,IAAAmzC,EAAAhzC,IACApL,EAAAjF,KAAAojD,EAAA,SAAApyC,GACAqyC,EAAAtzC,KAAAC,IAAAgB,EAAApM,OAAAy+C,KAEA,IAAAC,GAAAjzC,IACApL,EAAAjF,KAAAojD,EAAA,SAAApyC,GACAsyC,EAAAvzC,KAAAG,IAAAc,EAAApM,OAAAoM,EAAAnI,MAAAy6C,KAEAD,EAAAtzC,KAAAyb,IAAA63B,GACAC,EAAAvzC,KAAAyb,IAAA83B,GACA,IAAAC,EAAAF,EAAAC,EAEAE,EAAAtzC,EAAAF,EAEAyzC,EAAAD,GADA,GAAAH,EAAAC,GAAAH,GACAK,EAGA,OACAxzC,IAFAA,GAAAyzC,GAAAJ,EAAAE,GAGArzC,IAJAA,GAAAuzC,GAAAH,EAAAC,IAtCAG,CAAA1zC,EAAAE,EAAA2B,EAAAmxC,GACAhzC,EAAAizC,EAAAjzC,IACAE,EAAA+yC,EAAA/yC,KAIA,OAAAF,EAAAE,GAoHA,SAAAyzC,EAAAZ,GACA,IAIAhjB,EAJA6jB,EAAAb,EAAAc,gBAAAtiD,IAAA,aACAuiD,EAAA,aAAAf,EAAApiD,KAAAoiD,EAAAhlB,MAAAykB,YAAA,QAEA,wBAAAoB,GACA7jB,EAIK6jB,EAJLA,EACA,SAAA9/C,GACA,OAAAi8B,EAAA17B,QAAA,UAAmC,MAAAP,IAAA,MAMhC,oBAAA8/C,EACH,SAAAG,EAAA10B,GAWA,OAJA,MAAAy0B,IACAz0B,EAAA00B,EAAAD,GAGAF,EAAAI,EAAAjB,EAAAgB,GAAA10B,IAGA,SAAA40B,GACA,OAAAlB,EAAAhlB,MAAAmmB,SAAAD,IAKA,SAAAD,EAAAjB,EAAAriD,GAIA,mBAAAqiD,EAAApiD,KAAAoiD,EAAAhlB,MAAAmmB,SAAAxjD,KAgDA,SAAAyjD,EAAAC,EAAAnU,GACA,IAAAoU,EAAApU,EAAAlgC,KAAA4U,GAAA,IACA2/B,EAAAF,EAAA7hB,QACAgiB,EAAAD,EAAAz7C,MACA27C,EAAAF,EAAAx7C,OACA27C,EAAAF,EAAAx0C,KAAA6gC,IAAAyT,GAAAG,EAAAz0C,KAAA2gC,IAAA2T,GACAK,EAAAH,EAAAx0C,KAAA2gC,IAAA2T,GAAAG,EAAAz0C,KAAA6gC,IAAAyT,GAEA,OADA,IAAAxkC,EAAAykC,EAAAlzC,EAAAkzC,EAAAjzC,EAAAozC,EAAAC,GA/VA5/C,EAAQ,KAERA,EAAQ,KAiWRrD,EAAAqgD,iBACArgD,EAAAkjD,gBA9KA,SAAA5mB,EAAAlsB,GACA,IAAAkoC,EAAA+H,EAAA/jB,EAAAlsB,GACAwwC,EAAA,MAAAxwC,EAAAswC,SACAG,EAAA,MAAAzwC,EAAAuwC,SACA/oB,EAAAxnB,EAAAtQ,IAAA,eAEA,QAAAw8B,EAAAp9B,OACAo9B,EAAA6mB,KAAA/yC,EAAAtQ,IAAA,YAGA,IAAA2gD,EAAAnkB,EAAAp9B,KACAo9B,EAAA8mB,UAAA9K,EAAA,GAAAA,EAAA,IACAhc,EAAA+mB,WAAA,CACAzrB,cACAgpB,SACAC,SACAyC,YAAA,aAAA7C,GAAA,SAAAA,EAAArwC,EAAAtQ,IAAA,oBACAyjD,YAAA,aAAA9C,GAAA,SAAAA,EAAArwC,EAAAtQ,IAAA,sBAOA,IAAA8vB,EAAAxf,EAAAtQ,IAAA,YAEA,MAAA8vB,GACA0M,EAAAknB,aAAAlnB,EAAAknB,YAAA5zB,IAoJA5vB,EAAAyjD,mBA1IA,SAAArzC,EAAAszC,GAGA,GAFAA,KAAAtzC,EAAAtQ,IAAA,QAGA,OAAA4jD,GAEA,eACA,WAAA5D,EAAA1vC,EAAA8wC,eAAA9wC,EAAA8wC,iBAAA9wC,EAAA4wC,gBAAA,CAAApyC,KAAA,MAEA,YACA,WAAAmxC,EAGA,QACA,OAAAC,EAAA3qC,SAAAquC,IAAA3D,GAAAzuC,OAAAlB,KA6HApQ,EAAA2jD,gBApHA,SAAArC,GACA,IAAAj0B,EAAAi0B,EAAAhlB,MAAAykB,YACAxyC,EAAA8e,EAAA,GACA5e,EAAA4e,EAAA,GACA,QAAA9e,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,IAiHAzO,EAAAkiD,qBACAliD,EAAAuiD,kBACAviD,EAAA4jD,uBAzDA,SAAAtC,GACA,IAAAuC,EAAAvC,EAAAlxC,MACAksB,EAAAglB,EAAAhlB,MAEA,GAAAunB,EAAA/jD,IAAA,oBAAAw8B,EAAAwnB,UAAA,CAIA,IACAC,EACAC,EAFAC,EAAA,aAAA3C,EAAApiD,KAGAglD,EAAA5nB,EAAAykB,YAGAiD,EADAC,EACA3nB,EAAAtP,SAEA+2B,EAAAznB,EAAA6nB,YACA/mD,OAGA,IAEAshB,EAFA0lC,EAAA9C,EAAAc,gBACAD,EAAAD,EAAAZ,GAEA+C,EAAA,EAEAL,EAAA,KACAK,EAAA/1C,KAAAg2C,KAAAN,EAAA,KAGA,QAAA9mD,EAAA,EAAiBA,EAAA8mD,EAAe9mD,GAAAmnD,EAAA,CAChC,IACA9sB,EAAA4qB,EADA4B,IAAA7mD,GAAAgnD,EAAA,GAAAhnD,GAGAqnD,EAAA7B,EADA0B,EAAArmB,YAAAxG,GACA6sB,EAAAtkD,IAAA,cACA4e,IAAA+gB,MAAA8kB,GAAA7lC,EAAA6lC,EAGA,OAAA7lC,6BC3WA,IAAAN,EAAmB/a,EAAQ,KAE3BmhD,EAAkBnhD,EAAQ,KAE1BohD,EAAYphD,EAAQ,KAEpB9C,EAAAkkD,EAAAlkD,WACAD,EAAAmkD,EAAAnkD,OACAwB,EAAA2iD,EAAA3iD,UACAG,EAAAwiD,EAAAxiD,UACAS,EAAA+hD,EAAA/hD,KACAgiD,EAAA,GACAC,EAAA,EACAC,EAAA,IACAC,EAAA,gCACAC,EAAA,kBAEAnoD,EAAA,GAaA,SAAA0P,EAAA0c,EAAAg8B,GAEA,IAAAtnD,EAAAsrB,EAAA,KADAg8B,KAAAD,GAGA,GAAAJ,EAAAjnD,GACA,OAAAinD,EAAAjnD,GAMA,IAHA,IAAAunD,GAAAj8B,EAAA,IAAAhV,MAAA,MACA3M,EAAA,EAEAlK,EAAA,EAAA+nD,EAAAD,EAAA5nD,OAAuCF,EAAA+nD,EAAO/nD,IAE9CkK,EAAAkH,KAAAG,IAAAy2C,EAAAF,EAAA9nD,GAAA6nD,GAAA39C,SAUA,OAPAu9C,EAAAC,IACAD,EAAA,EACAD,EAAA,IAGAC,IACAD,EAAAjnD,GAAA2J,EACAA,EA0DA,SAAA+9C,EAAAx1C,EAAAvI,EAAAod,GAQA,MANA,UAAAA,EACA7U,GAAAvI,EACG,WAAAod,IACH7U,GAAAvI,EAAA,GAGAuI,EAWA,SAAAy1C,EAAAx1C,EAAAvI,EAAAod,GAOA,MANA,WAAAA,EACA7U,GAAAvI,EAAA,EACG,WAAAod,IACH7U,GAAAvI,GAGAuI,EAkIA,SAAAkuB,EAAA/U,EAAAyQ,EAAAurB,EAAAM,EAAAC,GACA,IAAA9rB,EACA,SAGA,IAAAwrB,GAAAj8B,EAAA,IAAAhV,MAAA,MACAuxC,EAAAC,EAAA/rB,EAAAurB,EAAAM,EAAAC,GAGA,QAAApoD,EAAA,EAAAC,EAAA6nD,EAAA5nD,OAAyCF,EAAAC,EAASD,IAClD8nD,EAAA9nD,GAAAsoD,EAAAR,EAAA9nD,GAAAooD,GAGA,OAAAN,EAAA37B,KAAA,MAGA,SAAAk8B,EAAA/rB,EAAAurB,EAAAM,EAAAC,IACAA,EAAAhlD,EAAA,GAAqBglD,IACrBP,OACAM,EAAAvjD,EAAAujD,EAAA,OACAC,EAAAG,cAAA3jD,EAAAwjD,EAAAG,cAAA,GACA,IAAAC,EAAAJ,EAAAI,QAAA5jD,EAAAwjD,EAAAI,QAAA,GAGAJ,EAAAK,YAAAt5C,EAAA,SAAA04C,GAGA,IAAAa,EAAAN,EAAAM,aAAAv5C,EAAA,IAAA04C,GACAO,EAAAO,YAAA/jD,EAAAwjD,EAAAO,YAAA,IAKA,IAFA,IAAAC,EAAAtsB,EAAAlrB,KAAAG,IAAA,EAAA+qB,EAAA,GAEAt8B,EAAA,EAAiBA,EAAAwoD,GAAAI,GAAAF,EAA6C1oD,IAC9D4oD,GAAAF,EAGA,IAAAG,EAAA15C,EAAAg5C,GAYA,OAVAU,EAAAD,IACAT,EAAA,GACAU,EAAA,GAGAD,EAAAtsB,EAAAusB,EACAT,EAAAD,WACAC,EAAAS,gBACAT,EAAAQ,eACAR,EAAA9rB,iBACA8rB,EAGA,SAAAE,EAAAQ,EAAAV,GACA,IAAA9rB,EAAA8rB,EAAA9rB,eACAurB,EAAAO,EAAAP,KACAe,EAAAR,EAAAQ,aAEA,IAAAtsB,EACA,SAGA,IAAAha,EAAAnT,EAAA25C,EAAAjB,GAEA,GAAAvlC,GAAAga,EACA,OAAAwsB,EAGA,QAAA1zB,EAAA,GAAkBA,IAAA,CAClB,GAAA9S,GAAAsmC,GAAAxzB,GAAAgzB,EAAAG,cAAA,CACAO,GAAAV,EAAAD,SACA,MAGA,IAAAY,EAAA,IAAA3zB,EAAA4zB,EAAAF,EAAAF,EAAAR,EAAAM,aAAAN,EAAAK,aAAAnmC,EAAA,EAAAlR,KAAAod,MAAAs6B,EAAA5oD,OAAA0oD,EAAAtmC,GAAA,EAEAA,EAAAnT,EADA25C,IAAAnoB,OAAA,EAAAooB,GACAlB,GAOA,MAJA,KAAAiB,IACAA,EAAAV,EAAAO,aAGAG,EAGA,SAAAE,EAAAn9B,EAAA+8B,EAAAF,EAAAD,GAIA,IAHA,IAAAv+C,EAAA,EACAlK,EAAA,EAEAC,EAAA4rB,EAAA3rB,OAA6BF,EAAAC,GAAAiK,EAAA0+C,EAAiC5oD,IAAA,CAC9D,IAAAipD,EAAAp9B,EAAAq9B,WAAAlpD,GACAkK,GAAA,GAAA++C,MAAA,IAAAP,EAAAD,EAGA,OAAAzoD,EASA,SAAAmpD,EAAAtB,GAEA,OAAA14C,EAAA,SAAA04C,GAUA,SAAAG,EAAAn8B,EAAAg8B,GACA,OAAApoD,EAAAuoD,YAAAn8B,EAAAg8B,GAmBA,SAAAuB,EAAAv9B,EAAAg8B,EAAAwB,EAAAC,GACA,MAAAz9B,OAAA,IACA,IAAA09B,EAAAJ,EAAAtB,GACA2B,EAAA39B,IAAAhV,MAAA,SACA1M,EAAAq/C,EAAAtpD,OAAAqpD,EACAE,EAAAt/C,EAMA,GAJAk/C,IACAI,GAAAJ,EAAA,GAAAA,EAAA,IAGAx9B,GAAAy9B,EAAA,CACA,IAAAI,EAAAJ,EAAAG,YACAE,EAAAL,EAAAM,WAEA,SAAAF,GAAAD,EAAAC,EACA79B,EAAA,GACA29B,EAAA,QACK,SAAAG,EAOL,IANA,IAAAvB,EAAAC,EAAAsB,GAAAN,IAAA,GAAAA,EAAA,MAAAxB,EAAAyB,EAAAnB,SAAA,CACAK,QAAAc,EAAAd,QACAG,YAAAW,EAAAX,cAIA3oD,EAAA,EAAAC,EAAAupD,EAAAtpD,OAAyCF,EAAAC,EAASD,IAClDwpD,EAAAxpD,GAAAsoD,EAAAkB,EAAAxpD,GAAAooD,GAKA,OACAoB,QACAr/C,SACAs/C,cACAF,cAmCA,SAAAM,EAAAh+B,EAAArZ,GACA,IAAAs3C,EAAA,CACAN,MAAA,GACAt/C,MAAA,EACAC,OAAA,GAIA,GAFA,MAAA0hB,OAAA,KAEAA,EACA,OAAAi+B,EAMA,IAHA,IACAlqD,EADAmqD,EAAApC,EAAAoC,UAAA,EAGA,OAAAnqD,EAAA+nD,EAAA71B,KAAAjG,KAAA,CACA,IAAAm+B,EAAApqD,EAAA4L,MAEAw+C,EAAAD,GACAE,EAAAH,EAAAj+B,EAAAq+B,UAAAH,EAAAC,IAGAC,EAAAH,EAAAlqD,EAAA,GAAAA,EAAA,IACAmqD,EAAApC,EAAAoC,UAGAA,EAAAl+B,EAAA3rB,QACA+pD,EAAAH,EAAAj+B,EAAAq+B,UAAAH,EAAAl+B,EAAA3rB,SAGA,IAAAspD,EAAAM,EAAAN,MACAW,EAAA,EACAvB,EAAA,EAEAwB,EAAA,GACAC,EAAA73C,EAAAsV,YACAwhC,EAAA92C,EAAA82C,SACAgB,EAAAhB,KAAAM,WACAW,EAAAjB,KAAAG,YAEAY,IACA,MAAAC,OAAAD,EAAA,GAAAA,EAAA,IACA,MAAAE,OAAAF,EAAA,GAAAA,EAAA,KAIA,QAAArqD,EAAA,EAAiBA,EAAAwpD,EAAAtpD,OAAkBF,IAAA,CAKnC,IAJA,IAAA+5B,EAAAyvB,EAAAxpD,GACAupD,EAAA,EACAjnC,EAAA,EAEA8S,EAAA,EAAmBA,EAAA2E,EAAAywB,OAAAtqD,OAAwBk1B,IAAA,CAC3C,IACAq1B,GADAC,EAAA3wB,EAAAywB,OAAAp1B,IACAu1B,WAAAn4C,EAAA+T,KAAAmkC,EAAAC,YAAA,GAEA7iC,EAAA4iC,EAAA5iC,YAAA2iC,EAAA3iC,YAEA+/B,EAAA6C,EAAA7C,KAAA4C,EAAA5C,MAAAr1C,EAAAq1C,KAEA+C,EAAAF,EAAAhjC,WAAA9iB,EAEA6lD,EAAA/iC,WAAAyhC,EAAAtB,IAOA,GANA//B,IAAA8iC,GAAA9iC,EAAA,GAAAA,EAAA,IACA4iC,EAAAvgD,OAAAygD,EACAF,EAAAnB,WAAAxkD,EAAA0lD,EAAAjjC,eAAAhV,EAAAgV,eAAAojC,GACAF,EAAApjC,UAAAmjC,KAAAnjC,WAAA9U,EAAA8U,UACAojC,EAAAnjC,kBAAAkjC,KAAAljC,mBAAA,SAEA,MAAAgjC,GAAAJ,EAAAO,EAAAnB,WAAAgB,EACA,OACAf,MAAA,GACAt/C,MAAA,EACAC,OAAA,GAIAugD,EAAAjjC,UAAAtY,EAAAu7C,EAAA7+B,KAAAg8B,GACA,IAAAgD,EAAAJ,EAAAhjC,UACAqjC,EAAA,MAAAD,GAAA,SAAAA,EAGA,qBAAAA,GAAA,MAAAA,EAAA3pB,OAAA2pB,EAAA3qD,OAAA,GACAwqD,EAAAK,aAAAF,EACAT,EAAAlmD,KAAAwmD,GACAG,EAAA,MAEO,CACP,GAAAC,EAAA,CACAD,EAAAH,EAAAjjC,UAGA,IAAAI,EAAA4iC,EAAA5iC,oBACAmjC,EAAAnjC,KAAAlV,MAWAq4C,IACAA,EAAA1D,EAAA2D,eAAAD,GAEA1D,EAAA4D,aAAAF,KACAH,EAAAz5C,KAAAG,IAAAs5C,EAAAG,EAAA9gD,MAAA0gD,EAAAI,EAAA7gD,UAKA,IAAAghD,EAAArjC,IAAA,GAAAA,EAAA,KACA+iC,GAAAM,EACA,IAAAC,EAAA,MAAAd,IAAAhoC,EAAA,KAEA,MAAA8oC,KAAAP,KACAC,GAAAM,EAAAD,GACAT,EAAA7+B,KAAA,GACA6+B,EAAAjjC,UAAAojC,EAAA,IAEAH,EAAA7+B,KAAA+U,EAAA8pB,EAAA7+B,KAAAu/B,EAAAD,EAAAtD,EAAAyB,EAAAnB,SAAA,CACAK,QAAAc,EAAAd,UAEAkC,EAAAjjC,UAAAtY,EAAAu7C,EAAA7+B,KAAAg8B,GACAgD,EAAAH,EAAAjjC,UAAA0jC,IAKA7oC,GAAAooC,EAAAxgD,MAAA2gD,EACAJ,IAAAlB,EAAAn4C,KAAAG,IAAAg4C,EAAAmB,EAAAnB,aAGAxvB,EAAA7vB,MAAAoY,EACAyX,EAAAwvB,aACAY,GAAAZ,EACAX,EAAAx3C,KAAAG,IAAAq3C,EAAAtmC,GAGAwnC,EAAAF,WAAAE,EAAA5/C,MAAAtF,EAAA4N,EAAAiV,UAAAmhC,GACAkB,EAAAL,YAAAK,EAAA3/C,OAAAvF,EAAA4N,EAAAkV,WAAAyiC,GAEAE,IACAP,EAAAF,YAAAS,EAAA,GAAAA,EAAA,GACAP,EAAAL,aAAAY,EAAA,GAAAA,EAAA,IAGA,IAAArqD,EAAA,EAAiBA,EAAAoqD,EAAAlqD,OAAwBF,IAAA,CACzC,IAAA0qD,EACAK,GADAL,EAAAN,EAAApqD,IACA+qD,aAEAL,EAAAxgD,MAAAmhD,SAAAN,EAAA,QAAAnC,EAGA,OAAAkB,EAGA,SAAAG,EAAAqB,EAAA7lD,EAAAklD,GAKA,IAJA,IAAAY,EAAA,KAAA9lD,EACA+lD,EAAA/lD,EAAAoR,MAAA,MACA2yC,EAAA8B,EAAA9B,MAEAxpD,EAAA,EAAiBA,EAAAwrD,EAAAtrD,OAAiBF,IAAA,CAClC,IAAA6rB,EAAA2/B,EAAAxrD,GACA0qD,EAAA,CACAC,YACA9+B,OACA4/B,cAAA5/B,IAAA0/B,GAGA,GAAAvrD,EAkBAwpD,EAAAtlD,KAAA,CACAsmD,OAAA,CAAAE,SAnBA,CACA,IAAAF,GAAAhB,IAAAtpD,OAAA,KAAAspD,EAAA,IACAgB,OAAA,MACOA,OAQPkB,EAAAlB,EAAAtqD,OACA,IAAAwrD,GAAAlB,EAAA,GAAAiB,aAAAjB,EAAA,GAAAE,GAEA7+B,IAAA6/B,GAAAH,IAAAf,EAAAtmD,KAAAwmD,KA9QAjrD,EAAAuoD,YAAA,SAAAn8B,EAAAg8B,GACA,IAAAvjB,EAAAjhC,IAEA,OADAihC,EAAAujB,QAAAD,EACAtjB,EAAA0jB,YAAAn8B,IA8RA/oB,EAAA8kD,eACA9kD,EAAAC,UAlpBA,SAAAC,EAAAC,GACAxD,EAAAuD,GAAAC,GAkpBAH,EAAAqM,WACArM,EAAA8e,gBAnmBA,SAAAiK,EAAAg8B,EAAAvgC,EAAAC,EAAAO,EAAAvB,EAAA+iC,GACA,OAAA/iC,EAmBA,SAAAsF,EAAAg8B,EAAAvgC,EAAAC,EAAAO,EAAAvB,EAAA+iC,GACA,IAAAQ,EAAAD,EAAAh+B,EAAA,CACAtF,OACA+iC,WACAzB,OACAvgC,YACAQ,gBAEA8hC,EAAAE,EAAAF,WACAH,EAAAK,EAAAL,YACAh3C,EAAAw1C,EAAA,EAAA2B,EAAAtiC,GACA5U,EAAAw1C,EAAA,EAAAuB,EAAAliC,GACA,WAAArG,EAAAzO,EAAAC,EAAAk3C,EAAAH,GA/BAkC,CAAA9/B,EAAAg8B,EAAAvgC,EAAAC,EAAAO,EAAAvB,EAAA+iC,GAGA,SAAAz9B,EAAAg8B,EAAAvgC,EAAAC,EAAAO,EAAAwhC,GACA,IAAAQ,EAAAV,EAAAv9B,EAAAg8B,EAAA//B,EAAAwhC,GACAM,EAAAz6C,EAAA0c,EAAAg8B,GAEA//B,IACA8hC,GAAA9hC,EAAA,GAAAA,EAAA,IAGA,IAAA2hC,EAAAK,EAAAL,YACAh3C,EAAAw1C,EAAA,EAAA2B,EAAAtiC,GACA5U,EAAAw1C,EAAA,EAAAuB,EAAAliC,GACA/F,EAAA,IAAAN,EAAAzO,EAAAC,EAAAk3C,EAAAH,GAEA,OADAjoC,EAAA+nC,WAAAO,EAAAP,WACA/nC,EAhBAoqC,CAAA//B,EAAAg8B,EAAAvgC,EAAAC,EAAAO,EAAAwhC,IAmmBAxmD,EAAAmlD,cACAnlD,EAAAolD,cACAplD,EAAA+oD,yBAthBA,SAAAjmC,EAAApE,EAAAkd,GACA,IAAAjsB,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAvI,EAAAqX,EAAArX,OACAD,EAAAsX,EAAAtX,MACA4hD,EAAA3hD,EAAA,EACAmd,EAAA,OACAC,EAAA,MAEA,OAAA3B,GACA,WACAnT,GAAAisB,EACAhsB,GAAAo5C,EACAxkC,EAAA,QACAC,EAAA,SACA,MAEA,YACA9U,GAAAisB,EAAAx0B,EACAwI,GAAAo5C,EACAvkC,EAAA,SACA,MAEA,UACA9U,GAAAvI,EAAA,EACAwI,GAAAgsB,EACApX,EAAA,SACAC,EAAA,SACA,MAEA,aACA9U,GAAAvI,EAAA,EACAwI,GAAAvI,EAAAu0B,EACApX,EAAA,SACA,MAEA,aACA7U,GAAAvI,EAAA,EACAwI,GAAAo5C,EACAxkC,EAAA,SACAC,EAAA,SACA,MAEA,iBACA9U,GAAAisB,EACAhsB,GAAAo5C,EACAvkC,EAAA,SACA,MAEA,kBACA9U,GAAAvI,EAAAw0B,EACAhsB,GAAAo5C,EACAxkC,EAAA,QACAC,EAAA,SACA,MAEA,gBACA9U,GAAAvI,EAAA,EACAwI,GAAAgsB,EACApX,EAAA,SACA,MAEA,mBACA7U,GAAAvI,EAAA,EACAwI,GAAAvI,EAAAu0B,EACApX,EAAA,SACAC,EAAA,SACA,MAEA,oBACA9U,GAAAisB,EACAhsB,GAAAgsB,EACA,MAEA,qBACAjsB,GAAAvI,EAAAw0B,EACAhsB,GAAAgsB,EACApX,EAAA,QACA,MAEA,uBACA7U,GAAAisB,EACAhsB,GAAAvI,EAAAu0B,EACAnX,EAAA,SACA,MAEA,wBACA9U,GAAAvI,EAAAw0B,EACAhsB,GAAAvI,EAAAu0B,EACApX,EAAA,QACAC,EAAA,SAIA,OACA9U,IACAC,IACA4U,YACAC,sBAqbAzkB,EAAA89B,eACA99B,EAAAqmD,gBACArmD,EAAAklD,cACAllD,EAAAsmD,iBACAtmD,EAAA+mD,gBACA/mD,EAAAipD,SApBA,SAAAv5C,GAGA,IAAAq1C,GAAAr1C,EAAA4U,UAAA5U,EAAA6U,aAAA,CAAA7U,EAAA0U,UAAA1U,EAAA2U,YAAA3U,EAAA4U,UAAA,SACA5U,EAAA6U,YAAA,cAAA8E,KAAA,KACA,OAAA07B,GAAAriD,EAAAqiD,IAAAr1C,EAAAw5C,UAAAx5C,EAAAq1C,6BCjqBA,IAAAoE,EAAU9lD,EAAQ,KAElB+lD,EAAA,CACAC,YAAA,UACAC,UAAA,gBACAC,aAAA,gBACAC,KAAA,cACAC,WAAA,gBACAC,MAAA,gBACAC,MAAA,gBACAC,OAAA,gBACAC,MAAA,UACAC,eAAA,gBACAC,KAAA,YACAC,WAAA,eACAC,MAAA,cACAC,UAAA,gBACAC,UAAA,eACAC,WAAA,cACAC,UAAA,eACAC,MAAA,eACAC,eAAA,gBACAC,SAAA,gBACAC,QAAA,cACAC,KAAA,cACAC,SAAA,YACAC,SAAA,cACAC,cAAA,eACAC,SAAA,gBACAC,UAAA,YACAC,SAAA,gBACAC,UAAA,gBACAC,YAAA,cACAC,eAAA,cACAC,WAAA,cACAC,WAAA,eACAC,QAAA,YACAC,WAAA,gBACAC,aAAA,gBACAC,cAAA,cACAC,cAAA,aACAC,cAAA,aACAC,cAAA,cACAC,WAAA,cACAC,SAAA,eACAC,YAAA,cACAC,QAAA,gBACAC,QAAA,gBACAC,WAAA,eACAC,UAAA,cACAC,YAAA,gBACAC,YAAA,cACAC,QAAA,cACAC,UAAA,gBACAC,WAAA,gBACAC,KAAA,cACAC,UAAA,eACAC,KAAA,gBACAC,MAAA,YACAC,YAAA,eACAC,KAAA,gBACAC,SAAA,gBACAC,QAAA,gBACAC,UAAA,cACAC,OAAA,aACAC,MAAA,gBACAC,MAAA,gBACAC,SAAA,gBACAC,cAAA,gBACAC,UAAA,cACAC,aAAA,gBACAC,UAAA,gBACAC,WAAA,gBACAC,UAAA,gBACAC,qBAAA,gBACAC,UAAA,gBACAC,WAAA,gBACAC,UAAA,gBACAC,UAAA,gBACAC,YAAA,gBACAC,cAAA,eACAC,aAAA,gBACAC,eAAA,gBACAC,eAAA,gBACAC,eAAA,gBACAC,YAAA,gBACAC,KAAA,YACAC,UAAA,cACAC,MAAA,gBACAC,QAAA,cACAC,OAAA,YACAC,iBAAA,gBACAC,WAAA,YACAC,aAAA,eACAC,aAAA,gBACAC,eAAA,eACAC,gBAAA,gBACAC,kBAAA,cACAC,gBAAA,eACAC,gBAAA,eACAC,aAAA,cACAC,UAAA,gBACAC,UAAA,gBACAC,SAAA,gBACAC,YAAA,gBACAC,KAAA,YACAC,QAAA,gBACAC,MAAA,cACAC,UAAA,eACAC,OAAA,cACAC,UAAA,aACAC,OAAA,gBACAC,cAAA,gBACAC,UAAA,gBACAC,cAAA,gBACAC,cAAA,gBACAC,WAAA,gBACAC,UAAA,gBACAC,KAAA,eACAC,KAAA,gBACAC,KAAA,gBACAC,WAAA,gBACAC,OAAA,cACAC,IAAA,YACAC,UAAA,gBACAC,UAAA,eACAC,YAAA,cACAC,OAAA,gBACAC,WAAA,eACAC,SAAA,cACAC,SAAA,gBACAC,OAAA,cACAC,OAAA,gBACAC,QAAA,gBACAC,UAAA,eACAC,UAAA,gBACAC,UAAA,gBACAC,KAAA,gBACAC,YAAA,cACAC,UAAA,eACAC,IAAA,gBACAC,KAAA,cACAC,QAAA,gBACAC,OAAA,cACAC,UAAA,eACAC,OAAA,gBACAC,MAAA,gBACAC,MAAA,gBACAC,WAAA,gBACAC,OAAA,cACAC,YAAA,gBAGA,SAAAC,EAAAv1D,GAIA,OAFAA,EAAAoR,KAAAgQ,MAAAphB,IAEA,IAAAA,EAAA,QAAAA,EAUA,SAAAw1D,EAAAljC,GAEA,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAGA,SAAAmjC,EAAAhwD,GAEA,OAAAA,EAAAvF,QAAA,MAAAuF,EAAAy7B,OAAAz7B,EAAAvF,OAAA,GACAq1D,EAAAnmC,WAAA3pB,GAAA,SAGA8vD,EAAAlK,SAAA5lD,EAAA,KAGA,SAAAiwD,EAAAjwD,GAEA,OAAAA,EAAAvF,QAAA,MAAAuF,EAAAy7B,OAAAz7B,EAAAvF,OAAA,GACAs1D,EAAApmC,WAAA3pB,GAAA,KAGA+vD,EAAApmC,WAAA3pB,IAGA,SAAAkwD,EAAA7kB,EAAAC,EAAAlU,GAOA,OANAA,EAAA,EACAA,GAAA,EACGA,EAAA,IACHA,GAAA,GAGA,EAAAA,EAAA,EACAiU,GAAAC,EAAAD,GAAAjU,EAAA,EAGA,EAAAA,EAAA,EACAkU,EAGA,EAAAlU,EAAA,EACAiU,GAAAC,EAAAD,IAAA,IAAAjU,GAAA,EAGAiU,EAGA,SAAA8kB,EAAA9vD,EAAAC,EAAA8vD,GACA,OAAA/vD,GAAAC,EAAAD,GAAA+vD,EAGA,SAAAC,EAAA92B,EAAAqhB,EAAAjzB,EAAArnB,EAAAD,GAKA,OAJAk5B,EAAA,GAAAqhB,EACArhB,EAAA,GAAA5R,EACA4R,EAAA,GAAAj5B,EACAi5B,EAAA,GAAAl5B,EACAk5B,EAGA,SAAA+2B,EAAA/2B,EAAAl5B,GAKA,OAJAk5B,EAAA,GAAAl5B,EAAA,GACAk5B,EAAA,GAAAl5B,EAAA,GACAk5B,EAAA,GAAAl5B,EAAA,GACAk5B,EAAA,GAAAl5B,EAAA,GACAk5B,EAGA,IAAAg3B,EAAA,IAAA/J,EAAA,IACAgK,EAAA,KAEA,SAAAC,EAAAC,EAAAC,GAEAH,GACAF,EAAAE,EAAAG,GAGAH,EAAAD,EAAAK,IAAAF,EAAAF,GAAAG,EAAAh3D,SAUA,SAAAqV,EAAA0hD,EAAAC,GACA,GAAAD,EAAA,CAIAC,KAAA,GACA,IAAAE,EAAAN,EAAApzD,IAAAuzD,GAEA,GAAAG,EACA,OAAAP,EAAAK,EAAAE,GAMA,IAsBAC,EAtBA9wD,GAFA0wD,GAAA,IAEAzwD,QAAA,SAAAyD,cAEA,GAAA1D,KAAAymD,EAGA,OAFA6J,EAAAK,EAAAlK,EAAAzmD,IACAywD,EAAAC,EAAAC,GACAA,EAIA,SAAA3wD,EAAAy7B,OAAA,GACA,WAAAz7B,EAAAvF,QACAq2D,EAAAlL,SAAA5lD,EAAAk7B,OAAA,SAEA,GAAA41B,GAAA,MAKAT,EAAAM,GAAA,KAAAG,IAAA,QAAAA,IAAA,MAAAA,GAAA,IAAAA,IAAA,KAAAA,GAAA,GAAAA,IAAA,KACAL,EAAAC,EAAAC,GACAA,QANAN,EAAAM,EAAA,SAOK,IAAA3wD,EAAAvF,QACLq2D,EAAAlL,SAAA5lD,EAAAk7B,OAAA,SAEA,GAAA41B,GAAA,UAKAT,EAAAM,GAAA,SAAAG,IAAA,UAAAA,IAAA,MAAAA,EAAA,GACAL,EAAAC,EAAAC,GACAA,QANAN,EAAAM,EAAA,cASA,EAGA,IAAAI,EAAA/wD,EAAAnC,QAAA,KACAmzD,EAAAhxD,EAAAnC,QAAA,KAEA,QAAAkzD,GAAAC,EAAA,IAAAhxD,EAAAvF,OAAA,CACA,IAAAw2D,EAAAjxD,EAAAk7B,OAAA,EAAA61B,GACA57C,EAAAnV,EAAAk7B,OAAA61B,EAAA,EAAAC,GAAAD,EAAA,IAAA3/C,MAAA,KACA8/C,EAAA,EAEA,OAAAD,GACA,WACA,OAAA97C,EAAA1a,OAEA,YADA41D,EAAAM,EAAA,SAIAO,EAAAjB,EAAA96C,EAAA7D,OAIA,UACA,WAAA6D,EAAA1a,YACA41D,EAAAM,EAAA,UAIAN,EAAAM,EAAAX,EAAA76C,EAAA,IAAA66C,EAAA76C,EAAA,IAAA66C,EAAA76C,EAAA,IAAA+7C,GACAT,EAAAC,EAAAC,GACAA,GAEA,WACA,WAAAx7C,EAAA1a,YACA41D,EAAAM,EAAA,UAIAx7C,EAAA,GAAA86C,EAAA96C,EAAA,IACAg8C,EAAAh8C,EAAAw7C,GACAF,EAAAC,EAAAC,GACAA,GAEA,UACA,WAAAx7C,EAAA1a,YACA41D,EAAAM,EAAA,UAIAQ,EAAAh8C,EAAAw7C,GACAF,EAAAC,EAAAC,GACAA,GAEA,QACA,QAIAN,EAAAM,EAAA,UAUA,SAAAQ,EAAAC,EAAAC,GACA,IAAAj6B,GAAAzN,WAAAynC,EAAA,qBAIAx3B,EAAAq2B,EAAAmB,EAAA,IACA9O,EAAA2N,EAAAmB,EAAA,IACA9lB,EAAAgX,GAAA,GAAAA,GAAA1oB,EAAA,GAAA0oB,EAAA1oB,EAAA0oB,EAAA1oB,EACAyR,EAAA,EAAAiX,EAAAhX,EAQA,OANA+kB,EADAgB,KAAA,GACAvB,EAAA,IAAAI,EAAA7kB,EAAAC,EAAAlU,EAAA,MAAA04B,EAAA,IAAAI,EAAA7kB,EAAAC,EAAAlU,IAAA04B,EAAA,IAAAI,EAAA7kB,EAAAC,EAAAlU,EAAA,SAEA,IAAAg6B,EAAA32D,SACA42D,EAAA,GAAAD,EAAA,IAGAC,EAsHA,SAAAC,EAAAC,EAAAC,EAAAj4B,GACA,GAAAi4B,KAAA/2D,QAAA82D,GAAA,GAAAA,GAAA,GAIAh4B,KAAA,GACA,IAAAj9B,EAAAi1D,GAAAC,EAAA/2D,OAAA,GACAg3D,EAAA9lD,KAAAod,MAAAzsB,GACAo1D,EAAA/lD,KAAAg2C,KAAArlD,GACAq1D,EAAAH,EAAAC,GACAG,EAAAJ,EAAAE,GACAG,EAAAv1D,EAAAm1D,EAKA,OAJAl4B,EAAA,GAAAu2B,EAAAK,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,IACAt4B,EAAA,GAAAu2B,EAAAK,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,IACAt4B,EAAA,GAAAu2B,EAAAK,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,IACAt4B,EAAA,GAAAw2B,EAAAI,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,IACAt4B,GAOA,IAAAu4B,EAAAR,EAUA,SAAAt3B,EAAAu3B,EAAAC,EAAAO,GACA,GAAAP,KAAA/2D,QAAA82D,GAAA,GAAAA,GAAA,GAIA,IAAAj1D,EAAAi1D,GAAAC,EAAA/2D,OAAA,GACAg3D,EAAA9lD,KAAAod,MAAAzsB,GACAo1D,EAAA/lD,KAAAg2C,KAAArlD,GACAq1D,EAAA3iD,EAAAwiD,EAAAC,IACAG,EAAA5iD,EAAAwiD,EAAAE,IACAG,EAAAv1D,EAAAm1D,EACAt0C,EAAAlO,EAAA,CAAA6gD,EAAAK,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,IAAA/B,EAAAK,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,IAAA/B,EAAAK,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,IAAA9B,EAAAI,EAAAwB,EAAA,GAAAC,EAAA,GAAAC,KAAA,QACA,OAAAE,EAAA,CACA50C,QACAs0C,YACAC,aACAp1D,SACG6gB,GAOH,IAAA60C,EAAAh4B,EA4CA,SAAA/qB,EAAAgjD,EAAA11D,GACA,GAAA01D,KAAAx3D,OAAA,CAIA,IAAAi2D,EAAAuB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAMA,MAJA,SAAA11D,GAAA,SAAAA,GAAA,SAAAA,IACAm0D,GAAA,IAAAuB,EAAA,IAGA11D,EAAA,IAAAm0D,EAAA,KAGArzD,EAAA2R,QACA3R,EAAA+f,KAhKA,SAAAD,EAAA+0C,GACA,IAAAnjD,EAAAC,EAAAmO,GAEA,GAAApO,EAAA,CACA,QAAAxU,EAAA,EAAmBA,EAAA,EAAOA,IAE1BwU,EAAAxU,GADA23D,EAAA,EACAnjD,EAAAxU,IAAA,EAAA23D,GAAA,GAEA,IAAAnjD,EAAAxU,IAAA23D,EAAAnjD,EAAAxU,GAAA,EAGAwU,EAAAxU,GAAA,IACAwU,EAAAxU,GAAA,IACO4iB,EAAA5iB,GAAA,IACPwU,EAAAxU,GAAA,GAIA,OAAA0U,EAAAF,EAAA,IAAAA,EAAAtU,OAAA,gBA+IA4C,EAAA80D,MArIA,SAAAh1C,GACA,IAAApO,EAAAC,EAAAmO,GAEA,GAAApO,EACA,gBAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAAA5V,SAAA,IAAAQ,MAAA,IAkIA0D,EAAAi0D,WACAj0D,EAAAy0D,iBACAz0D,EAAA28B,OACA38B,EAAA20D,aACA30D,EAAA+0D,UAvDA,SAAAj1C,EAAAia,EAAAwC,EAAA0oB,GAGA,GAFAnlC,EAAAnO,EAAAmO,GAOA,OAJAA,EArLA,SAAAk0C,GACA,GAAAA,EAAA,CAKA,IAUAgB,EACA31B,EAXA41B,EAAAjB,EAAA,OACAkB,EAAAlB,EAAA,OACAmB,EAAAnB,EAAA,OACAoB,EAAA9mD,KAAAC,IAAA0mD,EAAAC,EAAAC,GAEAE,EAAA/mD,KAAAG,IAAAwmD,EAAAC,EAAAC,GAEAG,EAAAD,EAAAD,EAEAG,GAAAF,EAAAD,GAAA,EAIA,OAAAE,EACAN,EAAA,EACA31B,EAAA,MACG,CAEHA,EADAk2B,EAAA,GACAD,GAAAD,EAAAD,GAEAE,GAAA,EAAAD,EAAAD,GAGA,IAAAI,IAAAH,EAAAJ,GAAA,EAAAK,EAAA,GAAAA,EACAG,IAAAJ,EAAAH,GAAA,EAAAI,EAAA,GAAAA,EACAI,IAAAL,EAAAF,GAAA,EAAAG,EAAA,GAAAA,EAEAL,IAAAI,EACAL,EAAAU,EAAAD,EACKP,IAAAG,EACLL,EAAA,IAAAQ,EAAAE,EACKP,IAAAE,IACLL,EAAA,IAAAS,EAAAD,GAGAR,EAAA,IACAA,GAAA,GAGAA,EAAA,IACAA,GAAA,GAIA,IAAAjB,EAAA,KAAAiB,EAAA31B,EAAAk2B,GAMA,OAJA,MAAAvB,EAAA,IACAD,EAAA3yD,KAAA4yD,EAAA,IAGAD,GA6HA4B,CAAA71C,GACA,MAAAia,IAAAja,EAAA,IA9ZA5iB,EA8ZA68B,GA5ZA78B,EAAAoR,KAAAgQ,MAAAphB,IAEA,IAAAA,EAAA,QAAAA,IA2ZA,MAAAq/B,IAAAzc,EAAA,GAAA8yC,EAAAr2B,IACA,MAAA0oB,IAAAnlC,EAAA,GAAA8yC,EAAA3N,IACArzC,EAAAkiD,EAAAh0C,GAAA,QAjaA,IAAA5iB,GAidA8C,EAAA41D,YArCA,SAAA91C,EAAA+zC,GAGA,IAFA/zC,EAAAnO,EAAAmO,KAEA,MAAA+zC,EAEA,OADA/zC,EAAA,GAAA4yC,EAAAmB,GACAjiD,EAAAkO,EAAA,SAiCA9f,EAAA4R,6BClnBA,IAAAhO,EAAeP,EAAQ,KAEvBrD,EAAA61D,WAAAjyD,EAEA,IAAAF,EAAUL,EAAQ,KAQlByyD,EAAA,qBAAAppD,iBAAAqpD,iBACAC,EAAA,iDAWA,SAAAC,EAAA7tD,EAAAiQ,EAAA6jB,EAAAg6B,GAiCA,OAhCAh6B,KAAA,GAWAg6B,IAAAxyD,EAAAkJ,gBACAupD,EAAA/tD,EAAAiQ,EAAA6jB,GAQAx4B,EAAAiU,QAAAytB,SAAA,MAAA/sB,EAAA+9C,QAAA/9C,EAAA+9C,SAAA/9C,EAAAg+C,SACAn6B,EAAAo6B,IAAAj+C,EAAA+9C,OACAl6B,EAAAq6B,IAAAl+C,EAAAm+C,QAEA,MAAAn+C,EAAAg+C,SACAn6B,EAAAo6B,IAAAj+C,EAAAg+C,QACAn6B,EAAAq6B,IAAAl+C,EAAAo+C,SAGAN,EAAA/tD,EAAAiQ,EAAA6jB,GAGAA,EAGA,SAAAi6B,EAAA/tD,EAAAiQ,EAAA6jB,GAEA,IAAAjD,EA/CA,SAAA7wB,GAEA,OAAAA,EAAAiH,sBAAAjH,EAAAiH,wBAAA,CACAV,KAAA,EACAE,IAAA,GA2CAQ,CAAAjH,GACA8zB,EAAAo6B,IAAAj+C,EAAAq+C,QAAAz9B,EAAAtqB,KACAutB,EAAAq6B,IAAAl+C,EAAAs+C,QAAA19B,EAAApqB,IA2FA,IAAA+nD,EAAAd,EAAA,SAAAz9C,GACAA,EAAAw+C,iBACAx+C,EAAAy+C,kBACAz+C,EAAA0+C,cAAA,GACC,SAAA1+C,GACDA,EAAA2+C,aAAA,EACA3+C,EAAA0+C,cAAA,GASA/2D,EAAAi2D,gBACAj2D,EAAAi3D,eAnGA,SAAA7uD,EAAAiQ,EAAA69C,GAGA,UAFA79C,KAAA3L,OAAAgI,OAEA4hD,IACA,OAAAj+C,EAGA,IAAAM,EAAAN,EAAAnZ,KAGA,GAFAyZ,KAAAnY,QAAA,YAKG,CACH,IAAA02D,EAAA,YAAAv+C,EAAAN,EAAA8+C,cAAA,GAAA9+C,EAAA++C,eAAA,GACAF,GAAAjB,EAAA7tD,EAAA8uD,EAAA7+C,EAAA69C,QAJAD,EAAA7tD,EAAAiQ,IAAA69C,GACA79C,EAAAg/C,QAAAh/C,EAAAi/C,WAAAj/C,EAAAi/C,WAAA,MAAAj/C,EAAAk/C,QAAA,KAUA,IAAAC,EAAAn/C,EAAAm/C,OAMA,OAJA,MAAAn/C,EAAAo/C,YAAAnkC,IAAAkkC,GAAAxB,EAAAh8C,KAAA3B,EAAAnZ,QACAmZ,EAAAo/C,MAAA,EAAAD,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGAn/C,GAwEArY,EAAA+1D,iBA/DA,SAAA3tD,EAAAlI,EAAAkG,GACA0vD,EAqBA1tD,EAAA2tD,iBAAA71D,EAAAkG,GAEAgC,EAAAsvD,YAAA,KAAAx3D,EAAAkG,IAwCApG,EAAA23D,oBApCA,SAAAvvD,EAAAlI,EAAAkG,GACA0vD,EACA1tD,EAAAuvD,oBAAAz3D,EAAAkG,GAEAgC,EAAAwvD,YAAA,KAAA13D,EAAAkG,IAiCApG,EAAA42D,OACA52D,EAAA63D,aAXA,SAAAx/C,GAEA,OAAAA,EAAAo/C,MAAA,oBCtKcp0D,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAqBrBy0D,EAAA,IACAC,EAAA,iCAMA,SAAA/yD,EAAA0I,GACA,IAAAsqD,EAAA,CACArjD,KAAA,GACAC,IAAA,IASA,OANAlH,IACAA,IAAAqG,MAAA+jD,GACAE,EAAArjD,KAAAjH,EAAA,OACAsqD,EAAApjD,IAAAlH,EAAA,QAGAsqD,EAuCA,IAAAC,EAAA,EAsBA,SAAAC,EAAAx5D,EAAAwL,GACA,IAAArL,EAAA2E,EAAAlH,MAAAwC,UAAA,GACA,OAAAa,KAAAqB,WAAAnF,UAAAqO,GAAAnL,MAAAL,EAAAG,GAGA,SAAAs5D,EAAAz5D,EAAAwL,EAAArL,GACA,OAAAc,KAAAqB,WAAAnF,UAAAqO,GAAAnL,MAAAL,EAAAG,GAkJAmB,EAAAgF,iBACAhF,EAAA2nC,kBAvMA,SAAAywB,EAAAC,GACAD,EAAAhyB,aAAAgyB,EAEAA,EAAA93D,OAAA,SAAAg4D,GACA,IAAAt3D,EAAArB,KAEA44D,EAAA,WACAD,EAAAlyB,aAGAkyB,EAAAlyB,aAAArnC,MAAAY,KAAAb,WAFAkC,EAAAjC,MAAAY,KAAAb,YAYA,OANA0E,EAAAlD,OAAAi4D,EAAA18D,UAAAy8D,GACAC,EAAAj4D,OAAAX,KAAAW,OACAi4D,EAAAL,YACAK,EAAAJ,aACA30D,EAAA9C,SAAA63D,EAAA54D,MACA44D,EAAAv3D,aACAu3D,IAoLAv4D,EAAA4nC,iBAzKA,SAAA4wB,GACA,IAAAC,EAAA,cAAAR,IAAA3pD,KAAAskB,SAAAlG,QAAA,IAAArD,KAAA,KACAmvC,EAAA38D,UAAA48D,IAAA,EAEAD,EAAArjB,WAAA,SAAA32C,GACA,SAAAA,MAAAi6D,MAqKAz4D,EAAA8lC,sBA3IA,SAAA4yB,EAAApT,GACAA,KAAA,GAUA,IAAAp4C,EAAA,GA2FA,GAzFAwrD,EAAAC,cAAA,SAAAlxB,EAAA/5B,GAaA,OAZAA,IApFA,SAAAA,GACAlK,EAAAlB,OAAA,qCAAA0X,KAAAtM,GAAA,kBAAAA,EAAA,aAoFAkrD,CAAAlrD,IACAA,EAAA1I,EAAA0I,IAEAkH,IAEOlH,EAAAkH,MAAAmjD,KAuEP,SAAArqD,GACA,IAAAmrD,EAAA3rD,EAAAQ,EAAAiH,MAOA,OALAkkD,KAAAd,MACAc,EAAA3rD,EAAAQ,EAAAiH,MAAA,IACAojD,IAAA,GAGAc,EA9EAC,CAAAprD,IACAA,EAAAkH,KAAA6yB,GAHAv6B,EAAAQ,EAAAiH,MAAA8yB,GAOAA,GAGAixB,EAAArjD,SAAA,SAAA0jD,EAAA9lD,EAAA+lD,GACA,IAAAvxB,EAAAv6B,EAAA6rD,GAMA,GAJAtxB,KAAAswB,KACAtwB,EAAAx0B,EAAAw0B,EAAAx0B,GAAA,MAGA+lD,IAAAvxB,EACA,UAAAhlC,MAAAwQ,EAAA,aAAA8lD,EAAA,KAAA9lD,GAAA,kCAAA8lD,EAAA,8BAGA,OAAAtxB,GAGAixB,EAAAlxB,qBAAA,SAAA95B,GACAA,EAAA1I,EAAA0I,GACA,IAAA5Q,EAAA,GACA0B,EAAA0O,EAAAQ,EAAAiH,MAUA,OARAnW,KAAAu5D,GACAv0D,EAAAjF,KAAAC,EAAA,SAAAy6D,EAAA/5D,GACAA,IAAA64D,GAAAj7D,EAAAsE,KAAA63D,KAGAn8D,EAAAsE,KAAA5C,GAGA1B,GAGA47D,EAAAzuB,SAAA,SAAAv8B,GAGA,OADAA,EAAA1I,EAAA0I,KACAR,EAAAQ,EAAAiH,OAOA+jD,EAAAQ,qBAAA,WACA,IAAAC,EAAA,GAIA,OAHA31D,EAAAjF,KAAA2O,EAAA,SAAA1O,EAAAU,GACAi6D,EAAA/3D,KAAAlC,KAEAi6D,GASAT,EAAAU,YAAA,SAAA1rD,GACAA,EAAA1I,EAAA0I,GACA,IAAAlP,EAAA0O,EAAAQ,EAAAiH,MACA,OAAAnW,KAAAu5D,IAGAW,EAAA1zD,iBAaAsgD,EAAAle,mBAAA,CACA,IAAAiyB,EAAAX,EAAAp4D,OAEA+4D,IACAX,EAAAp4D,OAAA,SAAAg4D,GACA,IAAAC,EAAAc,EAAAr8D,KAAA2C,KAAA24D,GACA,OAAAI,EAAAC,cAAAJ,EAAAD,EAAAp5D,QAKA,OAAAw5D,GA2BA14D,EAAAyoC,YApBA,SAAAjqC,EAAAkqC,sBCjPA,IAEAnqC,EAFY8E,EAAQ,KAEpB9E,KAEA+e,EAAYja,EAAQ,KAEpBuiC,EAAoBviC,EAAQ,KAE5Bi2D,EAAgBj2D,EAAQ,KAExBmB,EAAgBnB,EAAQ,KAIxB2lC,EAFY3lC,EAAQ,KAEpB2lC,WAEAuwB,EAA0Bl2D,EAAQ,KAqBlC2iC,EAAAxhC,EAAAmuB,YACA6mC,EAAAD,IAEA,SAAAE,IAKA95D,KAAAkH,MAAA,IAAAyW,EAMA3d,KAAA0S,IAAAuzB,EAAAU,OAAA,aACA3mC,KAAA6V,WAAAwzB,EAAA,CACAj2B,KAAA2mD,EACAhwB,MAAAiwB,IAEAh6D,KAAA6V,WAAA9W,QAAA,CACAmP,KAAAlO,MAIA85D,EAAA59D,UAAA,CACAqD,KAAA,QAOA+H,KAAA,SAAAmD,EAAAtC,KASA0J,OAAA,SAAAd,EAAAtG,EAAAtC,EAAAsJ,KASAwoD,UAAA,SAAAlpD,EAAAtG,EAAAtC,EAAAsJ,GACAyoD,EAAAnpD,EAAAC,UAAAS,EAAA,aAUA0oD,SAAA,SAAAppD,EAAAtG,EAAAtC,EAAAsJ,GACAyoD,EAAAnpD,EAAAC,UAAAS,EAAA,WAQAsE,OAAA,SAAAtL,EAAAtC,GACAnI,KAAAkH,MAAAkzD,aAQAtkD,QAAA,aASAukD,yBAAA,KASAC,kBAAA,KAUAnoD,gBAAA,MAUA,IAAAooD,EAAAT,EAAA59D,UAYA,SAAAs+D,EAAA/xD,EAAAgyD,GACA,GAAAhyD,IACAA,EAAAsB,QAAA0wD,GAEA,UAAAhyD,EAAAlJ,MACA,QAAAhC,EAAA,EAAqBA,EAAAkL,EAAAiyD,aAAqBn9D,IAC1Ci9D,EAAA/xD,EAAAwwB,QAAA17B,GAAAk9D,GAYA,SAAAP,EAAA14D,EAAAiQ,EAAAgpD,GACA,IAAAtpD,EAAAtM,EAAAiuB,eAAAtxB,EAAAiQ,GAEA,MAAAN,EACAvS,EAAAiG,EAAA4O,iBAAAtC,GAAA,SAAAsqC,GACA+e,EAAAh5D,EAAAq7C,iBAAApB,GAAAgf,KAGAj5D,EAAAs7C,kBAAA,SAAAr0C,GACA+xD,EAAA/xD,EAAAgyD,KAgBA,SAAAV,EAAAh7D,GACA,OAAA86D,EAAA96D,EAAA0R,OAGA,SAAAupD,EAAAj7D,GACA,IAAAgS,EAAAhS,EAAA0R,MACAhG,EAAA1L,EAAA0L,QACAtC,EAAApJ,EAAAoJ,IACAsJ,EAAA1S,EAAA0S,QAEAkpD,EAAA5pD,EAAAu8B,gBAAAqtB,kBACAzsD,EAAAnP,EAAAmP,KACAmG,EAAA5C,GAAA40B,EAAA50B,GAAA4C,aACA9J,EAAAowD,EAAA,2BAAAtmD,GAAAnG,EAAAmG,KAEA,SAMA,MAJA,WAAA9J,GACA2D,EAAA3D,GAAAwG,EAAAtG,EAAAtC,EAAAsJ,GAGAmpD,EAAArwD,GA1EAgwD,EAAA1nD,WAAA0nD,EAAAvnD,aAAAunD,EAAAxnD,aAAA,SAAAhC,EAAAtG,EAAAtC,EAAAsJ,GACAzR,KAAA6R,OAAAd,EAAAtG,EAAAtC,EAAAsJ,IA0CAkoD,EAAA3xB,kBAAA8xB,EAAA,aAEAH,EAAAxzB,sBAAA2zB,EAAA,CACAryB,oBAAA,IAGAqyB,EAAAhnD,iBAAA,SAAArB,EAAAlH,GACA87B,EAAA50B,GAAA4C,aAAA9J,GA2BA,IAAAqwD,EAAA,CACAP,yBAAA,CACAQ,SAAA,SAAA1iD,EAAApZ,GACAA,EAAAmP,KAAAosD,kBAAAniD,EAAApZ,EAAA0R,MAAA1R,EAAA0L,QAAA1L,EAAAoJ,IAAApJ,EAAA0S,WAGAI,OAAA,CAKAipD,oBAAA,EACAD,SAAA,SAAA1iD,EAAApZ,GACAA,EAAAmP,KAAA2D,OAAA9S,EAAA0R,MAAA1R,EAAA0L,QAAA1L,EAAAoJ,IAAApJ,EAAA0S,YAIA2vB,EAAA04B,EACA3hC,EAAA93B,QAAA+gC,mBC3PA,IAAAv9B,EAAaH,EAAQ,KAErB+tC,EAAW/tC,EAAQ,KAEnBq3D,EAAuBr3D,EAAQ,KAI/Bs3D,EAFkBt3D,EAAQ,KAE1Bs3D,uBAIAC,EAFuBv3D,EAAQ,KAE/Bu3D,uBAIAhqC,EAFavtB,EAAQ,KAErButB,iBAEAnV,EAAuBpY,EAAQ,KAI/Bw3D,EAFmBx3D,EAAQ,KAE3Bw3D,0BAEArrB,EAAansC,EAAQ,KAIrBy3D,EAFuBz3D,EAAQ,KAE/By3D,gBAoHA,IAAA/5B,EAzFA,SAAAlkC,EAAA6T,EAAAgH,GACAA,KAAA,GAEA83B,EAAA2F,WAAAt4C,KACAA,EAAA2yC,EAAAurB,mBAAAl+D,IAGA,IAGAm+D,EAHAC,EAAAvqD,EAAA5Q,IAAA,oBACAo7D,EAAAz/C,EAAA3b,IAAAm7D,GACAE,EAAAN,EAAAnqD,GAGAyqD,IACAH,EAAAx3D,EAAAhH,IAAA2+D,EAAAC,aAAA,SAAAzvB,GACA,IAAAC,EAAA,CACA1rC,KAAAyrC,GAEAkY,EAAAsX,EAAAE,QAAAv7D,IAAA6rC,GAEA,GAAAkY,EAAA,CACA,IAAAH,EAAAG,EAAA/jD,IAAA,QACA8rC,EAAA1sC,KAAA07D,EAAAlX,GAGA,OAAA9X,KAIAovB,IAEAA,EAAAE,MAAAr/C,kBAAAq/C,EAAAr/C,oBAAAq/C,EAAAp/C,WAAAxf,UAAA,WAGA,IAIAg/D,EACAC,EALAC,EAAAd,EAAA79D,EAAA,CACA4+D,gBAAAT,EACAU,cAAAhkD,EAAAgkD,gBAIAP,GAAA33D,EAAAjF,KAAAi9D,EAAA,SAAA5vB,EAAAuH,GACA,IAAAzG,EAAAd,EAAAc,SACAivB,EAAAR,EAAAS,gBAAA97D,IAAA4sC,GAEAivB,IACA,MAAAL,IACAA,EAAAnoB,GAGAvH,EAAA6H,YAAAkoB,EAAAza,kBAGA,MAAAtV,EAAAC,UAAAyK,WACAilB,GAAA,KAIAA,GAAA,MAAAD,IACAE,EAAAF,GAAAzvB,UAAAyK,SAAA,GAGA,IAAAulB,EAAAf,EAAApqD,EAAA8qD,GACAvuD,EAAA,IAAAmkC,EAAAoqB,EAAA9qD,GACAzD,EAAAurC,mBAAAqjB,GACA,IAAA3mB,EAAA,MAAAomB,GASA,SAAAz+D,GACA,GAAAA,EAAAy4C,eAAAqlB,EAAA,CACA,IAAAmB,EAKA,SAAA36D,GAGA,IAFA,IAAAjE,EAAA,EAEAA,EAAAiE,EAAA/D,QAAA,MAAA+D,EAAAjE,IACAA,IAGA,OAAAiE,EAAAjE,GAZA6+D,CAAAl/D,EAAAsE,MAAA,IACA,aAAA26D,IAAAt4D,EAAAvF,QAAA2yB,EAAAkrC,KAZAE,CAAAn/D,GAAA,SAAAo/D,EAAAC,EAAAprD,EAAAqiC,GAEA,OAAAA,IAAAmoB,EAAAxqD,EAAAnR,KAAA01C,sBAAA4mB,EAAAC,EAAAprD,EAAAqiC,IACG,KAGH,OAFAlmC,EAAAwnC,eAAA,EACAxnC,EAAA+nC,SAAAn4C,EAAA,KAAAq4C,GACAjoC,GAqBA6qB,EAAA93B,QAAA+gC,mBCjJA,IAAA0jB,EAAYphD,EAAQ,KAEpB9E,EAAAkmD,EAAAlmD,KACAkD,EAAAgjD,EAAAhjD,SAoIA,SAAA06D,EAAAh7D,EAAAi7D,GAKA,QAAAA,OAAAj7D,EAAAo3C,mBAAA,oBAmBAv4C,EAAA86D,gBAnHA,SAAApqD,EAAAgsC,EAAAhlC,GAEA,IAIA2kD,EACAC,EACAC,EACAC,EAPAC,GADA/kD,KAAA,IACA+kD,QACAC,EAAAhlD,EAAAglD,sBAEAC,KAAAjsD,MAAA5Q,IAAA,UAkCA,GA7BAvB,EAAAm+C,EAAA,SAAAjL,EAAA/oC,GACAjH,EAAAgwC,KACAiL,EAAAh0C,GAAA+oC,EAAA,CACAvxC,KAAAuxC,IAIAkrB,IAAAlrB,EAAAmrB,eAEAH,GAAAJ,IAAA5qB,EAAAgC,cACA4oB,EAAA5qB,GAIA6qB,GAAA,YAAA7qB,EAAAvyC,MAAA,SAAAuyC,EAAAvyC,MAAAw9D,OAAAjrB,EAAA/E,WACA4vB,EAAA7qB,OAKA6qB,GAAAG,GAAAJ,IAGAI,GAAA,GAMAH,EAAA,CAEAC,EAAA,oBACAC,EAAA,oBAEAH,IACAA,EAAAzqB,uBAAA,GAGA,IAAAirB,EAAAP,EAAA5vB,SACAowB,EAAAR,EAAAp9D,KACA69D,EAAA,EACAx+D,EAAAm+C,EAAA,SAAAjL,GACAA,EAAA/E,WAAAmwB,GACAE,MAGArgB,EAAAt7C,KAAA,CACAlB,KAAAq8D,EACA7vB,SAAAmwB,EACAlrB,cAAAorB,EACA79D,KAAA49D,EACAF,cAAA,EACAI,oBAAA,IAEAD,IACArgB,EAAAt7C,KAAA,CACAlB,KAAAs8D,EAGA9vB,SAAA8vB,EACA7qB,cAAAorB,EACA79D,KAAA49D,EACAF,cAAA,EACAI,oBAAA,IAIA,OACAC,iBAAAX,KAAAp8D,KACAg9D,mBAAAb,KAAAn8D,KACAi9D,iBAAAV,EACAD,uBACAD,yBAkCAv8D,EAAAm8D,qBACAn8D,EAAAo9D,oBANA,SAAAj8D,EAAAk8D,GACA,OAAAlB,EAAAh7D,EAAAk8D,GAAAl8D,EAAAo3C,mBAAA,wBAAA8kB,2BC5JA,IAAAC,EAAcj6D,EAAQ,KAEtBk6D,EAAAD,EAAAhsD,OACAksD,EAAAF,EAAArhC,WAOAwhC,EAAAnvD,KAAA0f,IACA0vC,EAAApvD,KAAAmtB,KACAkiC,EAAA,KACAC,EAAA,KACAC,EAAAH,EAAA,GACAI,EAAA,IAEAC,EAAAR,IAEAS,EAAAT,IAEAU,EAAAV,IAEA,SAAAW,EAAA77D,GACA,OAAAA,GAAAs7D,GAAAt7D,EAAAs7D,EAGA,SAAAQ,EAAA97D,GACA,OAAAA,EAAAs7D,GAAAt7D,GAAAs7D,EAcA,SAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5hC,GACA,IAAA6hC,EAAA,EAAA7hC,EACA,OAAA6hC,OAAAJ,EAAA,EAAAzhC,EAAA0hC,GAAA1hC,OAAA4hC,EAAA,EAAAC,EAAAF,GA8RA,SAAAG,EAAAL,EAAAC,EAAAC,EAAA3hC,GACA,IAAA6hC,EAAA,EAAA7hC,EACA,OAAA6hC,KAAAJ,EAAA,EAAAzhC,EAAA0hC,GAAA1hC,IAAA2hC,EA4LAv+D,EAAAo+D,UACAp+D,EAAA2+D,kBA/cA,SAAAN,EAAAC,EAAAC,EAAAC,EAAA5hC,GACA,IAAA6hC,EAAA,EAAA7hC,EACA,YAAA0hC,EAAAD,GAAAI,EAAA,GAAAF,EAAAD,GAAA1hC,GAAA6hC,GAAAD,EAAAD,GAAA3hC,MA8cA58B,EAAA4+D,YA/bA,SAAAP,EAAAC,EAAAC,EAAAC,EAAAn8D,EAAAw8D,GAEA,IAAA77D,EAAAw7D,EAAA,GAAAF,EAAAC,GAAAF,EACAp7D,EAAA,GAAAs7D,EAAA,EAAAD,EAAAD,GACA9gC,EAAA,GAAA+gC,EAAAD,GACA5hC,EAAA4hC,EAAAh8D,EACAy8D,EAAA77D,IAAA,EAAAD,EAAAu6B,EACA43B,EAAAlyD,EAAAs6B,EAAA,EAAAv6B,EAAAy5B,EACAsiC,EAAAxhC,IAAA,EAAAt6B,EAAAw5B,EACAuiC,EAAA,EAEA,GAAAd,EAAAY,IAAAZ,EAAA/I,GACA+I,EAAAj7D,GACA47D,EAAA,MAEAI,GAAA1hC,EAAAt6B,IAEA,GAAAg8D,GAAA,IACAJ,EAAAG,KAAAC,OAGG,CACH,IAAAC,EAAA/J,IAAA,EAAA2J,EAAAC,EAEA,GAAAb,EAAAgB,GAAA,CACA,IAAAC,EAAAhK,EAAA2J,EAGAM,GAAAD,EAAA,GAFAF,GAAAh8D,EAAAD,EAAAm8D,IAIA,GAAAF,GAAA,IACAJ,EAAAG,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAP,EAAAG,KAAAI,QAEK,GAAAF,EAAA,GACL,IAAAG,EAAA3B,EAAAwB,GACAI,EAAAR,EAAA77D,EAAA,IAAAD,IAAAmyD,EAAAkK,GACAE,EAAAT,EAAA77D,EAAA,IAAAD,IAAAmyD,EAAAkK,IAcAJ,IAAAh8D,IAXAq8D,EADAA,EAAA,GACA7B,GAAA6B,EAAAxB,GAEAL,EAAA6B,EAAAxB,KAIAyB,EADAA,EAAA,GACA9B,GAAA8B,EAAAzB,GAEAL,EAAA8B,EAAAzB,OAGA,EAAA96D,KAEA,GAAAi8D,GAAA,IACAJ,EAAAG,KAAAC,OAEK,CACL,IAAAO,GAAA,EAAAV,EAAA77D,EAAA,EAAAD,EAAAmyD,IAAA,EAAAuI,EAAAoB,QACAW,EAAAnxD,KAAAoxD,KAAAF,GAAA,EACAG,EAAAjC,EAAAoB,GACAc,EAAAtxD,KAAA6gC,IAAAswB,GACAR,IAAAh8D,EAAA,EAAA08D,EAAAC,IAAA,EAAA58D,GAEA68D,GADAT,IAAAn8D,EAAA08D,GAAAC,EAAA/B,EAAAvvD,KAAA2gC,IAAAwwB,MAAA,EAAAz8D,KACAC,EAAA08D,GAAAC,EAAA/B,EAAAvvD,KAAA2gC,IAAAwwB,MAAA,EAAAz8D,IAEAi8D,GAAA,GAAAA,GAAA,IACAJ,EAAAG,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAP,EAAAG,KAAAI,GAGAS,GAAA,GAAAA,GAAA,IACAhB,EAAAG,KAAAa,IAKA,OAAAb,GA8WAh/D,EAAA8/D,aAhWA,SAAAzB,EAAAC,EAAAC,EAAAC,EAAAuB,GACA,IAAA98D,EAAA,EAAAs7D,EAAA,GAAAD,EAAA,EAAAD,EACAr7D,EAAA,EAAAs7D,EAAA,EAAAE,EAAA,EAAAH,EAAA,EAAAE,EACAhhC,EAAA,EAAA+gC,EAAA,EAAAD,EACAW,EAAA,EAEA,GAAAd,EAAAl7D,GACAm7D,EAAAl7D,KACAg8D,GAAA1hC,EAAAt6B,IAEA,GAAAg8D,GAAA,IACAc,EAAAf,KAAAC,OAGG,CACH,IAAAC,EAAAj8D,IAAA,EAAAD,EAAAu6B,EAEA,GAAA2gC,EAAAgB,GACAa,EAAA,IAAA98D,GAAA,EAAAD,QACK,GAAAk8D,EAAA,GACL,IACAD,EADAI,EAAA3B,EAAAwB,GAEAE,IAAAn8D,EAAAo8D,IAAA,EAAAr8D,IADAi8D,IAAAh8D,EAAAo8D,IAAA,EAAAr8D,KAGA,GAAAi8D,GAAA,IACAc,EAAAf,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAW,EAAAf,KAAAI,IAKA,OAAAJ,GA+TAh/D,EAAAggE,eAjTA,SAAA3B,EAAAC,EAAAC,EAAAC,EAAA5hC,EAAAV,GACA,IAAA+jC,GAAA3B,EAAAD,GAAAzhC,EAAAyhC,EACA6B,GAAA3B,EAAAD,GAAA1hC,EAAA0hC,EACA6B,GAAA3B,EAAAD,GAAA3hC,EAAA2hC,EACA6B,GAAAF,EAAAD,GAAArjC,EAAAqjC,EACAI,GAAAF,EAAAD,GAAAtjC,EAAAsjC,EACAI,GAAAD,EAAAD,GAAAxjC,EAAAwjC,EAEAlkC,EAAA,GAAAmiC,EACAniC,EAAA,GAAA+jC,EACA/jC,EAAA,GAAAkkC,EACAlkC,EAAA,GAAAokC,EAEApkC,EAAA,GAAAokC,EACApkC,EAAA,GAAAmkC,EACAnkC,EAAA,GAAAikC,EACAjkC,EAAA,GAAAsiC,GAkSAx+D,EAAAugE,kBA9QA,SAAAC,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,EAAAhxD,EAAAC,EAAAssB,GAEA,IAAAU,EAGAgkC,EACAC,EACAC,EACAC,EALAnxC,EAAA,KACA6M,EAAA7tB,IAKAmvD,EAAA,GAAApuD,EACAouD,EAAA,GAAAnuD,EAGA,QAAAoxD,EAAA,EAAkBA,EAAA,EAAQA,GAAA,IAC1BhD,EAAA,GAAAI,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAAM,GACAhD,EAAA,GAAAI,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAAK,IACAF,EAAAtD,EAAAO,EAAAC,IAEAvhC,IACAG,EAAAokC,EACAvkC,EAAAqkC,GAIArkC,EAAA7tB,IAEA,QAAA1R,EAAA,EAAiBA,EAAA,MACjB0yB,EAAAguC,GADyB1gE,IAKzB0jE,EAAAhkC,EAAAhN,EACAixC,EAAAjkC,EAAAhN,EAEAouC,EAAA,GAAAI,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAAE,GACA5C,EAAA,GAAAI,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAAC,GACAE,EAAAtD,EAAAQ,EAAAD,GAEA6C,GAAA,GAAAE,EAAArkC,GACAG,EAAAgkC,EACAnkC,EAAAqkC,IAGA7C,EAAA,GAAAG,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAAG,GACA5C,EAAA,GAAAG,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAAE,GACAE,EAAAvD,EAAAS,EAAAF,GAEA8C,GAAA,GAAAE,EAAAtkC,GACAG,EAAAikC,EACApkC,EAAAskC,GAEAnxC,GAAA,IAYA,OANAsM,IACAA,EAAA,GAAAkiC,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAA9jC,GACAV,EAAA,GAAAkiC,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAA/jC,IAIA8gC,EAAAjhC,IAgNAz8B,EAAA0+D,cACA1+D,EAAAihE,sBAvLA,SAAA5C,EAAAC,EAAAC,EAAA3hC,GACA,aAAAA,IAAA0hC,EAAAD,GAAAzhC,GAAA2hC,EAAAD,KAuLAt+D,EAAAkhE,gBA1KA,SAAA7C,EAAAC,EAAAC,EAAAl8D,EAAAw8D,GACA,IAAA77D,EAAAq7D,EAAA,EAAAC,EAAAC,EACAt7D,EAAA,GAAAq7D,EAAAD,GACA9gC,EAAA8gC,EAAAh8D,EACA28D,EAAA,EAEA,GAAAd,EAAAl7D,GACAm7D,EAAAl7D,KACAg8D,GAAA1hC,EAAAt6B,IAEA,GAAAg8D,GAAA,IACAJ,EAAAG,KAAAC,OAGG,CACH,IAAAC,EAAAj8D,IAAA,EAAAD,EAAAu6B,EAEA,GAAA2gC,EAAAgB,IACAD,GAAAh8D,GAAA,EAAAD,KAEA,GAAAi8D,GAAA,IACAJ,EAAAG,KAAAC,QAEK,GAAAC,EAAA,GACL,IACAD,EADAI,EAAA3B,EAAAwB,GAEAE,IAAAn8D,EAAAo8D,IAAA,EAAAr8D,IADAi8D,IAAAh8D,EAAAo8D,IAAA,EAAAr8D,KAGA,GAAAi8D,GAAA,IACAJ,EAAAG,KAAAC,GAGAG,GAAA,GAAAA,GAAA,IACAP,EAAAG,KAAAI,IAKA,OAAAJ,GAqIAh/D,EAAAmhE,kBAzHA,SAAA9C,EAAAC,EAAAC,GACA,IAAA6C,EAAA/C,EAAAE,EAAA,EAAAD,EAEA,WAAA8C,EAEA,IAEA/C,EAAAC,GAAA8C,GAmHAphE,EAAAqhE,mBArGA,SAAAhD,EAAAC,EAAAC,EAAA3hC,EAAAV,GACA,IAAA+jC,GAAA3B,EAAAD,GAAAzhC,EAAAyhC,EACA6B,GAAA3B,EAAAD,GAAA1hC,EAAA0hC,EACA8B,GAAAF,EAAAD,GAAArjC,EAAAqjC,EAEA/jC,EAAA,GAAAmiC,EACAniC,EAAA,GAAA+jC,EACA/jC,EAAA,GAAAkkC,EAEAlkC,EAAA,GAAAkkC,EACAlkC,EAAA,GAAAgkC,EACAhkC,EAAA,GAAAqiC,GA2FAv+D,EAAAshE,sBAzEA,SAAAd,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAA5X,EAAAC,EAAAssB,GAEA,IAAAU,EACAhN,EAAA,KACA6M,EAAA7tB,IACAmvD,EAAA,GAAApuD,EACAouD,EAAA,GAAAnuD,EAGA,QAAAoxD,EAAA,EAAkBA,EAAA,EAAQA,GAAA,IAC1BhD,EAAA,GAAAU,EAAA8B,EAAAp5C,EAAAC,EAAA25C,GACAhD,EAAA,GAAAU,EAAA+B,EAAAn5C,EAAAC,EAAAy5C,IACAF,EAAAtD,EAAAO,EAAAC,IAEAvhC,IACAG,EAAAokC,EACAvkC,EAAAqkC,GAIArkC,EAAA7tB,IAEA,QAAA1R,EAAA,EAAiBA,EAAA,MACjB0yB,EAAAguC,GADyB1gE,IAAA,CAKzB,IAAA0jE,EAAAhkC,EAAAhN,EACAixC,EAAAjkC,EAAAhN,EAEAouC,EAAA,GAAAU,EAAA8B,EAAAp5C,EAAAC,EAAAu5C,GACA5C,EAAA,GAAAU,EAAA+B,EAAAn5C,EAAAC,EAAAq5C,GACA,IAAAE,EAAAtD,EAAAQ,EAAAD,GAEA,GAAA6C,GAAA,GAAAE,EAAArkC,EACAG,EAAAgkC,EACAnkC,EAAAqkC,MACK,CAEL7C,EAAA,GAAAS,EAAA8B,EAAAp5C,EAAAC,EAAAw5C,GACA5C,EAAA,GAAAS,EAAA+B,EAAAn5C,EAAAC,EAAAs5C,GACA,IAAAE,EAAAvD,EAAAS,EAAAF,GAEA8C,GAAA,GAAAE,EAAAtkC,GACAG,EAAAikC,EACApkC,EAAAskC,GAEAnxC,GAAA,IAYA,OANAsM,IACAA,EAAA,GAAAwiC,EAAA8B,EAAAp5C,EAAAC,EAAAuV,GACAV,EAAA,GAAAwiC,EAAA+B,EAAAn5C,EAAAC,EAAAqV,IAIA8gC,EAAAjhC,qBCrgBA,IAAAgoB,EAAYphD,EAAQ,KAEpB9E,EAAAkmD,EAAAlmD,KACA/B,EAAAioD,EAAAjoD,IAEA+kE,EAAcl+D,EAAQ,KAEtBuoB,EAAA21C,EAAA31C,UACA41C,EAAAD,EAAAn0C,kBAEAq0C,EAA4Bp+D,EAAQ,KAEpCq+D,EAAAD,EAAAC,gBACAC,EAAAF,EAAAE,iBACAC,EAAAH,EAAAI,0BAoBAC,EAAA,MAMAC,EAAA,SAAAp2B,EAAArP,EAAAgc,GAKA34C,KAAAgsC,MAMAhsC,KAAA28B,QAMA38B,KAAAkzC,QAAAyF,GAAA,MAKA34C,KAAAqiE,SAAA,EAMAriE,KAAAsiE,QAAA,GAsMA,SAAAC,EAAA5pB,EAAA6pB,GACA,IAEA5oC,GAFA+e,EAAA,GAAAA,EAAA,IACA6pB,EACA,EACA7pB,EAAA,IAAA/e,EACA+e,EAAA,IAAA/e,EAxMAwoC,EAAAlmE,UAAA,CACAyB,YAAAykE,EAOAlhC,QAAA,SAAAuhC,GACA,IAAA9pB,EAAA34C,KAAAkzC,QACAtkC,EAAAD,KAAAC,IAAA+pC,EAAA,GAAAA,EAAA,IACA7pC,EAAAH,KAAAG,IAAA6pC,EAAA,GAAAA,EAAA,IACA,OAAA8pB,GAAA7zD,GAAA6zD,GAAA3zD,GAQA4zD,YAAA,SAAAlhE,GACA,OAAAxB,KAAAkhC,QAAAlhC,KAAA2iE,YAAAnhE,KAOA4/C,UAAA,WACA,OAAAphD,KAAAkzC,QAAAv2C,SAQA8wB,kBAAA,SAAAC,GACA,OAAAm0C,EAAAn0C,GAAA1tB,KAAA28B,MAAAykB,YAAAphD,KAAAkzC,UAQAuQ,UAAA,SAAAxN,EAAApI,GACA,IAAA8K,EAAA34C,KAAAkzC,QACAyF,EAAA,GAAA1C,EACA0C,EAAA,GAAA9K,GASA80B,YAAA,SAAAnhE,EAAA4qB,GACA,IAAAusB,EAAA34C,KAAAkzC,QACAvW,EAAA38B,KAAA28B,MAQA,OAPAn7B,EAAAm7B,EAAAE,UAAAr7B,GAEAxB,KAAAsiE,QAAA,YAAA3lC,EAAAp9B,MAEAgjE,EADA5pB,IAAAh8C,QACAggC,EAAAtP,SAGApB,EAAAzqB,EAAA2gE,EAAAxpB,EAAAvsB,IASAw2C,YAAA,SAAAH,EAAAr2C,GACA,IAAAusB,EAAA34C,KAAAkzC,QACAvW,EAAA38B,KAAA28B,MAEA38B,KAAAsiE,QAAA,YAAA3lC,EAAAp9B,MAEAgjE,EADA5pB,IAAAh8C,QACAggC,EAAAtP,SAGA,IAAA4P,EAAAhR,EAAAw2C,EAAA9pB,EAAAwpB,EAAA/1C,GACA,OAAApsB,KAAA28B,YAAAM,IASA4lC,YAAA,SAAAx3C,EAAAe,KAiBA02C,eAAA,SAAA/qD,GAEA,IAAAgrD,GADAhrD,KAAA,IACAgrD,WAAA/iE,KAAAgjE,eACA7lE,EAAA4kE,EAAA/hE,KAAA+iE,GACAE,EAAA9lE,EAAA8lE,MACAC,EAAArmE,EAAAomE,EAAA,SAAAtgB,GACA,OACA8f,MAAAziE,KAAA2iE,YAAAhgB,GACAA,cAEK3iD,MACLmjE,EAAAJ,EAAA5iE,IAAA,kBAEA,OAsFA,SAAAwhD,EAAAuhB,EAAAE,EAAAD,EAAA/2C,GACA,IAAAi3C,EAAAH,EAAAzlE,OAEA,IAAAkkD,EAAA2gB,QAAAa,IAAAE,EACA,OAGA,IACAC,EADAxhB,EAAAH,EAAAP,YAGA,OAAAiiB,EACAH,EAAA,GAAAT,MAAA3gB,EAAA,GACAwhB,EAAAJ,EAAA,IACAT,MAAA3gB,EAAA,QAEG,CACH,IAAA3sC,EAAA+tD,EAAA,GAAAT,MAAAS,EAAA,GAAAT,MACA7jE,EAAAskE,EAAA,SAAAK,GACAA,EAAAd,OAAAttD,EAAA,EACA,IAAAiuD,KAAA,EAEAA,EAAA,MACAG,EAAAd,OAAAttD,GAAA,GAAAiuD,EAAA,OAGAE,EAAA,CACAb,MAAAS,EAAAG,EAAA,GAAAZ,MAAAttD,GAEA+tD,EAAAzhE,KAAA6hE,GAGA,IAAAjB,EAAAvgB,EAAA,GAAAA,EAAA,GAEA/xB,EAAAmzC,EAAA,GAAAT,MAAA3gB,EAAA,MACA11B,EAAA82C,EAAA,GAAAT,MAAA3gB,EAAA,GAAAohB,EAAA/tD,SAGAiX,GAAA2D,EAAA+xB,EAAA,GAAAohB,EAAA,GAAAT,QACAS,EAAAn7B,QAAA,CACA06B,MAAA3gB,EAAA,KAIA/xB,EAAA+xB,EAAA,GAAAwhB,EAAAb,SACAr2C,EAAAk3C,EAAAb,MAAA3gB,EAAA,GAAAohB,EAAA5uD,OAGA8X,GAAA2D,EAAAuzC,EAAAb,MAAA3gB,EAAA,KACAohB,EAAAzhE,KAAA,CACAghE,MAAA3gB,EAAA,KAIA,SAAA/xB,EAAA1sB,EAAAC,GACA,OAAA++D,EAAAh/D,EAAAC,EAAAD,EAAAC,GA7IAkgE,CAAAxjE,KAAAkjE,EAAA/lE,EAAAimE,qBAAAD,EAAAprD,EAAAqU,OACA82C,GAUAO,cAAA,WACA,OAAAzB,EAAAhiE,MAAA0jE,QAMAjhB,cAAA,WACA,OAAAziD,KAAAyQ,MAAAjE,SAAA,cAWAw2D,aAAA,WACA,OAAAhjE,KAAAyQ,MAAAjE,SAAA,aAOAm3D,aAAA,WACA,IAAA7hB,EAAA9hD,KAAAkzC,QACAxlB,EAAA1tB,KAAA28B,MAAAykB,YACA5jD,EAAAkwB,EAAA,GAAAA,EAAA,IAAA1tB,KAAAsiE,OAAA,KAEA,IAAA9kE,MAAA,GACA,IAAAuhD,EAAApwC,KAAAyb,IAAA03B,EAAA,GAAAA,EAAA,IACA,OAAAnzC,KAAAyb,IAAA20B,GAAAvhD,GAOAomE,aAAA,KAMAC,UAAA,KAOA3B,0BAAA,WACA,OAAAD,EAAAjiE,QA+EA,IAAAohC,EAAAghC,EACAjqC,EAAA93B,QAAA+gC,iBCpUA,IAAApkB,EAAA,GAUA3c,EAAA0b,SARA,SAAAxb,EAAAujE,GACA9mD,EAAAzc,GAAAujE,GAQAzjE,EAAAF,IALA,SAAAI,GACA,OAAAyc,EAAAzc,2CCnBA,IAAAwjE,EAAA1nE,MAAAH,UAAAS,MAOAsH,EAAA,WACAjE,KAAAgkE,WAAA,IAGA//D,EAAA/H,UAAA,CACAyB,YAAAsG,EASAmG,IAAA,SAAA2K,EAAAtO,EAAA1H,GACA,IAAAklE,EAAAjkE,KAAAgkE,WAEA,IAAAv9D,IAAAsO,EACA,OAAA/U,KAGAikE,EAAAlvD,KACAkvD,EAAAlvD,GAAA,IAGA,QAAAxX,EAAA,EAAmBA,EAAA0mE,EAAAlvD,GAAAtX,OAAsBF,IACzC,GAAA0mE,EAAAlvD,GAAAxX,GAAA68B,IAAA3zB,EACA,OAAAzG,KAUA,OANAikE,EAAAlvD,GAAAtT,KAAA,CACA24B,EAAA3zB,EACA2D,KAAA,EACAy3B,IAAA9iC,GAAAiB,OAGAA,MASA4J,GAAA,SAAAmL,EAAAtO,EAAA1H,GACA,IAAAklE,EAAAjkE,KAAAgkE,WAEA,IAAAv9D,IAAAsO,EACA,OAAA/U,KAGAikE,EAAAlvD,KACAkvD,EAAAlvD,GAAA,IAGA,QAAAxX,EAAA,EAAmBA,EAAA0mE,EAAAlvD,GAAAtX,OAAsBF,IACzC,GAAA0mE,EAAAlvD,GAAAxX,GAAA68B,IAAA3zB,EACA,OAAAzG,KAUA,OANAikE,EAAAlvD,GAAAtT,KAAA,CACA24B,EAAA3zB,EACA2D,KAAA,EACAy3B,IAAA9iC,GAAAiB,OAGAA,MAQAkkE,SAAA,SAAAnvD,GACA,IAAAkvD,EAAAjkE,KAAAgkE,WACA,OAAAC,EAAAlvD,IAAAkvD,EAAAlvD,GAAAtX,QAQA0M,IAAA,SAAA4K,EAAAtO,GACA,IAAAw9D,EAAAjkE,KAAAgkE,WAEA,IAAAjvD,EAEA,OADA/U,KAAAgkE,WAAA,GACAhkE,KAGA,GAAAyG,EAAA,CACA,GAAAw9D,EAAAlvD,GAAA,CAGA,IAFA,IAAAovD,EAAA,GAEA5mE,EAAA,EAAA+nD,EAAA2e,EAAAlvD,GAAAtX,OAA6CF,EAAA+nD,EAAO/nD,IACpD0mE,EAAAlvD,GAAAxX,GAAA,GAAAkJ,GACA09D,EAAA1iE,KAAAwiE,EAAAlvD,GAAAxX,IAIA0mE,EAAAlvD,GAAAovD,EAGAF,EAAAlvD,IAAA,IAAAkvD,EAAAlvD,GAAAtX,eACAwmE,EAAAlvD,eAGAkvD,EAAAlvD,GAGA,OAAA/U,MAQA+J,QAAA,SAAAxK,GACA,GAAAS,KAAAgkE,WAAAzkE,GAAA,CACA,IAAAL,EAAAC,UACAilE,EAAAllE,EAAAzB,OAEA2mE,EAAA,IACAllE,EAAA6kE,EAAA1mE,KAAA6B,EAAA,IAMA,IAHA,IAAA+kE,EAAAjkE,KAAAgkE,WAAAzkE,GACA/B,EAAAymE,EAAAxmE,OAEAF,EAAA,EAAqBA,EAAAC,GAAS,CAE9B,OAAA4mE,GACA,OACAH,EAAA1mE,GAAA,EAAAF,KAAA4mE,EAAA1mE,GAAA,KAEA,MAEA,OACA0mE,EAAA1mE,GAAA,EAAAF,KAAA4mE,EAAA1mE,GAAA,IAAA2B,EAAA,IAEA,MAEA,OACA+kE,EAAA1mE,GAAA,EAAAF,KAAA4mE,EAAA1mE,GAAA,IAAA2B,EAAA,GAAAA,EAAA,IAEA,MAEA,QAEA+kE,EAAA1mE,GAAA,EAAA6B,MAAA6kE,EAAA1mE,GAAA,IAAA2B,GAKA+kE,EAAA1mE,GAAA,KACA0mE,EAAAjuD,OAAAzY,EAAA,GAEAC,KAEAD,KAKA,OAAAyC,MAOAqkE,mBAAA,SAAA9kE,GACA,GAAAS,KAAAgkE,WAAAzkE,GAAA,CACA,IAAAL,EAAAC,UACAilE,EAAAllE,EAAAzB,OAEA2mE,EAAA,IACAllE,EAAA6kE,EAAA1mE,KAAA6B,EAAA,EAAAA,EAAAzB,OAAA,IAOA,IAJA,IAAAokC,EAAA3iC,IAAAzB,OAAA,GACAwmE,EAAAjkE,KAAAgkE,WAAAzkE,GACA/B,EAAAymE,EAAAxmE,OAEAF,EAAA,EAAqBA,EAAAC,GAAS,CAE9B,OAAA4mE,GACA,OACAH,EAAA1mE,GAAA,EAAAF,KAAAwkC,GAEA,MAEA,OACAoiC,EAAA1mE,GAAA,EAAAF,KAAAwkC,EAAA3iC,EAAA,IAEA,MAEA,OACA+kE,EAAA1mE,GAAA,EAAAF,KAAAwkC,EAAA3iC,EAAA,GAAAA,EAAA,IAEA,MAEA,QAEA+kE,EAAA1mE,GAAA,EAAA6B,MAAAyiC,EAAA3iC,GAKA+kE,EAAA1mE,GAAA,KACA0mE,EAAAjuD,OAAAzY,EAAA,GAEAC,KAEAD,KAKA,OAAAyC,OAwFA,IAAAohC,EAAAn9B,EACAk0B,EAAA93B,QAAA+gC,mBCvUc19B,EAAQ,KAEtBC,QAFA,IAIAmhD,EAAYphD,EAAQ,KAGpB/C,GADAmkD,EAAA/iD,aACA+iD,EAAAnkD,QAEA/B,GADAkmD,EAAAniD,OACAmiD,EAAAlmD,MACAT,EAAA2mD,EAAA3mD,SAEAyK,EAAalF,EAAQ,KAErButB,EAAAroB,EAAAqoB,iBACAE,EAAAvoB,EAAAuoB,iBAIA/B,EAFc1rB,EAAQ,KAEtB0rB,UAEAygB,EAAansC,EAAQ,KAErB4gE,EAAkB5gE,EAAQ,KAE1B6gE,EAAAD,EAAAC,0BACAC,EAAAF,EAAAE,yBACAxJ,EAAAsJ,EAAAtJ,uBACAyJ,EAAAH,EAAAG,0BA4BA,SAAAz0B,EAAA9yC,EAAA48C,GACAjK,EAAA2F,WAAAt4C,KACAA,EAAA2yC,EAAAurB,mBAAAl+D,IAGA8C,KAAA0kE,QAAAxnE,EACA,IAAAsE,EAAAxB,KAAA2kE,MAAAznE,EAAAsE,KACAm0C,EAAAz4C,EAAAy4C,aAEAA,IAAA4uB,IACAvkE,KAAA4kE,QAAA,EACA5kE,KAAA6kE,SAAA/qB,EACA95C,KAAA2kE,MAAAnjE,GAGA,IAAAxE,EAAA8nE,EAAAnvB,IAAA6uB,EAAA7uB,EAAA,IAAAz4C,EAAA6nE,eAAApvB,GACAh1C,EAAAX,KAAAhD,GAGA,IAAAgoE,EAAAh1B,EAAA9zC,UAEA8oE,EAAAlvB,MAAA,EAEAkvB,EAAA9uB,YAAA,EAEA8uB,EAAAv7B,UAAA,WACA,OAAAzpC,KAAA0kE,SAGA,IAAAI,EAAA,CACAG,iBAAA,CACAnvB,MAAA,EACAzoB,MAAA,WACA,OAAA1e,KAAAG,IAAA,EAAA9O,KAAA2kE,MAAAlnE,OAAAuC,KAAA0kE,QAAAQ,aAEAjuB,QAAA,SAAAhpB,GACA,OAAAjuB,KAAA2kE,MAAA12C,EAAAjuB,KAAA0kE,QAAAQ,aAEAhtD,WAAAitD,GAEAC,cAAA,CACAtvB,MAAA,EACAzoB,MAAA,WACA,IAAAg4C,EAAArlE,KAAA2kE,MAAA,GACA,OAAAU,EAAA12D,KAAAG,IAAA,EAAAu2D,EAAA5nE,OAAAuC,KAAA0kE,QAAAQ,YAAA,GAEAjuB,QAAA,SAAAhpB,GACAA,GAAAjuB,KAAA0kE,QAAAQ,WAIA,IAHA,IAAAt1D,EAAA,GACApO,EAAAxB,KAAA2kE,MAEApnE,EAAA,EAAqBA,EAAAiE,EAAA/D,OAAiBF,IAAA,CACtC,IAAA8nE,EAAA7jE,EAAAjE,GACAqS,EAAAnO,KAAA4jE,IAAAp3C,GAAA,MAGA,OAAAre,GAEAsI,WAAA,WACA,UAAApV,MAAA,+DAGAwiE,WAAA,CACAxvB,MAAA,EACAzoB,MAAAk4C,EACAtuB,QAAAuuB,EACAttD,WAAAitD,GAEAM,aAAA,CACA3vB,MAAA,EACAzoB,MAAA,WACA,IAAAkvC,EAAAv8D,KAAA0kE,QAAAgB,iBAAA,GAAAnlE,KACAolE,EAAA3lE,KAAA2kE,MAAApI,GACA,OAAAoJ,IAAAloE,OAAA,GAEAw5C,QAAA,SAAAhpB,GAIA,IAHA,IAAAre,EAAA,GACAwlC,EAAAp1C,KAAA0kE,QAAAgB,iBAEAnoE,EAAA,EAAqBA,EAAA63C,EAAA33C,OAAiBF,IAAA,CACtC,IAAAooE,EAAA3lE,KAAA2kE,MAAAvvB,EAAA73C,GAAAgD,MACAqP,EAAAnO,KAAAkkE,IAAA13C,GAAA,MAGA,OAAAre,GAEAsI,WAAA,SAAA0tD,GACA,IAAApkE,EAAAxB,KAAA2kE,MACA/lE,EAAAgnE,EAAA,SAAAC,EAAA/nE,GAGA,IAFA,IAAAgoE,EAAAtkE,EAAA1D,KAAA0D,EAAA1D,GAAA,IAEAP,EAAA,EAAuBA,GAAAsoE,GAAA,IAAApoE,OAA2BF,IAClDuoE,EAAArkE,KAAAokE,EAAAtoE,QAKA+2C,SAAA,CACAjnB,MAAAk4C,EACAtuB,QAAAuuB,EACAttD,WAAAitD,GAEAY,WAAA,CACA7vB,YAAA,EACAJ,MAAA,EACAzoB,MAAA,WACA,OAAArtB,KAAA2kE,MAAA3kE,KAAA2kE,MAAAlnE,OAAAuC,KAAA6kE,SAAA,GAEA5tB,QAAA,SAAAhpB,EAAAsO,GACAtO,GAAAjuB,KAAA4kE,QACAroC,KAAA,GAGA,IAFA,IAAA/4B,EAAAxD,KAAA6kE,SAAA52C,EAEA1wB,EAAA,EAAqBA,EAAAyC,KAAA6kE,SAAmBtnE,IACxCg/B,EAAAh/B,GAAAyC,KAAA2kE,MAAAnhE,EAAAjG,GAGA,OAAAg/B,GAEArkB,WAAA,SAAA0tD,GACA5lE,KAAA2kE,MAAAiB,GAGAtuB,MAAA,WAEAt3C,KAAA4kE,SAAA5kE,KAAAqtB,QACArtB,KAAA2kE,MAAA,QAKA,SAAAY,IACA,OAAAvlE,KAAA2kE,MAAAlnE,OAGA,SAAA+nE,EAAAv3C,GACA,OAAAjuB,KAAA2kE,MAAA12C,GAGA,SAAAk3C,EAAAS,GACA,QAAAroE,EAAA,EAAiBA,EAAAqoE,EAAAnoE,OAAoBF,IACrCyC,KAAA2kE,MAAAljE,KAAAmkE,EAAAroE,IAIA,IAAAyoE,EAAA,CACAC,UAAAC,EACAZ,WAAA,SAAAp0C,EAAA/f,EAAAqiC,EAAA+oB,GACA,aAAA/oB,EAAAtiB,EAAAqrC,GAAArrC,GAEAu0C,aAAAS,EACA5xB,SAAA,SAAApjB,EAAA/f,EAAAqiC,EAAA+oB,GAIA,IAAAj9D,EAAA2xB,EAAAC,GACA,aAAAsiB,GAAAl0C,aAAAjD,MAAAiD,EAAAk0C,GAAAl0C,GAEAymE,WAAAG,GAGA,SAAAA,EAAAh1C,EAAA/f,EAAAqiC,EAAA+oB,GACA,aAAA/oB,EAAAtiB,EAAAsiB,GAAAtiB,EAGA,IAAA6e,EAAA,CACAk2B,UAAAE,EACAb,WAAA,SAAAp0C,EAAAqrC,EAAAprD,EAAAqiC,GACA,OAAA4yB,EAAAl1C,EAAAqrC,GAAAv8D,KAAAkyC,gBAAAqqB,KAEAkJ,aAAAU,EACA7xB,SAAA,SAAApjB,EAAAqrC,EAAAprD,EAAAqiC,GAKA,IAAAl0C,EAAA4xB,IAAA,MAAAA,EAAA5xB,MAAA4xB,IAAA5xB,OAMA,OAJAU,KAAAgzC,SAAA8C,MAAA3kB,EAAAD,KACAlxB,KAAA80C,eAAA,GAGAsxB,EAAA9mE,aAAAjD,MAAAiD,EAAAk0C,GACAl0C,EAAAU,KAAAkyC,gBAAAqqB,KAEAwJ,WAAA,SAAA70C,EAAAqrC,EAAAprD,EAAAqiC,GACA,OAAAtiB,EAAAsiB,KAIA,SAAA2yB,EAAAj1C,EAAAqrC,EAAAprD,EAAAqiC,GACA,OAAA4yB,EAAAl1C,EAAAsiB,GAAAxzC,KAAAkyC,gBAAAqqB,IAUA,SAAA6J,EAAA9mE,EAAA2sC,GAEA,IAAAE,EAAAF,KAAA1sC,KAEA,eAAA4sC,EAAA,CAEA,IAAA2H,EAAA7H,KAAA6H,YACA,OAAAA,IAAAuyB,gBAAA/mE,KAWA,MARA,SAAA6sC,GACA,kBAAA7sC,GAAA,MAAAA,GAAA,MAAAA,IACAA,GAAA8vB,EAAA9vB,IAMA,MAAAA,GAAA,KAAAA,EAAAstB,KAEAttB,EA6EAe,EAAA2vC,sBACA3vC,EAAA0vC,yBACA1vC,EAAAqpC,iBA9DA,SAAAloC,EAAA2P,EAAA66B,GACA,GAAAxqC,EAAA,CAKA,IAAA0vB,EAAA1vB,EAAAo4C,eAAAzoC,GAEA,SAAA+f,EAAA,CAIA,IACAqrC,EACA/oB,EAFAmC,EAAAn0C,EAAAu0C,cAAAtM,YAAAkM,aAGA1J,EAAAzqC,EAAAqqC,iBAAAG,GAOA,OALAC,IACAswB,EAAAtwB,EAAA1rC,KACAizC,EAAAvH,EAAAljC,OAGAi9D,EAAArwB,GAAAzkB,EAAA/f,EAAAqiC,EAAA+oB,MAyCAl8D,EAAAimE,gBAzBA,SAAA9kE,EAAA2P,EAAAwV,GACA,GAAAnlB,EAAA,CAIA,IAAAm0C,EAAAn0C,EAAAu0C,cAAAtM,YAAAkM,aAEA,GAAAA,IAAAqlB,GAAArlB,IAAA8uB,EAAA,CAIA,IAAAvzC,EAAA1vB,EAAAo4C,eAAAzoC,GAMA,OAJAwkC,IAAAqlB,GAAA78D,EAAA+yB,KACAA,EAAA,MAGAA,EACAA,EAAAvK,QADA,oBC3UA,IAAA4/C,EAAA,2BACAC,EAAA,mBACAC,EAAA,mBAWA,SAAA3hE,EAAAtE,EAAAkmE,EAAAC,GACA,IAAAC,EAIAjtB,EACA/M,EACA1tC,EACA2nE,EANAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAOA,SAAA33C,IACA03C,GAAA,IAAAx7D,MAAA07D,UACAD,EAAA,KACAxmE,EAAApB,MAAAwtC,EAAA1tC,GAAA,IALAwnE,KAAA,EAQA,IAAA5nE,EAAA,WACA8nE,GAAA,IAAAr7D,MAAA07D,UACAr6B,EAAA5sC,KACAd,EAAAC,UACA,IAAA+nE,EAAAL,GAAAH,EACAS,EAAAN,GAAAF,EACAE,EAAA,KACAltB,EAAAitB,GAAAO,EAAAL,EAAAC,GAAAG,EACAE,aAAAJ,GASAG,EACAH,EAAAK,WAAAh4C,EAAA63C,GAEAvtB,GAAA,EACAtqB,IAEA23C,EAAAK,WAAAh4C,GAAAsqB,GAIAmtB,EAAAF,GAuBA,OAfA9nE,EAAAoa,MAAA,WACA8tD,IACAI,aAAAJ,GACAA,EAAA,OAQAloE,EAAA+nE,iBAAA,SAAAS,GACAT,EAAAS,GAGAxoE,EAwEAuB,EAAAyE,WACAzE,EAAAknE,eA1CA,SAAA1oE,EAAA2oE,EAAArsB,EAAAssB,GACA,IAAAjnE,EAAA3B,EAAA2oE,GAEA,GAAAhnE,EAAA,CAIA,IAAAknE,EAAAlnE,EAAA+lE,IAAA/lE,EACAmnE,EAAAnnE,EAAAimE,GAGA,GAFAjmE,EAAAgmE,KAEArrB,GAAAwsB,IAAAF,EAAA,CACA,SAAAtsB,IAAAssB,EACA,OAAA5oE,EAAA2oE,GAAAE,GAGAlnE,EAAA3B,EAAA2oE,GAAA1iE,EAAA4iE,EAAAvsB,EAAA,aAAAssB,IACAlB,GAAAmB,EACAlnE,EAAAimE,GAAAgB,EACAjnE,EAAAgmE,GAAArrB,EAGA,OAAA36C,IAqBAH,EAAA6Y,MAVA,SAAAra,EAAA2oE,GACA,IAAAhnE,EAAA3B,EAAA2oE,GAEAhnE,KAAA+lE,KACA1nE,EAAA2oE,GAAAhnE,EAAA+lE,oBCnDApuC,EAAA93B,QAjGA,CACAw1B,QAAA,CACA+L,MAAA,CACAlM,MAAA,CACA3W,KAAA,2BACA6oD,QAAA,eACAC,MAAA,2BACAC,MAAA,2BACA7tB,KAAA,2BACA/gC,MAAA,6BAGA6uD,SAAA,CACAryC,MAAA,2BACAsyC,KAAA,4DAEA1xC,SAAA,CACAZ,MAAA,CACAuyC,KAAA,2BACAC,KAAA,yCAGAC,UAAA,CACAzyC,MAAA,CACA4B,KAAA,uCACA8wC,IAAA,uCACAC,MAAA,iCACAC,MAAA,mCAGAC,QAAA,CACA7yC,MAAA,gBAEA8yC,YAAA,CACA9yC,MAAA,iCACAsyC,KAAA,iDAGA7uD,OAAA,CACAsvD,UAAA,CACAC,IAAA,eACAN,IAAA,qBACA9wC,KAAA,qBACAK,QAAA,qBACAgxC,cAAA,iCACAC,MAAA,qBACAC,KAAA,eACAC,QAAA,2BACAC,QAAA,qBACAvxC,YAAA,gBACAyH,EAAA,gBACA+pC,QAAA,qBACAnsE,IAAA,eACAosE,SAAA,iCACAliB,MAAA,eACAjvB,MAAA,qBACAoxC,OAAA,qBACAC,OAAA,qBACApxC,MAAA,2BACAqxC,aAAA,2BACAC,WAAA,iCACAC,SAAA,uBAGAtkE,KAAA,CACAukE,QAAA,CACAC,UAAA,kFACAC,aAAA,8CAEAtwD,OAAA,CACAuwD,OAAA,CACAC,OAAA,GACAC,SAAA,iFACAC,YAAA,oDAEAC,SAAA,CACAH,OAAA,4EACAC,SAAA,uGACAC,YAAA,yEACAE,UAAA,CACAC,OAAA,SACAn8B,IAAA,YAIArsC,KAAA,CACAyoE,QAAA,uCACAC,YAAA,+DACAN,SAAA,wCACAC,YAAA,UACAE,UAAA,CACAC,OAAA,SACAn8B,IAAA,sBC5FA,SAAAs8B,EAAAv6D,GACA,OAAAA,EAWA,SAAAggC,EAAAw6B,EAAAC,EAAAC,EAAAC,EAAAxrE,GACAiB,KAAAwqE,KAAAJ,EACApqE,KAAAyqE,KAAAJ,EACArqE,KAAA0qE,cAAAJ,GAAAH,EACAnqE,KAAA2qE,cAAAJ,GAAAJ,EACAnqE,KAAAjB,UAuFA,SAAA6rE,EAAA39C,EAAApwB,EAAAguE,EAAAC,EAAAC,GACA,QAAAxtE,EAAA,EAAiBA,EAAA0vB,EAAAxvB,OAAgBF,IAAA,CAEjC,IAAAO,EAAA,OAAAitE,EAAAD,GAAA79C,EAAA1vB,MACAytE,EAAAnuE,EAAAiB,GAEA,MAAAktE,GACAH,EAAAppE,KAAA3D,GACAjB,EAAAiB,GAAAP,IAEAytE,EAAAvtE,SACAZ,EAAAiB,GAAAktE,EAAA,CAAAA,IAGAA,EAAAvpE,KAAAlE,KAlGAqyC,EAAA1zC,UAAA,CACAyB,YAAAiyC,EAKAz/B,IAAA,SAAAlR,GAEA,OADAe,KAAAirE,KAAAhsE,EACAe,MAMAkL,OAAA,SAAAjM,GAEA,OADAe,KAAAkrE,QAAAjsE,EACAe,MAMA+V,OAAA,SAAA9W,GAEA,OADAe,KAAAmrE,QAAAlsE,EACAe,MAEAorE,QAAA,WACA,IAAAhB,EAAApqE,KAAAwqE,KACAH,EAAArqE,KAAAyqE,KAEAY,EAAA,GACAC,EAAA,GACAC,EAAA,GAOA,IALAX,EAAAR,EALA,GAKAkB,EAAA,gBAAAtrE,MACA4qE,EAAAP,EAAAgB,EAAAE,EAAA,gBAAAvrE,MAIAzC,EAAA,EAAeA,EAAA6sE,EAAA3sE,OAAmBF,IAAA,CAIlC,UAFA0wB,EAAAo9C,EADAvtE,EAAAwtE,EAAA/tE,MAMAC,EAAAywB,EAAAxwB,SAGA,IAAAD,IAAA6tE,EAAAvtE,GAAA,MACAmwB,IAAA8Z,WAEAsjC,EAAAvtE,GAAA,KAGAkC,KAAAkrE,SAAAlrE,KAAAkrE,QAAAj9C,EAAA1wB,QAEAyC,KAAAmrE,SAAAnrE,KAAAmrE,QAAA5tE,GAIA,QAAAA,EAAA,EAAmBA,EAAAguE,EAAA9tE,OAA0BF,IAAA,CAC7C,IAAAO,EAAAytE,EAAAhuE,GAEA,GAAA8tE,EAAAttE,eAAAD,GAAA,CACA,IAAAmwB,EAEA,UAFAA,EAAAo9C,EAAAvtE,IAGA,SAIA,GAAAmwB,EAAAxwB,OAGA,QAAAk1B,EAAA,EAAAn1B,EAAAywB,EAAAxwB,OAA2Ck1B,EAAAn1B,EAASm1B,IACpD3yB,KAAAirE,MAAAjrE,KAAAirE,KAAAh9C,EAAA0E,SAHA3yB,KAAAirE,MAAAjrE,KAAAirE,KAAAh9C,OA8BA,IAAAmT,EAAAwO,EACAzX,EAAA93B,QAAA+gC,iBChEAjJ,EAAA93B,QA5DA,SAAAmrE,EAAAC,EAAAC,GAEA,OACAF,aAEAG,kBAAA,EACA5hC,MAAA,SAAAh5B,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACAkuC,EAAAnuC,EAAA5Q,IAAA,WAAAsrE,EACAp0C,EAAAtmB,EAAA5Q,IAAA,cACAw/C,EAAA5uC,EAAA5Q,IAAA,oBAQA,GAPAqB,EAAA06C,UAAA,CACAwvB,gBAAAxsB,EACA9nB,OAAA8nB,EACA7nB,aACAu0C,iBAAAjsB,KAGAl1C,EAAAohE,iBAAA96D,GAAA,CAIA,IAAA+6D,EAAA,oBAAAz0C,EA+BA,OACA00C,SAAAvqE,EAAAszC,eAAAg3B,EA9BA,SAAAtqE,EAAAysB,GACA,uBAAAoJ,EAAA,CACA,IAAA20C,EAAAj7D,EAAAy6B,YAAAvd,GAEA9V,EAAApH,EAAA6H,cAAAqV,GACAzsB,EAAAi7C,cAAAxuB,EAAA,aAAAoJ,EAAA20C,EAAA7zD,IAGA,GAAA3W,EAAAszC,cAAA,CACA,IAAAm3B,EAAAzqE,EAAAs6C,aAAA7tB,GACAi+C,EAAAD,EAAA7oD,WAAA,aACA+oD,EAAAF,EAAA7oD,WAAA,iBACAgpD,EAAAH,EAAA7oD,WAAA,uBAEA,MAAA8oD,GACA1qE,EAAAi7C,cAAAxuB,EAAA,SAAAi+C,GAGA,MAAAC,GAEA3qE,EAAAi7C,cAAAxuB,EAAA,aAAAk+C,GAGA,MAAAC,GACA5qE,EAAAi7C,cAAAxuB,EAAA,mBAAAm+C,KAMA,2BCxEA,IAAAtnB,EAAYphD,EAAQ,KAEpBzB,EAAA6iD,EAAA7iD,SACAzD,EAAAsmD,EAAAtmD,SACAmC,EAAAmkD,EAAAnkD,OACA/B,EAAAkmD,EAAAlmD,KAEAw5B,EAAiB10B,EAAQ,KAEzBkB,EAAclB,EAAQ,KAEtBsiC,EAAYtiC,EAAQ,KAEpBk+D,EAAcl+D,EAAQ,KAEtByrB,EAAAyyC,EAAAzyC,mBACAH,EAAA4yC,EAAA5yC,UAIA0wB,EAFch8C,EAAQ,KAEtBg8C,aAEA2sB,EAAiB3oE,EAAQ,KAIzBm8B,EAFcn8B,EAAQ,KAEtB8b,eAoBA+D,EAAA5U,KAAA4U,GAEA,SAAA+oD,EAAApoB,GACA,IAAAprC,EAAA,CACA/K,cAAAm2C,EAAAp7C,UAGA,OADAgQ,EAAAorC,EAAAp7C,SAAA,SAAAo7C,EAAAtuC,eACAkD,EA0CA,IAAAyzD,EAAA,SAAAroB,EAAAnsC,GAIA/X,KAAA+X,MAKA/X,KAAAkkD,YAEA1lD,EAAAuZ,EAAA,CACAy0D,YAAA,EACAC,cAAA,EACAC,cAAA,EACAC,eAAA,EACA5hE,QAAA,IAMA/K,KAAAkH,MAAA,IAAAtC,EAAA+Y,MAEA,IAAAivD,EAAA,IAAAhoE,EAAA+Y,MAAA,CACAiC,SAAA7H,EAAA6H,SAAAjjB,QACAuuB,SAAAnT,EAAAmT,WAIA0hD,EAAAz6D,kBACAnS,KAAA6sE,WAAAD,EAAA/lD,UACA7mB,KAAA8sE,WAAAF,GAGAL,EAAArwE,UAAA,CACAyB,YAAA4uE,EACAQ,WAAA,SAAAxsE,GACA,QAAAysE,EAAAzsE,IAEA4P,IAAA,SAAA5P,GACAysE,EAAAzsE,GAAAlD,KAAA2C,OAEAitE,SAAA,WACA,OAAAjtE,KAAAkH,QAGA,IAAA8lE,EAAA,CAIAp2C,SAAA,WACA,IAAA7e,EAAA/X,KAAA+X,IACAmsC,EAAAlkD,KAAAkkD,UAEA,GAAAA,EAAA/jD,IAAA,kBAIA,IAAAw4C,EAAA34C,KAAAkkD,UAAAvC,KAAAP,YACA9jC,EAAAtd,KAAA6sE,WACAK,EAAA,CAAAv0B,EAAA,MACAw0B,EAAA,CAAAx0B,EAAA,MAEAr7B,IACAuiB,EAAAqtC,IAAA5vD,GACAuiB,EAAAstC,IAAA7vD,IAGA,IAAA6Y,EAAAx1B,EAAA,CACAysE,QAAA,SACKlpB,EAAA13C,SAAA,sBAAA6gE,gBACLrtE,KAAAkH,MAAAiJ,IAAA,IAAAvL,EAAAuZ,KAAAvZ,EAAA0iB,qBAAA,CAEAuD,KAAA,OACArD,MAAA,CACAC,GAAAylD,EAAA,GACAvlD,GAAAulD,EAAA,GACAxlD,GAAAylD,EAAA,GACAvlD,GAAAulD,EAAA,IAEAp9D,MAAAomB,EACAwL,uBAAA5pB,EAAA4pB,wBAAA,EACA52B,QAAA,EACA4W,GAAA,MAEA,IAAA2rD,EAAAppB,EAAA/jD,IAAA,mBACAotE,EAAArpB,EAAA/jD,IAAA,uBACAqtE,EAAAtpB,EAAA/jD,IAAA,4BAMA,GAJA,kBAAAqtE,IACAA,EAAA,CAAAA,MAGA,MAAAF,EAAA,CACA,kBAAAA,IAEAA,EAAA,CAAAA,MAGA,kBAAAC,GAAA,kBAAAA,IAEAA,EAAA,CAAAA,MAGA,IAAAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA3uE,EAAA,EACAiwC,OAAA92B,EAAAmT,SAAAvc,KAAA4U,GAAA,EACA/f,OAAAgqE,EAAA,GACA5vB,EAAA,GACO,CACP/O,OAAA92B,EAAAmT,SAAAvc,KAAA4U,GAAA,EACA/f,OAAAgqE,EAAA,GACA5vB,EAAAjvC,KAAAmtB,MAAAoxC,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,OACO,SAAA9hD,EAAAtiB,GACP,YAAAukE,EAAAvkE,IAAA,MAAAukE,EAAAvkE,GAAA,CACA,IAAAquB,EAAAsoB,EAAA4tB,EAAAvkE,IAAA0kE,EAAA,GAAAC,EAAA,EAAAD,EAAAC,EAAAv3C,EAAA5V,QAAA,GAEAq9B,EAAAvyB,EAAAuyB,EAAAvyB,EAAA7nB,OACAmqE,EAAA,CAAAT,EAAA,GAAAtvB,EAAAjvC,KAAA6gC,IAAAz3B,EAAAmT,UAAAgiD,EAAA,GAAAtvB,EAAAjvC,KAAA2gC,IAAAv3B,EAAAmT,WACAkM,EAAAzQ,KAAA,CACAuE,SAAAG,EAAAwjB,OACAjvB,SAAA+tD,EACA5iE,QAAA,IAEA/K,KAAAkH,MAAAiJ,IAAAinB,KAEOp3B,SAOP4tE,cAAA,WACA,IAAA1pB,EAAAlkD,KAAAkkD,UACAnsC,EAAA/X,KAAA+X,IACA81D,EAiQA,SAAAC,EAAA5pB,EAAAnsC,GACA,IAAA4pC,EAAAuC,EAAAvC,KAEA,IAAAuC,EAAA/jD,IAAA,kBAAAwhD,EAAAhlB,MAAAwnB,UACA,OAYA,IATA,IAAA4e,EAAA7e,EAAA13C,SAAA,YACAuhE,EAAAhL,EAAAv2D,SAAA,aACAwhE,EAAAjL,EAAA5iE,IAAA,UACA+iE,EAAAvhB,EAAAmhB,iBACAoK,EAAA,GACAC,EAAA,GACA7vD,EAAAwwD,EAAAjB,WACAgB,EAAA,GAEAtwE,EAAA,EAAiBA,EAAA2lE,EAAAzlE,OAAwBF,IAAA,CACzC,IAAA0wE,EAAA/K,EAAA3lE,GAAAklE,MACAyK,EAAA,GAAAe,EACAf,EAAA,KACAC,EAAA,GAAAc,EACAd,EAAA,GAAAp1D,EAAA20D,cAAAsB,EAEA1wD,IACAuiB,EAAAqtC,IAAA5vD,GACAuiB,EAAAstC,IAAA7vD,IAIA,IAAA4wD,EAAA,IAAAtpE,EAAAuZ,KAAAvZ,EAAA0iB,qBAAA,CAEAuD,KAAA,QAAAq4C,EAAA3lE,GAAAolD,UACAn7B,MAAA,CACAC,GAAAylD,EAAA,GACAvlD,GAAAulD,EAAA,GACAxlD,GAAAylD,EAAA,GACAvlD,GAAAulD,EAAA,IAEAp9D,MAAAvR,EAAAuvE,EAAAV,eAAA,CACA9sD,OAAA2jC,EAAA/jD,IAAA,8BAEAwhB,GAAA,EACA5W,QAAA,KAEA+iE,EAAA5mE,MAAAiJ,IAAA+9D,GACAL,EAAApsE,KAAAysE,GAGA,OAAAL,EAjTAM,CAAAnuE,KAAAkkD,EAAAnsC,GACAq2D,EAmTA,SAAAN,EAAA5pB,EAAAnsC,GACA,IAAA4pC,EAAAuC,EAAAvC,KAGA,IAFA1/C,EAAA8V,EAAAs2D,cAAAnqB,EAAA/jD,IAAA,oBAEAwhD,EAAAhlB,MAAAwnB,UACA,OAGA,IAAA76B,EAAA46B,EAAA13C,SAAA,aACA8hE,EAAAhlD,EAAAnpB,IAAA,UACAujE,EAAA/hB,EAAA8hB,gBAEA8K,GAAAtsE,EAAA8V,EAAAuL,YAAAgG,EAAAnpB,IAAA,eAAAojB,EAAA,IACAirD,EAAAC,EAAA12D,EAAAmT,SAAAqjD,EAAAx2D,EAAA40D,gBACA+B,EAAAxqB,EAAA7C,eAAA,GACA+sB,EAAA,GACArjE,EAAAm5D,EAAAhgB,GACAyqB,EAAAzqB,EAAA/jD,IAAA,gBAkDA,OAjDAvB,EAAA8kE,EAAA,SAAAkL,EAAA7lE,GACA,IAAA45C,EAAAisB,EAAAjsB,UACAksB,EAAAD,EAAAC,eACAC,EAAAF,EAAAE,SACAC,EAAAzlD,EAEAolD,KAAA/rB,IAAA+rB,EAAA/rB,GAAA//B,YACAmsD,EAAA,IAAA/oC,EAAA0oC,EAAA/rB,GAAA//B,UAAA0G,EAAA46B,EAAAz5C,UAGA,IAAAukE,EAAAD,EAAAE,gBAAA/qB,EAAA/jD,IAAA,4BAEAwtE,EAAA,CADAhsB,EAAAghB,YAAAhgB,GACA5qC,EAAAy0D,YAAAz0D,EAAA40D,eAAA2B,GACAY,EAAA,IAAAtqE,EAAAgZ,KAAA,CAEAiN,KAAA,SAAA83B,EACA/iC,SAAA+tD,EACAziD,SAAAsjD,EAAAtjD,SACAngB,SACA4W,GAAA,KAEA/c,EAAA+d,aAAAusD,EAAAn/D,MAAAg/D,EAAA,CACA3lD,KAAAylD,EACAhqD,UAAAkqD,EAAA3rD,WAAA,aAAAorD,EAAA3pD,UACAC,kBAAAiqD,EAAA3rD,WAAA,qBAAA2rD,EAAA3rD,WAAA,gBAAAorD,EAAA1pD,kBACA3D,SAAA,oBAAA6tD,IAOA,aAAArtB,EAAApiD,KAAAuvE,EAAA,UAAAntB,EAAApiD,KAAAojD,EAAA,GAAAA,EAAA55C,GAAAimE,IAGAL,IACAO,EAAAp2D,UAAAwzD,EAAApoB,GACAgrB,EAAAp2D,UAAAq2D,WAAA,YACAD,EAAAp2D,UAAAxZ,MAAAwvE,GAIAhB,EAAAhB,WAAA38D,IAAA++D,GAEAA,EAAA/8D,kBACAi8D,EAAA3sE,KAAAytE,GACApB,EAAA5mE,MAAAiJ,IAAA++D,GACAA,EAAAE,uBAEAhB,EAtXAiB,CAAArvE,KAAAkkD,EAAAnsC,IAwLA,SAAAmsC,EAAAkqB,EAAAP,GAIA,IAAAyB,EAAAprB,EAAA/jD,IAAA,0BACAovE,EAAArrB,EAAA/jD,IAAA,0BAIA0tE,KAAA,GACA,IAAA2B,GAFApB,KAAA,IAEA,GACAqB,EAAArB,EAAA,GACAsB,EAAAtB,IAAA3wE,OAAA,GACAkyE,EAAAvB,IAAA3wE,OAAA,GACAmyE,EAAA/B,EAAA,GACAgC,EAAAhC,EAAA,GACAiC,EAAAjC,IAAApwE,OAAA,GACAsyE,EAAAlC,IAAApwE,OAAA,IAEA,IAAA6xE,GACAU,EAAAR,GACAQ,EAAAJ,IACGK,EAAAT,EAAAC,KACHH,GACAU,EAAAP,GACAO,EAAAH,KAEAG,EAAAR,GACAQ,EAAAJ,MAIA,IAAAL,GACAS,EAAAN,GACAM,EAAAF,IACGG,EAAAN,EAAAD,KACHH,GACAS,EAAAL,GACAK,EAAAD,KAEAC,EAAAN,GACAM,EAAAF,KAhOAI,CAAAhsB,EAAAkqB,EAAAP,IAMAsC,SAAA,WACA,IAAAp4D,EAAA/X,KAAA+X,IACAmsC,EAAAlkD,KAAAkkD,UACA3jD,EAAA0B,EAAA8V,EAAAo4D,SAAAjsB,EAAA/jD,IAAA,SAEA,GAAAI,EAAA,CAIA,IASAiuE,EAOA4B,EAhBAC,EAAAnsB,EAAA/jD,IAAA,gBACAssE,EAAA10D,EAAA00D,cACA5pD,EAAAqhC,EAAA13C,SAAA,iBACAisB,EAAAyrB,EAAA/jD,IAAA,cACAw4C,EAAA34C,KAAAkkD,UAAAvC,KAAAP,YACAkvB,EAAA33B,EAAA,GAAAA,EAAA,QACAg1B,EAAA,WAAA0C,EAAA13B,EAAA,GAAA23B,EAAA73C,EAAA,QAAA43C,EAAA13B,EAAA,GAAA23B,EAAA73C,GAAAkgB,EAAA,GAAAA,EAAA,MAEA43B,EAAAF,GAAAt4D,EAAAy0D,YAAAC,EAAAh0C,EAAA,GAEA+3C,EAAAtsB,EAAA/jD,IAAA,cAEA,MAAAqwE,IACAA,IAAAjtD,EAAA,KAKAgtD,EAAAF,GACA7B,EAAAC,EAAA12D,EAAAmT,SAAA,MAAAslD,IAAAz4D,EAAAmT,SACAuhD,IAEA+B,EA8GA,SAAAz2D,EAAAoL,EAAAstD,EAAA93B,GACA,IACA9zB,EACAC,EAFA4rD,EAAA1hD,EAAAyhD,EAAA14D,EAAAmT,UAGAm3C,EAAA1pB,EAAA,GAAAA,EAAA,GACAg4B,EAAA,UAAAxtD,IAAAk/C,GAAA,UAAAl/C,GAAAk/C,EAEAlzC,EAAAuhD,EAAAntD,EAAA,IACAuB,EAAA6rD,EAAA,eACA9rD,EAAA,UACGsK,EAAAuhD,EAAA,IAAAntD,IACHuB,EAAA6rD,EAAA,eACA9rD,EAAA,WAEAC,EAAA,SAGAD,EADA6rD,EAAA,IAAAntD,GAAAmtD,EAAAntD,EAAA,EACAotD,EAAA,eAEAA,EAAA,gBAIA,OACAzlD,SAAAwlD,EACA7rD,YACAC,qBAxIA8rD,CAAA74D,EAAAs4D,EAAAG,GAAA,EAAA73B,GAGA,OAFAy3B,EAAAr4D,EAAAq4D,0BAGAA,EAAAzhE,KAAAyb,IAAAgmD,EAAAzhE,KAAA2gC,IAAAk/B,EAAAtjD,YACA4C,SAAAsiD,OAAA,QAIA,IAAA7mB,EAAA1mC,EAAA2G,UACAqnD,EAAA3sB,EAAA/jD,IAAA,uBACAulD,EAAAmrB,EAAAnrB,SACAhtB,EAAAz2B,EAAA8V,EAAA+4D,qBAAAD,EAAAn4C,SAAA03C,GAGAW,EAAA,MAAArrB,GAAA,MAAAhtB,EAAAN,EAAA+F,aAAA59B,EAAAm4B,EAAA6wB,EAAA7D,EAAA,CACAK,QAAA,EACAG,YAAA2qB,EAAA3qB,cACK3lD,EACLywE,EAAA9sB,EAAA/jD,IAAA,cACA2I,EAAAo7C,EAAAp7C,SACAmoE,EAAA,CACAljE,cAAAjF,EACAvI,OACAw+B,MAAA,UAEAkyC,EAAAnoE,EAAA,SAAAo7C,EAAAtuC,eACA,IAAAs5D,EAAA,IAAAtqE,EAAAgZ,KAAA,CAEAiN,KAAA,OACAqmD,WAAA3wE,EACA4wE,gBAAAJ,EACAnxD,SAAA+tD,EACAziD,SAAAsjD,EAAAtjD,SACAngB,OAAAm5D,EAAAhgB,GACAviC,GAAA,EACAsU,QAAA+6C,KAAAh6C,KAAAr2B,EAAA,CACAywE,QAAA7wE,EACA8wE,UAAA,WACA,OAAA9wE,GAEA0wE,mBACOD,GAAA,OAEPpsE,EAAA+d,aAAAusD,EAAAn/D,MAAA8S,EAAA,CACAuG,KAAA2nD,EACAxnB,WACApoC,SAAA0B,EAAAosD,gBAAA/qB,EAAA/jD,IAAA,4BACA0kB,UAAA2pD,EAAA3pD,UACAC,kBAAA0pD,EAAA1pD,oBAGAo/B,EAAA/jD,IAAA,kBACA+uE,EAAAp2D,UAAAwzD,EAAApoB,GACAgrB,EAAAp2D,UAAAq2D,WAAA,WACAD,EAAAp2D,UAAAvY,QAIAP,KAAA8sE,WAAA38D,IAAA++D,GAEAA,EAAA/8D,kBACAnS,KAAAkH,MAAAiJ,IAAA++D,GACAA,EAAAE,wBAiBAX,EAAAlC,EAAAkC,gBAAA,SAAA6C,EAAA9tD,EAAA0G,GACA,IACArF,EACAC,EAFA4rD,EAAA1hD,EAAAxL,EAAA8tD,GAsBA,OAlBAniD,EAAAuhD,IAEA5rD,EAAAoF,EAAA,iBACArF,EAAA,UACGsK,EAAAuhD,EAAAntD,IAEHuB,EAAAoF,EAAA,iBACArF,EAAA,WAEAC,EAAA,SAGAD,EADA6rD,EAAA,GAAAA,EAAAntD,EACA2G,EAAA,iBAEAA,EAAA,kBAIA,CACAgB,SAAAwlD,EACA7rD,YACAC,sBAkCA,SAAAo/C,EAAAhgB,GACA,IAAA8sB,EAAA9sB,EAAA/jD,IAAA,WACA,OAAA+jD,EAAA/jD,IAAA,aACA+jD,EAAA/jD,IAAA,iBAAA6wE,KAAAh6C,MAiDA,SAAAg5C,EAAAvnE,GACAA,MAAA2F,QAAA,GAGA,SAAA6hE,EAAAsB,EAAArQ,EAAAsN,GAEA,IAAAgD,EAAAD,KAAApyD,kBAAAliB,QACAw0E,EAAAvQ,KAAA/hD,kBAAAliB,QAEA,GAAAu0E,GAAAC,EAAA,CAMA,IAAAC,EAAArF,EAAAtiD,SAAA,IAIA,OAHAsiD,EAAAx9B,OAAA6iC,KAAAH,EAAArmD,UACAsmD,EAAAhyD,eAAA6sD,EAAAriD,IAAA,GAAA0nD,EAAAH,EAAAxqD,sBACA0qD,EAAAjyD,eAAA6sD,EAAAriD,IAAA,GAAA0nD,EAAAxQ,EAAAn6C,sBACAyqD,EAAA/wC,UAAAgxC,IAGA,SAAAlB,EAAAF,GACA,iBAAAA,GAAA,WAAAA,EA4HA,IAAAjvC,EAAAmrC,EACAp0C,EAAA93B,QAAA+gC,mBCpmBc19B,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBiuE,EAA6BjuE,EAAQ,KAyBrCkuE,EAAAt8C,EAAA/Y,oBAAA,CACAhd,KAAA,OAKAsyE,aAAA,KAMAC,iBAAA,KAKAjgE,OAAA,SAAAqyC,EAAAz5C,EAAAtC,EAAAsJ,GAMAzR,KAAA8xE,kBAAAH,EAAAI,SAAA7tB,GACA0tB,EAAApZ,WAAAx4D,KAAA,SAAAb,WAEA6yE,EAAAhyE,KAAAkkD,EAAAz5C,EAAAtC,EAAAsJ,GAAA,IAWAwgE,kBAAA,SAAA/tB,EAAAz5C,EAAAtC,EAAAsJ,EAAAygE,GACAF,EAAAhyE,KAAAkkD,EAAAz5C,EAAAtC,EAAAsJ,GAAA,IAMAsE,OAAA,SAAAtL,EAAAtC,GACA,IAAA+tB,EAAAl2B,KAAA6xE,aACA37C,KAAAngB,OAAA5N,GACAypE,EAAApZ,WAAAx4D,KAAA,SAAAb,YAMA2W,QAAA,SAAArL,EAAAtC,GACAgqE,EAAAnyE,KAAAmI,GACAypE,EAAApZ,WAAAx4D,KAAA,UAAAb,cAIA,SAAA6yE,EAAAI,EAAAluB,EAAAz5C,EAAAtC,EAAAsJ,EAAA4gE,GACA,IAAAvqC,EAAA8pC,EAAAU,oBAAAF,EAAAN,kBAEA,GAAAhqC,EAAA,CAIA,IAAAyqC,EAAAZ,EAAAa,oBAAAtuB,GACAquB,GAAAH,EAAAP,eAAAO,EAAAP,aAAA,IAAA/pC,IAAAj2B,OAAAqyC,EAAAquB,EAAApqE,EAAAkqE,GAAAF,EAAAC,EAAAjqE,IAGA,SAAAgqE,EAAAC,EAAA3nE,EAAAtC,GACA,IAAA+tB,EAAAk8C,EAAAP,aACA37C,KAAApgB,QAAArL,EAAAtC,GACAiqE,EAAAP,aAAA,KAGA,IAAAY,EAAA,GAEAb,EAAAc,yBAAA,SAAAnzE,EAAAyB,GACAyxE,EAAAlzE,GAAAyB,GAGA4wE,EAAAU,oBAAA,SAAA/yE,GACA,OAAAA,GAAAkzE,EAAAlzE,IAGA,IAAA6hC,EAAAwwC,EACAz5C,EAAA93B,QAAA+gC,mBCtHA,IAAAv9B,EAAaH,EAAQ,KA2CrB,SAAAivE,EAAA17D,GAGA,IAFA,IAAAgI,EAAA,GAEAhI,IACAA,IAAA27D,aACA3zD,EAAAxd,KAAAwV,GAGA,OAAAgI,EAAA4zD,UA0BAxyE,EAAAyyE,mBAxDA,SAAArhE,EAAAshE,EAAAhiE,GACA,GAAAU,GAAA5N,EAAAhD,QAAAkyE,EAAAthE,EAAAlS,OAAA,GACA,IAAAyzE,EAAAjiE,EAAAC,UAAA63D,KAAAmK,KACAC,EAAAxhE,EAAAwhE,WAEA,GAAAA,GAAAD,EAAAE,SAAAD,GACA,OACAh8D,KAAAg8D,GAIA,IAAAE,EAAA1hE,EAAA0hE,aAEA,SAAAA,IAAAF,EAAAD,EAAAI,YAAAD,IACA,OACAl8D,KAAAg8D,KA0CA5yE,EAAAsyE,gBACAtyE,EAAAgzE,cAzBA,SAAAC,EAAAr8D,GACA,IAAAs8D,EAAAZ,EAAAW,GACA,OAAAzvE,EAAAhD,QAAA0yE,EAAAt8D,IAAA,GAwBA5W,EAAAmzE,iBApBA,SAAAv8D,EAAAlG,GAGA,IAFA,IAAA0iE,EAAA,GAEAx8D,GAAA,CACA,IAAAy8D,EAAAz8D,EAAA9F,UACAsiE,EAAAhyE,KAAA,CACAlB,KAAA0W,EAAA1W,KACA4Q,UAAAuiE,EACAp0E,MAAAyR,EAAAy6B,YAAAkoC,KAEAz8D,IAAA27D,WAIA,OADAa,EAAAZ,UACAY,oBC1EA,IAAA5vE,EAAaH,EAAQ,KAErBiwE,EAAcjwE,EAAQ,KAItBuoB,EAFcvoB,EAAQ,KAEtBuoB,UAoBArtB,EAAAiF,EAAAjF,KACAT,EAAA0F,EAAA1F,SACAy1E,GAAA,EA8BAC,EAAA,SAAA7nE,GACA,IAAA8nE,EAAA9nE,EAAA8nE,cACAjjE,EAAA7E,EAAAzM,KAMAw0E,EAAA/zE,KAAAgM,OAAAnI,EAAA5G,MAAA+O,GAMAhM,KAAAT,KAAAsR,EAMA7Q,KAAA8zE,gBAMA9zE,KAAAg0E,eAAAC,EAAAH,GACA,IAAAI,EAAAC,EAAAtjE,GAMA7Q,KAAAo0E,YAAAF,EAAAE,YAMAp0E,KAAAq0E,eAAAH,EAAAG,eAMAr0E,KAAAs0E,OAAAJ,EAAAI,OAAAR,GAEA,cAAAA,GACAS,EAAAR,GA2HA,SAAAA,GACA,IAAAS,EAAAT,EAAAS,UACAT,EAAAU,kBAAA,EACA5wE,EAAAjF,KAAA41E,EAAA,SAAAE,EAAA3rE,GACA2rE,EAAAC,YAAA5rE,EAGA,MAAA2rE,EAAAz4B,SACA83B,EAAAU,kBAAA,KAlIAG,CAAAb,IACG,aAAAD,EACHC,EAAAhgC,WAqIA,SAAAggC,GAEA,IAAAhgC,EAAAggC,EAAAhgC,WACAkI,EAAA83B,EAAA93B,OACA44B,EAAAd,EAAAc,YAAA,GAKA,GAJAj2E,EAAAm1C,EAAA,SAAA+gC,EAAA/rE,GACA8rE,EAAAC,GAAA/rE,KAGAlF,EAAAvF,QAAA29C,GAAA,CACA,IAAA84B,EAAA,GAEAlxE,EAAA1F,SAAA89C,GACAr9C,EAAAq9C,EAAA,SAAA3rB,EAAAwkD,GACA,IAAA/rE,EAAA8rE,EAAAC,GACAC,EAAA,MAAAhsE,IAAA6qE,GAAAtjD,IAIAykD,EAAAnB,GAAA33B,EAGAA,EAAA+4B,EAAAjB,EAAAgB,GAKA,QAAAx3E,EAAAw2C,EAAAt2C,OAAA,EAAqCF,GAAA,EAAQA,IAC7C,MAAA0+C,EAAA1+C,YACAs3E,EAAA9gC,EAAAx2C,IACAw2C,EAAAz/B,OAnKA2gE,CAAAlB,GAEAQ,EAAAR,GAAA,IAGAlwE,EAAAlB,OAAA,WAAAmxE,GAAAC,EAAArmD,YACA6mD,EAAAR,KAIAF,EAAA33E,UAAA,CACAyB,YAAAk2E,EACAqB,iBAAA,SAAA51E,GACA,IAAA61E,EAAAn1E,KAAAg0E,eAAA10E,GAEA,OAAAU,KAAAs0E,OAAAa,EAAA71E,IAEA81E,cAAA,WACA,OAAAvxE,EAAA7E,KAAAgB,KAAAg0E,eAAAh0E,QAGA,IAAAm0E,EAAAN,EAAAM,eAAA,CACAh0D,MAAA,CACAi0D,YAAAiB,EAAA,SAMAhB,eAAA,WACA,IAAAN,EAAA/zE,KAAAgM,OACA,OAAAnI,EAAA7E,KAAA,aAAA+0E,EAAAD,cAAA,SAAAx0E,EAAAg2E,GAEA,OADAA,IAAAh2E,EAAAU,KAAAg0E,eAAA10E,IACAi2E,EAAAl4E,KAAA2C,KAAAV,IACO,SAAAA,EAAAg2E,EAAA/4C,GAGP,IAAAi5C,IAAAj5C,EAGA,OAFA+4C,IAAAh2E,EAAAU,KAAAg0E,eAAA10E,IACAi9B,EAAAo3C,EAAArf,SAAAh1D,EAAAy0E,EAAA0B,aAAAl5C,GACAi5C,EAAAj5C,EAAAo3C,EAAA1hE,UAAAsqB,EAAA,SACOv8B,OAEPs0E,OAAA,CACAoB,OAAA,SAAAP,GACA,OAAAxB,EAAA1hE,UAAA0hE,EAAArf,SAAA6gB,EAAAn1E,KAAAgM,OAAAypE,cAAA,SAEAE,SAAAJ,EACAK,UAAA,SAAAT,EAAA71E,GACA,IAAAnC,EAAA04E,EAAAx4E,KAAA2C,KAAAV,GAMA,OAJA,MAAAnC,IACAA,EAAAw2E,EAAA1hE,UAAA0hE,EAAArf,SAAA6gB,EAAAn1E,KAAAgM,OAAAypE,cAAA,SAGAt4E,GAEA24E,MAAAC,IAGAC,SAAAC,EAAA,SAAA91D,EAAA7gB,GACA,OAAAq0E,EAAAve,UAAAj1C,EAAA7gB,KAEA42E,gBAAAD,EAAA,SAAA91D,EAAA7gB,GACA,OAAAq0E,EAAAve,UAAAj1C,EAAA,KAAA7gB,KAEA62E,eAAAF,EAAA,SAAA91D,EAAA7gB,GACA,OAAAq0E,EAAAve,UAAAj1C,EAAA,UAAA7gB,KAEA82E,WAAAH,EAAA,SAAA91D,EAAA7gB,GACA,OAAAq0E,EAAA1d,YAAA91C,EAAA7gB,KAEA+2E,QAAA,CACAjC,YAAAiB,EAAA,WACAf,OAAAgC,EAAA,QAEAC,MAAA,CACAnC,YAAAiB,EAAA,SACAf,OAAA,CACAoB,OAAAK,EACAJ,SAAAI,EACAH,UAAAG,EACAD,MAAAC,IAGA3+C,OAAA,CACAg9C,YAAA,SAAA90E,EAAAk3E,EAAAC,GACA,IAAAC,EAAA12E,KAAAk1E,iBAAA51E,GAEA,GAAAuE,EAAA/B,SAAA40E,GACAD,EAAA,SAAAC,QACO,GAAAv4E,EAAAu4E,GACP,QAAAn2E,KAAAm2E,EACAA,EAAA34E,eAAAwC,IACAk2E,EAAAl2E,EAAAm2E,EAAAn2E,KAKA+zE,OAAA,CACAoB,OAAAiB,EACAhB,SAAAJ,EACAK,UAAA,SAAAT,EAAA71E,GACA,IAAAnC,EAAA04E,EAAAx4E,KAAA2C,KAAAV,GAMA,OAJA,MAAAnC,IACAA,EAAAw5E,EAAAt5E,KAAA2C,KAAAm1E,IAGAh4E,GAEA24E,MAAAC,IAGA1+C,WAAA,CACA+8C,YAAAiB,EAAA,cACAf,OAAAgC,EAAA,SAoDA,SAAA/B,EAAAR,EAAAzvB,GACA,IAAArI,EAAA83B,EAAA93B,OACA84B,EAAA,GAEAlxE,EAAA1F,SAAA89C,GACAr9C,EAAAq9C,EAAA,SAAA3rB,GACAykD,EAAAtzE,KAAA6uB,KAEG,MAAA2rB,GACH84B,EAAAtzE,KAAAw6C,GAQAqI,GAAA,IAAAywB,EAAAt3E,QALA,CACA0iB,MAAA,EACAiX,OAAA,GAGAr5B,eAAAg2E,EAAAx0E,QAEAw1E,EAAA,GAAAA,EAAA,IAGAC,EAAAjB,EAAAgB,GAGA,SAAAkB,EAAAW,GACA,OACAxC,YAAA,SAAA90E,EAAAk3E,EAAAC,GACAn3E,EAAAU,KAAAk1E,iBAAA51E,GAEAm3E,EAAA,QAAAG,EAAAJ,EAAA,SAAAl3E,KAEAg1E,OAAAgC,EAAA,QAIA,SAAAK,EAAAxB,GACA,IAAAl5B,EAAAj8C,KAAAgM,OAAAiwC,OACA,OAAAA,EAAAttC,KAAAgQ,MAAAsN,EAAAkpD,EAAA,SAAAl5B,EAAAx+C,OAAA,aAGA,SAAA43E,EAAAxkE,GACA,gBAAAvR,EAAAk3E,EAAAC,GACAA,EAAA5lE,EAAA7Q,KAAAk1E,iBAAA51E,KAIA,SAAAi2E,EAAAJ,GACA,IAAAl5B,EAAAj8C,KAAAgM,OAAAiwC,OACA,OAAAA,EAAAj8C,KAAAgM,OAAA04B,MAAAywC,IAAAvB,EAAAuB,EAAAl5B,EAAAx+C,OAAA03E,GAGA,SAAAY,IACA,OAAA/1E,KAAAgM,OAAAiwC,OAAA,GAGA,SAAAq6B,EAAAO,GACA,OACAnB,OAAA,SAAAP,GACA,OAAAlpD,EAAAkpD,EAAA0B,EAAA72E,KAAAgM,OAAAiwC,QAAA,IAEA05B,SAAAJ,EACAK,UAAA,SAAAT,EAAA71E,GACA,IAAAnC,EAAA04E,EAAAx4E,KAAA2C,KAAAV,GAMA,OAJA,MAAAnC,IACAA,EAAA8uB,EAAAkpD,EAAA0B,EAAA72E,KAAAgM,OAAAiwC,QAAA,IAGA9+C,GAEA24E,MAAAC,GAIA,SAAAF,EAAAv2E,GACA,IAAAy0E,EAAA/zE,KAAAgM,OACAwoE,EAAAT,EAAAS,UAEA,GAAAT,EAAAU,iBAAA,CACA,IACAC,EAAAF,EADAX,EAAAiD,eAAAx3E,EAAAk1E,IAGA,GAAAE,KAAAz4B,OACA,OAAAy4B,EAAAz4B,OAAAj8C,KAAAT,OAKA,SAAAy1E,EAAAjB,EAAAgB,GASA,OARAhB,EAAA93B,OAAA84B,EAEA,UAAAhB,EAAAx0E,OACAw0E,EAAA0B,aAAA5xE,EAAAhH,IAAAk4E,EAAA,SAAAnlE,GACA,OAAA+jE,EAAA3hE,MAAApC,MAIAmlE,EAOA,IAAAd,EAAA,CACAyB,OAAA,SAAAp2E,GACA,OAAA2sB,EAAA3sB,EAAAU,KAAAgM,OAAA0hB,WAAA,WAEAkoD,UAAA,SAAAt2E,GACA,IAAAk1E,EAAAx0E,KAAAgM,OAAAwoE,UACAuC,EAAAlD,EAAAiD,eAAAx3E,EAAAk1E,GAAA,GAEA,SAAAuC,EACA,OAAA9qD,EAAA8qD,EAAA,GAAAvC,EAAA/2E,OAAA,cAGAk4E,SAAA,SAAAr2E,GACA,IAAAyJ,EAAA/I,KAAAgM,OAAA+nC,WAAA/zC,KAAAgM,OAAA6oE,YAAAv1E,KAEA,aAAAyJ,EAAA6qE,EAAA7qE,GAEA+sE,MAAAjyE,EAAAJ,MA2LA,SAAAssB,EAAAG,EAAA7sB,EAAAC,GACA,OAAA4sB,EAAA7sB,GAAAC,EAAAD,EAAAC,EAnLAuwE,EAAAmD,gBAAA,WACA,IAAAC,EAAA,GAIA,OAHApzE,EAAAjF,KAAAu1E,EAAA,SAAA1tE,EAAA3I,GACAm5E,EAAAx1E,KAAA3D,KAEAm5E,GAOApD,EAAAqD,iBAAA,SAAA32E,EAAAkG,GACA0tE,EAAA5zE,GAAAkG,GAOAotE,EAAAsD,YAAA,SAAAtmE,GACA,OAAAsjE,EAAAp2E,eAAA8S,IAUAgjE,EAAAuD,WAAA,SAAAn7B,EAAAo7B,EAAAt4E,GACA8E,EAAA1F,SAAA89C,GACAp4C,EAAAjF,KAAAq9C,EAAAo7B,EAAAt4E,GAEAs4E,EAAAh6E,KAAA0B,EAAAk9C,IAIA43B,EAAAyD,UAAA,SAAAr7B,EAAAo7B,EAAAt4E,GACA,IAAAw4E,EACAC,EAAA3zE,EAAAvF,QAAA29C,GAAA,GAAAp4C,EAAA1F,SAAA89C,GAAA,IAA4Es7B,GAAA,QAK5E,OAJA1D,EAAAuD,WAAAn7B,EAAA,SAAA3rB,EAAAxyB,GACA,IAAA25E,EAAAJ,EAAAh6E,KAAA0B,EAAAuxB,EAAAxyB,GACAy5E,EAAAC,EAAAC,EAAAD,EAAA15E,GAAA25E,IAEAD,GAUA3D,EAAA6D,gBAAA,SAAA74E,GACA,IACA84E,EADAtf,EAAA,GAQA,OANAx5D,GAAAD,EAAAu1E,EAAA,SAAA/5C,EAAAvpB,GACAhS,EAAAd,eAAA8S,KACAwnD,EAAAxnD,GAAAhS,EAAAgS,GACA8mE,GAAA,KAGAA,EAAAtf,EAAA,MAYAwb,EAAA+D,mBAAA,SAAAX,GACA,GAAA94E,EAAA84E,GAAA,CACA,IAAAzd,EAAA,GACA56D,EAAAq4E,EAAA,SAAArnE,EAAArQ,GACAi6D,EAAA/3D,KAAAlC,KAEA03E,EAAAzd,MACG,KAAA31D,EAAAvF,QAAA24E,GAGH,SAFAA,IAAAt6E,QAUA,OALAs6E,EAAA/pD,KAAA,SAAA2qD,EAAAC,GAGA,gBAAAA,GAAA,UAAAD,GAAA,IAAAA,EAAAh3E,QAAA,gBAEAo2E,GAaApD,EAAAkE,UAAA,SAAAC,EAAAC,GACA,gBAAAA,KAAAD,GAAA,IAAAA,EAAAn3E,QAAAo3E,IAAAD,IAAAC,GAWApE,EAAAiD,eAAA,SAAAx3E,EAAAk1E,EAAA0D,GAIA,IAHA,IAAAC,EACA/tD,EAAAnb,IAEA1R,EAAA,EAAAC,EAAAg3E,EAAA/2E,OAAyCF,EAAAC,EAASD,IAAA,CAClD,IAAA66E,EAAA5D,EAAAj3E,GAAA+B,MAEA,SAAA84E,EAAA,CACA,GAAAA,IAAA94E,GAKA,kBAAA84E,OAAA94E,EAAA,GACA,OAAA/B,EAGA26E,GAAAG,EAAAD,EAAA76E,IAIA,IAAAA,EAAA,EAAAC,EAAAg3E,EAAA/2E,OAAyCF,EAAAC,EAASD,IAAA,CAClD,IAAAm3E,EAAAF,EAAAj3E,GACA0yB,EAAAykD,EAAAzkD,SACAC,EAAAwkD,EAAAxkD,MAEA,GAAAD,EAAA,CACA,GAAAA,EAAA,MAAAhhB,KACA,GAAA8gB,EAAAG,EAAA,GAAA5wB,EAAA2wB,EAAA,IACA,OAAA1yB,OAEO,GAAA0yB,EAAA,KAAAhhB,KACP,GAAA8gB,EAAAG,EAAA,GAAAD,EAAA,GAAA3wB,GACA,OAAA/B,OAEO,GAAAwyB,EAAAG,EAAA,GAAAD,EAAA,GAAA3wB,IAAAywB,EAAAG,EAAA,GAAA5wB,EAAA2wB,EAAA,IACP,OAAA1yB,EAGA26E,GAAAG,EAAApoD,EAAA,GAAA1yB,GACA26E,GAAAG,EAAApoD,EAAA,GAAA1yB,IAIA,GAAA26E,EACA,OAAA54E,IAAA2P,IAAAulE,EAAA/2E,OAAA,EAAA6B,KAAA2P,IAAA,EAAAkpE,EAGA,SAAAE,EAAA31E,EAAAqG,GACA,IAAAuvE,EAAA3pE,KAAAyb,IAAA1nB,EAAApD,GAEAg5E,EAAAluD,IACAA,EAAAkuD,EACAH,EAAApvE,KASA,IAAAq4B,EAAAyyC,EACA17C,EAAA93B,QAAA+gC,6CC/kBA,IAAAv9B,EAAaH,EAAQ,KAoDrBy0B,EAAA93B,QA7BA,SAAA0oC,GAEA,QAAAxrC,EAAA,EAAiBA,EAAAwrC,EAAAtrC,OAAuBF,IACxCwrC,EAAAxrC,GAAA,KACAwrC,EAAAxrC,GAAA,GAAAwrC,EAAAxrC,GAAA,IAIA,gBAAAkT,EAAA8nE,EAAAC,GAGA,IAFA,IAAAzoE,EAAA,GAEAxS,EAAA,EAAmBA,EAAAwrC,EAAAtrC,OAAuBF,IAAA,CAC1C,IAAAg0C,EAAAxI,EAAAxrC,GAAA,GAEA,KAAAg7E,GAAA10E,EAAAhD,QAAA03E,EAAAhnC,IAAA,GAAAinC,GAAA30E,EAAAhD,QAAA23E,EAAAjnC,GAAA,IAIA,IAAA7uC,EAAA+N,EAAA2S,WAAAmuB,GAEA,MAAA7uC,IACAqN,EAAAg5B,EAAAxrC,GAAA,IAAAmF,IAIA,OAAAqN,qBChDA,IAAA0oE,EAAY/0E,EAAQ,KAEpBk8B,EAAWl8B,EAAQ,KAEnBg1E,EAAWh1E,EAAQ,KAEnB+a,EAAmB/a,EAAQ,KAI3BoJ,EAFcpJ,EAAQ,KAEtB8D,iBAUAmxE,EAAA,CACAl5C,EAAA,EACAm2B,EAAA,EACAwJ,EAAA,EACAwZ,EAAA,EACAzZ,EAAA,EACA0Z,EAAA,EAEAvjB,EAAA,GAWA1mD,EAAA,GACAE,EAAA,GACAyrC,EAAA,GACAC,EAAA,GACA9rC,EAAAC,KAAAC,IACAC,EAAAF,KAAAG,IACAgqE,EAAAnqE,KAAA6gC,IACAupC,EAAApqE,KAAA2gC,IACAyuB,EAAApvD,KAAAmtB,KACAk9C,EAAArqE,KAAAyb,IACA6uD,EAAA,oBAAAp9C,aAMAyF,EAAA,SAAA43C,GACAl5E,KAAAm5E,WAAAD,EAEAl5E,KAAAm5E,YAKAn5E,KAAAwB,KAAA,IAGAxB,KAAAtB,KAAA,MAQA4iC,EAAAplC,UAAA,CACAyB,YAAA2jC,EACA83C,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EAEAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,UAAA,KACAC,YAAA,EACAC,SAAA,EACAC,SAAA,EAKA52C,SAAA,SAAA5C,EAAAC,GACAvgC,KAAAw5E,IAAAR,EAAA,EAAAlsE,EAAAwzB,IAAA,EACAtgC,KAAAy5E,IAAAT,EAAA,EAAAlsE,EAAAyzB,IAAA,GAEA3/B,WAAA,WACA,OAAAZ,KAAAtB,MAOAykC,UAAA,SAAAtB,GAcA,OAbA7hC,KAAAtB,KAAAmjC,EACAA,KAAAsB,YACAtB,IAAA7hC,KAAA8M,IAAA+0B,EAAA/0B,KAEA9M,KAAAm5E,YACAn5E,KAAA05E,KAAA,GAGA15E,KAAA25E,YACA35E,KAAA25E,UAAA,KACA35E,KAAA45E,YAAA,GAGA55E,MAQAu9C,OAAA,SAAAvtC,EAAAC,GAWA,OAVAjQ,KAAA+5E,QAAApB,EAAAl5C,EAAAzvB,EAAAC,GACAjQ,KAAAtB,MAAAsB,KAAAtB,KAAA6+C,OAAAvtC,EAAAC,GAKAjQ,KAAAs5E,IAAAtpE,EACAhQ,KAAAu5E,IAAAtpE,EACAjQ,KAAAo5E,IAAAppE,EACAhQ,KAAAq5E,IAAAppE,EACAjQ,MAQAw9C,OAAA,SAAAxtC,EAAAC,GACA,IAAA+pE,EAAAhB,EAAAhpE,EAAAhQ,KAAAo5E,KAAAp5E,KAAAw5E,KAAAR,EAAA/oE,EAAAjQ,KAAAq5E,KAAAr5E,KAAAy5E,KACAz5E,KAAA05E,KAAA,EAYA,OAXA15E,KAAA+5E,QAAApB,EAAA/iB,EAAA5lD,EAAAC,GAEAjQ,KAAAtB,MAAAs7E,IACAh6E,KAAAi6E,aAAAj6E,KAAAk6E,cAAAlqE,EAAAC,GAAAjQ,KAAAtB,KAAA8+C,OAAAxtC,EAAAC,IAGA+pE,IACAh6E,KAAAo5E,IAAAppE,EACAhQ,KAAAq5E,IAAAppE,GAGAjQ,MAYAo+C,cAAA,SAAA32B,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,GASA,OARAhhE,KAAA+5E,QAAApB,EAAAvZ,EAAA33C,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,GAEAhhE,KAAAtB,OACAsB,KAAAi6E,aAAAj6E,KAAAm6E,gBAAA1yD,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,GAAAhhE,KAAAtB,KAAA0/C,cAAA32B,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,IAGAhhE,KAAAo5E,IAAArY,EACA/gE,KAAAq5E,IAAArY,EACAhhE,MAUAo6E,iBAAA,SAAA3yD,EAAAE,EAAAD,EAAAE,GASA,OARA5nB,KAAA+5E,QAAApB,EAAAC,EAAAnxD,EAAAE,EAAAD,EAAAE,GAEA5nB,KAAAtB,OACAsB,KAAAi6E,aAAAj6E,KAAAq6E,mBAAA5yD,EAAAE,EAAAD,EAAAE,GAAA5nB,KAAAtB,KAAA07E,iBAAA3yD,EAAAE,EAAAD,EAAAE,IAGA5nB,KAAAo5E,IAAA1xD,EACA1nB,KAAAq5E,IAAAzxD,EACA5nB,MAYAm+C,IAAA,SAAAd,EAAAC,EAAAM,EAAA08B,EAAAC,EAAAC,GAKA,OAJAx6E,KAAA+5E,QAAApB,EAAAxZ,EAAA9hB,EAAAC,EAAAM,IAAA08B,EAAAC,EAAAD,EAAA,EAAAE,EAAA,KACAx6E,KAAAtB,MAAAsB,KAAAtB,KAAAy/C,IAAAd,EAAAC,EAAAM,EAAA08B,EAAAC,EAAAC,GACAx6E,KAAAo5E,IAAAN,EAAAyB,GAAA38B,EAAAP,EACAr9C,KAAAq5E,IAAAN,EAAAwB,GAAA38B,EAAAP,EACAr9C,MAGAy6E,MAAA,SAAAhzD,EAAAE,EAAAD,EAAAE,EAAA8yD,GAKA,OAJA16E,KAAAtB,MACAsB,KAAAtB,KAAA+7E,MAAAhzD,EAAAE,EAAAD,EAAAE,EAAA8yD,GAGA16E,MAGA+e,KAAA,SAAA/O,EAAAC,EAAA+zB,EAAA5J,GAGA,OAFAp6B,KAAAtB,MAAAsB,KAAAtB,KAAAqgB,KAAA/O,EAAAC,EAAA+zB,EAAA5J,GACAp6B,KAAA+5E,QAAApB,EAAArjB,EAAAtlD,EAAAC,EAAA+zB,EAAA5J,GACAp6B,MAMAy9C,UAAA,WACAz9C,KAAA+5E,QAAApB,EAAAE,GACA,IAAAh3C,EAAA7hC,KAAAtB,KACAmiE,EAAA7gE,KAAAs5E,IACAxY,EAAA9gE,KAAAu5E,IASA,OAPA13C,IACA7hC,KAAAi6E,cAAAj6E,KAAAk6E,cAAArZ,EAAAC,GACAj/B,EAAA4b,aAGAz9C,KAAAo5E,IAAAvY,EACA7gE,KAAAq5E,IAAAvY,EACA9gE,MASAwgB,KAAA,SAAAqhB,GACAA,KAAArhB,OACAxgB,KAAA26E,YAOAp6D,OAAA,SAAAshB,GACAA,KAAAthB,SACAvgB,KAAA26E,YAQA33C,YAAA,SAAAH,GACA,GAAAA,aAAAxmC,MAAA,CACA2D,KAAA25E,UAAA92C,EACA7iC,KAAA65E,SAAA,EAGA,IAFA,IAAAe,EAAA,EAEAr9E,EAAA,EAAqBA,EAAAslC,EAAAplC,OAAqBF,IAC1Cq9E,GAAA/3C,EAAAtlC,GAGAyC,KAAA85E,SAAAc,EAGA,OAAA56E,MAQAojC,kBAAA,SAAA5/B,GAEA,OADAxD,KAAA45E,YAAAp2E,EACAxD,MAOAxC,IAAA,WACA,OAAAwC,KAAA05E,MAMA7uC,QAAA,SAAArpC,GACA,IAAAhE,EAAAgE,EAAA/D,OAEAuC,KAAAwB,MAAAxB,KAAAwB,KAAA/D,QAAAD,IAAAy7E,IACAj5E,KAAAwB,KAAA,IAAAq6B,aAAAr+B,IAGA,QAAAD,EAAA,EAAmBA,EAAAC,EAASD,IAC5ByC,KAAAwB,KAAAjE,GAAAiE,EAAAjE,GAGAyC,KAAA05E,KAAAl8E,GAOAq9E,WAAA,SAAA57D,GACAA,aAAA5iB,QACA4iB,EAAA,CAAAA,IAOA,IAJA,IAAAzhB,EAAAyhB,EAAAxhB,OACAq9E,EAAA,EACAt3E,EAAAxD,KAAA05E,KAEAn8E,EAAA,EAAmBA,EAAAC,EAASD,IAC5Bu9E,GAAA77D,EAAA1hB,GAAAC,MAGAy7E,GAAAj5E,KAAAwB,gBAAAq6B,eACA77B,KAAAwB,KAAA,IAAAq6B,aAAAr4B,EAAAs3E,IAGA,IAAAv9E,EAAA,EAAmBA,EAAAC,EAASD,IAG5B,IAFA,IAAAw9E,EAAA97D,EAAA1hB,GAAAiE,KAEAy9B,EAAA,EAAqBA,EAAA87C,EAAAt9E,OAA2BwhC,IAChDj/B,KAAAwB,KAAAgC,KAAAu3E,EAAA97C,GAIAj/B,KAAA05E,KAAAl2E,GAOAu2E,QAAA,SAAAiB,GACA,GAAAh7E,KAAAm5E,UAAA,CAIA,IAAA33E,EAAAxB,KAAAwB,KAEAxB,KAAA05E,KAAAv6E,UAAA1B,OAAA+D,EAAA/D,SAGAuC,KAAAi7E,cAEAz5E,EAAAxB,KAAAwB,MAGA,QAAAjE,EAAA,EAAmBA,EAAA4B,UAAA1B,OAAsBF,IACzCiE,EAAAxB,KAAA05E,QAAAv6E,UAAA5B,GAGAyC,KAAAk7E,SAAAF,IAEAC,YAAA,WAEA,KAAAj7E,KAAAwB,gBAAAnF,OAAA,CAGA,IAFA,IAAAupE,EAAA,GAEAroE,EAAA,EAAqBA,EAAAyC,KAAA05E,KAAen8E,IACpCqoE,EAAAroE,GAAAyC,KAAAwB,KAAAjE,GAGAyC,KAAAwB,KAAAokE,IASAqU,WAAA,WACA,OAAAj6E,KAAA25E,WAEAO,cAAA,SAAAzyD,EAAAE,GACA,IAWAwzD,EAEAltD,EAbAmtD,EAAAp7E,KAAA85E,SACAt2E,EAAAxD,KAAA45E,YACA/2C,EAAA7iC,KAAA25E,UACA93C,EAAA7hC,KAAAtB,KACAmiE,EAAA7gE,KAAAo5E,IACAtY,EAAA9gE,KAAAq5E,IACA5+C,EAAAhT,EAAAo5C,EACAnmC,EAAA/S,EAAAm5C,EACA1kC,EAAA2hC,EAAAtjC,IAAAC,KACA1qB,EAAA6wD,EACA5wD,EAAA6wD,EAEAua,EAAAx4C,EAAAplC,OAcA,IATA+F,EAAA,IAEAA,EAAA43E,EAAA53E,GAIAwM,IADAxM,GAAA43E,IARA3gD,GAAA2B,GAUAnsB,GAAAzM,GATAk3B,GAAA0B,GAWA3B,EAAA,GAAAzqB,GAAAyX,GAAAgT,EAAA,GAAAzqB,GAAAyX,GAAA,GAAAgT,IAAAC,EAAA,GAAAzqB,GAAA0X,GAAA+S,EAAA,GAAAzqB,GAAA0X,IAGA3X,GAAAyqB,GADA0gD,EAAAt4C,EADA5U,EAAAjuB,KAAA65E,WAGA5pE,GAAAyqB,EAAAygD,EACAn7E,KAAA65E,UAAA5rD,EAAA,GAAAotD,EAEA5gD,EAAA,GAAAzqB,EAAA6wD,GAAApmC,EAAA,GAAAzqB,EAAA6wD,GAAAnmC,EAAA,GAAAzqB,EAAA6wD,GAAApmC,EAAA,GAAAzqB,EAAA6wD,GAIAj/B,EAAA5T,EAAA,qBAAAwM,GAAA,EAAA/rB,EAAAsB,EAAAyX,GAAA5Y,EAAAmB,EAAAyX,GAAAiT,GAAA,EAAAhsB,EAAAuB,EAAA0X,GAAA9Y,EAAAoB,EAAA0X,IAIA8S,EAAAzqB,EAAAyX,EACAiT,EAAAzqB,EAAA0X,EACA3nB,KAAA45E,aAAA7b,EAAAtjC,IAAAC,MAGAy/C,gBAAA,SAAA1yD,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,GACA,IAMA/jC,EACAxC,EACAC,EAKA1qB,EACAC,EAdAmrE,EAAAp7E,KAAA85E,SACAt2E,EAAAxD,KAAA45E,YACA/2C,EAAA7iC,KAAA25E,UACA93C,EAAA7hC,KAAAtB,KACAmiE,EAAA7gE,KAAAo5E,IACAtY,EAAA9gE,KAAAq5E,IAIA5a,EAAAga,EAAAha,QACA6c,EAAA,EACArtD,EAAAjuB,KAAA65E,SACAwB,EAAAx4C,EAAAplC,OAGA89E,EAAA,EASA,IAPA/3E,EAAA,IAEAA,EAAA43E,EAAA53E,GAGAA,GAAA43E,EAEAn+C,EAAA,EAAeA,EAAA,EAAOA,GAAA,GACtBxC,EAAAgkC,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAA9jC,EAAA,IAAAwhC,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAA9jC,GACAvC,EAAA+jC,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAA/jC,EAAA,IAAAwhC,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAA/jC,GACAq+C,GAAAvd,EAAAtjC,IAAAC,KAIA,KAAUzM,EAAAotD,MACVE,GAAA14C,EAAA5U,IAEAzqB,GAHuByqB,KAUvB,IAFAgP,GAAAs+C,EAAA/3E,GAAA83E,EAEAr+C,GAAA,GACAjtB,EAAAyuD,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAA9jC,GACAhtB,EAAAwuD,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAA/jC,GAGAhP,EAAA,EAAA4T,EAAA0b,OAAAvtC,EAAAC,GAAA4xB,EAAA2b,OAAAxtC,EAAAC,GACAgtB,GAAA4F,EAAA5U,GAAAqtD,EACArtD,KAAA,GAAAotD,EAIAptD,EAAA,OAAA4T,EAAA2b,OAAAujB,EAAAC,GACAvmC,EAAAsmC,EAAA/wD,EACA0qB,EAAAsmC,EAAA/wD,EACAjQ,KAAA45E,aAAA7b,EAAAtjC,IAAAC,MAEA2/C,mBAAA,SAAA5yD,EAAAE,EAAAD,EAAAE,GAEA,IAAAm5C,EAAAr5C,EACAs5C,EAAAp5C,EACAF,KAAA,EAAAD,GAAA,EACAG,KAAA,EAAAD,GAAA,EACAF,GAAAznB,KAAAo5E,IAAA,EAAA3xD,GAAA,EACAE,GAAA3nB,KAAAq5E,IAAA,EAAA1xD,GAAA,EAEA3nB,KAAAm6E,gBAAA1yD,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,IAOA2Z,SAAA,WACA,IAAAn5E,EAAAxB,KAAAwB,KAEAA,aAAAnF,QACAmF,EAAA/D,OAAAuC,KAAA05E,KAEAT,IACAj5E,KAAAwB,KAAA,IAAAq6B,aAAAr6B,MAQA2d,gBAAA,WACAvQ,EAAA,GAAAA,EAAA,GAAA2rC,EAAA,GAAAA,EAAA,GAAA3rB,OAAA6qB,UACA3qC,EAAA,GAAAA,EAAA,GAAA0rC,EAAA,GAAAA,EAAA,IAAA5rB,OAAA6qB,UAOA,IANA,IAAAj4C,EAAAxB,KAAAwB,KACAg6E,EAAA,EACAC,EAAA,EACA5a,EAAA,EACAC,EAAA,EAEAvjE,EAAA,EAAmBA,EAAAiE,EAAA/D,QAAiB,CACpC,IAAAu9E,EAAAx5E,EAAAjE,KAaA,OAXA,GAAAA,IAOAsjE,EAFA2a,EAAAh6E,EAAAjE,GAGAujE,EAFA2a,EAAAj6E,EAAAjE,EAAA,IAKAy9E,GACA,KAAArC,EAAAl5C,EAKA+7C,EAFA3a,EAAAr/D,EAAAjE,KAGAk+E,EAFA3a,EAAAt/D,EAAAjE,KAGAg9C,EAAA,GAAAsmB,EACAtmB,EAAA,GAAAumB,EACAtmB,EAAA,GAAAqmB,EACArmB,EAAA,GAAAsmB,EACA,MAEA,KAAA6X,EAAA/iB,EACA8iB,EAAAgD,SAAAF,EAAAC,EAAAj6E,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAg9C,EAAAC,GACAghC,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA,MAEA,KAAAo7E,EAAAvZ,EACAsZ,EAAAiD,UAAAH,EAAAC,EAAAj6E,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAg9C,EAAAC,GACAghC,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA,MAEA,KAAAo7E,EAAAC,EACAF,EAAAkD,cAAAJ,EAAAC,EAAAj6E,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAg9C,EAAAC,GACAghC,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA,MAEA,KAAAo7E,EAAAxZ,EAEA,IAAA9hB,EAAA77C,EAAAjE,KACA+/C,EAAA97C,EAAAjE,KACAs+E,EAAAr6E,EAAAjE,KACAu+E,EAAAt6E,EAAAjE,KACA+8E,EAAA94E,EAAAjE,KACAg9E,EAAA/4E,EAAAjE,KAAA+8E,EAGAE,GADAh5E,EAAAjE,KACA,EAAAiE,EAAAjE,MAEA,GAAAA,IAGAsjE,EAAAiY,EAAAwB,GAAAuB,EAAAx+B,EACAyjB,EAAAiY,EAAAuB,GAAAwB,EAAAx+B,GAGAo7B,EAAAqD,QAAA1+B,EAAAC,EAAAu+B,EAAAC,EAAAxB,EAAAC,EAAAC,EAAAjgC,EAAAC,GACAghC,EAAA1C,EAAAyB,GAAAsB,EAAAx+B,EACAo+B,EAAA1C,EAAAwB,GAAAuB,EAAAx+B,EACA,MAEA,KAAAq7B,EAAArjB,EACAuL,EAAA2a,EAAAh6E,EAAAjE,KACAujE,EAAA2a,EAAAj6E,EAAAjE,KACA,IAAAkK,EAAAjG,EAAAjE,KACAmK,EAAAlG,EAAAjE,KAEAm7E,EAAAgD,SAAA7a,EAAAC,EAAAD,EAAAp5D,EAAAq5D,EAAAp5D,EAAA6yC,EAAAC,GACA,MAEA,KAAAm+B,EAAAE,EACA2C,EAAA3a,EACA4a,EAAA3a,EAKAlhC,EAAAhxB,QAAA2rC,GACA3a,EAAA9wB,QAAA0rC,GAQA,OAJA,IAAAj9C,IACAqR,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAA,EAAA,MAGA,IAAA2P,EAAA7P,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,KAQA00B,YAAA,SAAAzB,GASA,IARA,IACAg/B,EAAAC,EACA0a,EAAAC,EACAzrE,EAAAC,EAHA6sB,EAAA98B,KAAAwB,KAIAw6E,EAAAh8E,KAAAw5E,IACAyC,EAAAj8E,KAAAy5E,IACAj8E,EAAAwC,KAAA05E,KAEAn8E,EAAA,EAAmBA,EAAAC,GAAS,CAC5B,IAAAw9E,EAAAl+C,EAAAv/B,KAaA,OAXA,GAAAA,IAOAsjE,EAFA2a,EAAA1+C,EAAAv/B,GAGAujE,EAFA2a,EAAA3+C,EAAAv/B,EAAA,IAKAy9E,GACA,KAAArC,EAAAl5C,EACAohC,EAAA2a,EAAA1+C,EAAAv/B,KACAujE,EAAA2a,EAAA3+C,EAAAv/B,KACAskC,EAAA0b,OAAAi+B,EAAAC,GACA,MAEA,KAAA9C,EAAA/iB,EACA5lD,EAAA8sB,EAAAv/B,KACA0S,EAAA6sB,EAAAv/B,MAEAy7E,EAAAhpE,EAAAwrE,GAAAQ,GAAAhD,EAAA/oE,EAAAwrE,GAAAQ,GAAA1+E,IAAAC,EAAA,KACAqkC,EAAA2b,OAAAxtC,EAAAC,GACAurE,EAAAxrE,EACAyrE,EAAAxrE,GAGA,MAEA,KAAA0oE,EAAAvZ,EACAv9B,EAAAuc,cAAAthB,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,MACAi+E,EAAA1+C,EAAAv/B,EAAA,GACAk+E,EAAA3+C,EAAAv/B,EAAA,GACA,MAEA,KAAAo7E,EAAAC,EACA/2C,EAAAu4C,iBAAAt9C,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,MACAi+E,EAAA1+C,EAAAv/B,EAAA,GACAk+E,EAAA3+C,EAAAv/B,EAAA,GACA,MAEA,KAAAo7E,EAAAxZ,EACA,IAAA9hB,EAAAvgB,EAAAv/B,KACA+/C,EAAAxgB,EAAAv/B,KACAs+E,EAAA/+C,EAAAv/B,KACAu+E,EAAAh/C,EAAAv/B,KACAuiE,EAAAhjC,EAAAv/B,KACA2+E,EAAAp/C,EAAAv/B,KACA4+E,EAAAr/C,EAAAv/B,KACA6+E,EAAAt/C,EAAAv/B,KACAqgD,EAAAi+B,EAAAC,EAAAD,EAAAC,EACAO,EAAAR,EAAAC,EAAA,EAAAD,EAAAC,EACAQ,EAAAT,EAAAC,IAAAD,EAAA,EAEAtB,EAAAza,EAAAoc,EADAvtE,KAAAyb,IAAAyxD,EAAAC,GAAA,MAIAj6C,EAAArB,UAAA6c,EAAAC,GACAzb,EAAAgN,OAAAstC,GACAt6C,EAAAlF,MAAA0/C,EAAAC,GACAz6C,EAAAsc,IAAA,IAAAP,EAAAkiB,EAAAya,EAAA,EAAA6B,GACAv6C,EAAAlF,MAAA,EAAA0/C,EAAA,EAAAC,GACAz6C,EAAAgN,QAAAstC,GACAt6C,EAAArB,WAAA6c,GAAAC,IAEAzb,EAAAsc,IAAAd,EAAAC,EAAAM,EAAAkiB,EAAAya,EAAA,EAAA6B,GAGA,GAAA7+E,IAGAsjE,EAAAiY,EAAAhZ,GAAA+b,EAAAx+B,EACAyjB,EAAAiY,EAAAjZ,GAAAgc,EAAAx+B,GAGAk+B,EAAA1C,EAAAyB,GAAAsB,EAAAx+B,EACAo+B,EAAA1C,EAAAwB,GAAAuB,EAAAx+B,EACA,MAEA,KAAAq7B,EAAArjB,EACAuL,EAAA2a,EAAA1+C,EAAAv/B,GACAujE,EAAA2a,EAAA3+C,EAAAv/B,EAAA,GACAskC,EAAA9iB,KAAA+d,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,KAAAu/B,EAAAv/B,MACA,MAEA,KAAAo7E,EAAAE,EACAh3C,EAAA4b,YACA+9B,EAAA3a,EACA4a,EAAA3a,MAKAx/B,EAAAq3C,MACA,IAAAv3C,EAAAE,EACAnJ,EAAA93B,QAAA+gC,mBC1vBA,IAEApO,EAFatvB,EAAQ,KAErBsvB,UAqCAmF,EAAA93B,QAbA,WACA,IAAAgmC,EAAArT,IACA,gBAAAjiB,GACA,IAAAs2B,EAAAhB,EAAAt1B,GACAu8B,EAAAv8B,EAAAu8B,gBACAivC,EAAAl1C,EAAAm1C,MACAC,EAAAp1C,EAAAszB,kBACA6hB,EAAAn1C,EAAAm1C,MAAAlvC,EAAAkvC,MACAE,EAAAr1C,EAAAszB,kBAAArtB,EAAAqtB,kBACA,SAAA4hB,EAAAC,GAAAC,EAAAC,IAAA,2BCnCA,IAAAC,EAAyBj5E,EAAQ,KAiDjCy0B,EAAA93B,QAXA,SAAAnD,EAAA6a,GAEA,OAAA4kE,GADA5kE,KAAA,IACA+jD,iBAAA,GAAA5+D,EAAA,CACA0/E,QAAA7kE,EAAA2tD,kBAAAxoE,EAAAwoE,iBACAmX,UAAA9kE,EAAA+kE,cAAA5/E,EAAA4/E,aACAC,SAAAhlE,EAAAilE,gBACAjhB,cAAAhkD,EAAAgkD,cACAkhB,mBAAAllE,EAAAklE,uCC7CA,IAAAp5E,EAAaH,EAAQ,KAuBrB09B,GArBiB19B,EAAQ,KAqBzB,CAKAq9C,OAAA,SAAAm8B,GACA,IAAAlxE,EAAAhM,KAAAgM,OACA4C,EAAAsuE,GAAA,MAAAlxE,EAAAmxE,WAAAnxE,EAAA4C,IAAA5C,EAAAmxE,WAMA,OAJAn9E,KAAA2hD,MAAA,MAAA/yC,GAAA,YAAAA,GAAA,oBAAAA,IAAA/K,EAAA7B,MAAA4M,KACAA,EAAA5O,KAAA2hD,KAAAhlB,MAAA3qB,MAAApD,IAGAA,GAOAoyC,OAAA,SAAAk8B,GACA,IAAAlxE,EAAAhM,KAAAgM,OACA8C,EAAAouE,GAAA,MAAAlxE,EAAAoxE,SAAApxE,EAAA8C,IAAA9C,EAAAoxE,SAMA,OAJAp9E,KAAA2hD,MAAA,MAAA7yC,GAAA,YAAAA,GAAA,oBAAAA,IAAAjL,EAAA7B,MAAA8M,KACAA,EAAA9O,KAAA2hD,KAAAhlB,MAAA3qB,MAAAlD,IAGAA,GAMA0yC,iBAAA,WACA,IAAAx1C,EAAAhM,KAAAgM,OACA,aAAAA,EAAAmxE,YAAA,MAAAnxE,EAAAoxE,WAAApxE,EAAA2wB,OAOA0gD,iBAAAx5E,EAAAJ,KAMA65E,SAAA,SAAAH,EAAAC,GACAp9E,KAAAgM,OAAAmxE,aACAn9E,KAAAgM,OAAAoxE,YAMAG,WAAA,WAEAv9E,KAAAgM,OAAAmxE,WAAAn9E,KAAAgM,OAAAoxE,SAAA,QAGAjlD,EAAA93B,QAAA+gC,mBCrFA,IAAA25B,EAAuBr3D,EAAQ,KAE/B+tC,EAAW/tC,EAAQ,KAEnBohD,EAAYphD,EAAQ,KAEpB/C,EAAAmkD,EAAAnkD,OACArC,EAAAwmD,EAAAxmD,QAgDA65B,EAAA93B,QAXA,SAAA0Q,EAAAgH,EAAAu9B,GACAv9B,EAAAzZ,EAAAyZ,IAAA,CACA+jD,gBAAA/jD,IACGpX,EAAA,GAAaoX,GAChB,IAAA7a,EAAA6T,EAAA04B,YACA+zC,EAAAziB,EAAA79D,EAAA6a,GACAzK,EAAA,IAAAmkC,EAAA+rC,EAAAzsE,GAEA,OADAzD,EAAA+nC,SAAAn4C,EAAAo4C,GACAhoC,yCCpDA,IAEAmwE,EAFc/5E,EAAQ,KAEtB+5E,UAEAlxE,EAAA,aAEA,IAAAkxE,EACAlxE,EAAA,WACA,QAAA0yB,KAAA9/B,UACA,UAAA2D,MAAA3D,UAAA8/B,KAGCw+C,EAAA,IACDlxE,EAAA,WACA,QAAA0yB,KAAA9/B,UACAmN,QAAAC,IAAApN,UAAA8/B,MAKA,IAAAmC,EAAA70B,EACA4rB,EAAA93B,QAAA+gC,mBCrBA,IAAAC,EAAkB39B,EAAQ,KAE1B+a,EAAmB/a,EAAQ,KAE3BG,EAAaH,EAAQ,KAErBmhD,EAAkBnhD,EAAQ,KAS1B,SAAAga,EAAA3W,GACAs6B,EAAAhkC,KAAA2C,KAAA+G,GAGA2W,EAAAxhB,UAAA,CACAyB,YAAA+f,EACAne,KAAA,QACAqiC,MAAA,SAAAC,EAAAC,GACA,IAAA/xB,EAAA/P,KAAA+P,MACA2tE,EAAA3tE,EAAAG,MAEAH,EAAA/Q,KAAA6iC,EAAA7hC,KAAA8hC,GACA,IAAA5xB,EAAAlQ,KAAA29E,OAAA94B,EAAA+4B,oBAAAF,EAAA19E,KAAA29E,OAAA39E,UAAAqnB,QAEA,GAAAnX,GAAA20C,EAAA4D,aAAAv4C,GAAA,CAWA,IAAAF,EAAAD,EAAAC,GAAA,EACAC,EAAAF,EAAAE,GAAA,EACAxI,EAAAsI,EAAAtI,MACAC,EAAAqI,EAAArI,OACA4X,EAAApP,EAAAzI,MAAAyI,EAAAxI,OAeA,GAbA,MAAAD,GAAA,MAAAC,EAEAD,EAAAC,EAAA4X,EACK,MAAA5X,GAAA,MAAAD,EACLC,EAAAD,EAAA6X,EACK,MAAA7X,GAAA,MAAAC,IACLD,EAAAyI,EAAAzI,MACAC,EAAAwI,EAAAxI,QAIA1H,KAAAsiC,aAAAT,GAEA9xB,EAAA8tE,QAAA9tE,EAAA+tE,QAAA,CACA,IAAAx9C,EAAAvwB,EAAAuwB,IAAA,EACAC,EAAAxwB,EAAAwwB,IAAA,EACAsB,EAAAk8C,UAAA7tE,EAAAowB,EAAAC,EAAAxwB,EAAA8tE,OAAA9tE,EAAA+tE,QAAA9tE,EAAAC,EAAAxI,EAAAC,QACK,GAAAqI,EAAAuwB,IAAAvwB,EAAAwwB,GAAA,CACL,IAEAs9C,EAAAp2E,GAFA64B,EAAAvwB,EAAAuwB,IAGAw9C,EAAAp2E,GAFA64B,EAAAxwB,EAAAwwB,IAGAsB,EAAAk8C,UAAA7tE,EAAAowB,EAAAC,EAAAs9C,EAAAC,EAAA9tE,EAAAC,EAAAxI,EAAAC,QAEAm6B,EAAAk8C,UAAA7tE,EAAAF,EAAAC,EAAAxI,EAAAC,GAIA,MAAAqI,EAAAqZ,OAEAppB,KAAAujC,iBAAA1B,GACA7hC,KAAAwjC,aAAA3B,EAAA7hC,KAAAmf,sBAGAA,gBAAA,WACA,IAAApP,EAAA/P,KAAA+P,MAMA,OAJA/P,KAAA4jC,QACA5jC,KAAA4jC,MAAA,IAAAnlB,EAAA1O,EAAAC,GAAA,EAAAD,EAAAE,GAAA,EAAAF,EAAAtI,OAAA,EAAAsI,EAAArI,QAAA,IAGA1H,KAAA4jC,QAGA//B,EAAA9C,SAAA2c,EAAA2jB,GACA,IAAAD,EAAA1jB,EACAya,EAAA93B,QAAA+gC,mBC5FA,IAAAv9B,EAAaH,EAAQ,KAErBs6E,EAAYt6E,EAAQ,KAEpBu6E,EAAcv6E,EAAQ,KAEtBw6E,EAAex6E,EAAQ,KAcvB,SAAA29B,EAAAt6B,GAIA,QAAAxG,KAHAwG,KAAA,GACAk3E,EAAA5gF,KAAA2C,KAAA+G,GAEAA,EACAA,EAAAhJ,eAAAwC,IAAA,UAAAA,IACAP,KAAAO,GAAAwG,EAAAxG,IAQAP,KAAA+P,MAAA,IAAAiuE,EAAAj3E,EAAAgJ,MAAA/P,MACAA,KAAA4jC,MAAA,KAEA5jC,KAAAm+E,YAAA,GAIA98C,EAAAnlC,UAAA,CACAyB,YAAA0jC,EACA9hC,KAAA,cAQAgjC,SAAA,EASA67C,WAAA,EAOA7lE,EAAA,EAOAoJ,GAAA,EAQAnJ,OAAA,EAQA6lE,WAAA,EAQAC,UAAA,EAQAvzE,QAAA,EAOAwzE,SAAA,EAOAC,OAAA,UAOA9yD,WAAA,EAOAgxD,aAAA,EAKA+B,aAAA,EAEAC,SAAA,EACAv/B,YAAA,SAAAtd,KACA88C,WAAA,SAAA98C,KAOAD,MAAA,SAAAC,EAAAC,KAOA3iB,gBAAA,aASA+hB,QAAA,SAAAlxB,EAAAC,GACA,OAAAjQ,KAAA4+E,YAAA5uE,EAAAC,IAOAwG,SAAA,SAAA3X,EAAAC,GACAD,EAAAzB,KAAA0B,EAAAiB,OAUA4+E,YAAA,SAAA5uE,EAAAC,GACA,IAAAwyD,EAAAziE,KAAAokC,sBAAAp0B,EAAAC,GAEA,OADAjQ,KAAAmf,kBACA+hB,QAAAuhC,EAAA,GAAAA,EAAA,KAOApsD,MAAA,WACArW,KAAAuiC,SAAA,EACAviC,KAAA4jC,MAAA,KACA5jC,KAAA+gB,MAAA/gB,KAAA+gB,KAAAwjB,WAuBAs6C,aAAA,SAAAn6C,GACA,OAAA1kC,KAAA2kC,QAAA,QAAAD,IAEAE,OAAA,SAAA9mC,EAAAwB,GACA,UAAAxB,EACAmgF,EAAA/hF,UAAA0oC,OAAAvnC,KAAA2C,KAAAlC,EAAAwB,GAEAU,KAAA+P,MAAA7P,IAAAZ,IAQAsX,SAAA,SAAA9Y,EAAAwB,GAGA,OAFAU,KAAA+P,MAAA7P,IAAApC,EAAAwB,GACAU,KAAAqW,OAAA,GACArW,MAOA8+E,SAAA,SAAAjgF,GAGA,OAFAmB,KAAA+P,MAAA,IAAAiuE,EAAAn/E,EAAAmB,MACAA,KAAAqW,OAAA,GACArW,OAGA6D,EAAA9C,SAAAsgC,EAAA48C,GACAp6E,EAAAvC,MAAA+/B,EAAA68C,GAEA,IAAA98C,EAAAC,EACAlJ,EAAA93B,QAAA+gC,mBChQA,IAAAC,EAAkB39B,EAAQ,KAE1BG,EAAaH,EAAQ,KAErBw5B,EAAkBx5B,EAAQ,KAE1Bq7E,EAAiBr7E,EAAQ,KASzBka,EAAA,SAAA7W,GAEAs6B,EAAAhkC,KAAA2C,KAAA+G,IAGA6W,EAAA1hB,UAAA,CACAyB,YAAAigB,EACAre,KAAA,OACAqiC,MAAA,SAAAC,EAAAC,GACA,IAAA/xB,EAAA/P,KAAA+P,MAEA/P,KAAAuiC,SAAAw8C,EAAAC,mBAAAjvE,GAAA,GAEAA,EAAAyQ,KAAAzQ,EAAAwQ,OAAAxQ,EAAAkvE,WAAAlvE,EAAAmvE,YAAAnvE,EAAAovE,cAAApvE,EAAAqvE,cAAA,KACA,IAAAh2D,EAAArZ,EAAAqZ,KAEA,MAAAA,OAAA,IAEArZ,EAAA/Q,KAAA6iC,EAAA7hC,KAAA8hC,GAEAi9C,EAAAM,aAAAj2D,EAAArZ,KAIA/P,KAAAsiC,aAAAT,GACAk9C,EAAAO,WAAAt/E,KAAA6hC,EAAAzY,EAAArZ,GACA/P,KAAAujC,iBAAA1B,KAEA1iB,gBAAA,WACA,IAAApP,EAAA/P,KAAA+P,MAIA,GAFA/P,KAAAuiC,SAAAw8C,EAAAC,mBAAAjvE,GAAA,IAEA/P,KAAA4jC,MAAA,CACA,IAAAxa,EAAArZ,EAAAqZ,KACA,MAAAA,KAAA,GAAAA,EAAA,GACA,IAAArK,EAAAme,EAAA/d,gBAAApP,EAAAqZ,KAAA,GAAArZ,EAAAq1C,KAAAr1C,EAAA8U,UAAA9U,EAAA+U,kBAAA/U,EAAAsV,YAAAtV,EAAA+T,MAIA,GAHA/E,EAAA/O,GAAAD,EAAAC,GAAA,EACA+O,EAAA9O,GAAAF,EAAAE,GAAA,EAEA8uE,EAAAQ,UAAAxvE,EAAAqR,WAAArR,EAAAsR,iBAAA,CACA,IAAA2iB,EAAAj0B,EAAAsR,gBACAtC,EAAA/O,GAAAg0B,EAAA,EACAjlB,EAAA9O,GAAA+zB,EAAA,EACAjlB,EAAAtX,OAAAu8B,EACAjlB,EAAArX,QAAAs8B,EAGAhkC,KAAA4jC,MAAA7kB,EAGA,OAAA/e,KAAA4jC,QAGA//B,EAAA9C,SAAA6c,EAAAyjB,GACA,IAAAD,EAAAxjB,EACAua,EAAA93B,QAAA+gC,mBCvEA,IAAA0jB,EAAYphD,EAAQ,KAEpBP,EAAA2hD,EAAA3hD,cACApB,EAAA+iD,EAAA/iD,aAIAkmC,EAFavkC,EAAQ,KAErBukC,iBAEAq8B,EAAkB5gE,EAAQ,KAE1Bs3D,EAAAsJ,EAAAtJ,uBACAwkB,EAAAlb,EAAAkb,wBACAC,EAAAnb,EAAAmb,sBACAlb,EAAAD,EAAAC,0BACAmb,EAAApb,EAAAob,4BAqEA,SAAA7vC,EAAAxI,GAIArnC,KAAA2/E,YAAAt4C,EAAAs4C,YAMA3/E,KAAAwB,KAAA6lC,EAAA7lC,OAAA6lC,EAAAsO,eAAA+pC,EAAA,GAAsF,IAOtF1/E,KAAA21C,aAAAtO,EAAAsO,cAAA8pC,EAOAz/E,KAAA+kE,eAAA19B,EAAA09B,gBAAAya,EAOAx/E,KAAA0lE,iBAAAr+B,EAAAq+B,iBAOA1lE,KAAA88E,aAAAz1C,EAAAy1C,cAAA35E,EAAAkkC,EAAAy1C,cAMA98E,KAAAklE,WAAA79B,EAAA69B,YAAA,EAMAllE,KAAA4/E,sBAAAv4C,EAAAu4C,sBAOA/vC,EAAAurB,mBAAA,SAAA55D,GACA,WAAAquC,EAAA,CACAruC,OACAm0C,aAAA5zC,EAAAP,GAAA+iE,EAAAvJ,EACA2kB,aAAA,KAIA13C,EAAA4H,GACA,IAAAzO,EAAAyO,EACA1X,EAAA93B,QAAA+gC,iBC3HA/gC,EAAA26D,uBATA,WAUA36D,EAAAmkE,yBATA,YAUAnkE,EAAAokE,0BATA,aAUApkE,EAAAq/E,4BATA,eAUAr/E,EAAAo/E,sBATA,UAUAp/E,EAAAkkE,0BARA,aASAlkE,EAAAm/E,wBARA,SASAn/E,EAAAw/E,qBARA,uBC3BA,IAAA/6B,EAAYphD,EAAQ,KAEpB9E,EAAAkmD,EAAAlmD,KACAuE,EAAA2hD,EAAA3hD,cAyBA28E,GAxBAh7B,EAAAniD,OAEce,EAAQ,KAEtBC,QAoBAR,EAAA,uDA2GA9C,EAAAy/E,mBACAz/E,EAAA4vC,oBA1GA,SAAAzuC,GACA,IAAAu+E,EAAA,GACAlhD,EAAAkhD,EAAAlhD,OAAA,GACAmhD,EAAA78E,IACA88E,EAAA,GACAC,EAAA,GACAthF,EAAA4C,EAAA2a,WAAA,SAAAogD,GACA,IAgFApwB,EAhFAP,EAAApqC,EAAAqqC,iBAAA0wB,GACAxvB,EAAAnB,EAAAmB,SAEA,GAAAA,EAAA,CACA,IAAAozC,EAAAthD,EAAAkO,GAEAlO,EAAA9gC,eAAAgvC,KACAozC,EAAAthD,EAAAkO,GAAA,IAGAozC,EAAAv0C,EAAAoG,eAAAuqB,EAEA3wB,EAAAqxB,eACA+iB,EAAA9/E,IAAA6sC,EAAA,GAsEA,aAHAZ,EA9DAP,EAAArsC,OAiEA,SAAA4sC,IAhEA8zC,EAAA,GAAA1jB,IAIA3wB,EAAAw0C,gBACAF,EAAAz+E,KAAA86D,GAIAujB,EAAAlhF,KAAA,SAAA0xB,EAAA+vD,GACA,IAAAC,EAAAzhD,EAAAwhD,GAEAxhD,EAAA9gC,eAAAsiF,KACAC,EAAAzhD,EAAAwhD,GAAA,IAGA,IAAA7sC,EAAA5H,EAAAM,UAAAm0C,GAEA,MAAA7sC,IAAA,IAAAA,IACA8sC,EAAA9sC,GAAA5H,EAAArrC,UAIA,IAAA00C,EAAA,GACAE,EAAA,GACA6qC,EAAAphF,KAAA,SAAA0xB,EAAAyc,GACA,IAAAwzC,EAAA1hD,EAAAkO,GAIAoI,EAAApI,GAAAwzC,EAAA,GAGAtrC,IAAA51C,OAAAkhF,KAEAR,EAAA9qC,kBACA8qC,EAAA5qC,yBACA,IAAAqrC,EAAA3hD,EAAAjH,MAGA4oD,KAAA/iF,SACAwiF,EAAAO,EAAA7jF,SAGA,IAAA8jF,EAAA5hD,EAAA5I,QAUA,OARAwqD,KAAAhjF,OACAyiF,EAAAO,EAAA9jF,QACGujF,EAAAziF,SACHyiF,EAAAD,EAAAtjF,SAGAkiC,EAAAohD,iBACAphD,EAAAqhD,mBACAH,GA2BA1/E,EAAA46D,uBAxBA,SAAAlX,GACA,mBAAAA,EAAA,mBAAAA,EAAA,iCClHA,IAAAn/C,EAAclB,EAAQ,KAEtBu7C,EAAgBv7C,EAAQ,KAIxBvF,EAFYuF,EAAQ,KAEpBvF,SA8BA,SAAAuiF,EAAAC,GACA3gF,KAAAkH,MAAA,IAAAtC,EAAA+Y,MACA3d,KAAA4gF,YAAAD,GAAA1hC,EAGA,IAAA4hC,EAAAH,EAAAxkF,UAEA,SAAA4kF,EAAAt/E,EAAA6pB,EAAA4C,EAAAlW,GACA,OAAAsT,IAAA+B,MAAA/B,EAAA,MAAA+B,MAAA/B,EAAA,OAAAtT,EAAAgpE,UAAAhpE,EAAAgpE,SAAA9yD,OAGAlW,EAAAipE,YAAAjpE,EAAAipE,UAAA9/C,QAAA7V,EAAA,GAAAA,EAAA,eAAA7pB,EAAA4P,cAAA6c,EAAA,UAoHA,SAAAgzD,EAAAlpE,GAOA,OANA,MAAAA,GAAA5Z,EAAA4Z,KACAA,EAAA,CACAgpE,SAAAhpE,IAIAA,GAAA,GAkBA,SAAAmpE,EAAA1/E,GACA,IAAAuP,EAAAvP,EAAAkwC,UACA,OACAja,UAAA1mB,EAAAvE,SAAA,aAAA20E,aAAA,WACAC,eAAArwE,EAAAvE,SAAA,sBAAA20E,eACAE,aAAAtwE,EAAA5Q,IAAA,gBACAmhF,aAAAvwE,EAAA5Q,IAAA,gBACAohF,eAAAxwE,EAAA5Q,IAAA,kBACAmpB,WAAAvY,EAAAvE,SAAA,SACAg1E,gBAAAzwE,EAAAvE,SAAA,kBACAi1E,YAAA1wE,EAAA5Q,IAAA,WA5IA0gF,EAAAa,WAAA,SAAAlgF,EAAAuW,GACAA,EAAAkpE,EAAAlpE,GACA,IAAA7Q,EAAAlH,KAAAkH,MACA6J,EAAAvP,EAAAkwC,UACAiwC,EAAA3hF,KAAA2kE,MACAid,EAAA5hF,KAAA4gF,YACAiB,EAAAX,EAAA1/E,GAGAmgF,GACAz6E,EAAAkzD,YAGA54D,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA2xE,GACA,IAAAz2D,EAAA7pB,EAAA66C,cAAAylC,GAEA,GAAAhB,EAAAt/E,EAAA6pB,EAAAy2D,EAAA/pE,GAAA,CACA,IAAAgqE,EAAA,IAAAH,EAAApgF,EAAAsgF,EAAAD,GACAE,EAAAp7D,KAAA,WAAA0E,GACA7pB,EAAAo7C,iBAAAklC,EAAAC,GACA76E,EAAAiJ,IAAA4xE,MAEG72E,OAAA,SAAA42E,EAAAE,GACH,IAAAD,EAAAJ,EAAA9kC,iBAAAmlC,GACA32D,EAAA7pB,EAAA66C,cAAAylC,GAEAhB,EAAAt/E,EAAA6pB,EAAAy2D,EAAA/pE,IAKAgqE,GAIAA,EAAAL,WAAAlgF,EAAAsgF,EAAAD,GACAj9E,EAAAgiB,YAAAm7D,EAAA,CACAniE,SAAAyL,GACOta,KANPgxE,EAAA,IAAAH,EAAApgF,EAAAsgF,IACAn7D,KAAA,WAAA0E,GASAnkB,EAAAiJ,IAAA4xE,GACAvgF,EAAAo7C,iBAAAklC,EAAAC,IAhBA76E,EAAA6O,OAAAgsE,KAiBGhsE,OAAA,SAAAisE,GACH,IAAAv5E,EAAAk5E,EAAA9kC,iBAAAmlC,GACAv5E,KAAAw5E,QAAA,WACA/6E,EAAA6O,OAAAtN,OAEG2iE,UACHprE,KAAA2kE,MAAAnjE,GAGAq/E,EAAAqB,aAAA,WACA,UAGArB,EAAA7tE,aAAA,WACA,IAAAxR,EAAAxB,KAAA2kE,MAEAnjE,GAEAA,EAAAs7C,kBAAA,SAAAr0C,EAAAwlB,GACA,IAAA5C,EAAA7pB,EAAA66C,cAAApuB,GACAxlB,EAAAke,KAAA,WAAA0E,MAKAw1D,EAAAsB,yBAAA,SAAA3gF,GACAxB,KAAAoiF,aAAAlB,EAAA1/E,GACAxB,KAAA2kE,MAAA,KACA3kE,KAAAkH,MAAAkzD,aAWAymB,EAAAwB,kBAAA,SAAAC,EAAA9gF,EAAAuW,GAGA,SAAAwqE,EAAA95E,GACAA,EAAAiO,UACAjO,EAAAg2E,YAAAh2E,EAAAyO,eAAA,GAJAa,EAAAkpE,EAAAlpE,GAQA,QAAAkW,EAAAq0D,EAAArsC,MAAkChoB,EAAAq0D,EAAAz0C,IAAsB5f,IAAA,CACxD,IAAA5C,EAAA7pB,EAAA66C,cAAApuB,GAEA,GAAA6yD,EAAAt/E,EAAA6pB,EAAA4C,EAAAlW,GAAA,CACA,IAAAtP,EAAA,IAAAzI,KAAA4gF,YAAAp/E,EAAAysB,EAAAjuB,KAAAoiF,cACA35E,EAAAgO,SAAA8rE,GACA95E,EAAAke,KAAA,WAAA0E,GACArrB,KAAAkH,MAAAiJ,IAAA1H,GACAjH,EAAAo7C,iBAAA3uB,EAAAxlB,MAeAo4E,EAAA9qE,OAAA,SAAAysE,GACA,IAAAt7E,EAAAlH,KAAAkH,MACA1F,EAAAxB,KAAA2kE,MAEAnjE,GAAAghF,EACAhhF,EAAAs7C,kBAAA,SAAAr0C,GACAA,EAAAw5E,QAAA,WACA/6E,EAAA6O,OAAAtN,OAIAvB,EAAAkzD,aAkBA,IAAAh5B,EAAAs/C,EACAvoD,EAAA93B,QAAA+gC,mBC3MA,IAEAvkC,EAFY6G,EAAQ,KAEpB7G,IAEA+8D,EAA0Bl2D,EAAQ,KAIlC84D,EAFuB94D,EAAQ,KAE/B84D,mBAuFArkC,EAAA93B,QAnEA,SAAAmrE,GACA,OACAA,aACAp4D,KAAAwmD,IACA7vB,MAAA,SAAAh5B,GACA,IAAAvP,EAAAuP,EAAAC,UACApG,EAAAmG,EAAAL,iBAEA+xE,EADA1xE,EAAAu8B,gBACAkvC,MAEA,GAAA5xE,EAAA,CAIA,IAAAwqC,EAAAv4C,EAAA+N,EAAAuR,WAAA,SAAA6vB,GACA,OAAAxqC,EAAA8pC,aAAAU,KACOrvC,MAAA,KACPy5C,EAAAhB,EAAA33C,OACAilF,EAAAlhF,EAAAo3C,mBAAA,wBA0CA,OAxCA4jB,EAAAh7D,EAAA4zC,EAAA,MAGAA,EAAA,GAAAstC,GAGAlmB,EAAAh7D,EAAA4zC,EAAA,MAGAA,EAAA,GAAAstC,GA+BAtsC,GAAA,CACAykB,SA7BA,SAAA1iD,EAAA3W,GAIA,IAHA,IAAAmhF,EAAAxqE,EAAA01B,IAAA11B,EAAA89B,MACA7qB,EAAAq3D,GAAA,IAAA5mD,aAAA8mD,EAAAvsC,GAEA74C,EAAA4a,EAAA89B,MAAAzyC,EAAA,EAAAo/E,EAAA,GAAAC,EAAA,GAAuEtlF,EAAA4a,EAAA01B,IAAgBtwC,IAAA,CACvF,IAAA8tB,EAEA,OAAA+qB,EAAA,CACA,IAAApmC,EAAAxO,EAAArB,IAAAi1C,EAAA,GAAA73C,GACA8tB,GAAA+B,MAAApd,IAAApF,EAAAk4E,YAAA9yE,EAAA,KAAA6yE,OACW,CACX7yE,EAAA4yE,EAAA,GAAAphF,EAAArB,IAAAi1C,EAAA,GAAA73C,GAAA,IACA0S,EAAA2yE,EAAA,GAAAphF,EAAArB,IAAAi1C,EAAA,GAAA73C,GAEA8tB,GAAA+B,MAAApd,KAAAod,MAAAnd,IAAArF,EAAAk4E,YAAAF,EAAA,KAAAC,GAGAJ,GACAr3D,EAAA5nB,KAAA6nB,IAAA,GAAAuB,IACAxB,EAAA5nB,KAAA6nB,IAAA,GAAAuB,KAEAprB,EAAA86C,cAAA/+C,EAAA8tB,KAAA1uB,SAAA,CAAAiwB,UAIA61D,GAAAjhF,EAAA26C,UAAA,eAAA/wB,0BCrFA,IAAAkK,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAsBR4xB,EAAA/Y,oBAAA,CACAhd,KAAA,OACAsS,OAAA,SAAAkxE,EAAAt4E,GACAzK,KAAAkH,MAAAkzD,YAEA2oB,EAAA5iF,IAAA,SACAH,KAAAkH,MAAAiJ,IAAA,IAAAvL,EAAAsZ,KAAA,CACAsJ,MAAAu7D,EAAAryE,iBAAAsyE,UACAjzE,MAAAlM,EAAArF,SAAA,CACAgiB,KAAAuiE,EAAA5iF,IAAA,oBACS4iF,EAAA5B,gBACTp2E,QAAA,EACA4W,IAAA,QAKA2T,EAAAxb,qBAAA,SAAA9N,GAEAA,EAAAi3E,OAAAj3E,EAAAk3E,QAAAl3E,EAAA0qB,OACA1qB,EAAA0qB,KAAA,qBCJAyB,EAAA93B,QA5BA,SAAAmrE,GACA,OACAA,aACAzhC,MAAA,SAAAh5B,EAAAtG,GACA,IAAA04E,EAAA14E,EAAA24E,eAAA,CACAt6E,SAAA,WAGA,GAAAq6E,KAAA1lF,OAAA,CAIA,IAAA+D,EAAAuP,EAAAC,UACAxP,EAAAu4C,WAAA,SAAA9rB,GAGA,IAFA,IAAA1tB,EAAAiB,EAAAgrC,QAAAve,GAEA1wB,EAAA,EAAuBA,EAAA4lF,EAAA1lF,OAAyBF,IAChD,IAAA4lF,EAAA5lF,GAAA8lF,WAAA9iF,GACA,SAIA,8BC6CA,SAAA+iF,EAAAC,EAAAC,GACA,IAAApnD,EAAAmnD,EAAAC,GAAAD,EAAA,EAAAC,GAGA,OACA3iC,KAAAlyC,KAAAyb,IAAAgS,GACAqnD,KAAArnD,EAAA,KAAAA,EAAA,IAAAonD,GAAA,KAIA,SAAAE,EAAApkF,EAAAqB,GACA,OAAAgO,KAAAC,IAAAjO,EAAA,GAAAgO,KAAAG,IAAAnO,EAAA,GAAArB,IAGA64B,EAAA93B,QA3DA,SAAAs1D,EAAA4tB,EAAA5qC,EAAA6qC,EAAAG,EAAAC,GAEAL,EAAA,GAAAG,EAAAH,EAAA,GAAA5qC,GACA4qC,EAAA,GAAAG,EAAAH,EAAA,GAAA5qC,GACAgd,KAAA,EACA,IAAAkuB,EAAAlrC,EAAA,GAAAA,EAAA,GAEA,MAAAgrC,IACAA,EAAAD,EAAAC,EAAA,GAAAE,KAGA,MAAAD,IACAA,EAAAj1E,KAAAG,IAAA80E,EAAA,MAAAD,IAAA,IAGA,QAAAH,IACAG,EAAAC,EAAAj1E,KAAAyb,IAAAm5D,EAAA,GAAAA,EAAA,IACAC,EAAA,GAGA,IAAAM,EAAAR,EAAAC,EAAAC,GACAD,EAAAC,IAAA7tB,EAEA,IAAAouB,EAAAJ,GAAA,EACAK,EAAArrC,EAAAh8C,QACAmnF,EAAAL,KAAA,EAAAO,EAAA,IAAAD,EAAAC,EAAA,IAAAD,EACAR,EAAAC,GAAAE,EAAAH,EAAAC,GAAAQ,GAEA,IAAAC,EAAAX,EAAAC,EAAAC,GAcA,OAZA,MAAAG,IAAAM,EAAAR,OAAAK,EAAAL,MAAAQ,EAAApjC,KAAA8iC,KAEAJ,EAAA,EAAAC,GAAAD,EAAAC,GAAAM,EAAAL,KAAAE,GAIAM,EAAAX,EAAAC,EAAAC,GAEA,MAAAI,GAAAK,EAAApjC,KAAA+iC,IACAL,EAAA,EAAAC,GAAAD,EAAAC,GAAAS,EAAAR,KAAAG,GAGAL,oBClFA,IAAAjuD,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBiuE,EAA6BjuE,EAAQ,KAErCwgF,EAAkBxgF,EAAQ,KAE1BA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAwBR4xB,EAAAxb,qBAAA,SAAA9N,GAEA,GAAAA,EAAA,GACAA,EAAAkqB,aAAA,IAAAlqB,EAAAkqB,YAAAz4B,UAAAuO,EAAAkqB,YAAA,IACA,IAAAiuD,EAAAn4E,EAAAkqB,YAAAiuD,KAIAA,IAAAtgF,EAAAvF,QAAA6lF,KACAn4E,EAAAkqB,YAAAiuD,KAAA,CAAAA,OAMA7uD,EAAAtb,kBAAAsb,EAAA7vB,SAAAC,UAAAE,UAAA,SAAA6E,EAAAtC,GAGAsC,EAAA5B,aAAA,eAAAu7E,iBAAAzS,EAAA0S,QAAA55E,EAAAtC,KAGAmtB,EAAAlb,eAAA,CACA7a,KAAA,oBACAwV,MAAA,oBACA7J,OAAA,sBACCg5E,oBC7DaxgF,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBK,EAAUL,EAAQ,KAElBmB,EAAgBnB,EAAQ,KAExB4gF,EAAa5gF,EAAQ,KAErB6gF,EAAgB7gF,EAAQ,KAqBxB9E,EAAAiF,EAAAjF,KACA4lF,EAAAF,EAAAE,YAieA,SAAAC,EAAAz4E,GACA,IAAAqsD,EAAA,GAIA,OAHAz5D,EAAA,4DAAA2B,GACAyL,EAAAjO,eAAAwC,KAAA83D,EAAA93D,GAAAyL,EAAAzL,MAEA83D,EAGA,SAAAqsB,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAG,eACAC,EAAAJ,EAAAxkF,IAAA,aACAvB,EAAA,qDAAAu8B,EAAApyB,GACA,IAAAi8E,EAAA,MAAAJ,EAAAzpD,EAAA,IACA8pD,EAAA,MAAAL,EAAAzpD,EAAA,IAEA6pD,IAAAC,EACAJ,EAAA97E,GAAA,WACKi8E,GAAAC,EACLJ,EAAA97E,GAAA,QACKg8E,EACLF,EAAA97E,GAAAg8E,EAAAh8E,GACKi8E,IAELH,EAAA97E,GAAA,aAMA,IAAAq4B,EA7fA9L,EAAAhZ,qBAAA,CACA/c,KAAA,WACAyb,aAAA,yEAKAsrB,cAAA,CACA9tB,OAAA,EACAD,EAAA,EAEAigB,OAAA,KAEA0sD,WAAA,KAEAC,WAAA,KAEAC,WAAA,SAgBAtgF,SAAA,KAKAmxC,MAAA,EAEApI,IAAA,IAEAw3C,WAAA,KAEAC,SAAA,KAEA3B,QAAA,KAEAC,QAAA,KAEA2B,aAAA,KAEAC,aAAA,KAEAC,UAAA,MAOAn+E,KAAA,SAAA0E,EAAA+X,EAAAtZ,GAMAzK,KAAA0lF,oBAAA,GAKA1lF,KAAA2lF,UAAA,GAMA3lF,KAAA4lF,aAAA,GAKA5lF,KAAA6iB,eAKA7iB,KAAA6lF,eAAA,EAMA7lF,KAAA8kF,eAAA,sBACA,IAAAF,EAAAH,EAAAz4E,GACAhM,KAAA4mC,qBAAA56B,EAAAvB,GACAzK,KAAA8lF,OAAAlB,IAMA39C,YAAA,SAAAlM,GACA,IAAA6pD,EAAAH,EAAA1pD,GAEAl3B,EAAA7F,MAAAgC,KAAAgM,OAAA+uB,GAAA,GACA/6B,KAAA8lF,OAAAlB,IAMAkB,OAAA,SAAAlB,GACA,IAAA7Q,EAAA/zE,KAAAgM,OAEAjI,EAAAkJ,kBACA8mE,EAAAgS,UAAA,GAGA/lF,KAAAgmF,oBAAApB,GAEAF,EAAA1kF,KAAA4kF,GACAhmF,EAAA,qDAAAu8B,EAAApyB,GAIA,UAAA/I,KAAA8kF,eAAA/7E,KACAgrE,EAAA54C,EAAA,WAGKn7B,MACLA,KAAA6iB,eAAA7iB,KAAAwM,SAAA,aAEAxM,KAAAimF,eAEAjmF,KAAAkmF,oBAMAA,iBAAA,WACA,IAAAC,EAAAnmF,KAAA4lF,aACA5lF,KAAAomF,eAAA,SAAAC,EAAAC,EAAA3B,EAAAl6E,GACA,IAAAy5C,EAAAlkD,KAAAumC,gBAAA8/C,EAAA1kC,MAAA2kC,GAEAC,EAAAriC,EAAAsiC,gBACAtiC,EAAAsiC,cAAA,IAAAjC,EAAA8B,EAAA9lF,KAAA+lF,EAAAtmF,KAAAyK,IAGA07E,EAAAE,EAAA9lF,KAAA,IAAA+lF,GAAAC,GACKvmF,OAMLimF,aAAA,WACA,IAAAlS,EAAA/zE,KAAAgM,OAEAy6E,EAAAzmF,KAAA0mF,iBAEAlC,EAAA,SAAA6B,GACA,IAAAM,EAAAN,EAAAC,UACAvS,EAAA4S,GAAA9hF,EAAA4O,iBAAAsgE,EAAA4S,KACK3mF,MAEL,cAAAymF,EACAzmF,KAAA4mF,oBACK,WAAAH,GACLzmF,KAAA6mF,kBAOAH,eAAA,WAIA,IAAA3S,EAAA/zE,KAAAgM,OACA86E,GAAA,EACAtC,EAAA,SAAA6B,GAIA,MAAAtS,EAAAsS,EAAAC,aACAQ,GAAA,IAEK9mF,MACL,IAAAw4B,EAAAu7C,EAAAv7C,OAEA,aAAAA,GAAAsuD,EACA,SACKA,OAAA,GACL,MAAAtuD,IACAu7C,EAAAv7C,OAAA,cAGA,cAOAouD,kBAAA,WACA,IAAAG,GAAA,EACAvuD,EAAAx4B,KAAAG,IAAA,aACA4zE,EAAA/zE,KAAAgM,OACAu6B,EAAAvmC,KAAAumC,gBAEA,GAAAwgD,EAAA,CAEA,IAAAxqB,EAAA,aAAA/jC,EAAA,QAEA+N,EAAAg2B,EAAA,QAAA9+D,QACAs2E,EAAAxX,EAAA,iBACAwqB,GAAA,GAEAnoF,EAAA2nC,EAAAygD,WAAA,SAAAC,GACAF,GAAAE,EAAA9mF,IAAA,eAAAq4B,IACAu7C,EAAAmT,gBAAA,CAAAD,EAAArxE,gBACAmxE,GAAA,KAMAA,GAEAvC,EAAA,SAAA6B,GACA,GAAAU,EAAA,CAIA,IAAAI,EAAA,GACAC,EAAApnF,KAAAumC,gBAAA8/C,EAAA1kC,MAEA,GAAAylC,EAAA3pF,SAAA0pF,EAAA1pF,OACA,QAAAF,EAAA,EAAAC,EAAA4pF,EAAA3pF,OAAkDF,EAAAC,EAASD,IAC3D,aAAA6pF,EAAA7pF,GAAA4C,IAAA,SACAgnF,EAAA1lF,KAAAlE,GAKAw2E,EAAAsS,EAAAC,WAAAa,EAEAA,EAAA1pF,SACAspF,GAAA,KAEO/mF,MAGP+mF,GAOA/mF,KAAAyK,QAAA+H,WAAA,SAAAzB,GACA/Q,KAAAqnF,0BAAAt2E,EAAA,UACAyzE,EAAA,SAAA6B,GACA,IAAAc,EAAApT,EAAAsS,EAAAC,WACAA,EAAAv1E,EAAA5Q,IAAAkmF,EAAAC,WACAgB,EAAAv2E,EAAA5Q,IAAAkmF,EAAAiB,QAMAhB,EALAv1E,EAAAtG,QAAA8oB,gBAAA,CACAzqB,SAAAu9E,EAAA1kC,KACA54C,MAAAu9E,EACAr/E,GAAAqgF,IACa,GACb1xE,eAEA/R,EAAAhD,QAAAsmF,EAAAb,GAAA,GACAa,EAAA1lF,KAAA6kF,MAIOtmF,OAOP6mF,eAAA,WACA,IAAA76C,EAEAhsC,KAAAomF,eAAA,SAAAC,IACAr6C,MAAAq6C,EAAA9lF,OACKP,MACLA,KAAAgM,OAAAwsB,OAAA,MAAAwT,EAAA,yBAMAq7C,0BAAA,SAAAt2E,EAAAgzC,GAIA,IAAAwjC,GAAA,EASA,OARA/C,EAAA,SAAA6B,GACA,IAAAmB,EAAAz2E,EAAA5Q,IAAAkmF,EAAAC,WACApiC,EAAAlkD,KAAAumC,gBAAA8/C,EAAA1kC,MAAA6lC,GAEAtjC,KAAA/jD,IAAA,UAAA4jD,IACAwjC,GAAA,IAEKvnF,MACLunF,GAMAvB,oBAAA,SAAApB,GAMA,GAJAA,EAAA7mF,eAAA,cACAiC,KAAA6lF,eAAA,GAGA7lF,KAAA6lF,cAAA,CACA,IAAA4B,EAAAznF,KAAAyK,QAAAuB,OACAhM,KAAAgM,OAAAlH,SAAA2iF,EAAA99E,WAAA89E,EAAAC,wBAAA,WAOAC,wBAAA,WACA,IAAAC,EAUA,OATApD,EAAA,SAAA6B,GACA,SAAAuB,EAAA,CACA,IAAAlwC,EAAA13C,KAAAG,IAAAkmF,EAAAC,WAEA5uC,EAAAj6C,SACAmqF,EAAA5nF,KAAAumC,gBAAA8/C,EAAA1kC,MAAAjK,EAAA,OAGK13C,MACL4nF,GAOAxB,eAAA,SAAA/O,EAAAt4E,GACA,IAAA0L,EAAAzK,KAAAyK,QACA+5E,EAAA,SAAA6B,GACAznF,EAAAoB,KAAAG,IAAAkmF,EAAAC,WAAA,SAAAA,GACAjP,EAAAh6E,KAAA0B,EAAAsnF,EAAAC,EAAAtmF,KAAAyK,IACOzK,OACFA,OAQL6nF,aAAA,SAAAtrB,EAAA+pB,GACA,OAAAtmF,KAAA4lF,aAAArpB,EAAA,IAAA+pB,IAQAwB,aAAA,SAAAvrB,EAAA+pB,GACA,IAAAC,EAAAvmF,KAAA6nF,aAAAtrB,EAAA+pB,GACA,OAAAC,KAAAuB,gBAcAC,YAAA,SAAAhwE,EAAAiwE,GACA,IAAAh8E,EAAAhM,KAAAgM,OACApN,EAAA,qDAAAu8B,GAMA,MAAApjB,EAAAojB,EAAA,WAAApjB,EAAAojB,EAAA,MACAnvB,EAAAmvB,EAAA,IAAApjB,EAAAojB,EAAA,IACAnvB,EAAAmvB,EAAA,IAAApjB,EAAAojB,EAAA,MAEKn7B,OACLgoF,GAAAtD,EAAA1kF,KAAA+X,IAOAkwE,gBAAA,WACA,IAAA1B,EAAAvmF,KAAAkoF,8BAEA,GAAA3B,EACA,OAAAA,EAAA4B,wBAYAC,cAAA,SAAAC,EAAA/B,GACA,SAAA+B,GAAA,MAAA/B,EAOA,OAAAtmF,KAAA6nF,aAAAQ,EAAA/B,GAAAgC,qBANA,IAAA/B,EAAAvmF,KAAAkoF,8BAEA,OAAA3B,EACAA,EAAA+B,0BADA,GAcAJ,4BAAA,SAAAhkC,GACA,GAAAA,EACA,OAAAA,EAAAsiC,cAIA,IAAAL,EAAAnmF,KAAA4lF,aAEA,QAAA9nF,KAAAqoF,EACA,GAAAA,EAAApoF,eAAAD,IAAAqoF,EAAAroF,GAAAyqF,SAAAvoF,MACA,OAAAmmF,EAAAroF,GASA,QAAAA,KAAAqoF,EACA,GAAAA,EAAApoF,eAAAD,KAAAqoF,EAAAroF,GAAAyqF,SAAAvoF,MACA,OAAAmmF,EAAAroF,IAQA0qF,iBAAA,WACA,OAAAxoF,KAAA8kF,eAAAnoF,WAkCAw7B,EAAA93B,QAAA+gC,mBCniBA,IAqBAA,EArBoB19B,EAAQ,KAqB5B/C,OAAA,CACApB,KAAA,WACAsS,OAAA,SAAA8yE,EAAAl6E,EAAAtC,EAAAsJ,GACAzR,KAAA2kF,gBACA3kF,KAAAyK,UACAzK,KAAAmI,OAqBAsgF,mBAAA,WACA,IAAA9D,EAAA3kF,KAAA2kF,cACAl6E,EAAAzK,KAAAyK,QACAi+E,EAAA,GA+BA,OA9BA/D,EAAAyB,eAAA,SAAAC,EAAAC,GACA,IAAApiC,EAAAz5C,EAAA5B,aAAAw9E,EAAA1kC,KAAA2kC,GAEA,GAAApiC,EAAA,CACA,IAAAykC,EAAAzkC,EAAAm5B,mBACAsL,GAIA,SAAAA,EAAAzkC,EAAA0kC,EAAAC,GAGA,IAFA,IAAAj5E,EAEArS,EAAA,EAAqBA,EAAAqrF,EAAAnrF,OAAkBF,IACvC,GAAAqrF,EAAArrF,GAAAkT,QAAAk4E,EAAA,CACA/4E,EAAAg5E,EAAArrF,GACA,MAIAqS,GACAg5E,EAAAnnF,KAAAmO,EAAA,CACAa,MAAAk4E,EACAvB,WAAA,GACAyB,eAIAj5E,EAAAw3E,WAAA3lF,KAAAyiD,GAtBA4kC,CAAAH,EAAAzkC,EAAAwkC,EAAAC,EAAA7/E,YAAA4/E,EAAAC,EAAA7/E,UAAA,IAAA6/E,EAAA/yE,kBAEK5V,MAuBL0oF,KAIAvwD,EAAA93B,QAAA+gC,uECrFA,IAAA2nD,EAAWrlF,EAAQ,KAEnBK,EAAUL,EAAQ,KAElBG,EAAaH,EAAQ,KAErBslF,EAActlF,EAAQ,KAEtBulF,EAAcvlF,EAAQ,KAEtBwlF,EAAcxlF,EAAQ,KAEtBylF,EAAgBzlF,EAAQ,KAExB0lF,EAAmB1lF,EAAQ,KAY3B2lF,GAAAtlF,EAAAkJ,gBACAq8E,EAAA,CACA95E,OAAA05E,GAEA55E,EAAA,GA+EA,IAAAi6E,EAAA,SAAAtiF,EAAAJ,EAAAE,GACAA,KAAA,GAKA/G,KAAA6G,MAKA7G,KAAAiH,KACA,IAAA6G,EAAA9N,KACAuN,EAAA,IAAA07E,EACAO,EAAAziF,EAAAQ,SAEA,GAAA8hF,EAAA,CACA,IAAAC,EAAAG,IACA,UAAA3mF,MAAA,wDAGA0mF,EAAA,WACGA,GAAAF,EAAAE,KACHA,EAAA,UAGA,IAAA38E,EAAA,IAAAy8E,EAAAE,GAAA3iF,EAAA0G,EAAAxG,EAAAE,GACAjH,KAAAuN,UACAvN,KAAA6M,UACA,IAAA68E,EAAA3lF,EAAAkT,MAAAlT,EAAAuhC,OAAA,SAAA8jD,EAAAv8E,EAAA88E,mBACA3pF,KAAAyG,QAAA,IAAAuiF,EAAAz7E,EAAAV,EAAA68E,EAAA78E,EAAAmmE,MAKAhzE,KAAA2J,UAAA,IAAAw/E,EAAA,CACAS,MAAA,CACA1+E,OAAArH,EAAA7E,KAAAgB,KAAA4H,MAAA5H,SAGAA,KAAA2J,UAAAssC,QAMAj2C,KAAA6pF,cAGA,IAAAC,EAAAv8E,EAAAw8E,eACAC,EAAAz8E,EAAA08E,aAEA18E,EAAAw8E,eAAA,SAAAthF,GACAqhF,EAAAzsF,KAAAkQ,EAAA9E,GACAA,KAAAyhF,iBAAAp8E,IAGAP,EAAA08E,aAAA,SAAAxhF,GACAuhF,EAAA3sF,KAAAkQ,EAAA9E,GACAA,EAAA0hF,YAAAr8E,KAIAy7E,EAAArtF,UAAA,CACAyB,YAAA4rF,EAMAr1C,MAAA,WACA,OAAAl0C,KAAAiH,IAOAkJ,IAAA,SAAA1H,GACAzI,KAAAuN,QAAA68E,QAAA3hF,GACAzI,KAAA6pF,eAAA,GAOA9zE,OAAA,SAAAtN,GACAzI,KAAAuN,QAAA88E,QAAA5hF,GACAzI,KAAA6pF,eAAA,GAWAS,YAAA,SAAAC,EAAAC,GACAxqF,KAAA6M,QAAAy9E,aACAtqF,KAAA6M,QAAAy9E,YAAAC,EAAAC,GAGAxqF,KAAA6pF,eAAA,GAOA/3E,mBAAA,SAAA3E,GACAnN,KAAA6M,QAAAiF,oBACA9R,KAAA6M,QAAAiF,mBAAA3E,GAGAnN,KAAA6pF,eAAA,GAMAz5E,mBAAA,WAIApQ,KAAA6pF,eAAA,EACA7pF,KAAA6M,QAAA03B,UAKAvkC,KAAA6pF,eAAA,GAUAtlD,QAAA,WACAvkC,KAAA6pF,eAAA,GAMAjiF,MAAA,WACA,IAAA6iF,EAEAzqF,KAAA6pF,gBACAY,GAAA,EACAzqF,KAAAoQ,sBAGApQ,KAAA0qF,qBACAD,GAAA,EACAzqF,KAAA2qF,2BAGAF,GAAAzqF,KAAA+J,QAAA,aAQAiX,SAAA,SAAAvY,EAAAsH,GACA/P,KAAA6M,QAAAmU,WACAhhB,KAAA6M,QAAAmU,SAAAvY,EAAAsH,GACA/P,KAAA4qF,iBAQA9oE,YAAA,SAAArZ,GACAzI,KAAA6M,QAAAiV,cACA9hB,KAAA6M,QAAAiV,YAAArZ,GACAzI,KAAA4qF,iBAQAC,WAAA,WACA7qF,KAAA6M,QAAAg+E,aACA7qF,KAAA6M,QAAAg+E,aACA7qF,KAAA4qF,iBAOAA,aAAA,WACA5qF,KAAA0qF,oBAAA,GAMAC,wBAAA,WACA3qF,KAAA0qF,oBAAA,EACA1qF,KAAA6M,QAAA+9E,cAAA5qF,KAAA6M,QAAA+9E,gBAUAnhF,OAAA,SAAA1C,GACAA,KAAA,GACA/G,KAAA6M,QAAApD,OAAA1C,EAAAU,MAAAV,EAAAW,QACA1H,KAAAyG,QAAAgD,UAMAqhF,eAAA,WACA9qF,KAAA2J,UAAAuP,SAMAxM,SAAA,WACA,OAAA1M,KAAA6M,QAAAH,YAMAC,UAAA,WACA,OAAA3M,KAAA6M,QAAAF,aAsBAo+E,YAAA,SAAAryE,EAAA5L,GACA,OAAA9M,KAAA6M,QAAAk+E,YAAAryE,EAAA5L,IAOAk+E,eAAA,SAAAvJ,GACAzhF,KAAAyG,QAAAukF,eAAAvJ,IASAwJ,UAAA,SAAAj7E,EAAAC,GACA,OAAAjQ,KAAAyG,QAAAwkF,UAAAj7E,EAAAC,IAUArG,GAAA,SAAApD,EAAA0kF,EAAAnsF,GACAiB,KAAAyG,QAAAmD,GAAApD,EAAA0kF,EAAAnsF,IAQAoL,IAAA,SAAA3D,EAAA0kF,GACAlrF,KAAAyG,QAAA0D,IAAA3D,EAAA0kF,IASAnhF,QAAA,SAAAvD,EAAAuO,GACA/U,KAAAyG,QAAAsD,QAAAvD,EAAAuO,IAMAmE,MAAA,WACAlZ,KAAAuN,QAAA88E,UACArqF,KAAA6M,QAAAqM,SAMApD,QAAA,WA/VA,IAAA7O,EAgWAjH,KAAA2J,UAAAstD,OACAj3D,KAAAkZ,QACAlZ,KAAAuN,QAAAuI,UACA9V,KAAA6M,QAAAiJ,UACA9V,KAAAyG,QAAAqP,UACA9V,KAAA2J,UAAA3J,KAAAuN,QAAAvN,KAAA6M,QAAA7M,KAAAyG,QAAA,KArWAQ,EAsWAjH,KAAAiH,UArWAqI,EAAArI,KAwWA5G,EAAA0a,QA9ZA,QA+ZA1a,EAAAiH,KAnZA,SAAAT,EAAAE,GACA,IAAAK,EAAA,IAAAmiF,EAAAR,IAAAliF,EAAAE,GAEA,OADAuI,EAAAlI,EAAAH,IAAAG,EACAA,GAiZA/G,EAAAyV,QAzYA,SAAA1O,GACA,GAAAA,EACAA,EAAA0O,cACG,CACH,QAAAhY,KAAAwR,EACAA,EAAAvR,eAAAD,IACAwR,EAAAxR,GAAAgY,UAIAxG,EAAA,GAGA,OAAAtP,MA6XAK,EAAA8qF,YApXA,SAAAlkF,GACA,OAAAqI,EAAArI,IAoXA5G,EAAA+qF,gBAjXA,SAAA7qF,EAAA7C,GACA4rF,EAAA/oF,GAAA7C,oBCtFA,IAAAmG,EAAaH,EAAQ,KAErBu6E,EAAcv6E,EAAQ,KAEtB+a,EAAmB/a,EAAQ,KA4B3Bia,EAAA,SAAA5W,GAIA,QAAAjJ,KAHAiJ,KAAA,GACAk3E,EAAA5gF,KAAA2C,KAAA+G,GAEAA,EACAA,EAAAhJ,eAAAD,KACAkC,KAAAlC,GAAAiJ,EAAAjJ,IAIAkC,KAAAqrF,UAAA,GACArrF,KAAAsrF,UAAA,KACAtrF,KAAAuiC,SAAA,GAGA5kB,EAAAzhB,UAAA,CACAyB,YAAAggB,EACAjH,SAAA,EAKAnX,KAAA,QAQAwL,QAAA,EAKAwgF,SAAA,WACA,OAAAvrF,KAAAqrF,UAAA1uF,SAQAs8B,QAAA,SAAAhL,GACA,OAAAjuB,KAAAqrF,UAAAp9D,IAQAu9D,YAAA,SAAAjrF,GAGA,IAFA,IAAAgrF,EAAAvrF,KAAAqrF,UAEA9tF,EAAA,EAAmBA,EAAAguF,EAAA9tF,OAAqBF,IACxC,GAAAguF,EAAAhuF,GAAAgD,SACA,OAAAgrF,EAAAhuF,IAQAm9D,WAAA,WACA,OAAA16D,KAAAqrF,UAAA5tF,QAOA0S,IAAA,SAAA6R,GAOA,OANAA,OAAAhiB,MAAAgiB,EAAAhZ,SAAAhJ,OACAA,KAAAqrF,UAAA5pF,KAAAugB,GAEAhiB,KAAAyrF,OAAAzpE,IAGAhiB,MAQA0rF,UAAA,SAAA1pE,EAAA2pE,GACA,GAAA3pE,OAAAhiB,MAAAgiB,EAAAhZ,SAAAhJ,MAAA2rF,KAAA3iF,SAAAhJ,KAAA,CACA,IAAAurF,EAAAvrF,KAAAqrF,UACAp9D,EAAAs9D,EAAA1qF,QAAA8qF,GAEA19D,GAAA,IACAs9D,EAAAv1E,OAAAiY,EAAA,EAAAjM,GAEAhiB,KAAAyrF,OAAAzpE,IAIA,OAAAhiB,MAEAyrF,OAAA,SAAAzpE,GACAA,EAAAhZ,QACAgZ,EAAAhZ,OAAA+M,OAAAiM,GAGAA,EAAAhZ,OAAAhJ,KACA,IAAAuN,EAAAvN,KAAAsrF,UACAlkF,EAAApH,KAAA+gB,KAEAxT,OAAAyU,EAAAspE,YACA/9E,EAAA08E,aAAAjoE,GAEAA,aAAArE,GACAqE,EAAA4pE,qBAAAr+E,IAIAnG,KAAAm9B,WAOAxuB,OAAA,SAAAiM,GACA,IAAA5a,EAAApH,KAAA+gB,KACAxT,EAAAvN,KAAAsrF,UACAC,EAAAvrF,KAAAqrF,UACAp9D,EAAApqB,EAAAhD,QAAA0qF,EAAAvpE,GAEA,OAAAiM,EAAA,EACAjuB,MAGAurF,EAAAv1E,OAAAiY,EAAA,GACAjM,EAAAhZ,OAAA,KAEAuE,IACAA,EAAAw8E,eAAA/nE,GAEAA,aAAArE,GACAqE,EAAA6pE,uBAAAt+E,IAIAnG,KAAAm9B,UACAvkC,OAMAo6D,UAAA,WACA,IAEAp4C,EACAzkB,EAHAguF,EAAAvrF,KAAAqrF,UACA99E,EAAAvN,KAAAsrF,UAIA,IAAA/tF,EAAA,EAAeA,EAAAguF,EAAA9tF,OAAqBF,IACpCykB,EAAAupE,EAAAhuF,GAEAgQ,IACAA,EAAAw8E,eAAA/nE,GAEAA,aAAArE,GACAqE,EAAA6pE,uBAAAt+E,IAIAyU,EAAAhZ,OAAA,KAIA,OADAuiF,EAAA9tF,OAAA,EACAuC,MAQA64B,UAAA,SAAA/5B,EAAAC,GAGA,IAFA,IAAAwsF,EAAAvrF,KAAAqrF,UAEA9tF,EAAA,EAAmBA,EAAAguF,EAAA9tF,OAAqBF,IAAA,CACxC,IAAAykB,EAAAupE,EAAAhuF,GACAuB,EAAAzB,KAAA0B,EAAAijB,EAAAzkB,GAGA,OAAAyC,MAQAyW,SAAA,SAAA3X,EAAAC,GACA,QAAAxB,EAAA,EAAmBA,EAAAyC,KAAAqrF,UAAA5tF,OAA2BF,IAAA,CAC9C,IAAAykB,EAAAhiB,KAAAqrF,UAAA9tF,GACAuB,EAAAzB,KAAA0B,EAAAijB,GAEA,UAAAA,EAAAziB,MACAyiB,EAAAvL,SAAA3X,EAAAC,GAIA,OAAAiB,MAEA4rF,qBAAA,SAAAr+E,GACA,QAAAhQ,EAAA,EAAmBA,EAAAyC,KAAAqrF,UAAA5tF,OAA2BF,IAAA,CAC9C,IAAAykB,EAAAhiB,KAAAqrF,UAAA9tF,GACAgQ,EAAA08E,aAAAjoE,GAEAA,aAAArE,GACAqE,EAAA4pE,qBAAAr+E,KAIAs+E,uBAAA,SAAAt+E,GACA,QAAAhQ,EAAA,EAAmBA,EAAAyC,KAAAqrF,UAAA5tF,OAA2BF,IAAA,CAC9C,IAAAykB,EAAAhiB,KAAAqrF,UAAA9tF,GACAgQ,EAAAw8E,eAAA/nE,GAEAA,aAAArE,GACAqE,EAAA6pE,uBAAAt+E,KAIA8I,MAAA,WAGA,OAFArW,KAAAuiC,SAAA,EACAviC,KAAA+gB,MAAA/gB,KAAA+gB,KAAAwjB,UACAvkC,MAMAmf,gBAAA,SAAA2sE,GAOA,IALA,IAAA/sE,EAAA,KACAgtE,EAAA,IAAAttE,EAAA,SACA8sE,EAAAO,GAAA9rF,KAAAqrF,UACAW,EAAA,GAEAzuF,EAAA,EAAmBA,EAAAguF,EAAA9tF,OAAqBF,IAAA,CACxC,IAAAykB,EAAAupE,EAAAhuF,GAEA,IAAAykB,EAAA5T,SAAA4T,EAAAo8D,UAAA,CAIA,IAAA6N,EAAAjqE,EAAA7C,kBACA0H,EAAA7E,EAAA+E,kBAAAilE,GAQAnlE,GACAklE,EAAArwD,KAAAuwD,GACAF,EAAAvsE,eAAAqH,IACA9H,KAAAgtE,EAAA9uF,SACA6iC,MAAAisD,KAEAhtE,KAAAktE,EAAAhvF,SACA6iC,MAAAmsD,IAIA,OAAAltE,GAAAgtE,IAGAloF,EAAA9C,SAAA4c,EAAAsgE,GACA,IAAA78C,EAAAzjB,EACAwa,EAAA93B,QAAA+gC,iBCxTA,IAAAt0B,EAAA,EAEA,qBAAAC,SACAD,EAAA6B,KAAAG,IAAA/B,OAAAvF,kBAAA,MAgBA,IAEAA,EAAAsF,EACAzM,EAAAo9E,UAHA,EAIAp9E,EAAAmH,oCCvBA,IAAAs9C,EAAYphD,EAAQ,KAEpBvB,EAAA2iD,EAAA3iD,UACAG,EAAAwiD,EAAAxiD,UACA1D,EAAAkmD,EAAAlmD,KACA6D,EAAAqiD,EAAAriD,kBACAX,EAAAgjD,EAAAhjD,SACA3D,EAAA2mD,EAAA3mD,SAEA++B,EAAkBx5B,EAAQ,KAE1BwoF,EAAsBxoF,EAAQ,KAE9BmhD,EAAkBnhD,EAAQ,KAE1ByoF,EAAgBzoF,EAAQ,KAGxB0oF,EAAA,CACAp9E,KAAA,EACAG,MAAA,EACAk9E,OAAA,GAEAC,EAAA,CACAp9E,IAAA,EACAE,OAAA,EACA46D,OAAA,GAaA,SAAAuiB,EAAAx8E,GACA,GAAAA,EAAA,CACAA,EAAAq1C,KAAAloB,EAAAosB,SAAAv5C,GACA,IAAA8U,EAAA9U,EAAA8U,UACA,WAAAA,MAAA,UACA9U,EAAA8U,UAAA,MAAAA,GAAAunE,EAAAvnE,KAAA,OAEA,IAAAC,EAAA/U,EAAA+U,mBAAA/U,EAAAy8E,aACA,WAAA1nE,MAAA,UACA/U,EAAA+U,kBAAA,MAAAA,GAAAwnE,EAAAxnE,KAAA,MACA/U,EAAAsV,cAGAtV,EAAAsV,YAAA5iB,EAAAsN,EAAAsV,eAmKA,SAAAonE,EAAA5qD,EAAA9xB,EAAAgP,EAAA/O,EAAAC,GAEA,GAAA8O,GAAAhP,EAAAyT,aAAA,CACA,IAAA05D,EAAAntE,EAAA28E,WAEA,WAAAxP,GACAltE,EAAA+O,EAAAtX,MAAA,EAAAsX,EAAA/O,EACAC,EAAA8O,EAAArX,OAAA,EAAAqX,EAAA9O,GACKitE,IACLltE,EAAAktE,EAAA,GAAAn+D,EAAA/O,EACAC,EAAAitE,EAAA,GAAAn+D,EAAA9O,GAGA4xB,EAAArB,UAAAxwB,EAAAC,GAEA4xB,EAAAgN,QAAA9+B,EAAAyT,cACAqe,EAAArB,WAAAxwB,GAAAC,IAIA,SAAA08E,EAAAC,EAAA/qD,EAAAomB,EAAAl4C,EAAA+2C,EAAA+lC,EAAA78E,EAAA6U,GACA,IAAAmjC,EAAAj4C,EAAA+T,KAAAmkC,EAAAC,YAAA,GAGApjC,EAAAmjC,EAAAnjC,kBACA7U,EAAA48E,EAAA/lC,EAAA,EAEA,QAAAhiC,EACA7U,EAAA48E,EAAA5kC,EAAAvgD,OAAA,EACG,WAAAod,IACH7U,EAAA48E,EAAA/lC,EAAAmB,EAAAvgD,OAAA,IAGAugD,EAAAe,cAAA8jC,EAAA9kC,IAAA+kC,EAAAH,EAAA/qD,EAAAmmB,EAAA,UAAAnjC,EAAA7U,EAAAi4C,EAAAxgD,MAAA,WAAAod,EAAA7U,EAAAi4C,EAAAxgD,MAAA,EAAAuI,EAAAC,EAAAg4C,EAAAvgD,OAAA,EAAAugD,EAAAxgD,MAAAwgD,EAAAvgD,QACA,IAAA2d,EAAA4iC,EAAA5iC,YAEAA,IACArV,EAAAg9E,EAAAh9E,EAAA6U,EAAAQ,GACApV,GAAAg4C,EAAAvgD,OAAA,EAAA2d,EAAA,GAAA4iC,EAAAhjC,WAAA,GAGAgoE,EAAAprD,EAAA,aAAAv/B,EAAA0lD,EAAApiC,eAAA7V,EAAA6V,eAAA,IACAqnE,EAAAprD,EAAA,cAAAmmB,EAAAriC,iBAAA5V,EAAA4V,iBAAA,eACAsnE,EAAAprD,EAAA,gBAAAv/B,EAAA0lD,EAAAniC,kBAAA9V,EAAA8V,kBAAA,IACAonE,EAAAprD,EAAA,gBAAAv/B,EAAA0lD,EAAAliC,kBAAA/V,EAAA+V,kBAAA,IACAmnE,EAAAprD,EAAA,YAAAhd,GAGAooE,EAAAprD,EAAA,yBACAorD,EAAAprD,EAAA,OAAAomB,EAAA7C,MAAAloB,EAAAioB,cACA,IAAA/jC,EAAAm+D,EAAAv3B,EAAA5mC,YAAArR,EAAAqR,WAAAC,GACAF,EAAA+rE,EAAAllC,EAAA7mC,UAAApR,EAAAoR,UACAE,EAAAlf,EAAA6lD,EAAA3mC,gBAAAtR,EAAAsR,iBAEAD,IACA6rE,EAAAprD,EAAA,YAAAxgB,GACA4rE,EAAAprD,EAAA,cAAAzgB,GACAygB,EAAAsrD,WAAAllC,EAAA7+B,KAAApZ,EAAAC,IAGAkR,IACA8rE,EAAAprD,EAAA,YAAA1gB,GACA0gB,EAAAurD,SAAAnlC,EAAA7+B,KAAApZ,EAAAC,IAIA,SAAA68E,EAAA/8E,GACA,OAAAA,EAAAqV,qBAAArV,EAAAwU,iBAAAxU,EAAAuU,gBAKA,SAAAyoE,EAAAH,EAAA/qD,EAAA9xB,EAAAC,EAAAC,EAAAxI,EAAAC,GACA,IAAA0d,EAAArV,EAAAqV,oBACAb,EAAAxU,EAAAwU,gBACAD,EAAAvU,EAAAuU,gBACA+oE,EAAAvrF,EAAAsjB,GAMA,GALA6nE,EAAAprD,EAAA,aAAA9xB,EAAAyV,mBAAA,GACAynE,EAAAprD,EAAA,cAAA9xB,EAAAwV,oBAAA,eACA0nE,EAAAprD,EAAA,gBAAA9xB,EAAA0V,sBAAA,GACAwnE,EAAAprD,EAAA,gBAAA9xB,EAAA2V,sBAAA,GAEA2nE,GAAA9oE,GAAAD,EAAA,CACAud,EAAAsB,YACA,IAAA7d,EAAAvV,EAAAuV,iBAEAA,EAGA4mE,EAAA7oD,UAAAxB,EAAA,CACA7xB,IACAC,IACAxI,QACAC,SACAk2C,EAAAt4B,IAPAuc,EAAA9iB,KAAA/O,EAAAC,EAAAxI,EAAAC,GAWAm6B,EAAA4b,YAGA,GAAA4vC,EACAJ,EAAAprD,EAAA,YAAAzc,GACAyc,EAAArhB,YACG,GAAAriB,EAAAinB,GAAA,CACH,IAAAlV,EAAAkV,EAAAlV,OACAA,EAAA20C,EAAA+4B,oBAAA1tE,EAAA,KAAA08E,EAAAU,EAAAloE,KAEAy/B,EAAA4D,aAAAv4C,IACA2xB,EAAAk8C,UAAA7tE,EAAAF,EAAAC,EAAAxI,EAAAC,GAIA6c,GAAAD,IACA2oE,EAAAprD,EAAA,YAAAtd,GACA0oE,EAAAprD,EAAA,cAAAvd,GACAud,EAAAthB,UAIA,SAAA+sE,EAAAp9E,EAAAkV,GAGAA,EAAAlV,QAGA,SAAAq9E,EAAAC,EAAAz9E,EAAAgP,GACA,IAAA0uE,EAAA19E,EAAAC,GAAA,EACA09E,EAAA39E,EAAAE,GAAA,EACA4U,EAAA9U,EAAA8U,UACAC,EAAA/U,EAAA+U,kBAEA,GAAA/F,EAAA,CACA,IAAAoE,EAAApT,EAAAoT,aAEA,GAAAA,aAAA9mB,MAEAoxF,EAAA1uE,EAAA/O,EAAAuc,EAAApJ,EAAA,GAAApE,EAAAtX,OACAimF,EAAA3uE,EAAA9O,EAAAsc,EAAApJ,EAAA,GAAApE,EAAArX,YACK,CACL,IAAAw1C,EAAAhgB,EAAAksB,yBAAAjmC,EAAApE,EAAAhP,EAAA0T,cACAgqE,EAAAvwC,EAAAltC,EACA09E,EAAAxwC,EAAAjtC,EAEA4U,KAAAq4B,EAAAr4B,UACAC,KAAAo4B,EAAAp4B,kBAKA,IAAAzB,EAAAtT,EAAAsT,WAEAA,IACAoqE,GAAApqE,EAAA,GACAqqE,GAAArqE,EAAA,IAIA,OACAoqE,QACAC,QACA7oE,YACAC,qBAIA,SAAAmoE,EAAAprD,EAAAzgC,EAAA9B,GAEA,OADAuiC,EAAAzgC,GAAA+qF,EAAAtqD,EAAAzgC,EAAA9B,GACAuiC,EAAAzgC,GASA,SAAAm+E,EAAAh/D,EAAAV,GACA,aAAAU,GAAAV,GAAA,mBAAAU,GAAA,SAAAA,EAAA,KACAA,EAAArQ,OAAAqQ,EAAA2hB,WAAA,OAAA3hB,EAGA,SAAA2sE,EAAA1sE,GACA,aAAAA,GAAA,SAAAA,EAAA,KACAA,EAAAtQ,OAAAsQ,EAAA0hB,WAAA,OAAA1hB,EAGA,SAAA+L,EAAAjtB,EAAAquF,GACA,wBAAAruF,EACAA,EAAAsuF,YAAA,QACAjhE,WAAArtB,GAAA,IAAAquF,EAGAhhE,WAAArtB,GAGAA,EAGA,SAAA0tF,EAAAh9E,EAAA6U,EAAAQ,GACA,gBAAAR,EAAA7U,EAAAqV,EAAA,cAAAR,EAAA7U,EAAAqV,EAAA,KAAAA,EAAA,KAAArV,EAAAqV,EAAA,GAaAhlB,EAAA2+E,mBA3YA,SAAAjvE,GAGA,OAFAw8E,EAAAx8E,GACAnR,EAAAmR,EAAA+T,KAAAyoE,GACAx8E,GAyYA1P,EAAAi/E,WA5WA,SAAAsN,EAAA/qD,EAAAzY,EAAArZ,EAAAgP,GACAhP,EAAA+T,KAyEA,SAAA8oE,EAAA/qD,EAAAzY,EAAArZ,EAAAgP,GACA,IAAAsoC,EAAAulC,EAAAiB,kBAEAxmC,IAAAulC,EAAArqD,UACA8kB,EAAAulC,EAAAiB,kBAAA3wD,EAAAkqB,cAAAh+B,EAAArZ,IAMA,SAAA68E,EAAA/qD,EAAAwlB,EAAAt3C,EAAAgP,GACA,IAAAonC,EAAAkB,EAAA5/C,MACA0/C,EAAAE,EAAAF,WACAH,EAAAK,EAAAL,YACA3hC,EAAAtV,EAAAsV,YACAyoE,EAAAP,EAAAvmC,EAAAj3C,EAAAgP,GACA0uE,EAAAK,EAAAL,MACAC,EAAAI,EAAAJ,MACA7oE,EAAAipE,EAAAjpE,UACAC,EAAAgpE,EAAAhpE,kBAEA2nE,EAAA5qD,EAAA9xB,EAAAgP,EAAA0uE,EAAAC,GACA,IAAAK,EAAA7wD,EAAAsoB,YAAAioC,EAAAtmC,EAAAtiC,GACAmpE,EAAA9wD,EAAAuoB,YAAAioC,EAAA1mC,EAAAliC,GACAmpE,EAAAF,EACAlB,EAAAmB,EAEA3oE,IACA4oE,GAAA5oE,EAAA,GACAwnE,GAAAxnE,EAAA,IAGA,IAAA6oE,EAAAD,EAAA9nC,EACA2mC,EAAA/8E,IAAAg9E,EAAAH,EAAA/qD,EAAA9xB,EAAAg+E,EAAAC,EAAA7mC,EAAAH,GAEA,QAAAzpD,EAAA,EAAiBA,EAAA8pD,EAAAN,MAAAtpD,OAA+BF,IAAA,CAYhD,IAXA,IASA0qD,EATA3wB,EAAA+vB,EAAAN,MAAAxpD,GACAwqD,EAAAzwB,EAAAywB,OACAomC,EAAApmC,EAAAtqD,OACAqpD,EAAAxvB,EAAAwvB,WACAsnC,EAAA92D,EAAA7vB,MACAgtD,EAAA,EACA45B,EAAAJ,EACAK,EAAAJ,EACAx5B,EAAAy5B,EAAA,EAGA15B,EAAA05B,MAAAlmC,EAAAF,EAAA0M,IAAA5vC,WAAA,SAAAojC,EAAApjC,YACA8nE,EAAAC,EAAA/qD,EAAAomB,EAAAl4C,EAAA+2C,EAAA+lC,EAAAwB,EAAA,QACAD,GAAAnmC,EAAAxgD,MACA4mF,GAAApmC,EAAAxgD,MACAgtD,IAGA,KAAAC,GAAA,cAAAzM,EAAAF,EAAA2M,IAAA7vC,WACA8nE,EAAAC,EAAA/qD,EAAAomB,EAAAl4C,EAAA+2C,EAAA+lC,EAAAyB,EAAA,SACAF,GAAAnmC,EAAAxgD,MACA6mF,GAAArmC,EAAAxgD,MACAitD,IAMA,IAFA25B,IAAAloC,GAAAkoC,EAAAJ,IAAAC,EAAAI,GAAAF,GAAA,EAEA35B,GAAAC,GACAzM,EAAAF,EAAA0M,GAEAk4B,EAAAC,EAAA/qD,EAAAomB,EAAAl4C,EAAA+2C,EAAA+lC,EAAAwB,EAAApmC,EAAAxgD,MAAA,YACA4mF,GAAApmC,EAAAxgD,MACAgtD,IAGAo4B,GAAA/lC,GAjEAynC,CAAA3B,EAAA/qD,EAAAwlB,EAAAt3C,EAAAgP,GAhFAyvE,CAAA5B,EAAA/qD,EAAAzY,EAAArZ,EAAAgP,GAGA,SAAA6tE,EAAA/qD,EAAAzY,EAAArZ,EAAAgP,GACA,IAAAqmC,EAAA6nC,EAAAprD,EAAA,OAAA9xB,EAAAq1C,MAAAloB,EAAAioB,cACA9/B,EAAAtV,EAAAsV,YACAgiC,EAAAulC,EAAAiB,kBAEAxmC,IAAAulC,EAAArqD,UACA8kB,EAAAulC,EAAAiB,kBAAA3wD,EAAAypB,eAAAv9B,EAAAg8B,EAAA//B,EAAAtV,EAAA82C,WAGA,IAAAG,EAAAK,EAAAL,YACA3B,EAAAgC,EAAAN,MACAD,EAAAO,EAAAP,WACAgnC,EAAAP,EAAAvmC,EAAAj3C,EAAAgP,GACA0uE,EAAAK,EAAAL,MACAC,EAAAI,EAAAJ,MACA7oE,EAAAipE,EAAAjpE,UACAC,EAAAgpE,EAAAhpE,kBAEA2nE,EAAA5qD,EAAA9xB,EAAAgP,EAAA0uE,EAAAC,GACA,IAAAM,EAAA9wD,EAAAuoB,YAAAioC,EAAA1mC,EAAAliC,GACA2pE,EAAAhB,EACAiB,EAAAV,EACAW,EAAA7B,EAAA/8E,GAEA,GAAA4+E,GAAAtpE,EAAA,CAEA,IAAAL,EAAAkY,EAAAxwB,SAAA0c,EAAAg8B,GACA+B,EAAAniC,EACAK,IAAA8hC,GAAA9hC,EAAA,GAAAA,EAAA,IACA,IAAA0oE,EAAA7wD,EAAAsoB,YAAAioC,EAAAtmC,EAAAtiC,GACA8pE,GAAA5B,EAAAH,EAAA/qD,EAAA9xB,EAAAg+E,EAAAC,EAAA7mC,EAAAH,GAEA3hC,IACAopE,EAAAzB,EAAAS,EAAA5oE,EAAAQ,GACAqpE,GAAArpE,EAAA,IAIA4nE,EAAAprD,EAAA,YAAAhd,GAAA,QAGAooE,EAAAprD,EAAA,yBAEAorD,EAAAprD,EAAA,aAAA9xB,EAAA6V,gBAAA,GACAqnE,EAAAprD,EAAA,cAAA9xB,EAAA4V,iBAAA,eACAsnE,EAAAprD,EAAA,gBAAA9xB,EAAA8V,mBAAA,GACAonE,EAAAprD,EAAA,gBAAA9xB,EAAA+V,mBAAA,GAEA4oE,GAAA5nC,EAAA,EACA,IAAAzlC,EAAAtR,EAAAsR,gBACAD,EAAAm+D,EAAAxvE,EAAAqR,WAAAC,GACAF,EAAA+rE,EAAAn9E,EAAAoR,UAEAC,IACA6rE,EAAAprD,EAAA,YAAAxgB,GACA4rE,EAAAprD,EAAA,cAAAzgB,IAGAD,GACA8rE,EAAAprD,EAAA,YAAA1gB,GAGA,QAAA5jB,EAAA,EAAiBA,EAAA8nD,EAAA5nD,OAAsBF,IAEvC6jB,GAAAygB,EAAAsrD,WAAA9nC,EAAA9nD,GAAAkxF,EAAAC,GACAvtE,GAAA0gB,EAAAurD,SAAA/nC,EAAA9nD,GAAAkxF,EAAAC,GACAA,GAAA5nC,EArEA8nC,CAAAhC,EAAA/qD,EAAAzY,EAAArZ,EAAAgP,IA4WA1e,EAAAk/E,YACAl/E,EAAA6sF,UACA7sF,EAAAg/E,aARA,SAAAj2D,EAAArZ,GACA,aAAAqZ,OAAArZ,EAAAqV,qBAAArV,EAAAwU,iBAAAxU,EAAAuU,iBAAAvU,EAAAsV,6BCtaA,IAAAwpE,EAAA,SAAA3sD,GACAliC,KAAAkiC,cAAA,IAGA2sD,EAAA3yF,UAAA,CACAyB,YAAAkxF,EACAC,aAAA,SAAAtrF,EAAA2c,GACAngB,KAAAkiC,WAAAzgC,KAAA,CACA+B,SACA2c,YAIA,IAAAihB,EAAAytD,EACA12D,EAAA93B,QAAA+gC,mBCjBA,IAAAv9B,EAAaH,EAAQ,KAIrB2B,EAFa3B,EAAQ,KAErB2B,eAoBAm+C,EAAA,EA4KAnjD,EAAAsmC,OArKA,SAAApnC,GAGA,OAAAA,GAAA,GAAAikD,IAAA70C,KAAAskB,SAAAlG,QAAA,IAAArD,KAAA,MAmKArpB,EAAAqnC,uBA5JA,SAAAqxB,GACA,IAAAg2B,EAAA,GAqBA,OAnBAh2B,EAAAi2B,yBAAA,SAAAjhF,EAAAkhF,GACAlhF,EAAA1I,EAAA0I,GACAghF,EAAAhhF,EAAAiH,MAAAi6E,GAGAl2B,EAAAm2B,iBAAA,SAAAnhF,EAAA/B,GACA,IAAAzM,EAAAyM,EAAAzM,KAEA,IAAAA,EAAA,CACA,IAAA4vF,EAAA9pF,EAAA0I,GAAAiH,KAEA+jD,EAAAU,YAAA1rD,IAAAghF,EAAAI,KACA5vF,EAAAwvF,EAAAI,GAAAnjF,IAIA,OAAAzM,GAGAw5D,GAuIA14D,EAAAsnC,wBA1HA,SAAAoxB,EAAAq2B,GAoGA,SAAAC,EAAAv3D,EAAAv3B,GAQA,OAPAu3B,EAAAv3B,KACAu3B,EAAAv3B,GAAA,CACA+uF,YAAA,GACAC,UAAA,KAIAz3D,EAAAv3B,GAnGAw4D,EAAAy2B,kBAAA,SAAAC,EAAAC,EAAArY,EAAAt4E,GACA,GAAA0wF,EAAAhyF,OAAA,CAIA,IAAAN,EAuDA,SAAAuyF,GACA,IAAA53D,EAAA,GACA63D,EAAA,GAuBA,OAtBA9rF,EAAAjF,KAAA8wF,EAAA,SAAAnvF,GACA,IAAAqvF,EAAAP,EAAAv3D,EAAAv3B,GAEAsvF,EAoCA,SAAAC,EAAAJ,GACA,IAAAG,EAAA,GAIA,OAHAhsF,EAAAjF,KAAAkxF,EAAA,SAAAC,GACAlsF,EAAAhD,QAAA6uF,EAAAK,IAAA,GAAAF,EAAApuF,KAAAsuF,KAEAF,EAzCAG,CADAJ,EAAAE,aAAAV,EAAA7uF,GACAmvF,GACAE,EAAAK,WAAAJ,EAAApyF,OAEA,IAAAmyF,EAAAK,YACAN,EAAAluF,KAAAlB,GAGAsD,EAAAjF,KAAAixF,EAAA,SAAAK,GACArsF,EAAAhD,QAAA+uF,EAAAN,YAAAY,GAAA,GACAN,EAAAN,YAAA7tF,KAAAyuF,GAGA,IAAAC,EAAAd,EAAAv3D,EAAAo4D,GAEArsF,EAAAhD,QAAAsvF,EAAAZ,UAAAW,GAAA,GACAC,EAAAZ,UAAA9tF,KAAAlB,OAIA,CACAu3B,QACA63D,eAlFAS,CAAAV,GACA53D,EAAA36B,EAAA26B,MACAuwC,EAAAlrE,EAAAwyF,YACAU,EAAA,GAKA,IAJAxsF,EAAAjF,KAAA6wF,EAAA,SAAAlvF,GACA8vF,EAAA9vF,IAAA,IAGA8nE,EAAA5qE,QAAA,CACA,IAAA6yF,EAAAjoB,EAAA/zD,MACAi8E,EAAAz4D,EAAAw4D,GACAE,IAAAH,EAAAC,GAEAE,IACAnZ,EAAAh6E,KAAA0B,EAAAuxF,EAAAC,EAAAT,aAAAnzF,gBACA0zF,EAAAC,IAGAzsF,EAAAjF,KAAA2xF,EAAAhB,UAAAiB,EAAAC,EAAAC,GAGA7sF,EAAAjF,KAAAyxF,EAAA,WACA,UAAAvtF,MAAA,kCAGA,SAAA4tF,EAAAC,GACA74D,EAAA64D,GAAAV,aAEA,IAAAn4D,EAAA64D,GAAAV,YACA5nB,EAAA5mE,KAAAkvF,GAUA,SAAAF,EAAAE,GACAN,EAAAM,IAAA,EACAD,EAAAC,uBCnIcjtF,EAAQ,KAEtBC,QAFA,IAIAiF,EAAalF,EAAQ,KAErBsvB,EAAApqB,EAAAoqB,UACA/B,EAAAroB,EAAAqoB,iBAIAiqC,EAFmBx3D,EAAQ,KAE3Bw3D,0BAEApW,EAAYphD,EAAQ,KAEpBP,EAAA2hD,EAAA3hD,cACAvE,EAAAkmD,EAAAlmD,KACA/B,EAAAioD,EAAAjoD,IACAyB,EAAAwmD,EAAAxmD,QACAwD,EAAAgjD,EAAAhjD,SACA3D,EAAA2mD,EAAA3mD,SACA4D,EAAA+iD,EAAA/iD,aACAR,EAAAujD,EAAAvjD,YACAZ,EAAAmkD,EAAAnkD,OAGAkvC,GAFAiV,EAAAniD,OAEae,EAAQ,MAErB4gE,EAAkB5gE,EAAQ,KAE1Bs3D,EAAAsJ,EAAAtJ,uBACAwJ,EAAAF,EAAAE,yBACAC,EAAAH,EAAAG,0BACAib,EAAApb,EAAAob,4BACAD,EAAAnb,EAAAmb,sBACAlb,EAAAD,EAAAC,0BACAsb,EAAAvb,EAAAub,qBAoBAx5C,EAAArT,IA2NA,SAAA49D,EAAAlrB,GACA,GAAAA,EAAA,CAKA,IAAAmrB,EAAA1tF,IACA,OAAAtG,EAAA6oE,EAAA,SAAA91D,EAAA7G,GAOA,UANA6G,EAAAjP,EAAA,GAAoBxC,EAAAyR,KAAA,CACpBrP,KAAAqP,KAKArP,KACA,OAAAqP,EAIAA,EAAArP,MAAA,GAMA,MAAAqP,EAAAk8B,cACAl8B,EAAAk8B,YAAAl8B,EAAArP,MAGA,IAAAgxB,EAAAs/D,EAAA1wF,IAAAyP,EAAArP,MAUA,OARAgxB,EAKA3hB,EAAArP,MAAA,IAAAgxB,EAAAlE,QAJAwjE,EAAA3wF,IAAA0P,EAAArP,KAAA,CACA8sB,MAAA,IAMAzd,KAIA,SAAAkhF,EAAAhyF,EAAAimE,EAAAvjE,EAAAuvF,GAGA,GAFA,MAAAA,MAAA9hF,KAEA81D,IAAA8a,EACA,QAAAtiF,EAAA,EAAmBA,EAAAiE,EAAA/D,QAAAF,EAAAwzF,EAAgCxzF,IACnDuB,EAAA0C,EAAAjE,GAAAiE,EAAAjE,GAAA,QAAAA,OAGA,KAAA6E,EAAAZ,EAAA,OAEA,IAAAjE,EAAA,EAAmBA,EAAA6E,EAAA3E,QAAAF,EAAAwzF,EAAkCxzF,IACrDuB,EAAAsD,EAAA7E,OA4IA,SAAAyzF,EAAAxvF,EAAAm0C,EAAAovB,EAAAW,EAAAR,EAAA1xB,GACA,IAAAr2C,EAUAo/D,EANA,GAAAx6D,EAAAP,GACA,SAYA,GALAkkE,IACAnJ,EAAAmJ,EAAAlyB,GACA+oB,EAAAp+D,EAAAo+D,KAAAh8D,KAAAg8D,GAGA5mB,IAAA6uB,EACA,GAAAO,IAAA8a,GAGA,IAFA,IAAAoR,EAAAzvF,EAAAgyC,GAEAj2C,EAAA,EAAqBA,GAAA0zF,GAAA,IAAAxzF,QAAAF,EAnBrB,EAmB+DA,IAC/D,UAAAJ,EAAA+zF,EAAAD,EAAA/rB,EAAA3nE,KACA,OAAAJ,OAIA,IAAAI,EAAA,EAAqBA,EAAAiE,EAAA/D,QAAAF,EAzBrB,EAyBqDA,IAAA,CACrD,IAAA8nE,EAAA7jE,EAAA0jE,EAAA3nE,GAEA,GAAA8nE,GAAA,OAAAloE,EAAA+zF,EAAA7rB,EAAA7xB,KACA,OAAAr2C,OAIG,GAAAw4C,IAAA8uB,EAAA,CACH,IAAAlI,EACA,OAGA,IAAAh/D,EAAA,EAAmBA,EAAAiE,EAAA/D,QAAAF,EAtCnB,EAsCmDA,IAAA,CAGnD,IAFAqS,EAAApO,EAAAjE,KAEA,OAAAJ,EAAA+zF,EAAAthF,EAAA2sD,KACA,OAAAp/D,QAGG,GAAAw4C,IAAA+pC,EAAA,CACH,IAAAnjB,EACA,OAKA,KAFA00B,EAAAzvF,EAAA+6D,KAEAx6D,EAAAkvF,GACA,SAGA,IAAA1zF,EAAA,EAAmBA,EAAA0zF,EAAAxzF,QAAAF,EAxDnB,EAwDqDA,IACrD,UAAAJ,EAAA+zF,EAAAD,EAAA1zF,KACA,OAAAJ,OAGG,GAAAw4C,IAAAqlB,EACH,IAAAz9D,EAAA,EAAmBA,EAAAiE,EAAA/D,QAAAF,EA9DnB,EA8DmDA,IAAA,CACnD,IAAAqS,EAAApO,EAAAjE,GACAmF,EAAAuuB,EAAArhB,GAEA,IAAAtR,EAAAoE,GACA,SAGA,UAAAvF,EAAA+zF,EAAAxuF,EAAA8wC,KACA,OAAAr2C,EAKA,SAAA+zF,EAAAxuF,GAGA,aAAAA,IAAAorB,SAAAprB,IAAA,KAAAA,QAEKZ,EAAAY,IAAA,MAAAA,SAAA,GAKL,SAGArC,EAAA8wF,mBAlfA,SAAAC,GACA,IAAA5vF,EAAA4vF,EAAAplF,OAAA9O,OACAy4C,EAAA8pC,EAEA,GAAA19E,EAAAP,GACAm0C,EAAA4uB,OACG,GAAAjmE,EAAAkD,GAEH,QAAAjE,EAAA,EAAAC,EAAAgE,EAAA/D,OAAsCF,EAAAC,EAASD,IAAA,CAC/C,IAAAqS,EAAApO,EAAAjE,GAEA,SAAAqS,EAAA,CAEO,GAAAtR,EAAAsR,GAAA,CACP+lC,EAAA6uB,EACA,MACO,GAAArmE,EAAAyR,GAAA,CACP+lC,EAAA8uB,EACA,aAGG,GAAAtmE,EAAAqD,IACH,QAAA1D,KAAA0D,EACA,GAAAA,EAAAzD,eAAAD,IAAAyD,EAAAC,EAAA1D,IAAA,CACA63C,EAAA+pC,EACA,YAGG,SAAAl+E,EACH,UAAAsB,MAAA,gBAGAujC,EAAA+qD,GAAAz7C,gBAmdAt1C,EAAAopC,UAxbA,SAAA14B,GACA,OAAAs1B,EAAAt1B,GAAA7T,QAwbAmD,EAAAgxF,qBAhbA,SAAA5mF,GAEA47B,EAAA57B,GAAA6mF,WAAAnuF,KA+aA9C,EAAAkpC,cA3ZA,SAAAx4B,GACA,IAAAwgF,EAAAxgF,EAAA/E,OACAxK,EAAA+vF,EAAA/vF,KACAm0C,EAAA5zC,EAAAP,GAAA+iE,EAAAvJ,EACA2kB,GAAA,EACA5a,EAAAwsB,EAAAxsB,eACAysB,EAAAD,EAAAC,aACA9rB,EAAA6rB,EAAAp1E,WACAi1E,EAuRA,SAAArgF,GACA,IAAA/E,EAAA+E,EAAA/E,OAQA,IAFAA,EAAAxK,KAGA,OAAAuP,EAAAtG,QAAA5B,aAAA,UAAAmD,EAAAylF,cAAA,GAjSAC,CAAA3gF,GAEA,GAAAqgF,EAAA,CACA,IAAAO,EAAAP,EAAAplF,OACAxK,EAAAmwF,EAAAz0F,OACAy4C,EAAAtP,EAAA+qD,GAAAz7C,aACAgqC,GAAA,EAEA5a,KAAA4sB,EAAA5sB,eACA,MAAAysB,MAAAG,EAAAH,cACA9rB,KAAAisB,EAAAx1E,WAGA,IAAAy1E,EAqBA,SAAApwF,EAAAm0C,EAAAovB,EAAAysB,EAAA9rB,GACA,IAAAlkE,EACA,OACAkkE,iBAAAkrB,EAAAlrB,IAIA,IAAAka,EACA1a,EACA2sB,EAiDAC,EA/CA,GAAAn8C,IAAA6uB,EAKA,SAAAgtB,GAAA,MAAAA,EACAV,EAAA,SAAApuF,GAEA,MAAAA,GAAA,MAAAA,IACAZ,EAAAY,GACA,MAAAwiE,MAAA,GAEAA,EAAA,IAIOH,EAAAvjE,EAAA,IAEP0jE,EAAAssB,EAAA,IAGA9rB,GAAA,IAAAR,IACAQ,EAAA,GACAorB,EAAA,SAAApuF,EAAAqG,GACA28D,EAAA38D,GAAA,MAAArG,IAAA,IACOqiE,EAAAvjE,IAGPo+E,EAAAla,IAAAjoE,OAAAsnE,IAAA8a,EAAAr+E,EAAA/D,OAAA+D,EAAA,GAAAA,EAAA,GAAA/D,OAAA,UACG,GAAAk4C,IAAA8uB,EACHiB,IACAA,EAiGA,SAAAlkE,GAIA,IAHA,IACA3C,EADAkzF,EAAA,EAGAA,EAAAvwF,EAAA/D,UAAAoB,EAAA2C,EAAAuwF,QAGA,GAAAlzF,EAAA,CACA,IAAAsd,EAAA,GAIA,OAHAvd,EAAAC,EAAA,SAAAS,EAAAxB,GACAqe,EAAA1a,KAAA3D,KAEAqe,GA7GA61E,CAAAxwF,GACAqwF,GAAA,QAEG,GAAAl8C,IAAA+pC,EACHha,IACAA,EAAA,GACAmsB,GAAA,EACAjzF,EAAA4C,EAAA,SAAAywF,EAAAn0F,GACA4nE,EAAAjkE,KAAA3D,WAGG,GAAA63C,IAAAqlB,EAAA,CACH,IAAA54D,EAAA6uB,EAAAzvB,EAAA,IACAo+E,EAAAthF,EAAA8D,MAAA3E,QAAA,EAaA,OARAo0F,GACAjzF,EAAA8mE,EAAA,SAAA15B,EAAA/d,GACA,UAAA9vB,EAAA6tC,KAAAzrC,KAAAyrC,KACA8lD,EAAA7jE,KAKA,CACAi3C,aACAQ,iBAAAkrB,EAAAlrB,GACAka,wBACAkS,yBA7FAI,CAAA1wF,EAAAm0C,EAAAovB,EAAAysB,EAAA9rB,GAEAoX,EAAAyU,EAAA1yD,QAEAi+C,GAAAsU,IACAtU,EA8KA,SAAA/rE,EAAAqgF,EAAA5vF,EAAAm0C,EAAAovB,EAAA6sB,GACA,IAAAp2B,EAAAN,EAAAnqD,GACA8tB,EAAA,GAGAszD,EAAA,GACAC,EAAA,GACA5mB,EAAAz6D,EAAAuC,QAKA++E,EAAAlvF,EAAA,wBACAmvF,EAAAnvF,EAAA,iFAIA,GAAAq4D,GAAA,MAAA82B,EAAAnyF,IAAAqrE,GAAA,CACA,IAAA/gE,EAAAsG,EAAAtG,QACA6mF,EAAAjrD,EAAA57B,GAAA6mF,WACAxzF,EAAAszF,EAAA1+E,IAAA,IAAAqyD,EACAwtB,EAAAjB,EAAAnxF,IAAArC,IAAAwzF,EAAApxF,IAAApC,EAAA,CACA00F,eAAA,EACAC,YAAA,IAIA7zF,EAAA48D,EAAAC,aAAA,SAAA1uB,GAEA,SAAAyuB,EAAAG,sBAAA,CACA,IAAAluB,EAAA8kD,EAAAE,cACA5zD,EAAAkO,GAAAU,EAOA2kD,EAAA3wF,KAAAgsC,QAGA,GAAA+tB,EAAAS,gBAAA97D,IAAA4sC,GACAlO,EAAAkO,GAAA,EACAolD,EAAA1wF,KAAA,OAEA,CACA,IAAAgsC,EAAA8kD,EAAAC,iBACA3zD,EAAAkO,GAAAU,EAGA2kD,EAAA3wF,KAAAgsC,WAMA,SAAA4kD,EAAAlyF,IAAAqrE,GAAA,CAIA,IAFA,IAAAknB,EAEAn1F,EAAA,EAAqBA,EAAA,SAAAm1F,EAAkCn1F,IACvDyzF,EAAAxvF,EAAAm0C,EAAAovB,EAAA6sB,EAAAlsB,iBAAAksB,EAAA1sB,WAAA3nE,KACAm1F,EAAAn1F,GAIA,SAAAm1F,EAAA,CACA7zD,EAAAv/B,MAAAozF,EACA,IAAAC,EAAAf,EAAAE,uBAAAnjF,KAAAG,IAAA4jF,EAAA,KAGAN,EAAA3wF,KAAAkxF,GACAR,EAAA1wF,KAAAkxF,IAQA,OAFAR,EAAA10F,SAAAohC,EAAA8X,SAAAw7C,GACAC,EAAA30F,SAAAohC,EAAA4N,WAAA2lD,GACAvzD,EA9PA+zD,CAAA7hF,EAAAqgF,EAAA5vF,EAAAm0C,EAAAovB,EAAA6sB,IAGAvrD,EAAAt1B,GAAA7T,OAAA,IAAA2yC,EAAA,CACAruC,OACAm+E,cACA5a,iBACApvB,eACA+vB,iBAAAksB,EAAAlsB,iBACAR,WAAA0sB,EAAA1sB,WACA0a,sBAAAgS,EAAAhS,sBACA9C,kBAuXAz8E,EAAAwyF,aArGA,SAAA31F,EAAAs2C,GACA,OAAAw9C,EAAA9zF,EAAAsE,KAAAtE,EAAAy4C,aAAAz4C,EAAA6nE,eAAA7nE,EAAAwoE,iBAAAxoE,EAAAgoE,WAAA1xB,qBCjdA,IAAA71B,EAAYja,EAAQ,KAEpBuiC,EAAoBviC,EAAQ,KAE5Bi2D,EAAgBj2D,EAAQ,KAqBxBovF,EAAA,WAKA9yF,KAAAkH,MAAA,IAAAyW,EAMA3d,KAAA0S,IAAAuzB,EAAAU,OAAA,kBASAosD,EANAD,EAAA52F,UAAA,CACAyB,YAAAm1F,EACAxrF,KAAA,SAAAmD,EAAAtC,KACA0J,OAAA,SAAAP,EAAA7G,EAAAtC,EAAAsJ,KACAqE,QAAA,cAIAi9E,EAAAlgF,WAAAkgF,EAAA//E,aAAA+/E,EAAAhgF,aAAA,SAAAhC,EAAAtG,EAAAtC,EAAAsJ,KAIAkoD,EAAA3xB,kBAAA8qD,GAEAn5B,EAAAxzB,sBAAA2sD,EAAA,CACArrD,oBAAA,IAEA,IAAArG,EAAA0xD,EACA36D,EAAA93B,QAAA+gC,mBCzDA,IAAAu4B,EAAgBj2D,EAAQ,KA8BxB,SAAA28C,EAAA2yC,GACAhzF,KAAAizF,SAAAD,GAAA,GAOAhzF,KAAAkzC,QAAA,CAAAjkC,UAOAjP,KAAAkzF,UAAA,EACAlzF,KAAAsH,MAAAtH,KAAAsH,KAAAlI,MAAAY,KAAAb,WASAkhD,EAAAnkD,UAAA8V,MAAA,SAAAtP,GAKA,OAAAA,GAGA29C,EAAAnkD,UAAAi3F,WAAA,SAAA5yF,GACA,OAAAP,KAAAizF,SAAA1yF,IAGA8/C,EAAAnkD,UAAAglC,QAAA,SAAAx+B,GACA,IAAAi2C,EAAA34C,KAAAkzC,QACA,OAAAxwC,GAAAi2C,EAAA,IAAAj2C,GAAAi2C,EAAA,IASA0H,EAAAnkD,UAAA2gC,UAAA,SAAAn6B,GACA,IAAAi2C,EAAA34C,KAAAkzC,QAEA,OAAAyF,EAAA,KAAAA,EAAA,GACA,IAGAj2C,EAAAi2C,EAAA,KAAAA,EAAA,GAAAA,EAAA,KASA0H,EAAAnkD,UAAAygC,MAAA,SAAAj6B,GACA,IAAAi2C,EAAA34C,KAAAkzC,QACA,OAAAxwC,GAAAi2C,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAQA0H,EAAAnkD,UAAAk3F,YAAA,SAAArzD,GACA,IAAA4Y,EAAA34C,KAAAkzC,QACAnT,EAAA,GAAA4Y,EAAA,KAAAA,EAAA,GAAA5Y,EAAA,IACAA,EAAA,GAAA4Y,EAAA,KAAAA,EAAA,GAAA5Y,EAAA,KAUAsgB,EAAAnkD,UAAAm3F,oBAAA,SAAA7xF,EAAAwqC,GACAhsC,KAAAozF,YAAA5xF,EAAAi3C,qBAAAzM,KAQAqU,EAAAnkD,UAAAklD,UAAA,WACA,OAAAphD,KAAAkzC,QAAAv2C,SASA0jD,EAAAnkD,UAAAunD,UAAA,SAAAxN,EAAApI,GACA,IAAAylD,EAAAtzF,KAAAkzC,QAEA9lB,MAAA6oB,KACAq9C,EAAA,GAAAr9C,GAGA7oB,MAAAygB,KACAylD,EAAA,GAAAzlD,IASAwS,EAAAnkD,UAAAioD,QAAA,WACA,OAAAnkD,KAAAuzF,UAMAlzC,EAAAnkD,UAAAolD,SAAA,SAAA6C,GACAnkD,KAAAuzF,SAAApvC,GAQA9D,EAAAnkD,UAAA4mD,SAAA,KACA6W,EAAA3xB,kBAAAqY,GACAsZ,EAAAxzB,sBAAAka,EAAA,CACA5Y,oBAAA,IAEA,IAAArG,EAAAif,EACAloB,EAAA93B,QAAA+gC,mBC/KA,IAAAjE,EAAiBz5B,EAAQ,KAEzB00B,EAAiB10B,EAAQ,KAEzB28C,EAAY38C,EAAQ,KAEpB4gF,EAAa5gF,EAAQ,KA0BrB8vF,EAAAr2D,EAAAxe,MAMAyhC,EAAAC,EAAA1/C,OAAA,CACApB,KAAA,WACA2zF,UAAA,EACAO,mBAAA,EACAhwC,UAAA,SAAAxN,EAAApI,GACA,IAAAylD,EAAAtzF,KAAAkzC,QAEA9lB,MAAA6oB,KACAq9C,EAAA,GAAA3mE,WAAAspB,IAGA7oB,MAAAygB,KACAylD,EAAA,GAAA3mE,WAAAkhB,KAGAulD,YAAA,SAAArzD,GACA,IAAA4Y,EAAA34C,KAAAkzC,QACAnT,EAAA,GAAA4Y,EAAA,KAAAA,EAAA,GAAA5Y,EAAA,IACAA,EAAA,GAAA4Y,EAAA,KAAAA,EAAA,GAAA5Y,EAAA,IAEAqgB,EAAAlkD,UAAAunD,UAAApmD,KAAA2C,KAAA24C,EAAA,GAAAA,EAAA,KAMA+6C,YAAA,WACA,OAAA1zF,KAAAkzF,WAMArvC,YAAA,SAAA5zB,GACAjwB,KAAAkzF,UAAAjjE,EAGAjwB,KAAA2zF,YAAA3zF,KAAAkzC,QAAAv2C,QACAqD,KAAAyzF,mBAAAnP,EAAAsP,qBAAA3jE,IAMAu0B,SAAA,WACA,OAAA8/B,EAAAuP,sBAAA7zF,KAAAkzF,UAAAlzF,KAAAkzC,QAAAlzC,KAAA2zF,YAAA3zF,KAAAyzF,qBAUA3wC,SAAA,SAAAthD,EAAAuW,GACA,SAAAvW,EACA,SAGA,IAAAqrB,EAAA9U,KAAA8U,UAYA,OAVA,MAAAA,EACAA,EAAAsQ,EAAA7P,iBAAA9rB,IAAA,EACK,SAAAqrB,IAELA,EAAA7sB,KAAAyzF,oBAKAjyF,EAAAgyF,EAAAhyF,EAAAqrB,GAAA,GACAuL,EAAAiG,UAAA78B,IAUAsyF,UAAA,SAAA77D,EAAA0rB,EAAAC,GACA3rB,KAAA,EACA,IAAA0gB,EAAA34C,KAAAkzC,QACA2N,EAAAlI,EAAA,GAAAA,EAAA,GAEA,GAAA7qB,SAAA+yB,GAAA,CAMAA,EAAA,IACAA,KACAlI,EAAAk6B,WAGA,IAAA11E,EAAAmnF,EAAAyP,uBAAAp7C,EAAA1gB,EAAA0rB,EAAAC,GACA5jD,KAAAyzF,mBAAAt2F,EAAA62F,kBACAh0F,KAAAkzF,UAAA/1F,EAAA8yB,SACAjwB,KAAA2zF,YAAAx2F,EAAA82F,iBAYAvwC,WAAA,SAAA3rC,GACA,IAAA4gC,EAAA34C,KAAAkzC,QAEA,GAAAyF,EAAA,KAAAA,EAAA,GACA,OAAAA,EAAA,IAEA,IAAAu7C,EAAAv7C,EAAA,GAMA5gC,EAAAmpC,OAIAvI,EAAA,IAAAu7C,EAAA,GAHAv7C,EAAA,IAAAu7C,EAAA,EACAv7C,EAAA,IAAAu7C,EAAA,QAKAv7C,EAAA,KAIA,IAAAkI,EAAAlI,EAAA,GAAAA,EAAA,GAEA7qB,SAAA+yB,KACAlI,EAAA,KACAA,EAAA,MAGA34C,KAAA8zF,UAAA/7E,EAAAkgB,YAAAlgB,EAAA4rC,YAAA5rC,EAAA6rC,aAEA,IAAA3zB,EAAAjwB,KAAAkzF,UAEAn7E,EAAAkpC,SACAtI,EAAA,GAAA66C,EAAA7kF,KAAAod,MAAA4sB,EAAA,GAAA1oB,OAGAlY,EAAAmpC,SACAvI,EAAA,GAAA66C,EAAA7kF,KAAAg2C,KAAAhM,EAAA,GAAA1oB,UAQAmwB,EAAAzuC,OAAA,WACA,WAAAyuC,GAGA,IAAAhf,EAAAgf,EACAjoB,EAAA93B,QAAA+gC,mBC3MA,IAAAv9B,EAAaH,EAAQ,KAIrB6oB,EAFc7oB,EAAQ,KAEtB6oB,aAIAiwC,EAFuB94D,EAAQ,KAE/B84D,mBAEA5C,EAA0Bl2D,EAAQ,KAqBlCywF,EAAA,cAEAC,EAAA,qBAAAv4D,0BAAAx/B,MAEA,SAAAg4F,EAAAtjF,GACA,OAAAA,EAAA5Q,IAAA,UAAAg0F,EAAApjF,EAAAqH,YAGA,SAAAk8E,EAAA3yC,GACA,OAAAA,EAAA3V,IAAA2V,EAAA54C,MA6CA,SAAAw3C,EAAAirB,EAAA/gE,GACA,IAAA8pF,EAAA,GAOA,OANA9pF,EAAA+pF,iBAAAhpB,EAAA,SAAAz6D,GAEA0jF,EAAA1jF,KAAA2jF,EAAA3jF,IACAwjF,EAAA9yF,KAAAsP,KAGAwjF,EAGA,SAAA/zC,EAAAm0C,GACA,IAAAC,EAAA,GAqBA,OApBA/wF,EAAAjF,KAAA+1F,EAAA,SAAA5jF,GACA,IAAAvP,EAAAuP,EAAAC,UAEA6jF,EADA9jF,EAAAL,iBACAu6B,cACA6W,EAAA+yC,EAAAzzC,YACA0zC,EAAA,aAAAD,EAAAt1F,KAAAs1F,EAAAlxB,eAAAh1D,KAAAyb,IAAA03B,EAAA,GAAAA,EAAA,IAAAtgD,EAAA6rB,QACA0nE,EAAAxoE,EAAAxb,EAAA5Q,IAAA,YAAA20F,GACAE,EAAAzoE,EAAAxb,EAAA5Q,IAAA,eAAA20F,GACAG,EAAAlkF,EAAA5Q,IAAA,UACA+0F,EAAAnkF,EAAA5Q,IAAA,kBACAy0F,EAAAnzF,KAAA,CACAqzF,YACAC,WACAC,cACAC,SACAC,iBACAC,QAAAb,EAAAO,GACAO,QAAAf,EAAAtjF,OAGAskF,EAAAT,GAGA,SAAAS,EAAAT,GAEA,IAAAU,EAAA,GACAzxF,EAAAjF,KAAAg2F,EAAA,SAAAW,EAAAtnE,GACA,IAAAknE,EAAAI,EAAAJ,QACAL,EAAAS,EAAAT,UACAU,EAAAF,EAAAH,IAAA,CACAL,YACAW,cAAAX,EACAY,eAAA,EACAC,YAAA,MACAl9D,IAAA,MACAm9D,OAAA,IAEAA,EAAAJ,EAAAI,OACAN,EAAAH,GAAAK,EACA,IAAAJ,EAAAG,EAAAH,QAEAQ,EAAAR,IACAI,EAAAE,iBAGAE,EAAAR,GAAAQ,EAAAR,IAAA,CACA3tF,MAAA,EACAixB,SAAA,GAOA,IAAAq8D,EAAAQ,EAAAR,SAEAA,IAAAa,EAAAR,GAAA3tF,QAEAmuF,EAAAR,GAAA3tF,MAAAstF,EACAA,EAAApmF,KAAAC,IAAA4mF,EAAAC,cAAAV,GACAS,EAAAC,eAAAV,GAGA,IAAAC,EAAAO,EAAAP,YACAA,IAAAY,EAAAR,GAAA18D,SAAAs8D,GACA,IAAAC,EAAAM,EAAAN,OACA,MAAAA,IAAAO,EAAA/8D,IAAAw8D,GACA,IAAAC,EAAAK,EAAAL,eACA,MAAAA,IAAAM,EAAAG,YAAAT,KAEA,IAAA/3F,EAAA,GAsDA,OArDA0G,EAAAjF,KAAA02F,EAAA,SAAAE,EAAAl6B,GACAn+D,EAAAm+D,GAAA,GACA,IAAAs6B,EAAAJ,EAAAI,OACAd,EAAAU,EAAAV,UACAa,EAAAppE,EAAAipE,EAAAG,YAAAb,GACAe,EAAAtpE,EAAAipE,EAAA/8D,IAAA,GACAg9D,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,eACAI,GAAAL,EAAAE,IAAAD,KAAA,GAAAG,GACAC,EAAAnnF,KAAAG,IAAAgnF,EAAA,GAEAjyF,EAAAjF,KAAAg3F,EAAA,SAAAG,EAAA1tB,GACA,IAAA3vC,EAAAq9D,EAAAr9D,SAEAA,KAAAo9D,IACAp9D,EAAA/pB,KAAAC,IAAA8pB,EAAA+8D,GAEAM,EAAAtuF,QACAixB,EAAA/pB,KAAAC,IAAA8pB,EAAAq9D,EAAAtuF,QAGAguF,GAAA/8D,EACAq9D,EAAAtuF,MAAAixB,EACAg9D,OAIAI,GAAAL,EAAAE,IAAAD,KAAA,GAAAG,GACAC,EAAAnnF,KAAAG,IAAAgnF,EAAA,GACA,IACAE,EADAC,EAAA,EAEApyF,EAAAjF,KAAAg3F,EAAA,SAAAG,EAAA9nE,GACA8nE,EAAAtuF,QACAsuF,EAAAtuF,MAAAquF,GAGAE,EAAAD,EACAE,GAAAF,EAAAtuF,OAAA,EAAAouF,KAGAG,IACAC,GAAAD,EAAAvuF,MAAAouF,GAGA,IAAAryF,GAAAyyF,EAAA,EACApyF,EAAAjF,KAAAg3F,EAAA,SAAAG,EAAAX,GACAj4F,EAAAm+D,GAAA85B,GAAAj4F,EAAAm+D,GAAA85B,IAAA,CACA5xF,SACAiE,MAAAsuF,EAAAtuF,OAEAjE,GAAAuyF,EAAAtuF,OAAA,EAAAouF,OAGA14F,EAUA,SAAAsjD,EAAAmB,EAAAD,EAAA5wC,GACA,GAAA6wC,GAAAD,EAAA,CACA,IAAAxkD,EAAAykD,EAAA0yC,EAAA3yC,IAMA,OAJA,MAAAxkD,GAAA,MAAA4T,IACA5T,IAAAk3F,EAAAtjF,KAGA5T,GA6GA,IAAA+4F,EAAA,CACA1qB,WAAA,MACAp4D,KAAAwmD,IACA7vB,MAAA,SAAAh5B,GACA,GAAA0jF,EAAA1jF,IAAA2jF,EAAA3jF,GAAA,CAIA,IAAAvP,EAAAuP,EAAAC,UACAmlF,EAAAplF,EAAAL,iBACAmkF,EAAAsB,EAAAlrD,cACAnU,EAAAq/D,EAAAC,aAAAvB,GACAwB,EAAA70F,EAAA8pC,aAAAxU,EAAAkV,KACAsqD,EAAA90F,EAAA8pC,aAAAupD,EAAA7oD,KACAuqD,EAAAz/D,EAAA8sC,eACA4yB,EAAAD,EAAA,IACAxB,EAAAt0C,EAAAD,EAAA,CAAAzvC,IAAA8jF,EAAA9jF,GAAAtJ,MAOA,OALAstF,EA/UA,KAiVAA,EAjVA,IAoVA,CACAl6B,SAGA,SAAA1iD,EAAA3W,GACA,IACA2P,EADAslF,EAAA,IAAArC,EAAA,EAAAj8E,EAAAkV,OAEAo1C,EAAA,GACAi0B,EAAA,GACAlzF,EAAA,EAEA,YAAA2N,EAAAgH,EAAA+oD,SACAw1B,EAAAF,GAAAh1F,EAAArB,IAAAk2F,EAAAllF,GACAulF,EAAA,EAAAF,GAAAh1F,EAAArB,IAAAm2F,EAAAnlF,GACAsxD,EAAA0zB,EAAArT,YAAA4T,EAAA,KAAAj0B,GACAg0B,EAAAjzF,KAAAi/D,EAAA,GACAg0B,EAAAjzF,KAAAi/D,EAAA,GAGAjhE,EAAA26C,UAAA,CACAs6C,cACA1B,WACA4B,eAAAC,EAAA/B,EAAA/9D,GAAA,GACAy/D,6BAMA,SAAA9B,EAAA1jF,GACA,OAAAA,EAAAL,kBAAA,gBAAAK,EAAAL,iBAAAnR,KAGA,SAAAm1F,EAAA3jF,GACA,OAAAA,EAAAu8B,iBAAAv8B,EAAAu8B,gBAAAkvC,MAGA,SAAAoa,EAAA/B,EAAA/9D,EAAA+/D,GACA,OAAAhzF,EAAAhD,QAAAg0F,EAAAiC,kBAAAhgE,IAAA,GAAA+/D,EAAA//D,EAAAigE,cAAAjgE,EAAA6rC,YAAA,IAAA7rC,EAAAkgE,kBAAA,GAGA32F,EAAA42F,gBAvWA,SAAAl/E,GACA,IAAAI,EAAA,GACA08E,EAAA98E,EAAA4pC,KAGA,gBAAAkzC,EAAAt1F,KAAA,CAMA,IAFA,IAAAu1F,EAAAD,EAAAlxB,eAEApmE,EAAA,EAAiBA,EAAAwa,EAAAsV,MAAoB9vB,IACrC4a,EAAA1W,KAAAoC,EAAArF,SAAA,CACAs2F,YACAK,QAXA,QAYAC,QAAAjB,EAAA52F,GACKwa,IAGL,IAAAm/E,EAAA7B,EAAAl9E,GACAhb,EAAA,GAEA,IAAAI,EAAA,EAAiBA,EAAAwa,EAAAsV,MAAe9vB,IAAA,CAChC,IAAAqS,EAAAsnF,EAAA,MAAA/C,EAAA52F,GACAqS,EAAAunF,aAAAvnF,EAAApM,OAAAoM,EAAAnI,MAAA,EACAtK,EAAAsE,KAAAmO,GAGA,OAAAzS,IA4UAkD,EAAAkgD,yBACAlgD,EAAAmgD,mBACAngD,EAAAogD,uBACApgD,EAAA2e,OAxKA,SAAAwsD,EAAA/gE,GACA,IAAA8pF,EAAAh0C,EAAAirB,EAAA/gE,GACAm3C,EAAApB,EAAA+zC,GACA6C,EAAA,GACAC,EAAA,GACAxzF,EAAAjF,KAAA21F,EAAA,SAAAxjF,GACA,IAAAvP,EAAAuP,EAAAC,UACAmlF,EAAAplF,EAAAL,iBACAmkF,EAAAsB,EAAAlrD,cACAmqD,EAAAf,EAAAtjF,GACAumF,EAAA11C,EAAA0yC,EAAAO,IAAAO,GACAmC,EAAAD,EAAA9zF,OACAg0F,EAAAF,EAAA7vF,MACAqvB,EAAAq/D,EAAAC,aAAAvB,GACA4C,EAAA1mF,EAAA5Q,IAAA,mBACAi3F,EAAAhC,GAAAgC,EAAAhC,IAAA,GACAiC,EAAAjC,GAAAiC,EAAAjC,IAAA,GAEA5zF,EAAA26C,UAAA,CACA34C,OAAA+zF,EACAx4C,KAAAy4C,IAUA,IARA,IAAAnB,EAAA70F,EAAA8pC,aAAAxU,EAAAkV,KACAsqD,EAAA90F,EAAA8pC,aAAAupD,EAAA7oD,KACA6qD,EAAAr6B,EAAAh7D,EAAA60F,GAGAqB,EAAA5gE,EAAA8sC,eACA+yB,EAAAC,EAAA/B,EAAA/9D,EAAA+/D,GAEA5oE,EAAA,EAAAzwB,EAAAgE,EAAA6rB,QAAyCY,EAAAzwB,EAAWywB,IAAA,CACpD,IAAA3uB,EAAAkC,EAAArB,IAAAk2F,EAAApoE,GACA0pE,EAAAn2F,EAAArB,IAAAm2F,EAAAroE,GAEA,IAAAb,MAAA9tB,GAAA,CAIA,IAmBA0Q,EACAC,EACAxI,EACAC,EAeA+6D,EArCAghB,EAAAnkF,GAAA,UACAs4F,EAAAjB,EAGAE,IAEAO,EAAAhC,GAAAuC,KACAP,EAAAhC,GAAAuC,GAAA,CACAvkC,EAAAujC,EAEAt3B,EAAAs3B,IAMAiB,EAAAR,EAAAhC,GAAAuC,GAAAlU,IAQAiU,GAEA1nF,EAAA4nF,EACA3nF,GAFAwyD,EAAA0zB,EAAArT,YAAA,CAAAxjF,EAAAq4F,KAEA,GAAAJ,EACA9vF,EAAAg7D,EAAA,GAAAk0B,EACAjvF,EAAA8vF,EAEA7oF,KAAAyb,IAAA3iB,GAAAgwF,IACAhwF,KAAA,QAAAgwF,GAGAZ,IAAAO,EAAAhC,GAAAuC,GAAAlU,IAAAh8E,KAGAuI,GADAyyD,EAAA0zB,EAAArT,YAAA,CAAA6U,EAAAr4F,KACA,GAAAi4F,EACAtnF,EAAA2nF,EACAnwF,EAAA+vF,EACA9vF,EAAA+6D,EAAA,GAAAk0B,EAEAhoF,KAAAyb,IAAA1iB,GAAA+vF,IAEA/vF,MAAA,QAAA+vF,GAGAZ,IAAAO,EAAAhC,GAAAuC,GAAAlU,IAAA/7E,IAGAlG,EAAA86C,cAAAruB,EAAA,CACAje,IACAC,IACAxI,QACAC,cAGG1H,OAyEHK,EAAA61F,+BClaA,IAAAryF,EAAaH,EAAQ,KAIrBg8C,EAFch8C,EAAQ,KAEtBg8C,aAEA96C,EAAclB,EAAQ,KAItB6oB,EAFc7oB,EAAQ,KAEtB6oB,aAIAsrE,EAFmBn0F,EAAQ,KAE3Bm0F,gBAgCA,SAAA54C,EAAAz9C,EAAAysB,EAAA4zD,GACAj9E,EAAA+Y,MAAAtgB,KAAA2C,MACAA,KAAA0hF,WAAAlgF,EAAAysB,EAAA4zD,GAGA,IAAAiW,EAAA74C,EAAA/iD,UASA67F,EAAA94C,EAAA84C,cAAA,SAAAv2F,EAAAysB,GACA,IAAAoJ,EAAA71B,EAAA4P,cAAA6c,EAAA,cACA,OAAAoJ,aAAAh7B,MAAAg7B,EAAA16B,QAAA,EAAA06B,OAGA,SAAA2gE,EAAA3gE,GACA,OAAAA,EAAA,KAAAA,EAAA,MAGA,SAAA4gE,EAAAx9D,EAAAC,GACA16B,KAAAgJ,OAAAkvF,MAAAz9D,EAAAC,GAGAo9D,EAAAK,cAAA,SAAAj5C,EAAA19C,EAAAysB,EAAAoJ,EAAAsoB,GAEA3/C,KAAAo6D,YACA,IAAAj6C,EAAA3e,EAAA4P,cAAA6c,EAAA,SAOA2xB,EAAAF,EAAAR,GAAA,SAAA/+B,EAAAw/B,GACAC,EAAAj5B,KAAA,CACAhF,GAAA,IACA48D,SAAA,EACA5hD,MAAAq7D,EAAA3gE,KAGAuoB,EAAAs4C,MAAAD,EACAj4F,KAAAo4F,YAAAl5C,EACAl/C,KAAAmQ,IAAAyvC,IAQAk4C,EAAAO,oBAAA,SAAAC,GACAt4F,KAAAi5B,QAAA,GAAAxrB,cAAA6qF,IAaAR,EAAAS,cAAA,WACA,OAAAv4F,KAAAi5B,QAAA,IAQA6+D,EAAAE,SAAA,WACA,OAAAh4F,KAAAi5B,QAAA,GAAA0D,OAOAm7D,EAAA79B,UAAA,WACAj6D,KAAAi5B,QAAA,GAAAlvB,QAAA,aAOA+tF,EAAA39B,SAAA,WACAn6D,KAAAi5B,QAAA,GAAAlvB,QAAA,WAQA+tF,EAAAU,KAAA,SAAAhgF,EAAAD,GACA,IAAAqnC,EAAA5/C,KAAAi5B,QAAA,GACA2mB,EAAApnC,SACAonC,EAAArnC,KAGAu/E,EAAAW,aAAA,SAAApa,GACA,IAAAz+B,EAAA5/C,KAAAi5B,QAAA,GACA2mB,EAAAy+B,YACAz+B,EAAA4+B,OAAAH,EAAA,kBAqBAyZ,EAAApW,WAAA,SAAAlgF,EAAAysB,EAAA4zD,GACA7hF,KAAA+K,QAAA,EACA,IAAAm0C,EAAA19C,EAAA4P,cAAA6c,EAAA,oBACAld,EAAAvP,EAAAkwC,UACAra,EAAA0gE,EAAAv2F,EAAAysB,GACAmZ,EAAA8X,IAAAl/C,KAAAo4F,YAEA,GAAAhxD,EAAA,CACA,IAAAuY,EAAAn+C,EAAA4P,cAAA6c,EAAA,oBAEAjuB,KAAAm4F,cAAAj5C,EAAA19C,EAAAysB,EAAAoJ,EAAAsoB,OACG,EACHC,EAAA5/C,KAAAi5B,QAAA,IACAluB,QAAA,EACAnG,EAAAgiB,YAAAg5B,EAAA,CACAjjB,MAAAq7D,EAAA3gE,IACKtmB,EAAAkd,GAKL,GAFAjuB,KAAA04F,cAAAl3F,EAAAysB,EAAAoJ,EAAAwqD,GAEAz6C,EAAA,CACA,IAAAwY,EAAA5/C,KAAAi5B,QAAA,GACA0/D,EAAA9W,KAAA8W,OACA16F,EAAA,CACA0+B,MAAAijB,EAAAjjB,MAAAhgC,SAEAg8F,IAAA16F,EAAA8R,MAAA,CACAsmE,QAAAz2B,EAAA7vC,MAAAsmE,UAEAz2B,EAAAjjB,MAAA,MACAg8D,IAAA/4C,EAAA7vC,MAAAsmE,QAAA,GACAzxE,EAAA+kB,UAAAi2B,EAAA3hD,EAAA8S,EAAAkd,GAGAjuB,KAAA44F,aAAA7nF,GAIA,IAAA8nF,EAAA,cACAC,EAAA,yBACAC,EAAA,UACAC,EAAA,qBAQAlB,EAAAY,cAAA,SAAAl3F,EAAAysB,EAAAoJ,EAAAwqD,GACA,IAAAjiC,EAAA5/C,KAAAi5B,QAAA,GACAloB,EAAAvP,EAAAkwC,UACAvxB,EAAA3e,EAAA4P,cAAA6c,EAAA,SAEA,UAAA2xB,EAAArgD,MACAqgD,EAAAk/B,SAAA,CACAnzD,eAAA,IAIA,IAAA8L,EAAAoqD,KAAApqD,UACA2pD,EAAAS,KAAAT,eACAC,EAAAQ,KAAAR,aACAC,EAAAO,KAAAP,aACAh4D,EAAAu4D,KAAAv4D,WACAk4D,EAAAK,KAAAL,gBACAD,EAAAM,KAAAN,eACAE,EAAAI,KAAAJ,YAEA,IAAAI,GAAArgF,EAAAszC,cAAA,CACA,IAAAm3B,EAAA4V,KAAA5V,UAAA4V,EAAA5V,UAAAzqE,EAAAs6C,aAAA7tB,GAGAwJ,EAAAw0C,EAAAz/D,SAAAqsF,GAAA1X,aAAA,WACAC,EAAAnV,EAAAz/D,SAAAssF,GAAA3X,eACAE,EAAApV,EAAA7oD,WAAA,gBACAk+D,EAAArV,EAAA7oD,WAAA,gBACAkG,EAAA2iD,EAAAz/D,SAAAusF,GACAvX,EAAAvV,EAAAz/D,SAAAwsF,GACAzX,EAAAtV,EAAA7oD,WAAA,kBACAq+D,EAAAxV,EAAA7oD,WAAA,eAEAg+D,EAAAv9E,EAAAlD,OAAA,GAAqCygF,GAGrC,IAAA6X,EAAAr5C,EAAA7vC,MACA6vC,EAAAj5B,KAAA,YAAA06D,GAAA,GAAA1yE,KAAA4U,GAAA,QAEA+9D,GACA1hC,EAAAj5B,KAAA,YAAA4F,EAAA+0D,EAAA,GAAAjqD,EAAA,IAAA9K,EAAA+0D,EAAA,GAAAjqD,EAAA,MAGAoqD,GAAA7hC,EAAAj5B,KAAA,SAAA86D,GAEA7hC,EAAAC,SAAA1/B,EAAA0hE,KAAAqX,kBACAt5C,EAAAhpC,SAAA6gB,GACA,IAAA4+C,EAAA70E,EAAA4P,cAAA6c,EAAA,WAEA,MAAAooD,IACA4iB,EAAA5iB,WAGA,IAAAE,EAAA/0E,EAAA4P,cAAA6c,EAAA,SACAkrE,EAAAv5C,EAAAw5C,WAEA,MAAA7iB,EACA,MAAA4iB,IACAv5C,EAAAw5C,WAAAx5C,EAAAj+B,GACAi+B,EAAAj+B,IAAA40D,GAEG,MAAA4iB,IACHv5C,EAAAj+B,GAAAw3E,EACAv5C,EAAAw5C,WAAA,MAGA,IAAAC,EAAAxX,KAAAwX,aACAz0F,EAAAwjB,cAAA6wE,EAAA7X,EAAA93D,EAAAk4D,EAAA,CACA74D,aAAA5X,EACA6X,eAAAqF,EACAhF,YAKA,SAAAgF,EAAAlW,GACA,OAAAshF,EAAA73F,EAAAgrC,QAAAve,GAAA4pE,EAAAr2F,EAAAysB,IALA/K,YAAA,EACAxB,UAAAvB,IAOAy/B,EAAAz1C,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UACAy1C,EAAAn/B,WAAA2gE,EAGAx8E,EAAAsjB,cAAA03B,GACA,IAAAjjB,EAAAq7D,EAAA3gE,GAEA,GAAAkqD,GAAAxwE,EAAAqV,qBAAA,CACA,IAAAkzE,EAAA,WAGA,IAAAt5F,KAAAy+E,YAAA,CAIA,IAAA8a,EAAA58D,EAAA,GAAAA,EAAA,GACA38B,KAAA0mB,UAAA,CACAiW,MAAA,CAAAhuB,KAAAG,IAAA,IAAA6tB,EAAA,GAAAA,EAAA,MAAAhuB,KAAAG,IAAA,IAAA6tB,EAAA,GAAAA,EAAA,KAAA48D,KACO,oBAGPC,EAAA,WACAx5F,KAAAy+E,aAIAz+E,KAAA0mB,UAAA,CACAiW,SACO,mBAGPijB,EAAAh2C,GAAA,YAAA0vF,GAAA1vF,GAAA,WAAA4vF,GAAA5vF,GAAA,WAAA0vF,GAAA1vF,GAAA,SAAA4vF,KAUA1B,EAAA7V,QAAA,SAAAnjF,EAAAiZ,GACA,IAAA6nC,EAAA5/C,KAAAi5B,QAAA,GAEAj5B,KAAA+K,OAAA60C,EAAA70C,QAAA,IAEAgN,MAAA0hF,aAAA75C,EAAA7vC,MAAAqZ,KAAA,MACAxkB,EAAAgiB,YAAAg5B,EAAA,CACA7vC,MAAA,CACAsmE,QAAA,GAEA15C,MAAA,OACG38B,KAAA44F,aAAA54F,KAAAmR,UAAArS,IAGH+E,EAAA9C,SAAAk+C,EAAAr6C,EAAA+Y,OACA,IAAAyjB,EAAA6d,EACA9mB,EAAA93B,QAAA+gC,mBC5WA,IAAAv9B,EAAaH,EAAQ,KAErBg2F,EAAkBh2F,EAAQ,KAE1Bc,EAAqBd,EAAQ,KAE7B0lC,EAAc1lC,EAAQ,KAEtBi4B,EAAAyN,EAAAzN,gBACAd,EAAAuO,EAAAvO,iBAEA8+D,EAAkBj2F,EAAQ,KAsB1Bk2F,EAAA,kCAiEAzhE,EAAA93B,QAxDA,SAAA8vE,EAAA0pB,EAAAC,EAAAC,GACAl2F,EAAAjF,KAAAg7F,EAAA,SAAA71C,GACA81C,EAAAl5F,OAAA,CAIApB,KAAA4wE,EAAA,QAAApsB,EACAnd,qBAAA,SAAA56B,EAAAvB,GACA,IAAA+7B,EAAAxmC,KAAAwmC,WACAK,EAAAL,EAAA7K,EAAA3vB,GAAA,GACA86B,EAAAr8B,EAAAs8B,WACAljC,EAAA7F,MAAAgO,EAAA86B,EAAA3mC,IAAA4jD,EAAA,SACAlgD,EAAA7F,MAAAgO,EAAAhM,KAAAgnC,oBACAh7B,EAAAzM,KAAAu6F,EAAA3pB,EAAAnkE,GAEAw6B,GACA3L,EAAA7uB,EAAA66B,EAAAL,IAOAU,cAAA,WAGA,aAFAlnC,KAAAgM,OAEAzM,OACAS,KAAAg6F,cAAAL,EAAAM,kBAAAj6F,QAQAqhD,cAAA,SAAArL,GACA,IAAAhqC,EAAAhM,KAAAgM,OAGA,gBAAAA,EAAAzM,KACA,OAAAy2C,EACAhqC,EAAAxK,KAGAxB,KAAAg6F,cAAAjmD,YAGAwN,eAAA,WACA,OAAAvhD,KAAAg6F,eAEA1zD,cAAAziC,EAAApD,SAAA,IAAwCi5F,EAAA31C,EAAA,QAAAg2C,IAAA,OAGxCv1F,EAAAwqF,yBAAA7e,EAAA,OAAAtsE,EAAAjC,MAAAk4F,EAAA3pB,sBC/FA,IAAAtsE,EAAaH,EAAQ,KAErBsiC,EAAYtiC,EAAQ,KAqBpB9E,EAAAiF,EAAAjF,KACAgD,EAAAiC,EAAAjC,MAgNA,SAAAs4F,EAAAC,EAAAC,GACA,cAAAD,GAAAt2F,EAAAvF,QAAA67F,IAAAt2F,EAAAhD,QAAAs5F,EAAAC,IAAA,GAAAD,IAAAC,EAiDA,SAAAC,EAAAn2C,GACA,IAAAkgC,GAAAlgC,EAAAz5C,QAAA5B,aAAA,oBAA6Eu7E,iBAC7E,OAAAA,KAAAkW,SAAAC,EAAAr2C,IAQA,SAAAs2C,EAAAjoB,GACA,QAAAA,EAAApyE,IAAA,eAQA,SAAAo6F,EAAA9pF,GACA,OAAAA,EAAAlR,KAAA,KAAAkR,EAAAxJ,GAGA5G,EAAAgkF,QAtRA,SAAA55E,EAAAtC,GACA,IAAAhL,EAAA,CAcAm9F,SAAA,GACAG,gBAAA,EAMArW,iBAAA,GACAsW,YAAA,IAKA,OAGA,SAAAv9F,EAAAsN,EAAAtC,GACA,IAAAwyF,EAAAlwF,EAAA5B,aAAA,WACA+xF,EAAAnwF,EAAA5B,aAAA,eAEAgyF,EAAAD,EAAAz6F,IAAA,eACA26F,EAAA,GAEAl8F,EAAAuJ,EAAAI,uBAAA,SAAAqC,GAEA,GAAAA,EAAAmwF,mBAAA,CAIA,IAAAC,EAAAT,EAAA3vF,EAAA6F,OACAwqF,EAAA99F,EAAAinF,iBAAA4W,GAAA,GACA79F,EAAAu9F,YAAAM,GAAApwF,EAGA,IAAAswF,EAAAtwF,EAAA6F,MACA0qF,EAAAD,EAAA1uF,SAAA,UAAAmuF,GAIA,GAHA/7F,EAAAgM,EAAAwwF,UAAAx5F,EAAAy5F,GAAA,SAGAzwF,EAAA0wF,gBAAAX,GAEAQ,EAAAh7F,IAAA,SAGA,IAAAo7F,EAAA,SAAAJ,EAAAh7F,IAAA,WACAq7F,EAAA,UAAAL,EAAAh7F,IAAA,oBACAs7F,EAAA7wF,EAAA0wF,eAAAH,EAAAh7F,IAAA,sBAEAo7F,GAAAC,IACA58F,EAAA68F,EAAAC,SAAA95F,EAAAy5F,GAAAG,GAAA,QAAAD,IAGAC,GACA58F,EAAA68F,EAAAE,UAAA/5F,EAAAy5F,EAAA,cAMA,SAAAA,EAAAO,EAAAC,EAAAl6C,GACA,IAAA4wB,EAAA5wB,EAAAlxC,MAAAjE,SAAA,cAAAouF,GACAkB,EAAAvpB,EAAApyE,IAAA,QAEA,GAAA27F,IAAA,SAAAA,GAAAF,GAAApB,EAAAjoB,IAAA,CAIA,MAAAspB,IACAA,EAAAtpB,EAAApyE,IAAA,mBAIA,IAAA47F,GADAxpB,EAAAqpB,EAgCA,SAAAj6C,EAAAw5C,EAAAP,EAAAnwF,EAAAmxF,EAAAC,GACA,IAAAG,EAAAb,EAAA3uF,SAAA,eACAyvF,EAAA,GACAr9F,EAAA,6HAAAs9F,GACAD,EAAAC,GAAAr4F,EAAA5G,MAAA++F,EAAA77F,IAAA+7F,MAKAD,EAAAF,KAAA,aAAAp6C,EAAApiD,QAAAs8F,EAGA,UAAAG,EAAA77F,IAAA,UACA87F,EAAA18F,KAAA,QAGA,IAAA48F,EAAAF,EAAArkE,QAAAqkE,EAAArkE,MAAA,IAIA,GAFA,MAAAukE,EAAAnlE,OAAAmlE,EAAAnlE,MAAA,GAEA,UAAA4kE,EAAA,CAEA,IAAAQ,EAAAJ,EAAA77F,IAAA,cAIA,GAHAg8F,EAAAnlE,KAAA,MAAAolE,MAGAP,EAAA,CACA,IAAAzlE,EAAA6lE,EAAA9lE,UAAA6lE,EAAA77F,IAAA,cACAi2B,GAAAvyB,EAAArF,SAAA29F,EAAA/lE,EAAAxT,YAIA,OAAA++B,EAAAlxC,MAAAjE,SAAA,kBAAAw5B,EAAAi2D,EAAArB,EAAAnwF,IAhEA4xF,CAAA16C,EAAAw5C,EAAAP,EAAAnwF,EAAAmxF,EAAAC,GAAAtpB,GACApyE,IAAA,QACArC,EAAAy8F,EAAA54C,EAAAlxC,OACA6rF,EAAAT,GAAAE,GAAA,aAAAp6C,EAAApiD,KAEAg9F,EAAAp/F,EAAAm9F,SAAAx8F,GAAA,CACAA,MACA6jD,OACA/2C,WACA2nE,mBACAspB,iBACAS,gBACAP,OACAS,UAAAhC,EAAAjoB,GACAgiB,aAAA,IAEA0G,EAAAn9F,GAAAy+F,EACAp/F,EAAAs9F,gBAAA6B,EACA,IAAAG,EAwFA,SAAA5B,EAAAl5C,GAIA,IAHA,IAAAuC,EAAAvC,EAAAlxC,MACAu7B,EAAA2V,EAAA3V,IAEAzuC,EAAA,EAAiBA,EAAAs9F,EAAAp9F,OAAwBF,IAAA,CACzC,IAAAm/F,EAAA7B,EAAAt9F,IAAA,GAEA,GAAA28F,EAAAwC,EAAA1wD,EAAA,UAAAkY,EAAAj9C,KAAAizF,EAAAwC,EAAA1wD,EAAA,aAAAkY,EAAAtuC,iBAAAskF,EAAAwC,EAAA1wD,EAAA,YAAAkY,EAAA3jD,MACA,OAAAhD,GAhGAo/F,CAAA9B,EAAAl5C,GAEA,SAAA86C,EAAA,CACA,IAAAG,EAAA9B,EAAA2B,KAAA3B,EAAA2B,GAAA,CACAnC,SAAA,KAEAsC,EAAAtC,SAAAx8F,GAAAy+F,EACAK,EAAAC,OAAAhC,EAAA4B,GAAAI,OACAN,EAAAK,iBAvFAE,CAAA3/F,EAAAsN,EAAAtC,GAEAhL,EAAAs9F,gBA8HA,SAAAt9F,EAAAsN,GAEAA,EAAA+H,WAAA,SAAAzB,GAEA,IAAAnG,EAAAmG,EAAAL,iBACAqsF,EAAAhsF,EAAA5Q,IAAA,sBACA68F,EAAAjsF,EAAA5Q,IAAA,mBAEAyK,GAAA,SAAAmyF,IAAA,IAAAA,GAAA,SAAAA,IAAA,IAAAC,IAAA,IAAAjsF,EAAA5Q,IAAA,wBAIAvB,EAAAzB,EAAAinF,iBAAAmW,EAAA3vF,EAAA6F,QAAA,SAAA8rF,GACA,IAAA56C,EAAA46C,EAAA56C,KAEA/2C,EAAAqyF,QAAAt7C,EAAA3V,OAAA2V,IACA46C,EAAAhI,aAAA9yF,KAAAsP,GACA,MAAAwrF,EAAAW,kBAAAX,EAAAW,gBAAA,GACAX,EAAAW,iBAAAnsF,EAAAC,UAAAqc,YAGGrtB,MAnJHm9F,CAAAhgG,EAAAsN,GACAtN,GA2PAkD,EAAA0xE,SAtEA,SAAA7tB,GACA,IAAAq4C,EAAAlC,EAAAn2C,GAEA,GAAAq4C,EAAA,CAIA,IAAAhqB,EAAAgqB,EAAAhqB,iBACA51C,EAAA4/D,EAAA56C,KAAAhlB,MACA3wB,EAAAumE,EAAAvmE,OACAqP,EAAAk3D,EAAApyE,IAAA,UACAb,EAAAizE,EAAApyE,IAAA,SAEA,MAAAb,IACAA,EAAAq9B,EAAA3qB,MAAA1S,IAGA,IAAAk9F,EAAAhC,EAAAjoB,GAGA,MAAAl3D,IACArP,EAAAqP,OAAAmhF,EAAA,eAGA,IAAA7jD,EAAAhc,EAAAykB,YAAAzkD,QACAg8C,EAAA,GAAAA,EAAA,IAAAA,EAAAk6B,WAGA,MAAAvzE,GAEAA,EAAAq5C,EAAA,MAEAr5C,EAAAq5C,EAAA,IAGAr5C,EAAAq5C,EAAA,KACAr5C,EAAAq5C,EAAA,IAGA3sC,EAAA1M,QAEAk9F,IACAxwF,EAAAqP,OAAAkhF,EAAA56C,KAAAhlB,MAAAwnB,UAAA,iBA6BA9jD,EAAAg6F,cACAh6F,EAAAmyE,oBArBA,SAAAtuB,GACA,IAAAq4C,EAAAlC,EAAAn2C,GACA,OAAAq4C,KAAAhqB,kBAoBAlyE,EAAAk6F,2BCrTA,IAEAp3F,EAFYO,EAAQ,KAEpBP,cAmEAg1B,EAAA93B,QA5CA,SAAAmrE,GACA,OACA4xB,gBAAA,SAAA3yF,GAEA,IAAA4yF,EAAA,GACAC,EAAAn6F,IAKA,OAJAsH,EAAA+pF,iBAAAhpB,EAAA,SAAAz6D,GACAA,EAAAwsF,eAAAF,EACAC,EAAAp9F,IAAA6Q,EAAA2B,IAAA3B,KAEAusF,GAEAvzD,MAAA,SAAAh5B,EAAAtG,GACA,IAAA+yF,EAAAzsF,EAAA05B,aACAgzD,EAAA,GACAj8F,EAAAuP,EAAAC,UACAxP,EAAA5C,KAAA,SAAAqvB,GACA,IAAA+pB,EAAAx2C,EAAAs2C,YAAA7pB,GACAwvE,EAAAzlD,GAAA/pB,IAEAuvE,EAAA5+F,KAAA,SAAAo5C,GACA,IAAA0lD,EAAAD,EAAAzlD,GAEA2lD,EAAA,MAAAD,GAAAl8F,EAAA4P,cAAAssF,EAAA,YAEA,GAAAC,EAYAH,EAAA/gD,cAAAzE,EAAA,QAAA2lD,OAZA,CAEA,IACAx9E,EADAq9E,EAAA1hD,aAAA9D,GACA73C,IAAA,oBAAA4Q,EAAA47B,oBAAA6wD,EAAAhxD,QAAAwL,MAAA,GAAAjnC,EAAAwsF,eAAAC,EAAAnwE,SAEAmwE,EAAA/gD,cAAAzE,EAAA,QAAA73B,GAEA,MAAAu9E,GACAl8F,EAAAi7C,cAAAihD,EAAA,QAAAv9E,0BC1Dczc,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBk6F,EAAUl6F,EAAQ,KAElBsb,EAAatb,EAAQ,KAErBy5B,EAAiBz5B,EAAQ,KA2BzB,SAAAm6F,EAAAC,EAAA31F,GACA,IAAA41F,EAAAD,EAAA39F,IAAA,kBAEA,SAAA49F,EAAA,CACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEA3wE,MAAA4wE,EAAA,KAAA5wE,MAAA4wE,EAAA,KAAA5wE,MAAA6wE,EAAA,KAAA7wE,MAAA6wE,EAAA,KACAj+F,KAAAk+F,gBAAAF,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAIA,IACAG,EADAp/E,EAAA/e,KAAAmf,kBAEAktE,EAAAyR,EAAA39F,IAAA,gBACA4+C,EAAA++C,EAAA39F,IAAA,cACAi+F,EAAAj2F,EAAAuE,WACA2xF,EAAAl2F,EAAAwE,YACA2xF,EAAAR,EAAA39F,IAAA,oBACAmf,EAAAP,EAAAtX,MAAAsX,EAAArX,OAAA42F,EACAC,GAAA,EAaA,GAXAlS,GAAAttC,IACAstC,EAAA,CAAAlvD,EAAA5Q,aAAA8/D,EAAA,GAAA+R,GAAAjhE,EAAA5Q,aAAA8/D,EAAA,GAAAgS,IACAt/C,EAAA5hB,EAAA5Q,aAAAwyB,EAAApwC,KAAAC,IAAAwvF,EAAAC,IAEAjxE,MAAAi/D,EAAA,KAAAj/D,MAAAi/D,EAAA,KAAAj/D,MAAA2xB,KACAw/C,GAAA,IAMAA,EAAA,CACA,IAAAC,EAAA,GAEAl/E,EAAA,GAEAk/E,EAAA/2F,MAAAs3C,EACAy/C,EAAA92F,OAAAq3C,EAAAz/B,IAEAk/E,EAAA92F,OAAAq3C,EACAy/C,EAAA/2F,MAAAs3C,EAAAz/B,GAGAk/E,EAAAvuF,EAAAo8E,EAAA,GAAAmS,EAAA92F,OAAA,EACA82F,EAAAxuF,EAAAq8E,EAAA,GAAAmS,EAAA/2F,MAAA,OAGA02F,EAAAL,EAAAW,sBAEAn/E,SACAk/E,EAAAx/E,EAAAya,cAAA0kE,EAAA,CACA12F,MAAA22F,EACA12F,OAAA22F,IAIAr+F,KAAA0+F,YAAAF,EAAAxuF,EAAAwuF,EAAAvuF,EAAAuuF,EAAA/2F,MAAA+2F,EAAA92F,QACA1H,KAAA2+F,UAAAb,EAAA39F,IAAA,WACAH,KAAA4+F,QAAAd,EAAA39F,IAAA,SASA,SAAA0+F,EAAAC,EAAAruF,GACA5M,EAAAjF,KAAA6R,EAAAtQ,IAAA,qBAAA4+F,EAAAx+F,GACAu+F,EAAAE,YAAAz+F,EAAAw+F,KAIA,IAAAE,EAAA,CAEA9iF,WAAAyhF,EAAA1hG,UAAAigB,WACAxK,OAAA,SAAAlH,EAAAtC,GACA,IAAA+2F,EAAA,GAEAz0F,EAAAuD,cAAA,eAAA8vF,EAAA7vE,GACA,IAAA1tB,EAAAu9F,EAAA39F,IAAA,OACAg/F,EAAA7pE,EAAApY,OAAA3c,GACAu+F,EAAA,IAAAlB,EAAAr9F,EAAA0tB,EAAA1tB,EAAA4+F,KAAAriF,QAAAqiF,KAAApiF,aAAA+gF,EAAA39F,IAAA,YACA2+F,EAAAM,UAAAtB,EAAA39F,IAAA,cACA++F,EAAAz9F,KAAAq9F,GACAD,EAAAC,EAAAhB,GACAA,EAAAptF,iBAAAouF,EACAA,EAAAruF,MAAAqtF,EAEAgB,EAAAr1F,OAAAo0F,EACAiB,EAAAr1F,OAAAq0F,EAAA31F,KAEAsC,EAAA+H,WAAA,SAAAzB,GAGA,WAFAA,EAAA5Q,IAAA,oBAEA,CACA,IAAAk/F,EAAAtuF,EAAA5Q,IAAA,eACA4Q,EAAAL,iBAAAwuF,EAAAG,MAIA,IAAAC,EAAA,GA0BA,OAzBA70F,EAAA+pF,iBAAA,eAAAzjF,GACA,IAAAA,EAAAwuF,kBAAA,CACA,IAAAC,EAAAzuF,EAAA0uF,aACAH,EAAAE,GAAAF,EAAAE,IAAA,GACAF,EAAAE,GAAA/9F,KAAAsP,MAGAlN,EAAAjF,KAAA0gG,EAAA,SAAAI,EAAAF,GACA,IAAAL,EAAA7pE,EAAApY,OAAAsiF,GACAG,EAAA97F,EAAAhH,IAAA6iG,EAAA,SAAAE,GACA,OAAAA,EAAAz/F,IAAA,aAEA2+F,EAAA,IAAAlB,EAAA4B,IAAAL,KAAAriF,QAAAqiF,KAAApiF,aAAAlZ,EAAApD,SAAAk/F,IACAb,EAAAM,UAAAv7F,EAAA5B,SAAA7C,MAAA,KAAAyE,EAAAhH,IAAA6iG,EAAA,SAAAE,GACA,OAAAA,EAAAz/F,IAAA,iBAEA++F,EAAAz9F,KAAAq9F,GAEAA,EAAAr1F,OAAAo0F,EACAiB,EAAAr1F,OAAAi2F,EAAA,GAAAv3F,GACAtE,EAAAjF,KAAA8gG,EAAA,SAAAE,GACAA,EAAAlvF,iBAAAouF,EACAD,EAAAC,EAAAc,OAGAV,GAUAW,iBAAA,SAAAC,EAAAjjF,EAAAg0E,GAEA,IAAAkP,GAAAD,GAAA,IAAAnjG,QACAk0F,KAAA,GACA,IAAAh0F,EAAAy4B,EAAApY,OAAAL,GACAC,EAAAjgB,KAAAigB,QAEA,IAAAA,EACA,OAAAgjF,EAMA,IAHA,IAAAE,EAAAn8F,EAAAV,gBACA6Z,EAAAF,EAAAE,SAEAzf,EAAA,EAAmBA,EAAAwiG,EAAAtiG,OAAuBF,IAC1CyiG,EAAA9/F,IAAA6/F,EAAAxiG,GAAAgD,KAAAw/F,EAAAxiG,IAGA,IAAAA,EAAA,EAAmBA,EAAAyf,EAAAvf,OAAqBF,IAAA,CACxC,IAAAgD,EAAAyc,EAAAzf,GAAAwrC,WAAAxoC,KAEAy/F,EAAA7/F,IAAAI,KACAswF,EAAA9yF,eAAAwC,KACAA,EAAAswF,EAAAtwF,IAGAw/F,EAAAt+F,KAAA,CACAlB,UAKA,OAAAw/F,IAGAzqE,EAAAzZ,yBAAA,MAAAojF,GACA,IAAA79D,EAAA69D,EACA9mE,EAAA93B,QAAA+gC,mBCvNA,IAAAv9B,EAAaH,EAAQ,KAErBO,EAAeP,EAAQ,KAEvBu8F,EAAgBv8F,EAAQ,KAExBw8F,EAAuBx8F,EAAQ,KA6B/B,SAAAy8F,EAAA/4F,GAIApH,KAAAogG,eAKApgG,KAAAqH,IAAAD,EAKApH,KAAAqgG,KAAA,GAEA,IAAArhG,EAAA6E,EAAA7E,KACAshG,EAAAthG,EAAAuhG,EAAAvgG,MACAwgG,EAAAxhG,EAAAyhG,EAAAzgG,MACA0gG,EAAA1hG,EAAA2hG,EAAA3gG,MACA4gG,EAAA5hG,EAAA6hG,EAAA7gG,MACA8gG,EAAA9hG,EAAA+hG,EAAA/gG,MACAiE,EAAA5G,KAAA2C,MAOAA,KAAAghG,kBAAA,SAAAZ,GACApgG,KAAAogG,kBAiBApgG,KAAAihG,OAAA,SAAAC,EAAAnpF,GAEA/X,KAAAmhG,UACAnhG,KAAAqgG,KAAAx8F,EAAArF,SAAAqF,EAAA5G,MAAA8a,IAAA,GAAuD,CACvDqpF,kBAAA,EACAC,iBAAA,EACAC,yBAAA,IAGA,MAAAJ,IACAA,GAAA,IAGA,IAAAA,GAAA,SAAAA,GAAA,QAAAA,IACA95F,EAAAwC,GAAA,YAAA02F,GACAl5F,EAAAwC,GAAA,YAAA42F,GACAp5F,EAAAwC,GAAA,UAAA82F,KAGA,IAAAQ,GAAA,UAAAA,GAAA,SAAAA,IACA95F,EAAAwC,GAAA,aAAAg3F,GACAx5F,EAAAwC,GAAA,QAAAk3F,KAIA9gG,KAAAmhG,QAAA,WACA/5F,EAAA+C,IAAA,YAAAm2F,GACAl5F,EAAA+C,IAAA,YAAAq2F,GACAp5F,EAAA+C,IAAA,UAAAu2F,GACAt5F,EAAA+C,IAAA,aAAAy2F,GACAx5F,EAAA+C,IAAA,QAAA22F,IAGA9gG,KAAA8V,QAAA9V,KAAAmhG,QAEAnhG,KAAAuhG,WAAA,WACA,OAAAvhG,KAAAwhG,WAGAxhG,KAAAyhG,WAAA,WACA,OAAAzhG,KAAA0hG,WAMA,SAAAnB,EAAA7nF,GACA,KAAAunF,EAAA/nC,aAAAx/C,MAAAza,QAAAya,EAAAza,OAAAogF,WAAA,CAIA,IAAAruE,EAAA0I,EAAAg+C,QACAzmD,EAAAyI,EAAAo+C,QAGA92D,KAAAogG,gBAAApgG,KAAAogG,eAAA1nF,EAAA1I,EAAAC,KACAjQ,KAAA2hG,GAAA3xF,EACAhQ,KAAA4hG,GAAA3xF,EACAjQ,KAAAwhG,WAAA,IAIA,SAAAf,EAAA/nF,GACA,IAAAunF,EAAA/nC,aAAAx/C,IAAAmpF,EAAA7hG,KAAA,kBAAA0Y,IAAA1Y,KAAAwhG,WAAA,UAAA9oF,EAAAopF,eAAA5B,EAAA6B,QAAA/hG,KAAAqH,IAAA,cAIA,IAAA2I,EAAA0I,EAAAg+C,QACAzmD,EAAAyI,EAAAo+C,QACAkrC,EAAAhiG,KAAA2hG,GACAM,EAAAjiG,KAAA4hG,GACAnnE,EAAAzqB,EAAAgyF,EACAtnE,EAAAzqB,EAAAgyF,EACAjiG,KAAA2hG,GAAA3xF,EACAhQ,KAAA4hG,GAAA3xF,EACAjQ,KAAAqgG,KAAAiB,yBAAArB,EAAAhpC,KAAAv+C,EAAA3D,OACA/U,KAAA+J,QAAA,MAAA0wB,EAAAC,EAAAsnE,EAAAC,EAAAjyF,EAAAC,IAGA,SAAA0wF,EAAAjoF,GACAunF,EAAA/nC,aAAAx/C,KACA1Y,KAAAwhG,WAAA,GAIA,SAAAX,EAAAnoF,GAEA,GAAAmpF,EAAA7hG,KAAA,mBAAA0Y,IAAA,IAAAA,EAAAi/C,WAAA,CAOA,IAAAuqC,EAAAxpF,EAAAi/C,WAAA,YACAsQ,EAAA5qE,KAAA2C,KAAA0Y,EAAAwpF,EAAAxpF,EAAAg+C,QAAAh+C,EAAAo+C,UAGA,SAAAiqC,EAAAroF,GACA,IAAAwnF,EAAA6B,QAAA/hG,KAAAqH,IAAA,cAIA,IAAA66F,EAAAxpF,EAAAypF,WAAA,YACAl6B,EAAA5qE,KAAA2C,KAAA0Y,EAAAwpF,EAAAxpF,EAAA0pF,OAAA1pF,EAAA2pF,SAGA,SAAAp6B,EAAAvvD,EAAAwpF,EAAAI,EAAAC,GACAviG,KAAAogG,gBAAApgG,KAAAogG,eAAA1nF,EAAA4pF,EAAAC,KAIAtC,EAAAhpC,KAAAv+C,EAAA3D,OACA/U,KAAA+J,QAAA,OAAAm4F,EAAAI,EAAAC,IAIA,SAAAV,EAAAW,EAAAphG,EAAAsX,GACA,IAAAs6E,EAAAwP,EAAAnC,KAAAj/F,GACA,OAAA4xF,KAAAnvF,EAAA/B,SAAAkxF,IAAAt6E,EAAA3D,MAAAi+E,EAAA,QA3EAnvF,EAAAvC,MAAA6+F,EAAAl8F,GA8EA,IAAAm9B,EAAA++D,EACAhoE,EAAA93B,QAAA+gC,mBC7MA,IAAAv9B,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBw5B,EAAkBx5B,EAAQ,KAE1B00B,EAAiB10B,EAAQ,KAEzB4Z,EAAa5Z,EAAQ,KAErB++F,EAAiB/+F,EAAQ,KAEzB6oE,EAAkB7oE,EAAQ,KA6C1B,SAAAg/F,EAAAC,EAAAz+C,EAAAquB,EAAApqE,EAAAy6F,GACA,IACAx5E,EAAAy5E,EADAtwB,EAAApyE,IAAA,SACA+jD,EAAAvC,KAAAuC,EAAAz5C,QAAA8nE,EAAApyE,IAAA,sBACA0sB,UAAA0lD,EAAApyE,IAAA,mBACAkxE,UAAAkB,EAAApyE,IAAA,qBAEAmpB,EAAAipD,EAAA/lE,SAAA,SACAs2F,EAAA1qE,EAAA31B,kBAAA6mB,EAAAnpB,IAAA,eACAilD,EAAA97B,EAAAE,UACAw5B,EAAA9lB,EAAA/d,gBAAAiK,EAAAg8B,GACAxlC,EAAAgjF,EAAAhjF,SACAnY,EAAAu7C,EAAAv7C,MAAAq7F,EAAA,GAAAA,EAAA,GACAp7F,EAAAs7C,EAAAt7C,OAAAo7F,EAAA,GAAAA,EAAA,GAEAC,EAAAH,EAAAG,MACA,UAAAA,IAAAnjF,EAAA,IAAAnY,GACA,WAAAs7F,IAAAnjF,EAAA,IAAAnY,EAAA,GACA,IAAAu7F,EAAAJ,EAAAI,cACA,WAAAA,IAAApjF,EAAA,IAAAlY,GACA,WAAAs7F,IAAApjF,EAAA,IAAAlY,EAAA,GAsCA,SAAAkY,EAAAnY,EAAAC,EAAAS,GACA,IAAAi2F,EAAAj2F,EAAAuE,WACA2xF,EAAAl2F,EAAAwE,YACAiT,EAAA,GAAAjR,KAAAC,IAAAgR,EAAA,GAAAnY,EAAA22F,GAAA32F,EACAmY,EAAA,GAAAjR,KAAAC,IAAAgR,EAAA,GAAAlY,EAAA22F,GAAA32F,EACAkY,EAAA,GAAAjR,KAAAG,IAAA8Q,EAAA,MACAA,EAAA,GAAAjR,KAAAG,IAAA8Q,EAAA,MA1CAqjF,CAAArjF,EAAAnY,EAAAC,EAAAS,GACA,IAAA+6F,EAAA55E,EAAAnpB,IAAA,mBAEA+iG,GAAA,SAAAA,IACAA,EAAAh/C,EAAA/jD,IAAA,6BAGAwiG,EAAA/qE,MAAA,CACApQ,MAAA,CACAxX,EAAA,EACAC,EAAA,EACAxI,QACAC,SACAk2C,EAAAt0B,EAAAnpB,IAAA,iBAEAyf,WAAAjjB,QAEAoT,MAAA,CACAqZ,OACAmgC,SAAAnE,EACAjkC,SAAAmI,EAAA2lD,eACA9rD,aAAA,SACA3C,KAAA0iF,EACA3iF,OAAA+I,EAAAnpB,IAAA,8BACA0f,UAAAyJ,EAAAnpB,IAAA,kBACA8+E,WAAA31D,EAAAnpB,IAAA,cACA++E,YAAA51D,EAAAnpB,IAAA,eACAg/E,cAAA71D,EAAAnpB,IAAA,iBACAi/E,cAAA91D,EAAAnpB,IAAA,kBAGAwhB,GAAA,IAwBA,SAAAkhF,EAAAvjG,EAAAqiD,EAAAl3C,EAAA04F,EAAAprF,GACAzY,EAAAqiD,EAAAhlB,MAAA3qB,MAAA1S,GACA,IAAA8pB,EAAAu4B,EAAAhlB,MAAAmmB,SAEAxjD,EAAA,CACAutB,UAAA9U,EAAA8U,YAEAwkD,EAAAt5D,EAAAs5D,UAEA,GAAAA,EAAA,CACA,IAAAl5D,EAAA,CACA7Y,MAAAmjG,EAAA7/C,gBAAAjB,EAAAriD,GACA8jG,WAAA,IAEAv/F,EAAAjF,KAAAukG,EAAA,SAAAE,GACA,IAAAlqF,EAAA1O,EAAA4N,iBAAAgrF,EAAAjrF,aACAjH,EAAAkyF,EAAApyF,gBACAqyF,EAAAnqF,KAAAP,cAAAzH,GACAmyF,GAAAnrF,EAAAirF,WAAA3hG,KAAA6hG,KAGAz/F,EAAA/B,SAAAuvE,GACAjoD,EAAAioD,EAAApuE,QAAA,UAAuCmmB,GAClCvlB,EAAAhC,WAAAwvE,KACLjoD,EAAAioD,EAAAl5D,IAIA,OAAAiR,EAWA,SAAAm6E,EAAA5hD,EAAAriD,EAAAkkG,GACA,IAAA38E,EAAAvJ,EAAA3L,SAGA,OAFA2L,EAAAuxB,OAAAhoB,IAAA28E,EAAAt4E,UACA5N,EAAAkjB,UAAA3Z,IAAA28E,EAAA5jF,UACAhb,EAAA4a,eAAA,CAAAmiC,EAAAghB,YAAArjE,IAAAkkG,EAAAh3B,aAAA,IAAAg3B,EAAA72B,gBAAA,IAAA62B,EAAAl1B,aAAA,IAAAznD,GAyDAxmB,EAAAojG,aApMA,SAAAlxB,GACA,IAEAxiE,EAFA2zF,EAAAnxB,EAAApyE,IAAA,QACAwjG,EAAApxB,EAAA/lE,SAAAk3F,EAAA,SAWA,MARA,SAAAA,GACA3zF,EAAA4zF,EAAAt2B,gBACA7sD,KAAA,KACG,WAAAkjF,KACH3zF,EAAA4zF,EAAAC,gBACArjF,OAAA,MAGAxQ,GAwLA1P,EAAAqiG,qBACAriG,EAAAwiG,gBACAxiG,EAAAkjG,yBACAljG,EAAAwjG,kCA1DA,SAAAvkG,EAAAqjG,EAAAa,EAAAt/C,EAAAquB,EAAApqE,GACA,IAAA27F,EAAAv3B,EAAAkC,gBAAA+0B,EAAAt4E,SAAA,EAAAs4E,EAAA72B,gBACA62B,EAAAl1B,YAAAiE,EAAApyE,IAAA,gBACAuiG,EAAAC,EAAAz+C,EAAAquB,EAAApqE,EAAA,CACAyX,SAAA2jF,EAAAr/C,EAAAvC,KAAAriD,EAAAkkG,GACAT,MAAAe,EAAAj/E,UACAm+E,cAAAc,EAAAh/E,qBAqDAzkB,EAAA0jG,cA3CA,SAAAplC,EAAAC,EAAAolC,GAEA,OACAv8E,GAAAk3C,EAFAqlC,KAAA,GAGAr8E,GAAAg3C,EAAA,EAAAqlC,GACAt8E,GAAAk3C,EAAAolC,GACAp8E,GAAAg3C,EAAA,EAAAolC,KAsCA3jG,EAAA4jG,cA5BA,SAAAC,EAAAC,EAAAH,GAEA,OACAh0F,EAAAk0F,EAFAF,KAAA,GAGA/zF,EAAAi0F,EAAA,EAAAF,GACAv8F,MAAA08F,EAAAH,GACAt8F,OAAAy8F,EAAA,EAAAH,KAuBA3jG,EAAA+jG,gBAnBA,SAAA/mD,EAAAC,EAAA+mD,EAAAzmD,EAAA08B,EAAAC,GACA,OACAl9B,KACAC,KACA+mD,KACAzmD,IACA08B,aACAC,WACA+pB,WAAA,qBCrOA,IAAAzgG,EAAaH,EAAQ,KAErBmwE,EAAoBnwE,EAAQ,KAyB5B9E,EAAAiF,EAAAjF,KAEA,SAAA2lG,EAAA1lG,GACA,GAAAA,EACA,QAAA0B,KAAA1B,EACA,GAAAA,EAAAd,eAAAwC,GACA,SAqLAF,EAAAmkG,qBAxKA,SAAAx4F,EAAAy4F,EAAAC,GACA,IAAAC,EAAA,GAuBA,OAtBA/lG,EAAA6lG,EAAA,SAAAhqC,GACA,IAAAmqC,EAAAD,EAAAlqC,GAuBA,WACA,IAAAoqC,EAAA,aAMA,OAFAA,EAAA3oG,UAAA4oG,SAAAD,EAAA3oG,UACA,IAAA2oG,EA7BAE,GACAnmG,EAAAoN,EAAAyuD,GAAA,SAAAuqC,EAAAn0F,GACA,GAAAgjE,EAAAsD,YAAAtmE,GAAA,CAIA,IAAAo0F,EAAA,CACA1lG,KAAAsR,EACAorC,OAAA+oD,GAEAN,KAAAO,EAAAxqC,GACAmqC,EAAA/zF,GAAA,IAAAgjE,EAAAoxB,GAGA,YAAAp0F,KACAo0F,EAAAphG,EAAA5G,MAAAgoG,IACA1lG,KAAA,aACAqlG,EAAAE,SAAAI,kBAAA,IAAArxB,EAAAoxB,SAIAN,GAiJAtkG,EAAA8kG,oBA9HA,SAAApxB,EAAAh5C,EAAAqqE,GAKA,IAAAz0E,EACA9sB,EAAAjF,KAAAwmG,EAAA,SAAAtnG,GACAi9B,EAAAh9B,eAAAD,IAAAymG,EAAAxpE,EAAAj9B,MACA6yB,GAAA,KAGAA,GAAA9sB,EAAAjF,KAAAwmG,EAAA,SAAAtnG,GACAi9B,EAAAh9B,eAAAD,IAAAymG,EAAAxpE,EAAAj9B,IACAi2E,EAAAj2E,GAAA+F,EAAA5G,MAAA89B,EAAAj9B,WAEAi2E,EAAAj2E,MAgHAuC,EAAA+zE,YAjGA,SAAAqwB,EAAAE,EAAAnjG,EAAA6jG,EAAAz4D,EAAAsO,GACA,IAKA/pC,EALAm0F,EAAA,GAOA,SAAA10F,EAAA9S,GACA,OAAA0D,EAAA4P,cAAAD,EAAArT,GAGA,SAAAo+C,EAAAp+C,EAAAwB,GACAkC,EAAAi7C,cAAAtrC,EAAArT,EAAAwB,GASA,SAAAimG,EAAAC,EAAAz8F,GACAoI,EAAA,MAAA+pC,EAAAsqD,EAAAz8F,EACA,IAAA08F,EAAAjkG,EAAAo4C,eAAAzoC,GAEA,IAAAs0F,IAAA,IAAAA,EAAA9vE,UAQA,IAJA,IAAA+vE,EAAAL,EAAAhoG,KAAAuvC,EAAA44D,GACAZ,EAAAD,EAAAe,GACAzuB,EAAAquB,EAAAI,GAEAnoG,EAAA,EAAAC,EAAAy5E,EAAAx5E,OAA6CF,EAAAC,EAASD,IAAA,CACtD,IAAAgC,EAAA03E,EAAA15E,GACAqnG,EAAArlG,IAAAqlG,EAAArlG,GAAA60E,YAAAoxB,EAAA50F,EAAAsrC,IAlCAr4C,EAAAjF,KAAA6lG,EAAA,SAAAhqC,GACA,IAAAwc,EAAApD,EAAA+D,mBAAA+sB,EAAAlqC,IACA6qC,EAAA7qC,GAAAwc,IAYA,MAAA/7B,EACA15C,EAAA5C,KAAA2mG,GAEA/jG,EAAA5C,KAAA,CAAAs8C,GAAAqqD,IA+EAllG,EAAAslG,uBAjDA,SAAAlB,EAAAE,EAAAU,EAAAr5D,GACA,IAAAs5D,EAAA,GAwCA,OAvCAzhG,EAAAjF,KAAA6lG,EAAA,SAAAhqC,GACA,IAAAwc,EAAApD,EAAA+D,mBAAA+sB,EAAAlqC,IACA6qC,EAAA7qC,GAAAwc,IAqCA,CACApc,SAnCA,SAAA1iD,EAAA3W,GAKA,SAAAoP,EAAA9S,GACA,OAAA0D,EAAA4P,cAAAD,EAAArT,GAGA,SAAAo+C,EAAAp+C,EAAAwB,GACAkC,EAAAi7C,cAAAtrC,EAAArT,EAAAwB,GAGA,IAAA6R,EAEA,IAdA,MAAA66B,IACAA,EAAAxqC,EAAAuzC,aAAA/I,IAaA,OAAA76B,EAAAgH,EAAA+oD,SAAA,CACA,IAAAukC,EAAAjkG,EAAAo4C,eAAAzoC,GAEA,GAAAs0F,IAAA,IAAAA,EAAA9vE,UACA,OAQA,IALA,IAAAr2B,EAAA,MAAA0sC,EAAAxqC,EAAArB,IAAA6rC,EAAA76B,GAAA,GAAAA,EACAu0F,EAAAL,EAAA/lG,GACAslG,EAAAD,EAAAe,GACAzuB,EAAAquB,EAAAI,GAEAnoG,EAAA,EAAAC,EAAAy5E,EAAAx5E,OAA+CF,EAAAC,EAASD,IAAA,CACxD,IAAAgC,EAAA03E,EAAA15E,GACAqnG,EAAArlG,IAAAqlG,EAAArlG,GAAA60E,YAAA90E,EAAAsR,EAAAsrC,4GC1LA,IAAA0pD,EAAeliG,EAAQ,MAEvB,WACA,QAAA5F,KAAA8nG,EAAA,CACA,SAAAA,MAAA7nG,eAAAD,IAAA,YAAAA,GAAA,eAAAA,EAAA,OACAuC,EAAAvC,GAAA8nG,EAAA9nG,IAHA,GAOA,IAAA+nG,EAAcniG,EAAQ,MAEtB,WACA,QAAA5F,KAAA+nG,EAAA,CACA,SAAAA,MAAA9nG,eAAAD,IAAA,YAAAA,GAAA,eAAAA,EAAA,OACAuC,EAAAvC,GAAA+nG,EAAA/nG,IAHA,GAOA4F,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,uBC1HR,IAAA4Z,EAAa5Z,EAAQ,KAErB6Z,EAAa7Z,EAAQ,KAQrBoiG,EAAAxoF,EAAAyM,SACAi0C,EAAA,KAEA,SAAAQ,EAAA97D,GACA,OAAAA,EAAAs7D,GAAAt7D,GAAAs7D,EAQA,IAAAvgD,EAAA,SAAA1W,IACAA,KAAA,IAEA6Y,WAMA5f,KAAA4f,SAAA,OAGA,MAAA7Y,EAAAmkB,WAMAlrB,KAAAkrB,SAAA,GAGAnkB,EAAA41B,QAMA38B,KAAA28B,MAAA,OASA38B,KAAAk9E,OAAAl9E,KAAAk9E,QAAA,MAGA6oB,EAAAtoF,EAAAvhB,UACA6pG,EAAAl/E,UAAA,KAMAk/E,EAAAxrE,mBAAA,WACA,OAAAikC,EAAAx+D,KAAAkrB,WAAAszC,EAAAx+D,KAAA4f,SAAA,KAAA4+C,EAAAx+D,KAAA4f,SAAA,KAAA4+C,EAAAx+D,KAAA28B,MAAA,OAAA6hC,EAAAx+D,KAAA28B,MAAA,OAGAopE,EAAA5zF,gBAAA,WACA,IAAAnJ,EAAAhJ,KAAAgJ,OACAg9F,EAAAh9F,KAAA6d,UACA0T,EAAAv6B,KAAAu6B,qBACA9a,EAAAzf,KAAA6mB,UAEA0T,GAAAyrE,GAKAvmF,KAAAnC,EAAA3L,SAEA4oB,EACAv6B,KAAA+mB,kBAAAtH,GAEAqmF,EAAArmF,GAIAumF,IACAzrE,EACAjd,EAAA0M,IAAAvK,EAAAzW,EAAA6d,UAAApH,GAEAnC,EAAAoe,KAAAjc,EAAAzW,EAAA6d,YAKA7mB,KAAA6mB,UAAApH,EACAzf,KAAAimG,aAAAjmG,KAAAimG,cAAA3oF,EAAA3L,SACA2L,EAAAwJ,OAAA9mB,KAAAimG,aAAAxmF,IAxBAA,GAAAqmF,EAAArmF,IA2BAsmF,EAAAh/E,kBAAA,SAAAtH,GACA,OAAAhC,EAAAsJ,kBAAA/mB,KAAAyf,IAQAsmF,EAAAzjE,aAAA,SAAAT,GACA,IAAApiB,EAAAzf,KAAA6mB,UACA/Z,EAAA+0B,EAAA/0B,KAAA,EAEA2S,EACAoiB,EAAAS,aAAAx1B,EAAA2S,EAAA,GAAA3S,EAAA2S,EAAA,GAAA3S,EAAA2S,EAAA,GAAA3S,EAAA2S,EAAA,GAAA3S,EAAA2S,EAAA,GAAA3S,EAAA2S,EAAA,IAEAoiB,EAAAS,aAAAx1B,EAAA,IAAAA,EAAA,MAIAi5F,EAAAxiE,iBAAA,SAAA1B,GACA,IAAA/0B,EAAA+0B,EAAA/0B,KAAA,EACA+0B,EAAAS,aAAAx1B,EAAA,IAAAA,EAAA,MAGA,IAAAo5F,EAAA,GAKAH,EAAA32B,mBAAA,WACA,GAAApvE,KAAA6mB,UAAA,CAIA,IAAA7d,EAAAhJ,KAAAgJ,OACAyW,EAAAzf,KAAA6mB,UAEA7d,KAAA6d,YAEAvJ,EAAA0M,IAAAk8E,EAAAl9F,EAAAi9F,aAAAxmF,GACAA,EAAAymF,GAGA,IAAA5lE,EAAA7gB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA8gB,EAAA9gB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAG,EAAA5f,KAAA4f,SACA+c,EAAA38B,KAAA28B,MAEA6hC,EAAAl+B,EAAA,KACAA,EAAA3xB,KAAAmtB,KAAAwE,IAGAk+B,EAAAj+B,EAAA,KACAA,EAAA5xB,KAAAmtB,KAAAyE,IAGA9gB,EAAA,OACA6gB,MAGA7gB,EAAA,OACA8gB,MAGA3gB,EAAA,GAAAH,EAAA,GACAG,EAAA,GAAAH,EAAA,GACAkd,EAAA,GAAA2D,EACA3D,EAAA,GAAA4D,EACAvgC,KAAAkrB,SAAAvc,KAAAw3F,OAAA1mF,EAAA,GAAA8gB,EAAA9gB,EAAA,GAAA6gB,KAQAylE,EAAA9iE,eAAA,WACA,IAAAxjB,EAAAzf,KAAA6mB,UAEA,IAAApH,EACA,YAGA,IAAA6gB,EAAA3xB,KAAAmtB,KAAArc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA8gB,EAAA5xB,KAAAmtB,KAAArc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAUA,OARAA,EAAA,OACA6gB,MAGA7gB,EAAA,OACA8gB,MAGA,CAAAD,EAAAC,IAWAwlE,EAAA3hE,sBAAA,SAAAp0B,EAAAC,GACA,IAAAksB,EAAA,CAAAnsB,EAAAC,GACAg2F,EAAAjmG,KAAAimG,aAMA,OAJAA,GACA1oF,EAAAiC,eAAA2c,IAAA8pE,GAGA9pE,GAWA4pE,EAAAK,uBAAA,SAAAp2F,EAAAC,GACA,IAAAksB,EAAA,CAAAnsB,EAAAC,GACA4W,EAAA7mB,KAAA6mB,UAMA,OAJAA,GACAtJ,EAAAiC,eAAA2c,IAAAtV,GAGAsV,GAYA1e,EAAAsJ,kBAAA,SAAA9oB,EAAAwhB,GAEAqmF,EADArmF,KAAA,IAEA,IAAAy9D,EAAAj/E,EAAAi/E,OACAvgD,EAAA1+B,EAAA0+B,OAAA,MACAzR,EAAAjtB,EAAAitB,UAAA,EACAtL,EAAA3hB,EAAA2hB,UAAA,MAsBA,OApBAs9D,IAEAz9D,EAAA,IAAAy9D,EAAA,GACAz9D,EAAA,IAAAy9D,EAAA,IAGA5/D,EAAAqf,MAAAld,IAAAkd,GAEAzR,GACA5N,EAAAuxB,OAAApvB,IAAAyL,GAGAgyD,IAEAz9D,EAAA,IAAAy9D,EAAA,GACAz9D,EAAA,IAAAy9D,EAAA,IAGAz9D,EAAA,IAAAG,EAAA,GACAH,EAAA,IAAAG,EAAA,GACAH,GAGA,IAAA2hB,EAAA3jB,EACA0a,EAAA93B,QAAA+gC,iBC1RA,IAAAilE,EAAA,GACAC,EAAA,EAcA,SAAAC,EAAAzlG,EAAA0lG,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAA,EAEA,GAAAG,IAAAF,EACA,SAGA,GAAAC,EAAA5lG,EAAA6lG,KAAA7lG,EAAA0lG,IAAA,GACA,KAAAG,EAAAF,GAAAC,EAAA5lG,EAAA6lG,GAAA7lG,EAAA6lG,EAAA,OACAA,KAaA,SAAA7lG,EAAA0lG,EAAAC,GACAA,IAEA,KAAAD,EAAAC,GAAA,CACA,IAAAxpE,EAAAn8B,EAAA0lG,GACA1lG,EAAA0lG,KAAA1lG,EAAA2lG,GACA3lG,EAAA2lG,KAAAxpE,GAhBA2pE,CAAA9lG,EAAA0lG,EAAAG,QAEA,KAAAA,EAAAF,GAAAC,EAAA5lG,EAAA6lG,GAAA7lG,EAAA6lG,EAAA,QACAA,IAIA,OAAAA,EAAAH,EAaA,SAAAK,EAAA/lG,EAAA0lG,EAAAC,EAAAxwD,EAAAywD,GAKA,IAJAzwD,IAAAuwD,GACAvwD,IAGQA,EAAAwwD,EAAYxwD,IAAA,CAMpB,IALA,IAGAmD,EAHA0tD,EAAAhmG,EAAAm1C,GACAjnC,EAAAw3F,EACAr3F,EAAA8mC,EAGAjnC,EAAAG,GAGAu3F,EAAAI,EAAAhmG,EAFAs4C,EAAApqC,EAAAG,IAAA,IAEA,EACAA,EAAAiqC,EAEApqC,EAAAoqC,EAAA,EAIA,IAAAimB,EAAAppB,EAAAjnC,EAEA,OAAAqwD,GACA,OACAv+D,EAAAkO,EAAA,GAAAlO,EAAAkO,EAAA,GAEA,OACAlO,EAAAkO,EAAA,GAAAlO,EAAAkO,EAAA,GAEA,OACAlO,EAAAkO,EAAA,GAAAlO,EAAAkO,GACA,MAEA,QACA,KAAAqwD,EAAA,GACAv+D,EAAAkO,EAAAqwD,GAAAv+D,EAAAkO,EAAAqwD,EAAA,GACAA,IAKAv+D,EAAAkO,GAAA83F,GAIA,SAAAC,EAAAznG,EAAAwB,EAAAm1C,EAAAx4C,EAAAupG,EAAAN,GACA,IAAAO,EAAA,EACAC,EAAA,EACA1jG,EAAA,EAEA,GAAAkjG,EAAApnG,EAAAwB,EAAAm1C,EAAA+wD,IAAA,GAGA,IAFAE,EAAAzpG,EAAAupG,EAEAxjG,EAAA0jG,GAAAR,EAAApnG,EAAAwB,EAAAm1C,EAAA+wD,EAAAxjG,IAAA,GACAyjG,EAAAzjG,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA0jG,GAIA1jG,EAAA0jG,IACA1jG,EAAA0jG,GAGAD,GAAAD,EACAxjG,GAAAwjG,MACG,CAGH,IAFAE,EAAAF,EAAA,EAEAxjG,EAAA0jG,GAAAR,EAAApnG,EAAAwB,EAAAm1C,EAAA+wD,EAAAxjG,KAAA,GACAyjG,EAAAzjG,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA0jG,GAIA1jG,EAAA0jG,IACA1jG,EAAA0jG,GAGA,IAAAjnC,EAAAgnC,EACAA,EAAAD,EAAAxjG,EACAA,EAAAwjG,EAAA/mC,EAKA,IAFAgnC,IAEAA,EAAAzjG,GAAA,CACA,IAAAic,EAAAwnF,GAAAzjG,EAAAyjG,IAAA,GAEAP,EAAApnG,EAAAwB,EAAAm1C,EAAAx2B,IAAA,EACAwnF,EAAAxnF,EAAA,EAEAjc,EAAAic,EAIA,OAAAjc,EAGA,SAAA2jG,EAAA7nG,EAAAwB,EAAAm1C,EAAAx4C,EAAAupG,EAAAN,GACA,IAAAO,EAAA,EACAC,EAAA,EACA1jG,EAAA,EAEA,GAAAkjG,EAAApnG,EAAAwB,EAAAm1C,EAAA+wD,IAAA,GAGA,IAFAE,EAAAF,EAAA,EAEAxjG,EAAA0jG,GAAAR,EAAApnG,EAAAwB,EAAAm1C,EAAA+wD,EAAAxjG,IAAA,GACAyjG,EAAAzjG,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA0jG,GAIA1jG,EAAA0jG,IACA1jG,EAAA0jG,GAGA,IAAAjnC,EAAAgnC,EACAA,EAAAD,EAAAxjG,EACAA,EAAAwjG,EAAA/mC,MACG,CAGH,IAFAinC,EAAAzpG,EAAAupG,EAEAxjG,EAAA0jG,GAAAR,EAAApnG,EAAAwB,EAAAm1C,EAAA+wD,EAAAxjG,KAAA,GACAyjG,EAAAzjG,GACAA,EAAA,GAAAA,GAAA,KAEA,IACAA,EAAA0jG,GAIA1jG,EAAA0jG,IACA1jG,EAAA0jG,GAGAD,GAAAD,EACAxjG,GAAAwjG,EAKA,IAFAC,IAEAA,EAAAzjG,GAAA,CACA,IAAAic,EAAAwnF,GAAAzjG,EAAAyjG,IAAA,GAEAP,EAAApnG,EAAAwB,EAAAm1C,EAAAx2B,IAAA,EACAjc,EAAAic,EAEAwnF,EAAAxnF,EAAA,EAIA,OAAAjc,EAGA,SAAA4jG,EAAAtmG,EAAA4lG,GACA,IACAjpG,EAGA4pG,EACAC,EALAC,EAAAjB,EAMAkB,EAAA,EACA/pG,EAAAqD,EAAArD,OAMA,IAAAwiE,EAAA,GAuCA,SAAAwnC,EAAAlqG,GACA,IAAAmqG,EAAAL,EAAA9pG,GACAoqG,EAAAL,EAAA/pG,GACAqqG,EAAAP,EAAA9pG,EAAA,GACAsqG,EAAAP,EAAA/pG,EAAA,GACA+pG,EAAA/pG,GAAAoqG,EAAAE,EAEAtqG,IAAAiqG,EAAA,IACAH,EAAA9pG,EAAA,GAAA8pG,EAAA9pG,EAAA,GACA+pG,EAAA/pG,EAAA,GAAA+pG,EAAA/pG,EAAA,IAGAiqG,IACA,IAAAvoE,EAAAkoE,EAAArmG,EAAA8mG,GAAA9mG,EAAA4mG,EAAAC,EAAA,EAAAjB,GACAgB,GAAAzoE,EAGA,KAFA0oE,GAAA1oE,IAQA,KAFA4oE,EAAAd,EAAAjmG,EAAA4mG,EAAAC,EAAA,GAAA7mG,EAAA8mG,EAAAC,IAAA,EAAAnB,MAMAiB,GAAAE,EAOA,SAAAH,EAAAC,EAAAC,EAAAC,GACA,IAAAtqG,EAAA,EAEA,IAAAA,EAAA,EAAeA,EAAAoqG,EAAapqG,IAC5B0iE,EAAA1iE,GAAAuD,EAAA4mG,EAAAnqG,GAGA,IAAAuqG,EAAA,EACAC,EAAAH,EACAI,EAAAN,EAGA,GAFA5mG,EAAAknG,KAAAlnG,EAAAinG,KAEA,MAAAF,EAAA,CACA,IAAAtqG,EAAA,EAAiBA,EAAAoqG,EAAapqG,IAC9BuD,EAAAknG,EAAAzqG,GAAA0iE,EAAA6nC,EAAAvqG,GAGA,OAGA,OAAAoqG,EAAA,CACA,IAAApqG,EAAA,EAAiBA,EAAAsqG,EAAatqG,IAC9BuD,EAAAknG,EAAAzqG,GAAAuD,EAAAinG,EAAAxqG,GAIA,YADAuD,EAAAknG,EAAAH,GAAA5nC,EAAA6nC,IAIA,IACAG,EAAAC,EAAAC,EADAC,EAAAb,EAGA,QACAU,EAAA,EACAC,EAAA,EACAC,GAAA,EAEA,GACA,GAAAzB,EAAA5lG,EAAAinG,GAAA9nC,EAAA6nC,IAAA,GAKA,GAJAhnG,EAAAknG,KAAAlnG,EAAAinG,KACAG,IACAD,EAAA,EAEA,MAAAJ,EAAA,CACAM,GAAA,EACA,YAOA,GAJArnG,EAAAknG,KAAA/nC,EAAA6nC,KACAG,IACAC,EAAA,EAEA,MAAAP,EAAA,CACAQ,GAAA,EACA,cAGOF,EAAAC,GAAAE,GAEP,GAAAD,EACA,MAGA,GAGA,QAFAF,EAAAd,EAAArmG,EAAAinG,GAAA9nC,EAAA6nC,EAAAH,EAAA,EAAAjB,IAEA,CACA,IAAAnpG,EAAA,EAAqBA,EAAA0qG,EAAY1qG,IACjCuD,EAAAknG,EAAAzqG,GAAA0iE,EAAA6nC,EAAAvqG,GAOA,GAJAyqG,GAAAC,EACAH,GAAAG,GACAN,GAAAM,IAEA,GACAE,GAAA,EACA,OAMA,GAFArnG,EAAAknG,KAAAlnG,EAAAinG,KAEA,MAAAF,EAAA,CACAM,GAAA,EACA,MAKA,QAFAD,EAAAnB,EAAA9mC,EAAA6nC,GAAAhnG,EAAAinG,EAAAF,EAAA,EAAAnB,IAEA,CACA,IAAAnpG,EAAA,EAAqBA,EAAA2qG,EAAY3qG,IACjCuD,EAAAknG,EAAAzqG,GAAAuD,EAAAinG,EAAAxqG,GAOA,GAJAyqG,GAAAE,EACAH,GAAAG,EAGA,KAFAL,GAAAK,GAEA,CACAC,GAAA,EACA,OAMA,GAFArnG,EAAAknG,KAAA/nC,EAAA6nC,KAEA,MAAAH,EAAA,CACAQ,GAAA,EACA,MAGAC,UACOH,GAAA3B,GAAA4B,GAAA5B,GAEP,GAAA6B,EACA,MAGAC,EAAA,IACAA,EAAA,GAGAA,GAAA,EAMA,IAHAb,EAAAa,GACA,IAAAb,EAAA,GAEA,IAAAI,EAAA,CACA,IAAApqG,EAAA,EAAiBA,EAAAsqG,EAAatqG,IAC9BuD,EAAAknG,EAAAzqG,GAAAuD,EAAAinG,EAAAxqG,GAGAuD,EAAAknG,EAAAH,GAAA5nC,EAAA6nC,OACK,QAAAH,EACL,UAAA7kG,MAEA,IAAAvF,EAAA,EAAiBA,EAAAoqG,EAAapqG,IAC9BuD,EAAAknG,EAAAzqG,GAAA0iE,EAAA6nC,EAAAvqG,IAjJA8qG,CAAAX,EAAAC,EAAAC,EAAAC,GAsJA,SAAAH,EAAAC,EAAAC,EAAAC,GACA,IAAAtqG,EAAA,EAEA,IAAAA,EAAA,EAAeA,EAAAsqG,EAAatqG,IAC5B0iE,EAAA1iE,GAAAuD,EAAA8mG,EAAArqG,GAGA,IAAAuqG,EAAAJ,EAAAC,EAAA,EACAI,EAAAF,EAAA,EACAG,EAAAJ,EAAAC,EAAA,EACAS,EAAA,EACAC,EAAA,EAGA,GAFAznG,EAAAknG,KAAAlnG,EAAAgnG,KAEA,MAAAH,EAAA,CAGA,IAFAW,EAAAN,GAAAH,EAAA,GAEAtqG,EAAA,EAAiBA,EAAAsqG,EAAatqG,IAC9BuD,EAAAwnG,EAAA/qG,GAAA0iE,EAAA1iE,GAGA,OAGA,OAAAsqG,EAAA,CAMA,IAHAU,GAFAP,GAAAL,GAEA,EACAW,GAFAR,GAAAH,GAEA,EAEApqG,EAAAoqG,EAAA,EAA2BpqG,GAAA,EAAQA,IACnCuD,EAAAynG,EAAAhrG,GAAAuD,EAAAwnG,EAAA/qG,GAIA,YADAuD,EAAAknG,GAAA/nC,EAAA8nC,IAIA,IAAAK,EAAAb,EAEA,QACA,IAAAU,EAAA,EACAC,EAAA,EACAC,GAAA,EAEA,GACA,GAAAzB,EAAAzmC,EAAA8nC,GAAAjnG,EAAAgnG,IAAA,GAKA,GAJAhnG,EAAAknG,KAAAlnG,EAAAgnG,KACAG,IACAC,EAAA,EAEA,MAAAP,EAAA,CACAQ,GAAA,EACA,YAOA,GAJArnG,EAAAknG,KAAA/nC,EAAA8nC,KACAG,IACAD,EAAA,EAEA,MAAAJ,EAAA,CACAM,GAAA,EACA,cAGOF,EAAAC,GAAAE,GAEP,GAAAD,EACA,MAGA,GAGA,QAFAF,EAAAN,EAAAR,EAAAlnC,EAAA8nC,GAAAjnG,EAAA4mG,EAAAC,IAAA,EAAAjB,IAEA,CAOA,IAJAiB,GAAAM,EACAM,GAHAP,GAAAC,GAGA,EACAK,GAHAR,GAAAG,GAGA,EAEA1qG,EAAA0qG,EAAA,EAA8B1qG,GAAA,EAAQA,IACtCuD,EAAAynG,EAAAhrG,GAAAuD,EAAAwnG,EAAA/qG,GAGA,OAAAoqG,EAAA,CACAQ,GAAA,EACA,OAMA,GAFArnG,EAAAknG,KAAA/nC,EAAA8nC,KAEA,MAAAF,EAAA,CACAM,GAAA,EACA,MAKA,QAFAD,EAAAL,EAAAd,EAAAjmG,EAAAgnG,GAAA7nC,EAAA,EAAA4nC,IAAA,EAAAnB,IAEA,CAOA,IAJAmB,GAAAK,EACAK,GAHAP,GAAAE,GAGA,EACAI,GAHAP,GAAAG,GAGA,EAEA3qG,EAAA,EAAqBA,EAAA2qG,EAAY3qG,IACjCuD,EAAAynG,EAAAhrG,GAAA0iE,EAAAqoC,EAAA/qG,GAGA,GAAAsqG,GAAA,GACAM,GAAA,EACA,OAMA,GAFArnG,EAAAknG,KAAAlnG,EAAAgnG,KAEA,MAAAH,EAAA,CACAQ,GAAA,EACA,MAGAC,UACOH,GAAA3B,GAAA4B,GAAA5B,GAEP,GAAA6B,EACA,MAGAC,EAAA,IACAA,EAAA,GAGAA,GAAA,GAGAb,EAAAa,GAEA,IACAb,EAAA,GAGA,OAAAM,EAAA,CAMA,IAHAU,GAFAP,GAAAL,GAEA,EACAW,GAFAR,GAAAH,GAEA,EAEApqG,EAAAoqG,EAAA,EAA2BpqG,GAAA,EAAQA,IACnCuD,EAAAynG,EAAAhrG,GAAAuD,EAAAwnG,EAAA/qG,GAGAuD,EAAAknG,GAAA/nC,EAAA8nC,OACK,QAAAF,EACL,UAAA/kG,MAIA,IAFAwlG,EAAAN,GAAAH,EAAA,GAEAtqG,EAAA,EAAiBA,EAAAsqG,EAAatqG,IAC9BuD,EAAAwnG,EAAA/qG,GAAA0iE,EAAA1iE,IArTAirG,CAAAd,EAAAC,EAAAC,EAAAC,IAnEAR,EAAA,GACAC,EAAA,GA4XAtnG,KAAAyoG,UApXA,WACA,KAAAjB,EAAA,IACA,IAAAnoC,EAAAmoC,EAAA,EAEA,GAAAnoC,GAAA,GAAAioC,EAAAjoC,EAAA,IAAAioC,EAAAjoC,GAAAioC,EAAAjoC,EAAA,IAAAA,GAAA,GAAAioC,EAAAjoC,EAAA,IAAAioC,EAAAjoC,GAAAioC,EAAAjoC,EAAA,GACAioC,EAAAjoC,EAAA,GAAAioC,EAAAjoC,EAAA,IACAA,SAEO,GAAAioC,EAAAjoC,GAAAioC,EAAAjoC,EAAA,GACP,MAGAooC,EAAApoC,KAyWAr/D,KAAA0oG,eArWA,WACA,KAAAlB,EAAA,IACA,IAAAnoC,EAAAmoC,EAAA,EAEAnoC,EAAA,GAAAioC,EAAAjoC,EAAA,GAAAioC,EAAAjoC,EAAA,IACAA,IAGAooC,EAAApoC,KA8VAr/D,KAAA2oG,QA5XA,SAAAC,EAAAC,GACAxB,EAAAG,GAAAoB,EACAtB,EAAAE,GAAAqB,EACArB,GAAA,GA6aArvE,EAAA93B,QAjDA,SAAAS,EAAA4lG,EAAAF,EAAAC,GACAD,IACAA,EAAA,GAGAC,IACAA,EAAA3lG,EAAArD,QAGA,IAAAqrG,EAAArC,EAAAD,EAEA,KAAAsC,EAAA,IAIA,IAAAxB,EAAA,EAEA,GAAAwB,EAAAzC,EAEAQ,EAAA/lG,EAAA0lG,EAAAC,EAAAD,GADAc,EAAAf,EAAAzlG,EAAA0lG,EAAAC,EAAAC,IACAA,OAFA,CAMA,IAAAqC,EAAA,IAAA3B,EAAAtmG,EAAA4lG,GACAsC,EAznBA,SAAA3pC,GAGA,IAFA,IAAAzhB,EAAA,EAEAyhB,GAAAgnC,GACAzoD,GAAA,EAAAyhB,EACAA,IAAA,EAGA,OAAAA,EAAAzhB,EAinBAqrD,CAAAH,GAEA,GAGA,IAFAxB,EAAAf,EAAAzlG,EAAA0lG,EAAAC,EAAAC,IAEAsC,EAAA,CACA,IAAA92B,EAAA42B,EAEA52B,EAAA82B,IACA92B,EAAA82B,GAGAnC,EAAA/lG,EAAA0lG,IAAAt0B,EAAAs0B,EAAAc,EAAAZ,GACAY,EAAAp1B,EAGA62B,EAAAJ,QAAAnC,EAAAc,GACAyB,EAAAN,YACAK,GAAAxB,EACAd,GAAAc,QACG,IAAAwB,GAEHC,EAAAL,qCCppBA,IAEAQ,EAAA,IAFUxlG,EAAQ,KAElB,KAiEA,SAAAylG,IACA,IAAAC,EAAAppG,KAAAqpG,eACArpG,KAAAqnB,OAAArnB,KAAAqpG,eAAA,KAEA,QAAA9rG,EAAA,EAAiBA,EAAA6rG,EAAAE,QAAA7rG,OAAiCF,IAAA,CAClD,IAAAgsG,EAAAH,EAAAE,QAAA/rG,GACAuB,EAAAyqG,EAAAzqG,GACAA,KAAAkB,KAAAupG,EAAAC,WACAD,EAAA3c,OAAAv2E,QAGA+yF,EAAAE,QAAA7rG,OAAA,EAGA,SAAAgrD,EAAAv4C,GACA,OAAAA,KAAAzI,OAAAyI,EAAAxI,OAGArH,EAAAmoD,eA7EA,SAAAihD,GACA,qBAAAA,EAAA,CACA,IAAAL,EAAAF,EAAA/oG,IAAAspG,GACA,OAAAL,KAAAl5F,MAEA,OAAAu5F,GAyEAppG,EAAAu9E,oBAzDA,SAAA6rB,EAAAv5F,EAAA08E,EAAA9tF,EAAA0qG,GACA,GAAAC,EAEG,sBAAAA,EAAA,CAEH,GAAAv5F,KAAAw5F,eAAAD,IAAA7c,EACA,OAAA18E,EAKA,IAAAk5F,EAAAF,EAAA/oG,IAAAspG,GACAF,EAAA,CACA3c,SACA9tF,KACA0qG,aAgBA,OAbAJ,GAEA3gD,EADAv4C,EAAAk5F,EAAAl5F,QACAk5F,EAAAE,QAAA7nG,KAAA8nG,KAEAr5F,MAAA,IAAAJ,OACAI,EAAAmX,OAAA8hF,EACAD,EAAAt1C,IAAA61C,EAAAv5F,EAAAm5F,eAAA,CACAn5F,QACAo5F,QAAA,CAAAC,KAEAr5F,EAAAwtE,IAAAxtE,EAAAw5F,aAAAD,GAGAv5F,EAGA,OAAAu5F,EAhCA,OAAAv5F,GAwDA7P,EAAAooD,gCCvFA,IAAA7oB,EAAWl8B,EAAQ,KAEnB+0E,EAAY/0E,EAAQ,KAMpBgL,EAAAC,KAAAC,IACAC,EAAAF,KAAAG,IACAiqE,EAAApqE,KAAA2gC,IACAwpC,EAAAnqE,KAAA6gC,IACAm6D,EAAA,EAAAh7F,KAAA4U,GACA0yB,EAAArW,EAAAjuB,SACAk8B,EAAAjO,EAAAjuB,SACAi4F,EAAAhqE,EAAAjuB,SAoDA,IAAAk4F,EAAA,GACAC,EAAA,GAqJAzpG,EAAA0pG,WAjMA,SAAA3+E,EAAAxc,EAAAE,GACA,OAAAsc,EAAA3tB,OAAA,CAIA,IAKAF,EALA61D,EAAAhoC,EAAA,GACApc,EAAAokD,EAAA,GACAjkD,EAAAikD,EAAA,GACAlkD,EAAAkkD,EAAA,GACAhkD,EAAAgkD,EAAA,GAGA,IAAA71D,EAAA,EAAaA,EAAA6tB,EAAA3tB,OAAmBF,IAChC61D,EAAAhoC,EAAA7tB,GACAyR,EAAAN,EAAAM,EAAAokD,EAAA,IACAjkD,EAAAN,EAAAM,EAAAikD,EAAA,IACAlkD,EAAAR,EAAAQ,EAAAkkD,EAAA,IACAhkD,EAAAP,EAAAO,EAAAgkD,EAAA,IAGAxkD,EAAA,GAAAI,EACAJ,EAAA,GAAAM,EACAJ,EAAA,GAAAK,EACAL,EAAA,GAAAM,IA2KA/O,EAAAq7E,SA9JA,SAAA7a,EAAAC,EAAAr5C,EAAAE,EAAA/Y,EAAAE,GACAF,EAAA,GAAAF,EAAAmyD,EAAAp5C,GACA7Y,EAAA,GAAAF,EAAAoyD,EAAAn5C,GACA7Y,EAAA,GAAAD,EAAAgyD,EAAAp5C,GACA3Y,EAAA,GAAAD,EAAAiyD,EAAAn5C,IA2JAtnB,EAAAs7E,UAvIA,SAAA9a,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,EAAApyD,EAAAE,GACA,IAEAvR,EAFA4iE,EAAAsY,EAAAtY,aACA1B,EAAAga,EAAAha,QAEAY,EAAAc,EAAAU,EAAAp5C,EAAAC,EAAAq5C,EAAA8oC,GAMA,IALAj7F,EAAA,GAAAK,IACAL,EAAA,GAAAK,IACAH,EAAA,QACAA,EAAA,QAEAvR,EAAA,EAAaA,EAAA8hE,EAAO9hE,IAAA,CACpB,IAAAyS,EAAAyuD,EAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAA8oC,EAAAtsG,IACAqR,EAAA,GAAAF,EAAAsB,EAAApB,EAAA,IACAE,EAAA,GAAAD,EAAAmB,EAAAlB,EAAA,IAKA,IAFAuwD,EAAAc,EAAAW,EAAAn5C,EAAAC,EAAAo5C,EAAA8oC,GAEAvsG,EAAA,EAAaA,EAAA8hE,EAAO9hE,IAAA,CACpB,IAAA0S,EAAAwuD,EAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAA8oC,EAAAvsG,IACAqR,EAAA,GAAAF,EAAAuB,EAAArB,EAAA,IACAE,EAAA,GAAAD,EAAAoB,EAAAnB,EAAA,IAGAF,EAAA,GAAAF,EAAAmyD,EAAAjyD,EAAA,IACAE,EAAA,GAAAD,EAAAgyD,EAAA/xD,EAAA,IACAF,EAAA,GAAAF,EAAAqyD,EAAAnyD,EAAA,IACAE,EAAA,GAAAD,EAAAkyD,EAAAjyD,EAAA,IACAF,EAAA,GAAAF,EAAAoyD,EAAAlyD,EAAA,IACAE,EAAA,GAAAD,EAAAiyD,EAAAhyD,EAAA,IACAF,EAAA,GAAAF,EAAAsyD,EAAApyD,EAAA,IACAE,EAAA,GAAAD,EAAAmyD,EAAAlyD,EAAA,KAyGAzO,EAAAu7E,cAzFA,SAAA/a,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAAhZ,EAAAE,GACA,IAAA0yD,EAAAiX,EAAAjX,kBACAzC,EAAA0Z,EAAA1Z,YAEAirC,EAAAn7F,EAAAH,EAAA8yD,EAAAX,EAAAp5C,EAAAC,GAAA,MACAuiF,EAAAp7F,EAAAH,EAAA8yD,EAAAV,EAAAn5C,EAAAC,GAAA,MACA5X,EAAA+uD,EAAA8B,EAAAp5C,EAAAC,EAAAsiF,GACA/5F,EAAA8uD,EAAA+B,EAAAn5C,EAAAC,EAAAqiF,GACAr7F,EAAA,GAAAF,EAAAmyD,EAAAn5C,EAAA1X,GACApB,EAAA,GAAAF,EAAAoyD,EAAAl5C,EAAA3X,GACAnB,EAAA,GAAAD,EAAAgyD,EAAAn5C,EAAA1X,GACAlB,EAAA,GAAAD,EAAAiyD,EAAAl5C,EAAA3X,IA+EA5P,EAAA07E,QA7DA,SAAA/rE,EAAAC,EAAA4rE,EAAAC,EAAAxB,EAAAC,EAAAC,EAAA5rE,EAAAE,GACA,IAAAo7F,EAAAtqE,EAAAhxB,IACAu7F,EAAAvqE,EAAA9wB,IACA6qC,EAAAhrC,KAAAyb,IAAAkwD,EAAAC,GAEA,GAAA5gC,EAAAgwD,EAAA,MAAAhwD,EAAA,KAMA,OAJA/qC,EAAA,GAAAoB,EAAA6rE,EACAjtE,EAAA,GAAAqB,EAAA6rE,EACAhtE,EAAA,GAAAkB,EAAA6rE,OACA/sE,EAAA,GAAAmB,EAAA6rE,GA6BA,GAzBA7lC,EAAA,GAAA6iC,EAAAwB,GAAAuB,EAAA7rE,EACAimC,EAAA,GAAA8iC,EAAAuB,GAAAwB,EAAA7rE,EACA49B,EAAA,GAAAirC,EAAAyB,GAAAsB,EAAA7rE,EACA69B,EAAA,GAAAkrC,EAAAwB,GAAAuB,EAAA7rE,EACAi6F,EAAAt7F,EAAAqnC,EAAApI,GACAs8D,EAAAr7F,EAAAmnC,EAAApI,IAEAysC,GAAAqvB,GAEA,IACArvB,GAAAqvB,IAGApvB,GAAAovB,GAEA,IACApvB,GAAAovB,GAGArvB,EAAAC,IAAAC,EACAD,GAAAovB,EACGrvB,EAAAC,GAAAC,IACHF,GAAAqvB,GAGAnvB,EAAA,CACA,IAAAva,EAAAsa,EACAA,EAAAD,EACAA,EAAAra,EAKA,QAAApiB,EAAA,EAAqBA,EAAA08B,EAAkB18B,GAAAlvC,KAAA4U,GAAA,EACvCs6B,EAAAy8B,IACAsvB,EAAA,GAAA9wB,EAAAj7B,GAAAg+B,EAAA7rE,EACA45F,EAAA,GAAA7wB,EAAAl7B,GAAAi+B,EAAA7rE,EACAi6F,EAAAt7F,EAAAg7F,EAAAh7F,GACAu7F,EAAAr7F,EAAA86F,EAAA96F,sBCpNA,IAEA/N,EAFY2C,EAAQ,KAEpB3C,SAEAqpG,EAAiB1mG,EAAQ,KAEzB+a,EAAmB/a,EAAQ,KAW3B,SAAA2mG,EAAAtjG,GACAqjG,EAAA/sG,KAAA2C,KAAA+G,GACA/G,KAAAsqG,cAAA,GACAtqG,KAAAuqG,uBAAA,GACAvqG,KAAAwqG,QAAA,EACAxqG,KAAAyqG,UAAA,EAGAJ,EAAAnuG,UAAAuiF,aAAA,EAEA4rB,EAAAnuG,UAAAwuG,iBAAA,WACA1qG,KAAAsqG,cAAA,GACAtqG,KAAAuqG,uBAAA,GACAvqG,KAAAwqG,QAAA,EACAxqG,KAAAqW,QACArW,KAAAyqG,UAAA,GAGAJ,EAAAnuG,UAAAyuG,eAAA,SAAA7zF,EAAA8zF,GACAA,EACA5qG,KAAAuqG,uBAAA9oG,KAAAqV,GAEA9W,KAAAsqG,cAAA7oG,KAAAqV,GAGA9W,KAAAqW,SAGAg0F,EAAAnuG,UAAA2uG,gBAAA,SAAAC,EAAAF,GACAA,MAAA,EAEA,QAAArtG,EAAA,EAAiBA,EAAAutG,EAAArtG,OAAyBF,IAC1CyC,KAAA2qG,eAAAG,EAAAvtG,GAAAqtG,IAIAP,EAAAnuG,UAAA2a,uBAAA,SAAA/X,GACA,QAAAvB,EAAAyC,KAAAwqG,QAA4BjtG,EAAAyC,KAAAsqG,cAAA7sG,OAA+BF,IAC3DuB,KAAAkB,KAAAsqG,cAAA/sG,IAGA,IAAAA,EAAA,EAAiBA,EAAAyC,KAAAuqG,uBAAA9sG,OAAwCF,IACzDuB,KAAAkB,KAAAuqG,uBAAAhtG,KAIA8sG,EAAAnuG,UAAAgP,OAAA,WACAlL,KAAAmS,kBAEA,QAAA5U,EAAAyC,KAAAwqG,QAA4BjtG,EAAAyC,KAAAsqG,cAAA7sG,OAA+BF,IAAA,EAC3DuZ,EAAA9W,KAAAsqG,cAAA/sG,IAEAyL,OAAAhJ,KACA8W,EAAA5L,SACA4L,EAAA9N,OAAA,KAGA,IAAAzL,EAAA,EAAiBA,EAAAyC,KAAAuqG,uBAAA9sG,OAAwCF,IAAA,CACzD,IAAAuZ,KAAA9W,KAAAuqG,uBAAAhtG,IAEAyL,OAAAhJ,KACA8W,EAAA5L,SACA4L,EAAA9N,OAAA,OAIAqhG,EAAAnuG,UAAA0lC,MAAA,SAAAC,EAAAC,GAEA,QAAAvkC,EAAAyC,KAAAwqG,QAA4BjtG,EAAAyC,KAAAsqG,cAAA7sG,OAA+BF,IAAA,EAC3DuZ,EAAA9W,KAAAsqG,cAAA/sG,IACA4hD,aAAAroC,EAAAqoC,YAAAtd,GACA/qB,EAAA8qB,MAAAC,EAAAtkC,IAAAyC,KAAAwqG,QAAA,KAAAxqG,KAAAsqG,cAAA/sG,EAAA,IACAuZ,EAAA6nE,YAAA7nE,EAAA6nE,WAAA98C,GAGA7hC,KAAAwqG,QAAAjtG,EAEA,IAAAA,EAAA,EAAiBA,EAAAyC,KAAAuqG,uBAAA9sG,OAAwCF,IAAA,CACzD,IAAAuZ,KAAA9W,KAAAuqG,uBAAAhtG,IACA4hD,aAAAroC,EAAAqoC,YAAAtd,GACA/qB,EAAA8qB,MAAAC,EAAA,IAAAtkC,EAAA,KAAAyC,KAAAuqG,uBAAAhtG,EAAA,IACAuZ,EAAA6nE,YAAA7nE,EAAA6nE,WAAA98C,GAGA7hC,KAAAuqG,uBAAA,GACAvqG,KAAAyqG,UAAA,GAGA,IAAAhrF,EAAA,GAEA4qF,EAAAnuG,UAAAijB,gBAAA,WACA,IAAAnf,KAAA4jC,MAAA,CAGA,IAFA,IAAA7kB,EAAA,IAAAN,EAAAxP,mBAEA1R,EAAA,EAAmBA,EAAAyC,KAAAsqG,cAAA7sG,OAA+BF,IAAA,CAClD,IAAAuZ,EAAA9W,KAAAsqG,cAAA/sG,GACA0uF,EAAAn1E,EAAAqI,kBAAAliB,QAEA6Z,EAAAyjB,sBACA0xD,EAAAzsE,eAAA1I,EAAAiQ,kBAAAtH,IAGAV,EAAA+gB,MAAAmsD,GAGAjsF,KAAA4jC,MAAA7kB,EAGA,OAAA/e,KAAA4jC,OAGAymE,EAAAnuG,UAAAglC,QAAA,SAAAlxB,EAAAC,GACA,IAAAk0B,EAAAnkC,KAAAokC,sBAAAp0B,EAAAC,GAGA,GAFAjQ,KAAAmf,kBAEA+hB,QAAAiD,EAAA,GAAAA,EAAA,IACA,QAAA5mC,EAAA,EAAmBA,EAAAyC,KAAAsqG,cAAA7sG,OAA+BF,IAAA,CAGlD,GAFAyC,KAAAsqG,cAAA/sG,GAEA2jC,QAAAlxB,EAAAC,GACA,SAKA,UAGAlP,EAAAspG,EAAAD,GACA,IAAAhpE,EAAAipE,EACAlyE,EAAA93B,QAAA+gC,mBCnJA,IAEAsI,EAFoBhmC,EAAQ,KAE5BgmC,iBAEAT,EAAcvlC,EAAQ,KAEtBy7B,EAAA8J,EAAA9J,iBACAT,EAAAuK,EAAAvK,UAoBAqsE,EAAA,cAEA3pE,EAAA,CAOAxoB,cAAA,SAAAzH,EAAA0H,GACA,IAAArX,EAAAxB,KAAAgR,QAAA6H,GACAmzD,EAAAhsE,KAAAwrC,YAAAr6B,EAAA0H,GACAsgC,EAAA33C,EAAAs2C,YAAA3mC,GACA5Q,EAAAiB,EAAAgrC,QAAAr7B,GACAmrD,EAAA96D,EAAAo4C,eAAAzoC,GACAgP,EAAA3e,EAAA4P,cAAAD,EAAA,SACA,OACApD,cAAA/N,KAAA8I,SACAkiG,iBAAAhrG,KAAAsT,QACAk4D,WAAA,WAAAxrE,KAAA8I,SAAA9I,KAAAsT,QAAA,KACA8E,YAAApY,KAAAoY,YACAoa,SAAAxyB,KAAAiH,GACAwlC,WAAAzsC,KAAAO,KACAA,OACA4Q,UAAAgoC,EACA33C,KAAA86D,EACAzjD,WACAvZ,MAAA0sE,EACA7rD,QACA8qF,OAAA9rE,EAAAhf,GAEA4e,MAAA,gCAaA/V,kBAAA,SAAA7X,EAAAkK,EAAAxC,EAAA26B,EAAA03D,GACA7vF,KAAA,SACA,IAAA7Z,EAAAxB,KAAAgR,QAAA6H,GACAozD,EAAAzqE,EAAAs6C,aAAA3qC,GACAgH,EAAAnY,KAAA4Y,cAAAzH,EAAA0H,GAEA,MAAA26B,GAAAr7B,EAAA7Y,iBAAAjD,QACA8b,EAAA7Y,MAAA6Y,EAAA7Y,MAAAk0C,IAGA,IAAA69B,EAAApF,EAAA9rE,IAAA,WAAAkb,EAAA,CAAA6vF,GAAA,sBAAA7vF,EAAA6vF,GAAA,sBAEA,0BAAA75B,GACAl5D,EAAAkD,SACAg2D,EAAAl5D,IACK,kBAAAk5D,EACL3yC,EAAA2yC,EAAAl5D,GAGAlV,QAAA8nG,EAAA,SAAA7tB,EAAAlxC,GACA,IAAAxuC,EAAAwuC,EAAAvuC,OAMA,MAJA,MAAAuuC,EAAAvN,OAAA,UAAAuN,EAAAvN,OAAAjhC,EAAA,KACAwuC,KAAArvC,MAAA,EAAAa,EAAA,IAGAksC,EAAAloC,EAAA2P,EAAA66B,UAXK,GAsBLR,YAAA,SAAAvd,EAAApV,GACA,OAAA6wB,EAAA1pC,KAAAgR,QAAA6H,GAAAoV,IAUAid,cAAA,cAGA/S,EAAA93B,QAAA+gC,mBC1HA,IAAA0jB,EAAYphD,EAAQ,KAGpBpF,GADAwmD,EAAAniD,OACAmiD,EAAAxmD,SAEcoF,EAAQ,KAEtBC,QAsCA,SAAAwnG,EAAAC,GACAA,KAAA,GACAprG,KAAAqrG,OAAAD,EAAArhE,MACA/pC,KAAAsrG,MAAAF,EAAAh4F,KACApT,KAAAoyC,OAAAg5D,EAAA/9E,MACArtB,KAAAurG,SAAAH,EAAAI,QACAxrG,KAAAyrG,QAAA,EAGAzrG,KAAAjB,QAGA,IAAA2sG,EAAAP,EAAAjvG,UASAwvG,EAAAp1F,QAAA,SAAAq1F,GACA,IAcAC,EAdAC,EAAA7rG,KAAA8rG,UACAC,EAAAJ,KAAAI,KAIA,GAAA/rG,KAAAyrG,QAAAI,EAAA,CACA,IAAA9sG,EAAAiB,KAAAjB,QACAA,EAAAyC,KAAAzC,EAAAisC,WAAA6gE,EAAA9sG,QAAAisC,WAGAhrC,KAAAgsG,aACAhsG,KAAAgsG,WAAA79D,YAAAnuC,MAKAA,KAAAsrG,QAAAS,IACAH,EAAA5rG,KAAAsrG,MAAAtrG,KAAAjB,UAKA,IAeA+7D,EAfAmxC,EAAAC,EAAAlsG,KAAAmsG,QACAC,EAAApsG,KAAAqsG,eAAA,EACAC,EAAAJ,EAAAP,KAAAW,OACAC,EAAAZ,KAAAY,cAAA,EAMA,SAAAL,EAAAxpG,GAGA,QAFAA,GAAA,KAAAA,EAAA,GAEAA,EAPAupG,IAAAK,GAAAF,IAAAG,IACAX,EAAA,UAWA5rG,KAAAyrG,QAAA,UAAAG,KACA5rG,KAAAyrG,QAAA,EACA3wC,EAgGA,SAAA0xC,EAAAT,GAGA,IAAAlxC,EACAC,EAHA0xC,EAAAC,UAAAD,EAAAE,cAAAF,EAAAG,QAAA,EACAH,EAAAI,iBAAA,MAIAb,GAAAS,EAAAnB,UACAxwC,EAAA2xC,EAAAnB,OAAAmB,EAAAztG,WAEA87D,aACAC,EAAAD,EAAAC,mBACAD,cAIAv8D,EAAAu8D,OAAAp9D,SACAo9D,EAAA,OAIA2xC,EAAAK,UAAAhyC,EACA2xC,EAAAL,OAAAK,EAAAH,cAAA,KACA,IAAAS,EAAAN,EAAAO,YAEA,OADAD,KAAAz2F,QACAykD,EAxHA/wB,CAAA/pC,KAAA+rG,IAGA/rG,KAAAmsG,OAAAG,EACAtsG,KAAAqsG,cAAAE,EACA,IAAA7nD,EAAAinD,KAAAjnD,KAWA,GARA1kD,KAAA2sG,QADAd,EACAA,EAAAa,cAGA1sG,KAAAoyC,OAAApyC,KAAAoyC,OAAApyC,KAAAjB,SAAAkQ,IAKAjP,KAAA6sG,UAAA,CACA,IAAA52D,EAAAj2C,KAAAysG,UACA5+D,EAAAl/B,KAAAC,IAAA,MAAA81C,EAAA1kD,KAAAysG,UAAA/nD,EAAAz1C,IAAAjP,KAAA2sG,SAEA,IAAAZ,IAAAjxC,GAAA7kB,EAAApI,GAAA,CACA,IAAAgtB,EAAA76D,KAAA6sG,UAEA,GAAAvuG,EAAAu8D,GACA,QAAAt9D,EAAA,EAAuBA,EAAAs9D,EAAAp9D,OAAqBF,IAC5CyvG,EAAAhtG,KAAA66D,EAAAt9D,GAAA04C,EAAApI,EAAAy+D,EAAAC,QAGAS,EAAAhtG,KAAA66D,EAAA5kB,EAAApI,EAAAy+D,EAAAC,GAIAvsG,KAAAysG,UAAA5+D,EAGA,IAAAo/D,EAAA,MAAAjtG,KAAA4sG,iBAAA5sG,KAAA4sG,iBAAA/+D,EACA7tC,KAAA0sG,cAAAO,OAKAjtG,KAAAysG,UAAAzsG,KAAA0sG,cAAA,MAAA1sG,KAAA4sG,iBAAA5sG,KAAA4sG,iBAAA5sG,KAAA2sG,QAGA,OAAA3sG,KAAAiK,cAGA,IAAAijG,EAAA,WACA,IAAAr/D,EACA0jC,EACA+6B,EACAC,EACAY,EACAC,EAAA,CACArjE,MAAA,SAAAnN,EAAAlkB,EAAA20F,EAAAC,GACA/7B,EAAA30C,EACAiR,EAAAn1B,EACA4zF,EAAAe,EACAd,EAAAe,EACAH,EAAAx+F,KAAAg2C,KAAA4nD,EAAAD,GACAc,EAAAlsC,KAAAorC,EAAA,GAAAC,EAAA,EAAAgB,EAAAC,IAGA,OAAAJ,EAEA,SAAAI,IACA,OAAAj8B,EAAA1jC,EAAA0jC,IAAA,KAGA,SAAAg8B,IACA,IAAAp8F,EAAAogE,EAAA47B,EAAAb,EAAA39F,KAAAg2C,KAAA4sB,EAAA47B,GACAhwG,EAAAo0E,GAAA1jC,EAAA,KAAA18B,EAAAo7F,EAAAp7F,EAEAogE,EAEA,OADAA,IACAp0E,GA5BA,GAqCA,SAAA6vG,EAAAR,EAAA3xC,EAAA5kB,EAAApI,EAAAy+D,EAAAC,GACAW,EAAAnjE,MAAAkM,EAAApI,EAAAy+D,EAAAC,GACAC,EAAAiB,iBAAA5yC,EAEA2xC,EAAAiB,iBAAA,CACAx3D,QACApI,MACAxgB,MAAAwgB,EAAAoI,EACAirB,KAAAgsC,EAAAhsC,MACGsrC,EAAAztG,SAdH2sG,EAAAr1F,MAAA,WACArW,KAAAyrG,QAAA,EACAzrG,KAAAurG,UAAAvrG,KAAAurG,SAAAvrG,KAAAjB,UA8CA2sG,EAAAzhG,WAAA,WACA,OAAAjK,KAAA6sG,WAAA7sG,KAAAysG,UAAAzsG,KAAA2sG,SAQAjB,EAAAgC,KAAA,SAAAC,IAEA3tG,KAAA+sG,cAAAY,GAAA3tG,KAAAyrG,UACAzrG,KAAA+sG,YAAAY,EACAA,EAAA7B,UAAA9rG,KACA2tG,EAAAt3F,UAIAq1F,EAAA51F,QAAA,WACA9V,KAAA6K,YAIA7K,KAAA8rG,YAAA9rG,KAAA8rG,UAAAiB,YAAA,MACA/sG,KAAA+sG,cAAA/sG,KAAA+sG,YAAAjB,UAAA,MACA9rG,KAAAyrG,QAAA,EACAzrG,KAAA6K,WAAA,IAGA6gG,EAAAkC,YAAA,WACA,OAAA5tG,KAAA8rG,WAGAJ,EAAAmC,cAAA,WACA,OAAA7tG,KAAA+sG,aAGArB,EAAA3gE,aAAA,SAAA8C,GAMA7tC,KAAA0sG,cAAA1sG,KAAA4sG,iBAAA/+D,GA8CAxtC,EAAAgpC,WApSA,SAAA+hE,GACA,WAAAD,EAAAC,qBCjCA,IAEA1hE,EAFoBhmC,EAAQ,KAE5BgmC,iBA4CArpC,EAAAw3F,gBAlBA,SAAAr2F,EAAA2P,GACA,IAAA28F,EAAAtsG,EAAA8pC,aAAA,qBACA9tC,EAAAswG,EAAArwG,OAEA,OAAAD,EACA,OAAAksC,EAAAloC,EAAA2P,EAAA28F,EAAA,IACG,GAAAtwG,EAAA,CAGH,IAFA,IAAAuwG,EAAA,GAEAxwG,EAAA,EAAmBA,EAAAuwG,EAAArwG,OAAsBF,IAAA,CACzC,IAAAmF,EAAAgnC,EAAAloC,EAAA2P,EAAA28F,EAAAvwG,IACAwwG,EAAAtsG,KAAAiB,GAGA,OAAAqrG,EAAArkF,KAAA,wBC1CchmB,EAAQ,KAEtBC,QAFA,IAIAmhD,EAAYphD,EAAQ,KAEpBvF,EAAA2mD,EAAA3mD,SACAS,EAAAkmD,EAAAlmD,KACA/B,EAAAioD,EAAAjoD,IACAgE,EAAAikD,EAAAjkD,QAKA44B,GAJAqrB,EAAA7iD,SAEcyB,EAAQ,KAEtB+1B,eAEAu0E,EAAkBtqG,EAAQ,KAE1BogD,EAAAkqD,EAAAlqD,mBACAE,EAAAgqD,EAAAhqD,gBACAT,EAAAyqD,EAAAzqD,gBACAU,EAAA+pD,EAAA/pD,uBAEAgqD,EAAkBvqG,EAAQ,KAE1BwqG,EAAaxqG,EAAQ,KAErBoY,EAAuBpY,EAAQ,KAI/B+5D,EAFuB/5D,EAAQ,KAE/B+5D,oBAmCA,SAAA0wC,EAAAjqD,EAAA6+B,EAAAt4E,GACA,OAAAy5C,EAAAm5B,qBAAA0F,EAGA,SAAAqrB,EAAArrB,EAAAt4E,EAAAtC,GAKAnI,KAAAquG,WAAA,GAMAruG,KAAAsuG,YAAA,GAMAtuG,KAAAuuG,SAAA,GAMAvuG,KAAAwuG,UAAA,GAEAxuG,KAAAyuG,eAAA1rB,EAAAt4E,EAAAtC,GAEAnI,KAAAyQ,MAAAsyE,EAhEAr/E,EAAQ,KAmER,IAAAgrG,EAAAN,EAAAlyG,UA8BA,SAAAyyG,EAAAC,EAAAC,EAAAltD,GACAA,EAAAm1C,gBAAA,WAEA,OAAAgY,EAAA,CAAAA,GAAA,IAMA,IACAA,EADAnT,EAAAiT,EAAAC,GAEA3qD,EAAAvC,EAAAlxC,MACAs+F,EAAA7qD,EAAA/jD,IAAA,mBACA6uG,EAAA9qD,EAAA/jD,IAAA,4BAEA,GAAA4uG,EAKA,SAAAC,GASA,QAAA/gF,KAAA0tE,EACA,GAAAA,EAAA59F,eAAAkwB,IAAAghF,EAAAtT,EAAA1tE,IAAA,CACA6gF,EAAAnT,EAAA1tE,GACA,YAXAghF,EAAAtT,EAAAqT,MACAF,EAAAnT,EAAAqT,IAeA,SAAAC,EAAAttD,GACA,OAAAA,GAAA,aAAAA,EAAApiD,MAAA,SAAAoiD,EAAApiD,MAAAykD,EAAArC,GAnEA+sD,EAAAnvG,KAAA,OACAmvG,EAAA3T,oBAAA,EAEA2T,EAAA1rB,QAAA,WACA,OAAAhjF,KAAA4jC,OAGA8qE,EAAAxjG,OAAA,SAAAT,EAAAtC,GACA,IAAAymG,EAAA5uG,KAAAuuG,SAEAvuG,KAAAkvG,aAAAzkG,EAAAzK,KAAAyQ,OAEA7R,EAAAgwG,EAAA5+F,EAAA,SAAAizE,GACA1/B,EAAA0/B,EAAAtmD,MAAAsmD,EAAAxyE,SAEA7R,EAAAgwG,EAAA3+F,EAAA,SAAAizE,GACA3/B,EAAA2/B,EAAAvmD,MAAAumD,EAAAzyE,SAEA7R,EAAAgwG,EAAA5+F,EAAA,SAAAizE,GACA0rB,EAAAC,EAAA,IAAA3rB,KAEArkF,EAAAgwG,EAAA3+F,EAAA,SAAAizE,GACAyrB,EAAAC,EAAA,IAAA1rB,KAIAljF,KAAAyJ,OAAAzJ,KAAAyQ,MAAAtI,IAkDAumG,EAAAjlG,OAAA,SAAAs5E,EAAA56E,EAAAgnG,GACA,IAAAC,EAAA31E,EAAAspD,EAAA0b,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,cAEA3M,KAAA4jC,MAAAwrE,EACA,IAAAC,EAAArvG,KAAAwuG,UAwBA,SAAAc,IACA1wG,EAAAywG,EAAA,SAAA1tD,GACA,IAAAiiB,EAAAjiB,EAAAiiB,eACAjrB,EAAAirB,EAAA,GAAAwrC,EAAA3nG,OAAA,GAAA2nG,EAAA1nG,QACAumB,EAAA0zB,EAAA0gB,QAAA,IACA1gB,EAAA8B,UAAA9K,EAAA1qB,GAAA0qB,EAAA,EAAA1qB,IAqTA,SAAA0zB,EAAA4tD,GACA,IAAAztD,EAAAH,EAAAP,YACAouD,EAAA1tD,EAAA,GAAAA,EAAA,GAEAH,EAAAo1C,cAAA,MAAAp1C,EAAA3V,IAAA,SAAAy2B,GACA,OAAAA,EAAA8sC,GACG,SAAA9sC,GACH,OAAA+sC,EAAA/sC,EAAA8sC,GAEA5tD,EAAA8tD,aAAA,MAAA9tD,EAAA3V,IAAA,SAAAy2B,GACA,OAAAA,EAAA8sC,GACG,SAAA9sC,GACH,OAAA+sC,EAAA/sC,EAAA8sC,GAhUAG,CAAA/tD,EAAAiiB,EAAAwrC,EAAAp/F,EAAAo/F,EAAAn/F,KA7BAq/F,KAEAH,GAAApsB,EAAA5iF,IAAA,kBACAvB,EAAAywG,EAAA,SAAA1tD,GACA,IAAAA,EAAAlxC,MAAAtQ,IAAA,qBACA,IAAAwvG,EAAA1rD,EAAAtC,GAEA,GAAAguD,EAAA,CACA,IAAA3jE,EAAA2V,EAAAiiB,eAAA,iBACAhqC,EAAA+nB,EAAAlxC,MAAAtQ,IAAA,oBACAivG,EAAApjE,IAAA2jE,EAAA3jE,GAAApS,EAEA,QAAA+nB,EAAA/hC,SACAwvF,EAAAn/F,GAAA0/F,EAAAjoG,OAAAkyB,EACW,SAAA+nB,EAAA/hC,WACXwvF,EAAAp/F,GAAA2/F,EAAAloG,MAAAmyB,OAKA01E,MAmBAZ,EAAAzR,QAAA,SAAAl5C,EAAAuiC,GACA,IAAAspB,EAAA5vG,KAAAuuG,SAAAxqD,GAEA,SAAA6rD,EAAA,CACA,SAAAtpB,EAEA,QAAA/lF,KAAAqvG,EACA,GAAAA,EAAA7xG,eAAAwC,GACA,OAAAqvG,EAAArvG,GAKA,OAAAqvG,EAAAtpB,KAQAooB,EAAAtT,QAAA,WACA,OAAAp7F,KAAAwuG,UAAA7xG,SAcA+xG,EAAAmB,aAAA,SAAA3qB,EAAAC,GACA,SAAAD,GAAA,MAAAC,EAAA,CACA,IAAArnF,EAAA,IAAAonF,EAAA,IAAAC,EACA,OAAAnlF,KAAAquG,WAAAvwG,GAGAK,EAAA+mF,KACAC,EAAAD,EAAAC,WACAD,gBAIA,QAAA3nF,EAAA,EAAAuyG,EAAA9vG,KAAAsuG,YAA+C/wG,EAAAuyG,EAAAryG,OAAsBF,IACrE,GAAAuyG,EAAAvyG,GAAA0/F,QAAA,KAAAl0F,QAAAm8E,GAAA4qB,EAAAvyG,GAAA0/F,QAAA,KAAAl0F,QAAAo8E,EACA,OAAA2qB,EAAAvyG,IAKAmxG,EAAAqB,cAAA,WACA,OAAA/vG,KAAAsuG,YAAA3xG,SAQA+xG,EAAAr+F,eAAA,SAAA5F,EAAAD,EAAAlL,GACA,IAAArB,EAAA+B,KAAAgwG,mBAAAvlG,EAAAD,GAEA,OAAAvM,EAAAk4F,UAAAl4F,EAAAk4F,UAAArT,YAAAxjF,GAAArB,EAAA0jD,KAAA1jD,EAAA0jD,KAAAo1C,cAAA94F,EAAA0jD,KAAAghB,YAAArjE,IAAA,MAQAovG,EAAAp+F,iBAAA,SAAA7F,EAAAD,EAAAlL,GACA,IAAArB,EAAA+B,KAAAgwG,mBAAAvlG,EAAAD,GAEA,OAAAvM,EAAAk4F,UAAAl4F,EAAAk4F,UAAAtzB,YAAAvjE,GAAArB,EAAA0jD,KAAA1jD,EAAA0jD,KAAAihB,YAAA3kE,EAAA0jD,KAAA8tD,aAAAnwG,IAAA,MAOAovG,EAAAsB,mBAAA,SAAAvlG,EAAAD,GACA,IAKA2rF,EACAx0C,EANA5wC,EAAAvG,EAAAuG,YACAk/F,EAAAzlG,EAAAylG,YAAAl/F,KAAAy2B,uBAAA,YACA0oE,EAAA1lG,EAAA0lG,YAAAn/F,KAAAy2B,uBAAA,YACAu7C,EAAAv4E,EAAAu4E,UACAotB,EAAAnwG,KAAAsuG,YAIA,GAAAv9F,EACAolF,EAAAplF,EAAAL,iBACA7P,EAAAsvG,EAAAha,GAAA,IAAAA,EAAA,WACG,GAAA8Z,GAAAC,EACH/Z,EAAAn2F,KAAA6vG,aAAAI,EAAAr6F,eAAAs6F,EAAAt6F,qBACG,GAAAq6F,EACHtuD,EAAA3hD,KAAAi9F,QAAA,IAAAgT,EAAAr6F,qBACG,GAAAs6F,EACHvuD,EAAA3hD,KAAAi9F,QAAA,IAAAiT,EAAAt6F,qBAEA,GAAAmtE,EAAA,CACAA,EAAAryE,mBAEA1Q,OACAm2F,EAAAn2F,KAAAsuG,YAAA,IAIA,OACAnY,YACAx0C,SASA+sD,EAAA/9F,aAAA,SAAA0a,GACA,IAAAo3C,EAAAziE,KAAAsuG,YAAA,GAEA,GAAA7rC,EACA,OAAAA,EAAA9xD,aAAA0a,IASAqjF,EAAAD,eAAA,SAAA1rB,EAAAt4E,EAAAtC,GACA,IAAAioG,EAAA,CACAphG,MAAA,EACAG,OAAA,EACAD,KAAA,EACAE,QAAA,GAEAw/F,EAAA,CACA5+F,EAAA,GACAC,EAAA,IAEAogG,EAAA,CACArgG,EAAA,EACAC,EAAA,GAMA,GAHAxF,EAAAuD,cAAA,QAAAsiG,EAAA,KAAAtwG,MACAyK,EAAAuD,cAAA,QAAAsiG,EAAA,KAAAtwG,OAEAqwG,EAAArgG,IAAAqgG,EAAApgG,EAIA,OAFAjQ,KAAAuuG,SAAA,QACAvuG,KAAAwuG,UAAA,IAqBA,SAAA8B,EAAAvsD,GACA,gBAAAG,EAAAj2B,GACA,GAAAkgF,EAAAjqD,EAAA6+B,GAAA,CAIA,IAAAwtB,EAAArsD,EAAA/jD,IAAA,YAEA,MAAA4jD,EAEA,QAAAwsD,GAAA,WAAAA,GAIAH,EAFAG,EAAA,YAGAA,EAAA,QAAAA,EAAA,gBAKA,SAAAA,GAAA,UAAAA,GAIAH,EAFAG,EAAA,UAGAA,EAAA,SAAAA,EAAA,gBAKAH,EAAAG,IAAA,EACA,IAAA5uD,EAAA,IAAAusD,EAAAnqD,EAAAD,EAAAI,GAAA,MAAAA,EAAA/jD,IAAA,QAAAowG,GACAjsD,EAAA,aAAA3C,EAAApiD,KACAoiD,EAAA2gB,OAAAhe,GAAAJ,EAAA/jD,IAAA,eACAwhD,EAAA0gB,QAAAne,EAAA/jD,IAAA,WAEA+jD,EAAAvC,OAEAA,EAAAlxC,MAAAyzC,EAEAvC,EAAAjrB,KAAA12B,KAEA2hD,EAAA54C,MAAAklB,EAEAjuB,KAAAwuG,UAAA/sG,KAAAkgD,GAEAitD,EAAA7qD,GAAA91B,GAAA0zB,EACA0uD,EAAAtsD,OAhEA/jD,KAAAuuG,SAAAK,EAEAhwG,EAAAgwG,EAAA5+F,EAAA,SAAAizE,EAAAiC,GACAtmF,EAAAgwG,EAAA3+F,EAAA,SAAAizE,EAAAiC,GACA,IAAArnF,EAAA,IAAAonF,EAAA,IAAAC,EACAgR,EAAA,IAAA8X,EAAAnwG,GACAq4F,EAAAz/D,KAAA12B,KACAm2F,EAAA1lF,MAAAsyE,EACA/iF,KAAAquG,WAAAvwG,GAAAq4F,EAEAn2F,KAAAsuG,YAAA7sG,KAAA00F,GAEAA,EAAAqa,QAAAvtB,GACAkT,EAAAqa,QAAAttB,IACKljF,OACFA,OA4DH0uG,EAAAQ,aAAA,SAAAzkG,EAAAs4E,GA2BA,SAAAqQ,EAAA5xF,EAAAmgD,EAAA5wC,GACAnS,EAAA4C,EAAA8pC,aAAAqW,EAAA3V,KAAA,YAAAA,GACA2V,EAAAhlB,MAAA02D,oBAGA7xF,EAAAi8D,EAAAj8D,EAAAwqC,MA9BAptC,EAAAoB,KAAAwuG,UAAA,SAAA7sD,GACAA,EAAAhlB,MAAA8mB,UAAAx0C,YAEAxE,EAAA+H,WAAA,SAAAzB,GACA,GAAA0/F,EAAA1/F,GAAA,CACA,IAAA2/F,EAAAC,EAAA5/F,EAAAtG,GACAwlG,EAAAS,EAAA,GACAR,EAAAQ,EAAA,GAEA,IAAAvC,EAAA8B,EAAAltB,KAAAorB,EAAA+B,EAAAntB,GACA,OAGA,IAAAoT,EAAAn2F,KAAA6vG,aAAAI,EAAAr6F,eAAAs6F,EAAAt6F,gBACApU,EAAAuP,EAAAC,UACAiyE,EAAAkT,EAAA8G,QAAA,KACA/Z,EAAAiT,EAAA8G,QAAA,KAEA,SAAAz7F,EAAAjC,OACA6zF,EAAA5xF,EAAAyhF,EAAAlyE,GACAqiF,EAAA5xF,EAAA0hF,EAAAnyE,MAGG/Q,OAiBH0uG,EAAApT,eAAA,SAAAtvD,GACA,IAAA0vD,EAAA,GACAC,EAAA,GAOA,OANA/8F,EAAAoB,KAAA+vG,gBAAA,SAAA5Z,GACA,IAAAtB,EAAA,MAAA7oD,GAAA,SAAAA,EAAAmqD,EAAA8G,QAAAjxD,GAAAmqD,EAAAlrD,cACA6jE,EAAA3Y,EAAAC,aAAAvB,GACAh0F,EAAA66F,EAAA7G,GAAA,GAAA6G,EAAAj6F,KAAAozF,GACAh0F,EAAA86F,EAAAmT,GAAA,GAAAnT,EAAAl6F,KAAAqtG,KAEA,CACApT,WACAC,cAwBA,IAAAiV,EAAA,kBAKA,SAAAD,EAAA5/F,EAAAtG,GACA,OAAA5N,EAAA+zG,EAAA,SAAA7sD,GAEA,OADAhzC,EAAAy2B,uBAAAuc,GAAA,KASA,SAAA0sD,EAAA1/F,GACA,sBAAAA,EAAA5Q,IAAA,oBAGAiuG,EAAAz8F,OAAA,SAAAlH,EAAAtC,GACA,IAAA0oG,EAAA,GAuBA,OAtBApmG,EAAAuD,cAAA,gBAAA+0E,EAAA90D,GACA,IAAAyI,EAAA,IAAA03E,EAAArrB,EAAAt4E,EAAAtC,GACAuuB,EAAAn2B,KAAA,QAAA0tB,EAGAyI,EAAAjtB,OAAAs5E,EAAA56E,GAAA,GACA46E,EAAAryE,iBAAAgmB,EACAm6E,EAAApvG,KAAAi1B,KAGAjsB,EAAA+H,WAAA,SAAAzB,GACA,GAAA0/F,EAAA1/F,GAAA,CAIA,IAAA2/F,EAAAC,EAAA5/F,GACAk/F,EAAAS,EAAA,GACAR,EAAAQ,EAAA,GAEAh6E,EADAu5E,EAAA5yB,mBACA3sE,iBACAK,EAAAL,iBAAAgmB,EAAAm5E,aAAAI,EAAAr6F,eAAAs6F,EAAAt6F,mBAEAi7F,GAIAzC,EAAAjyF,WAAAiyF,EAAAlyG,UAAAigB,WAAA8xF,EAAA/xG,UAAAigB,WACAL,EAAAC,SAAA,cAAAqyF,GACA,IAAAhtE,EAAAgtE,EACAj2E,EAAA93B,QAAA+gC,mBC5kBA,IAAAv9B,EAAaH,EAAQ,KA2BrB09B,EAAA,CAMA0vE,kBAAA,SAAAt2F,GACAxa,KAAA+wG,YAAAltG,EAAAvF,QAAAkc,KAAA7d,QAAA,GACAqD,KAAAgxG,iBAAAntG,EAAA9G,OAAAyd,GAAA,YAAAy2F,EAAAhzG,GAEA,OADAgzG,EAAA/wG,IAAAjC,EAAAsC,KAAAtC,GACAgzG,GACKptG,EAAAV,kBAWL+tG,OAAA,SAAA3wG,EAAA0G,GACA,IAAAhJ,EAAA,MAAAgJ,EAAAjH,KAAA+wG,YAAA9pG,GAAAjH,KAAAgxG,iBAAA7wG,IAAAI,GAGA,WAFAP,KAAAG,IAAA,iBAGAH,KAAAgxG,iBAAApyG,KAAA,SAAAX,GACAA,EAAAkzG,UAAA,IAIAlzG,MAAAkzG,UAAA,IAUAC,SAAA,SAAA7wG,EAAA0G,GACA,IAAAhJ,EAAA,MAAAgJ,EAAAjH,KAAA+wG,YAAA9pG,GAAAjH,KAAAgxG,iBAAA7wG,IAAAI,GAGAtC,MAAAkzG,UAAA,IAUAE,eAAA,SAAA9wG,EAAA0G,GACA,IAAAhJ,EAAA,MAAAgJ,EAAAjH,KAAA+wG,YAAA9pG,GAAAjH,KAAAgxG,iBAAA7wG,IAAAI,GAEA,SAAAtC,EAEA,OADA+B,KAAA/B,EAAAkzG,SAAA,qBAAA5wG,EAAA0G,GACAhJ,EAAAkzG,UAWA9tB,WAAA,SAAA9iF,EAAA0G,GACA,IAAAhJ,EAAA,MAAAgJ,EAAAjH,KAAA+wG,YAAA9pG,GAAAjH,KAAAgxG,iBAAA7wG,IAAAI,GACA,OAAAtC,KAAAkzG,WAGAh5E,EAAA93B,QAAA+gC,iBCtFA,IAAAkwE,EAAA,CACAp7E,YAAA,EACAD,QAAA,EACA2L,MAAA,GAcAvhC,EAAAkxG,oBAPA,SAAA74F,EAAAvQ,EAAAqpG,GACA,IAAA/gG,EAAAtI,EAAAK,sBAAAkQ,EAAA+4F,WAEA7mG,EAAA6F,KAAAC,iBACA,OAAAD,OAAA+gG,IAAAF,EAAA7gG,EAAA3H,WAAA8B,KAAA6F,QAAA+gG,oBChCA,IAAA3tG,EAAaH,EAAQ,KAErBsiC,EAAYtiC,EAAQ,KAEpBguG,EAAehuG,EAAQ,KAEvB+tC,EAAW/tC,EAAQ,KAEnBq3D,EAAuBr3D,EAAQ,KAiC/BiuG,EAAA,SAAApxG,EAAAqxG,GAIA5xG,KAAAO,QAAA,GAQAP,KAAA6xG,MAAA,EAOA7xG,KAAA0H,OAAA,EAMA1H,KAAA4yE,WAAA,KAYA5yE,KAAAmR,WAAA,EAMAnR,KAAAurF,SAAA,GAMAvrF,KAAA8xG,aAAA,GAMA9xG,KAAA4xG,YA0QA,SAAAG,EAAArgE,EAAAsgE,EAAAC,GAKAjyG,KAAAgzE,KAMAhzE,KAAAwB,KAOAxB,KAAAkyG,OAAA,GAOAlyG,KAAA0xC,YAOA1xC,KAAAmyG,YAAAtuG,EAAAhH,IAAAm1G,GAAA,YAAAI,GACA,WAAApsE,EAAAosE,EAAA1gE,IAAAjnC,WAEAzK,KAAAqyG,YAAA,IAAArsE,EAAAisE,GAAA,GAAiDvgE,IAAAjnC,SA1SjDknG,EAAAz1G,UAAA,CACAyB,YAAAg0G,EAMAW,UAAA,WACA,OAAAtyG,KAAAmR,UAAA,GAqBAohG,SAAA,SAAA5sD,EAAA7mD,EAAAC,GACA,oBAAA4mD,IACA5mD,EAAAD,EACAA,EAAA6mD,EACAA,EAAA,MAGAA,KAAA,GAEA9hD,EAAA/B,SAAA6jD,KACAA,EAAA,CACA6sD,MAAA7sD,IAIA,IAEA8sD,EAFAD,EAAA7sD,EAAA6sD,OAAA,WACAjnB,EAAAvrF,KAAA2lD,EAAAh/B,MAAA,YAEA,aAAA6rF,IAAAC,EAAA3zG,EAAAzB,KAAA0B,EAAAiB,OAEA,QAAAzC,EAAA,GAAmBk1G,GAAAl1G,EAAAguF,EAAA9tF,OAA0CF,IAC7DguF,EAAAhuF,GAAAg1G,SAAA5sD,EAAA7mD,EAAAC,GAGA,cAAAyzG,GAAA1zG,EAAAzB,KAAA0B,EAAAiB,OAQA0yG,qBAAA,SAAAb,GACA,IAAAnqG,EAAA,EACA1H,KAAA6xG,QAEA,QAAAt0G,EAAA,EAAmBA,EAAAyC,KAAAurF,SAAA9tF,OAA0BF,IAAA,CAC7C,IAAAykB,EAAAhiB,KAAAurF,SAAAhuF,GACAykB,EAAA0wF,qBAAAb,EAAA,GAEA7vF,EAAAta,WACAA,EAAAsa,EAAAta,QAIA1H,KAAA0H,SAAA,GAOA0rE,YAAA,SAAAnsE,GACA,GAAAjH,KAAAk0C,UAAAjtC,EACA,OAAAjH,KAGA,QAAAzC,EAAA,EAAAguF,EAAAvrF,KAAAurF,SAAA/tF,EAAA+tF,EAAA9tF,OAAoEF,EAAAC,EAASD,IAAA,CAC7E,IAAA2/C,EAAAquC,EAAAhuF,GAAA61E,YAAAnsE,GAEA,GAAAi2C,EACA,OAAAA,IASAg2B,SAAA,SAAAj8D,GACA,GAAAA,IAAAjX,KACA,SAGA,QAAAzC,EAAA,EAAAguF,EAAAvrF,KAAAurF,SAAA/tF,EAAA+tF,EAAA9tF,OAAoEF,EAAAC,EAASD,IAAA,CAC7E,IAAA2/C,EAAAquC,EAAAhuF,GAAA21E,SAAAj8D,GAEA,GAAAimC,EACA,OAAAA,IASAy1D,aAAA,SAAAC,GAIA,IAHA,IAAAC,EAAA,GACA57F,EAAA27F,EAAA5yG,UAAA4yE,WAEA37D,GACA47F,EAAApxG,KAAAwV,GACAA,IAAA27D,WAIA,OADAigC,EAAAhgC,UACAggC,GAOAC,SAAA,SAAA53D,GACA,IAAA15C,EAAAxB,KAAA4xG,SAAApwG,KACA,OAAAA,EAAArB,IAAAqB,EAAAuzC,aAAAmG,GAAA,SAAAl7C,KAAAmR,YAOAgrC,UAAA,SAAAn9B,EAAAhhB,GACAgC,KAAAmR,WAAA,GAAAnR,KAAA4xG,SAAApwG,KAAA86C,cAAAt8C,KAAAmR,UAAA6N,EAAAhhB,IAMAo+C,UAAA,WACA,OAAAp8C,KAAA4xG,SAAApwG,KAAA66C,cAAAr8C,KAAAmR,YAOA3E,SAAA,SAAAyS,GACA,KAAAjf,KAAAmR,UAAA,IAIA,IAGAkhG,EAHAT,EAAA5xG,KAAA4xG,SACA3lC,EAAA2lC,EAAApwG,KAAAs6C,aAAA97C,KAAAmR,WACA4hG,EAAA/yG,KAAAgzG,gBAOA,OAJAD,GAAA,IAAA/yG,KAAAurF,SAAA9tF,SAAA,IAAAuC,KAAAurF,SAAA9tF,SAAA,IAAAuC,KAAAizG,YACAZ,EAAAryG,KAAAkzG,kBAGAjnC,EAAAz/D,SAAAyS,GAAA8zF,GAAAV,GAAAT,EAAAlgE,WAAAllC,SAAAyS,MAMA+zF,cAAA,WACA,OAAAhzG,KAAA4xG,SAAAO,aAAA,IAAAnyG,KAAA6xG,QAMAqB,eAAA,WACA,OAAAlzG,KAAA4xG,SAAAS,aAUAn2D,UAAA,SAAAp+C,EAAAwB,GACAU,KAAAmR,WAAA,GAAAnR,KAAA4xG,SAAApwG,KAAAi7C,cAAAz8C,KAAAmR,UAAArT,EAAAwB,IAMAsR,UAAA,SAAA9S,EAAA4qC,GACA,OAAA1oC,KAAA4xG,SAAApwG,KAAA4P,cAAApR,KAAAmR,UAAArT,EAAA4qC,IAOAoP,YAAA,WACA,OAAA93C,KAAA4xG,SAAApwG,KAAAs2C,YAAA93C,KAAAmR,YAOA+iC,MAAA,WACA,OAAAl0C,KAAA4xG,SAAApwG,KAAA0yC,MAAAl0C,KAAAmR,YAUAgiG,aAAA,SAAAl8F,GAGA,IAFA,IAAAjO,EAAAiO,EAAA27D,WAEA5pE,GAAA,CACA,GAAAA,IAAAhJ,KACA,SAGAgJ,IAAA4pE,WAGA,UAUAwgC,eAAA,SAAAn8F,GACA,OAAAA,IAAAjX,MAAAiX,EAAAk8F,aAAAnzG,QAiDA+xG,EAAA71G,UAAA,CACAyB,YAAAo0G,EACAxyG,KAAA,OAmBAgzG,SAAA,SAAA5sD,EAAA7mD,EAAAC,GACAiB,KAAAgzE,KAAAu/B,SAAA5sD,EAAA7mD,EAAAC,IAOAs0G,mBAAA,SAAAliG,GACA,IAAAsiC,EAAAzzC,KAAAwB,KAAAs2C,YAAA3mC,GACA,OAAAnR,KAAAkyG,OAAAz+D,IAOA6/D,cAAA,SAAA/yG,GACA,OAAAP,KAAAgzE,KAAAsgC,cAAA/yG,IAOA2K,OAAA,WAIA,IAHA,IAAA1J,EAAAxB,KAAAwB,KACA+xG,EAAAvzG,KAAAkyG,OAEA30G,EAAA,EAAAC,EAAA+1G,EAAA91G,OAAuCF,EAAAC,EAASD,IAChDg2G,EAAAh2G,GAAA4T,WAAA,EAGA,IAAA5T,EAAA,EAAAC,EAAAgE,EAAA6rB,QAAuC9vB,EAAAC,EAASD,IAChDg2G,EAAA/xG,EAAAs2C,YAAAv6C,IAAA4T,UAAA5T,GAOAi2G,aAAA,WACAxzG,KAAAwB,KAAA+6C,qBA2BAw1D,EAAA0B,WAAA,SAAAC,EAAAhiE,EAAAiiE,GACA,IAAA9qC,EAAA,IAAAkpC,EAAArgE,EAAAiiE,EAAAC,OAAAD,EAAAE,QACAC,EAAA,GACAC,EAAA,GAGA,SAAAC,EAAAC,EAAArhC,GACA,IAAAtzE,EAAA20G,EAAA30G,MACAy0G,EAAAplG,KAAAG,IAAAilG,EAAAlwG,EAAAvF,QAAAgB,KAAA7B,OAAA,GACAq2G,EAAAryG,KAAAwyG,GACA,IAAAh9F,EAAA,IAAA06F,EAAAsC,EAAA1zG,KAAAsoE,GACA+J,EAoCA,SAAA5wD,EAAA/K,GACA,IAAAs0E,EAAAt0E,EAAAs0E,SAEA,GAAAvpE,EAAA4wD,aAAA37D,EACA,OAGAs0E,EAAA9pF,KAAAugB,GACAA,EAAA4wD,WAAA37D,EA5CAi9F,CAAAj9F,EAAA27D,GAAA/J,EAAAmK,KAAA/7D,EAEA4xD,EAAAqpC,OAAAzwG,KAAAwV,GAEA,IAAAs0E,EAAA0oB,EAAA1oB,SAEA,GAAAA,EACA,QAAAhuF,EAAA,EAAqBA,EAAAguF,EAAA9tF,OAAqBF,IAC1Cy2G,EAAAzoB,EAAAhuF,GAAA0Z,GAfA+8F,CAAAN,GAoBA7qC,EAAAmK,KAAA0/B,qBAAA,GACA,IAAAl1B,EAAAziB,EAAA+4C,EAAA,CACAh4C,gBAAA,UACAkhB,gBAAA+2B,IAEAzmG,EAAA,IAAAmkC,EAAA+rC,EAAA9rC,GAQA,OAPApkC,EAAA+nC,SAAAy+D,GACApC,EAAA,CACAyC,SAAA7mG,EACA8mG,OAAAvrC,EACAwrC,WAAA,SAEAxrC,EAAA39D,SACA29D,GAqBA,IAAAznC,EAAA2wE,EACA55E,EAAA93B,QAAA+gC,mBCriBA,IAAAx8B,EAAclB,EAAQ,KAEtB4wG,EAAgB5wG,EAAQ,KA+BxB,SAAA6wG,EAAAzwC,GACA9jE,KAAAw0G,MAAA1wC,GAAAwwC,EACAt0G,KAAAkH,MAAA,IAAAtC,EAAA+Y,MAGA,IAAA82F,EAAAF,EAAAr4G,UAkGA,SAAAglF,EAAAwzB,GACA,IAAAhjE,EAAAgjE,EAAAhjE,UACA,OACAvb,UAAAub,EAAAllC,SAAA,aAAA6gE,eACAsnC,eAAAjjE,EAAAllC,SAAA,sBAAA6gE,eACA/jD,WAAAooB,EAAAllC,SAAA,SACAg1E,gBAAA9vC,EAAAllC,SAAA,mBAmBA,SAAAooG,EAAAC,GACA,OAAAznF,MAAAynF,EAAA,KAAAznF,MAAAynF,EAAA,IAGA,SAAAC,EAAAC,GACA,OAAAH,EAAAG,EAAA,MAAAH,EAAAG,EAAA,IA9HAN,EAAAvyB,aAAA,WACA,UAOAuyB,EAAA/yB,WAAA,SAAAgzB,GACA,IAAAM,EAAAh1G,KACAkH,EAAA8tG,EAAA9tG,MACA+tG,EAAAD,EAAAE,UACAF,EAAAE,UAAAR,EAGAO,GACA/tG,EAAAkzD,YAGA,IAAAynB,EAAAX,EAAAwzB,GACAA,EAAA/6D,KAAAs7D,GAAA9kG,IAAA,SAAA8d,IASA,SAAA+mF,EAAAN,EAAAzmF,EAAA4zD,GAGA,IAAAizB,EAFAJ,EAAAr4D,cAAApuB,IAGA,OAGA,IAAAxlB,EAAA,IAAAusG,EAAAR,MAAAE,EAAAzmF,EAAA4zD,GACA6yB,EAAA93D,iBAAA3uB,EAAAxlB,GACAusG,EAAA9tG,MAAAiJ,IAAA1H,GAjBA0sG,CAAAH,EAAAN,EAAAzmF,EAAA4zD,KACG32E,OAAA,SAAA42E,EAAAE,IAmBH,SAAAgzB,EAAAC,EAAAG,EAAApzB,EAAAF,EAAAD,GACA,IAAAwzB,EAAAJ,EAAAp4D,iBAAAmlC,GAEA,IAAA8yB,EAAAM,EAAA/4D,cAAAylC,IAEA,YADAkzB,EAAA9tG,MAAA6O,OAAAs/F,GAIAA,EAGAA,EAAA3zB,WAAA0zB,EAAAtzB,EAAAD,GAFAwzB,EAAA,IAAAL,EAAAR,MAAAY,EAAAtzB,EAAAD,GAKAuzB,EAAAx4D,iBAAAklC,EAAAuzB,GACAL,EAAA9tG,MAAAiJ,IAAAklG,GAjCAC,CAAAN,EAAAC,EAAAP,EAAA1yB,EAAAF,EAAAD,KACG9rE,OAAA,SAAAkY,GACH/mB,EAAA6O,OAAAk/F,EAAAp4D,iBAAA5uB,MACGm9C,WAiCHqpC,EAAAzhG,aAAA,WACA,IAAA0hG,EAAA10G,KAAAk1G,UAEAR,GAIAA,EAAA53D,kBAAA,SAAAr0C,EAAAwlB,GACAxlB,EAAAuK,aAAA0hG,EAAAzmF,IACGjuB,OAGHy0G,EAAAtyB,yBAAA,SAAAuyB,GACA10G,KAAAoiF,aAAAlB,EAAAwzB,GACA10G,KAAAk1G,UAAA,KACAl1G,KAAAkH,MAAAkzD,aAGAq6C,EAAApyB,kBAAA,SAAAC,EAAAoyB,GACA,SAAAnyB,EAAA95E,GACAA,EAAAiO,UACAjO,EAAAg2E,YAAAh2E,EAAAyO,eAAA,GAIA,QAAA+W,EAAAq0D,EAAArsC,MAAkChoB,EAAAq0D,EAAAz0C,IAAsB5f,IAAA,CAGxD,GAAA6mF,EAFAJ,EAAAr4D,cAAApuB,IAEA,CACA,IAAAxlB,EAAA,IAAAzI,KAAAw0G,MAAAE,EAAAzmF,EAAAjuB,KAAAoiF,cACA35E,EAAAgO,SAAA8rE,GACAviF,KAAAkH,MAAAiJ,IAAA1H,GACAisG,EAAA93D,iBAAA3uB,EAAAxlB,MAeAgsG,EAAA1+F,OAAA,WACA/V,KAAAu1G,oBAEAv1G,KAAAw1G,aAAA,KACAx1G,KAAAkH,MAAAkzD,aAGAq6C,EAAAc,kBAAA,WACA,IAAA92B,EAAAz+E,KAAAw1G,aAEA/2B,GACAA,EAAAisB,oBAYA,IAAAtpE,EAAAmzE,EACAp8E,EAAA93B,QAAA+gC,mBC1KA,IAAAv9B,EAAaH,EAAQ,KAErB6Z,EAAa7Z,EAAQ,KAErB+xG,EAAiB/xG,EAAQ,KAEzBgyG,EAAehyG,EAAQ,KAEvBkB,EAAclB,EAAQ,KAItBib,EAFcjb,EAAQ,KAEtBib,MAwBAg3F,EAAA,0BAEA,SAAAC,EAAAC,GACA,UAAAA,EAAA,OAOA,SAAAn2D,EAAAn/C,EAAAm0G,EAAAzmF,GACA,IAAA9N,EAAAu0F,EAAAtjG,cAAA6c,EAAA,SACAixB,EAAAw1D,EAAAtjG,cAAA6c,EAAA1tB,GACA82B,EAAAq9E,EAAAtjG,cAAA6c,EAAA1tB,EAAA,QAEA,GAAA2+C,GAAA,SAAAA,EAAA,CAIAr7C,EAAAvF,QAAA+4B,KACAA,EAAA,CAAAA,MAGA,IAAAuoB,EAAA61D,EAAA/1D,aAAAR,GAAA7nB,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,GAAAlX,GAEA,OADAy/B,EAAAr/C,OACAq/C,GAWA,SAAAk2D,EAAAC,EAAA3qF,GACA,IAAAuzC,EAAAvzC,EAAA,GACAwzC,EAAAxzC,EAAA,GACA4qF,EAAA5qF,EAAA,GACA2qF,EAAAtuF,GAAAk3C,EAAA,GACAo3C,EAAApuF,GAAAg3C,EAAA,GACAo3C,EAAAruF,GAAAk3C,EAAA,GACAm3C,EAAAnuF,GAAAg3C,EAAA,GACAm3C,EAAAvpF,QAAA,EAEAwpF,GACAD,EAAAE,KAAAD,EAAA,GACAD,EAAAG,KAAAF,EAAA,KAEAD,EAAAE,KAAArpF,IACAmpF,EAAAG,KAAAtpF,KA8GA,SAAAzO,EAAAu2F,EAAAzmF,EAAA4zD,GACAj9E,EAAA+Y,MAAAtgB,KAAA2C,MAEAA,KAAAm2G,YAAAzB,EAAAzmF,EAAA4zD,GAGA,IAAAu0B,EAAAj4F,EAAAjiB,UAEAk6G,EAAAC,aAlHA,WACA,IACAC,EADAt2G,KACAwrF,YAAA,cACA+qB,EAFAv2G,KAEAwrF,YAAA,YACA5zD,EAHA53B,KAGAwrF,YAAA,SAEA,GAAA8qB,GAAAC,IAAA3+E,EAAAxpB,OAAA,CAOA,IAHA,IAAAooG,EAAA,EACA5jC,EAAA5yE,KAAAgJ,OAEA4pE,GACAA,EAAAj2C,QACA65E,GAAA5jC,EAAAj2C,MAAA,IAGAi2C,IAAA5pE,OAGA,IAAAsuB,EApBAt3B,KAoBAwrF,YAAA,QAGA,GAAAxrF,KAAAuiC,SAAAjL,EAAAiL,QAAA,CAIA,IAAA/V,EAAA8K,EAAA9P,MAAAgF,QACAiqF,EAAAn/E,EAAAo/E,QAAA,GACAC,EAAAr/E,EAAAo/E,QAAAlqF,GACAsQ,EAAAvf,EAAAtI,IAAA,GAAA0hG,EAAAF,GAGA,GAFAl5F,EAAAsf,UAAAC,KAEAw5E,EAAA,CACAA,EAAA3vF,KAAA,WAAA8vF,GACA,IAAAG,EAAAt/E,EAAAu/E,UAAA,GACAP,EAAA3vF,KAAA,WAAAhY,KAAA4U,GAAA,EAAA5U,KAAAw3F,MAAAyQ,EAAA,GAAAA,EAAA,KACAN,EAAA3vF,KAAA,SAAA6vF,EAAAhqF,EAAAgqF,EAAAhqF,IAUA,GAPA+pF,IACAA,EAAA5vF,KAAA,WAAAgwF,GACAC,EAAAt/E,EAAAu/E,UAAA,GACAN,EAAA5vF,KAAA,YAAAhY,KAAA4U,GAAA,EAAA5U,KAAAw3F,MAAAyQ,EAAA,GAAAA,EAAA,KACAL,EAAA5vF,KAAA,SAAA6vF,EAAAhqF,EAAAgqF,EAAAhqF,MAGAoL,EAAAxpB,OAAA,CAEA,IAAA+U,EACA0B,EACAC,EAHA8S,EAAAjR,KAAA,WAAAgwF,GAIA,IAAA16E,EAAA,EAAAu6E,EAEA,WAAA5+E,EAAAk/E,WACA3zF,EAAA,CAAA2Z,EAAA,GAAAb,EAAA06E,EAAA,GAAA75E,EAAA,GAAAb,EAAA06E,EAAA,IACA9xF,EAAAiY,EAAA,aAAAA,EAAA,wBACAhY,EAAAgY,EAAA,YAAAA,EAAA,8BAEA,cAAAlF,EAAAk/E,WAAA,CACA,IAAAC,EAAAvqF,EAAA,EAEA6yC,EAAA,EADAu3C,EAAAt/E,EAAAu/E,UAAAE,IACA,IAAAH,EAAA,IACAI,EAAA1/E,EAAAo/E,QAAAK,GAEA13C,EAAA,OACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,IAGAl8C,EAAA,CAAA6zF,EAAA,GAAA33C,EAAA,GAAApjC,EAAA+6E,EAAA,GAAA33C,EAAA,GAAApjC,GACApX,EAAA,SACAC,EAAA,SACA,IAAAoG,GAAAvc,KAAAw3F,MAAAyQ,EAAA,GAAAA,EAAA,IAEAD,EAAA,GAAAF,EAAA,KACAvrF,EAAAvc,KAAA4U,GAAA2H,GAGA0M,EAAAjR,KAAA,WAAAuE,QAGA/H,EAAA,EAAA2Z,EAAA,GAAAb,EAAAw6E,EAAA,IAAA35E,EAAA,GAAAb,EAAAw6E,EAAA,IACA5xF,EAAAiY,EAAA,cAAAA,EAAA,uBACAhY,EAAAgY,EAAA,eAAAA,EAAA,sBAGAlF,EAAAjR,KAAA,CACA5W,MAAA,CAEA+U,kBAAA8S,EAAAq/E,iBAAAnyF,EACAD,UAAA+S,EAAAs/E,aAAAryF,GAEAjF,SAAAuD,EACAwZ,MAAA,CAAA65E,WAqBAJ,EAAAD,YAAA,SAAAzB,EAAAzmF,EAAA4zD,GACA,IAAA9wE,EAAA2jG,EAAAhjE,UAEApa,EAlJA,SAAAlM,GACA,IAAAkM,EAAA,IAAAo+E,EAAA,CACAn1G,KAAA,SAGA,OADAu1G,EAAAx+E,EAAA9P,MAAA4D,GACAkM,EA6IA6/E,CADAzC,EAAAr4D,cAAApuB,IAEAqJ,EAAA9P,MAAAgF,QAAA,EACA5nB,EAAA+kB,UAAA2N,EAAA,CACA9P,MAAA,CACAgF,QAAA,IAEGzb,EAAAkd,GACHjuB,KAAAmQ,IAAAmnB,GACA,IAAAM,EAAA,IAAAhzB,EAAAgZ,KAAA,CACArd,KAAA,UAEAP,KAAAmQ,IAAAynB,GACA/zB,EAAAjF,KAAA+2G,EAAA,SAAAE,GACA,IAAAz+E,EAAAsoB,EAAAm2D,EAAAnB,EAAAzmF,GAIAjuB,KAAAmQ,IAAAinB,GACAp3B,KAAA41G,EAAAC,IAAAnB,EAAAtjG,cAAA6c,EAAA4nF,IACG71G,MAEHA,KAAAo3G,iBAAA1C,EAAAzmF,EAAA4zD,IAGAu0B,EAAA10B,WAAA,SAAAgzB,EAAAzmF,EAAA4zD,GACA,IAAA9wE,EAAA2jG,EAAAhjE,UACApa,EAAAt3B,KAAAwrF,YAAA,QACA6rB,EAAA3C,EAAAr4D,cAAApuB,GACAhwB,EAAA,CACAupB,MAAA,IAEAsuF,EAAA73G,EAAAupB,MAAA6vF,GACAzyG,EAAAgiB,YAAA0Q,EAAAr5B,EAAA8S,EAAAkd,GACApqB,EAAAjF,KAAA+2G,EAAA,SAAAE,GACA,IAAA32D,EAAAw1D,EAAAtjG,cAAA6c,EAAA4nF,GACA/3G,EAAA83G,EAAAC,GAEA,GAAA71G,KAAAlC,KAAAohD,EAAA,CACAl/C,KAAA+V,OAAA/V,KAAAwrF,YAAAqqB,IACA,IAAAz+E,EAAAsoB,EAAAm2D,EAAAnB,EAAAzmF,GACAjuB,KAAAmQ,IAAAinB,GAGAp3B,KAAAlC,GAAAohD,GACGl/C,MAEHA,KAAAo3G,iBAAA1C,EAAAzmF,EAAA4zD,IAGAu0B,EAAAgB,iBAAA,SAAA1C,EAAAzmF,EAAA4zD,GACA,IAAA9wE,EAAA2jG,EAAAhjE,UACApa,EAAAt3B,KAAAwrF,YAAA,QACAr1D,EAAA0rD,KAAA1rD,UACAw+E,EAAA9yB,KAAA8yB,eACArrF,EAAAu4D,KAAAv4D,WACAk4D,EAAAK,KAAAL,gBAEA,IAAAK,GAAA6yB,EAAA5/D,cAAA,CACA,IAAAm3B,EAAAyoC,EAAA54D,aAAA7tB,GACAkI,EAAA81C,EAAAz/D,SAAA,aAAA6gE,eACAsnC,EAAA1oC,EAAAz/D,SAAA,sBAAA6gE,eACA/jD,EAAA2iD,EAAAz/D,SAAA,SACAg1E,EAAAvV,EAAAz/D,SAAA,kBAGA,IAAA8qG,EAAA5C,EAAAtjG,cAAA6c,EAAA,SACAspF,EAAA1zG,EAAAvB,UAAAoyG,EAAAtjG,cAAA6c,EAAA,WAAAkI,EAAAkgD,QAAA,GACA/+C,EAAAwnD,SAAAj7E,EAAArF,SAAA,CACAmtB,eAAA,EACAnL,KAAA,OACAD,OAAA+2F,EACAjhC,QAAAkhC,GACGphF,IACHmB,EAAA7W,WAAAk0F,EAEA9wG,EAAAjF,KAAA+2G,EAAA,SAAAE,GACA,IAAAz+E,EAAAp3B,KAAAwrF,YAAAqqB,GAEAz+E,IACAA,EAAAyoB,SAAAy3D,GACAlgF,EAAAxgB,SAAA,CACAy/D,QAAAkhC,MAGGv3G,MACH,IAGAw3G,EACA9uF,EAJA+uF,EAAAnuF,EAAAlG,WAAA,QACAs0F,EAAAl2B,EAAAp+D,WAAA,QACAwU,EAAA53B,KAAAwrF,YAAA,SAIA,IAAAisB,GAAAC,KACAF,EAAAF,GAAA,OAGA,OAFA5uF,EAAA3X,EAAAiY,kBAAAiF,EAAA,SAAAymF,EAAA77F,YAEA,CACA,IAAA8+F,EAAA5mG,EAAAy6B,YAAAvd,GACAvF,EAAA,MAAAivF,EAAAjD,EAAAloE,QAAAve,GAAAH,SAAA6pF,GAAAh5F,EAAAg5F,KAIA,IAAAC,EAAAH,EAAA/uF,EAAA,KACAmvF,EAAAH,EAAA7zG,EAAA1B,UAAA4O,EAAAiY,kBAAAiF,EAAA,WAAAymF,EAAA77F,UAAA6P,GAAA,KACAovF,EAAAlgF,EAAA7nB,MAGA,MAAA6nG,GAAA,MAAAC,IACAjzG,EAAA+d,aAAAiV,EAAA7nB,MAAAuZ,EAAA,CACAF,KAAAwuF,GACK,CACLl2F,UAAA81F,IAEA5/E,EAAAs/E,YAAAY,EAAAjzF,UACA+S,EAAAq/E,gBAAAa,EAAAhzF,kBAEA8S,EAAAk/E,WAAAxtF,EAAAnpB,IAAA,uBAKAy3B,EAAAnX,WAFA,MAAAo3F,EAEA,CACAzuF,KAAAyuF,EACA12F,SAAAqgE,EAAAvS,cAAA,GAGAxqD,UAAA+8D,EAAAp+D,WAAA,aACAsB,WAAA88D,EAAAp+D,WAAA,cACAuB,SAAA68D,EAAAp+D,WAAA,YACAwB,WAAA48D,EAAAp+D,WAAA,eAGA,CACAgG,KAAA,MAIAwO,EAAAxpB,QAAAqpG,IAAAC,EACA9yG,EAAAsjB,cAAAloB,OAGAo2G,EAAAn8C,UAAA,WACAj6D,KAAA+J,QAAA,aAGAqsG,EAAAj8C,SAAA,WACAn6D,KAAA+J,QAAA,WAGAqsG,EAAApjG,aAAA,SAAA0hG,EAAAzmF,GACAjuB,KAAA81G,cAAApB,EAAAr4D,cAAApuB,KAGAmoF,EAAAN,cAAA,SAAA1qF,GACA,IAAA2sF,EAAA/3G,KAAAwrF,YAAA,QACAsqB,EAAAiC,EAAAvwF,MAAA4D,GACA2sF,EAAA1hG,SAGAxS,EAAA9C,SAAAod,EAAAvZ,EAAA+Y,OACA,IAAAyjB,EAAAjjB,EACAga,EAAA93B,QAAA+gC,mBClXc19B,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErBO,EAAeP,EAAQ,KAEvBkB,EAAclB,EAAQ,KAEtBw8F,EAAuBx8F,EAAQ,KAE/BksC,EAAiBlsC,EAAQ,KAqBzB9B,EAAAiC,EAAAjC,MACAhD,EAAAiF,EAAAjF,KACA/B,EAAAgH,EAAAhH,IACA6R,EAAAC,KAAAC,IACAC,EAAAF,KAAAG,IACAgvD,EAAAnvD,KAAA0f,IACA2pF,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,YACAC,EAAA,CACAp0E,EAAA,MACAtrB,EAAA,MACA2mD,EAAA,MACAziC,EAAA,OAEAy7E,EAAA,CACAr0E,EAAA,KACAtrB,EAAA,KACA2mD,EAAA,KACAziC,EAAA,KACA07E,GAAA,OACAC,GAAA,OACAC,GAAA,OACAC,GAAA,QAEAC,EAAA,CACAC,WAAA,CACA94F,UAAA,EACAU,OAAA,kBACAC,KAAA,mBAEAo4F,eAAA,EACAC,UAAA,SACAC,eAAA,GAEAC,EAAA,EAiBA,SAAAC,EAAA5xG,GACAnD,EAAA5G,KAAA2C,MAMAA,KAAAqH,IAAAD,EAMApH,KAAAkH,MAAA,IAAAtC,EAAA+Y,MAUA3d,KAAAi5G,WAQAj5G,KAAAk5G,aAMAl5G,KAAAm5G,QAMAn5G,KAAAo5G,OAAA,GAMAp5G,KAAAwhG,UAMAxhG,KAAAq5G,QAAA,GAMAr5G,KAAAs5G,eAOAt5G,KAAAu5G,eAMAv5G,KAAAw5G,iBAWAx5G,KAAAy5G,KAAA,mBAAAV,IAMA/4G,KAAA05G,UAAA,GACA96G,EAAA+6G,EAAA,SAAAlzG,EAAAD,GACAxG,KAAA05G,UAAAlzG,GAAA3C,EAAA7E,KAAAyH,EAAAzG,OACGA,MAqKH,SAAA45G,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,EAAAG,WAAAL,YAAAC,EAAAC,GAIA,OAHAC,EAAAG,cAAAJ,EACA5jG,EAAA6jG,EAAAD,GACAD,EAAA3yG,MAAAiJ,IAAA4pG,GACAA,EAGA,SAAAI,EAAAN,EAAAO,GACA,IAAAC,EAAAC,EAAAF,GAOA,OALAC,EAAAF,cACAE,EAAAF,YAAAN,EAAAO,GACAlkG,EAAAkkG,IAAAF,gBAGAE,EAGA,SAAAG,EAAAV,EAAAE,GACA,IAAAD,EAAAC,EAAAG,cACAI,EAAAP,GAAAQ,iBAAAV,EAAAE,EAAAD,EAAA3tF,MAAA2tF,GAGA,SAAA5jG,EAAA6jG,EAAAD,GACA,IAAAvhG,EAAAuhG,EAAAvhG,EACA,MAAAA,MAAAy/F,GACA+B,EAAAtjG,SAAA,SAAAhO,GACAA,EAAA8P,IACA9P,EAAAkZ,GAAApJ,IAIA,SAAAiiG,EAAAX,EAAAE,GACAO,EAAAP,GAAAU,aAAAZ,EAAAE,GACAQ,EAAAV,EAAAE,GAGA,SAAAO,EAAAP,GACA,OAAAC,EAAAD,EAAAG,cAAAD,WAIA,SAAAS,EAAAb,EAAAnhG,EAAAiiG,GACA,IAMAC,EANAC,EAAAhB,EAAAV,QAEA,IAAA0B,EACA,SAIA,IAAAh0F,EAAAgzF,EAAAhtC,WAIA,OAHAjuE,EAAAi8G,EAAA,SAAAC,GACAA,EAAAC,iBAAAriG,EAAAiiG,EAAA9zF,KAAA+zF,EAAAE,KAEAF,EAIA,SAAAI,EAAAnB,EAAAE,GACA,IAAAc,EAAAhB,EAAAV,QAEA,IAAA0B,EACA,SAGA,IAAAI,EAAAlB,EAAAG,cAAAe,QAGA,aAAAA,GAAAJ,EAAAI,GAGA,SAAAC,EAAArB,GACA,IAAAsB,EAAAtB,EAAAR,QACA+B,EAAAD,EAAA19G,OAKA,OAJAmB,EAAAu8G,EAAA,SAAApB,GACAF,EAAA3yG,MAAA6O,OAAAgkG,IACGF,GACHsB,EAAA19G,OAAA,IACA29G,EAGA,SAAArxG,EAAA8vG,EAAA9hG,GACA,IAAAsjG,EAAAx+G,EAAAg9G,EAAAR,QAAA,SAAAU,GACA,IAAAD,EAAAC,EAAAG,cACA/tF,EAAAtoB,EAAA5G,MAAA68G,EAAA3tF,OACA,OACA8tF,UAAAH,EAAAG,UACAgB,QAAAnB,EAAAmB,QACA9uF,WAGA0tF,EAAA9vG,QAAA,QAAAsxG,EAAA,CACAC,QAAAvjG,EAAAujG,MACAxC,gBAAA/gG,EAAA+gG,gBAmBA,SAAAyC,EAAAC,GACA,IAAAC,EAAAD,EAAA/9G,OAAA,EAEA,OADAg+G,EAAA,IAAAA,EAAA,GACA,CAAAD,EAAA,GAAAA,EAAAC,IAGA,SAAAC,EAAAC,EAAA9B,EAAAC,EAAA8B,GACA,IAAA7B,EAAA,IAAAn1G,EAAA+Y,MA2BA,OA1BAo8F,EAAA5pG,IAAA,IAAAvL,EAAAsZ,KAAA,CACA3d,KAAA,OACAwP,MAAA8rG,EAAA/B,GACA/uG,QAAA,EACAszE,WAAA,EACAG,OAAA,OACA0Z,MAAAt2F,EAAA+5G,EAAA9B,EAAAE,EAAA,QACA+B,UAAAl6G,EAAAmI,EAAA8vG,EAAA,CACAyB,OAAA,OAGA18G,EAAAg9G,EAAA,SAAAr7G,GACAw5G,EAAA5pG,IAAA,IAAAvL,EAAAsZ,KAAA,CACA3d,OACAwP,MAAA,CACAsmE,QAAA,GAEAgI,WAAA,EACAtzE,QAAA,EACAqzE,WAAA,EACA8Z,MAAAt2F,EAAA+5G,EAAA9B,EAAAE,EAAAx5G,GACAu7G,UAAAl6G,EAAAmI,EAAA8vG,EAAA,CACAyB,OAAA,SAIAvB,EAGA,SAAAgC,EAAAlC,EAAAE,EAAAiC,EAAAlC,GACA,IAAAj6F,EAAAi6F,EAAAnB,WAAA94F,WAAA,EACAo8F,EAAAptG,EAAAgR,EAAAq4F,GACAloG,EAAAgsG,EAAA,MACA/rG,EAAA+rG,EAAA,MACAE,EAAAlsG,EAAA6P,EAAA,EACAs8F,EAAAlsG,EAAA4P,EAAA,EACA6H,EAAAs0F,EAAA,MACAp0F,EAAAo0F,EAAA,MACAI,EAAA10F,EAAAu0F,EAAAp8F,EAAA,EACAw8F,EAAAz0F,EAAAq0F,EAAAp8F,EAAA,EACApY,EAAAigB,EAAA1X,EACAtI,EAAAkgB,EAAA3X,EACAqsG,EAAA70G,EAAAoY,EACA08F,EAAA70G,EAAAmY,EACA28F,EAAA3C,EAAAE,EAAA,OAAA/pG,EAAAC,EAAAxI,EAAAC,GAEAoyG,EAAAlB,gBACA4D,EAAA3C,EAAAE,EAAA,IAAAmC,EAAAC,EAAAF,EAAAM,GACAC,EAAA3C,EAAAE,EAAA,IAAAqC,EAAAD,EAAAF,EAAAM,GACAC,EAAA3C,EAAAE,EAAA,IAAAmC,EAAAC,EAAAG,EAAAL,GACAO,EAAA3C,EAAAE,EAAA,IAAAmC,EAAAG,EAAAC,EAAAL,GACAO,EAAA3C,EAAAE,EAAA,KAAAmC,EAAAC,EAAAF,KACAO,EAAA3C,EAAAE,EAAA,KAAAqC,EAAAD,EAAAF,KACAO,EAAA3C,EAAAE,EAAA,KAAAmC,EAAAG,EAAAJ,KACAO,EAAA3C,EAAAE,EAAA,KAAAqC,EAAAC,EAAAJ,MAIA,SAAAxB,EAAAZ,EAAAE,GACA,IAAAD,EAAAC,EAAAG,cACAtB,EAAAkB,EAAAlB,cACA6D,EAAA1C,EAAA9gF,QAAA,GACAwjF,EAAA39B,SAAA+8B,EAAA/B,IACA2C,EAAA91F,KAAA,CACA5b,QAAA6tG,EACAp6B,OAAAo6B,EAAA,mBAEAh6G,EAAA,+CAAA2B,GACA,IAAAkI,EAAAsxG,EAAAvuB,YAAAjrF,GACAm8G,EAgCA,SAAAC,EAAA9C,EAAA+C,GACA,GAAAA,EAAAn/G,OAAA,GACAm/G,IAAAxoG,MAAA,IACA,IAAAsoG,EAAA,CAAAC,EAAA9C,EAAA+C,EAAA,IAAAD,EAAA9C,EAAA+C,EAAA,KAEA,OADA,MAAAF,EAAA,UAAAA,EAAA,KAAAA,EAAA7pC,UACA6pC,EAAAhzF,KAAA,IAEA,IAYAgzF,EAAA93G,EAAAqlB,mBAZA,CACA+Z,EAAA,OACAtrB,EAAA,QACA2mD,EAAA,MACAziC,EAAA,UAQAggF,GAvBA,SAAA/C,GACA,OAAAj1G,EAAAglB,aAAAiwF,EAAA3yG,OAsBA0iB,CAAAiwF,IACA,MAPA,CACA7qG,KAAA,IACAG,MAAA,IACAD,IAAA,IACAE,OAAA,KAGAstG,GApDAC,CAAA9C,EAAAt5G,GACAkI,KAAAke,KAAA,CACA5b,QAAA6tG,EACAx6B,WAAAw6B,EACAp6B,OAAAo6B,EAAAP,EAAAqE,GAAA,mBAKA,SAAAF,EAAA3C,EAAAE,EAAAx5G,EAAAyP,EAAAC,EAAA+zB,EAAA5J,GACA,IAAA3xB,EAAAsxG,EAAAvuB,YAAAjrF,GACAkI,KAAAo8B,SAqFA,SAAAzZ,GACA,IAAAyxF,EAAAnuG,EAAA0c,EAAA,MAAAA,EAAA,OACA0xF,EAAApuG,EAAA0c,EAAA,MAAAA,EAAA,OACA2xF,EAAAluG,EAAAuc,EAAA,MAAAA,EAAA,OACA4xF,EAAAnuG,EAAAuc,EAAA,MAAAA,EAAA,OACA,OACApb,EAAA6sG,EACA5sG,EAAA6sG,EACAr1G,MAAAs1G,EAAAF,EACAn1G,OAAAs1G,EAAAF,GA9FAG,CAAAC,EAAArD,EAAAE,EAAA,EAAA/pG,EAAAC,GAAA,CAAAD,EAAAg0B,EAAA/zB,EAAAmqB,OAGA,SAAAyhF,EAAA/B,GACA,OAAAj2G,EAAArF,SAAA,CACAmtB,eAAA,GACGmuF,EAAAnB,YAGH,SAAAwE,EAAAntG,EAAAC,EAAAyX,EAAAE,GACA,IAAAhZ,EAAA,CAAAF,EAAAsB,EAAA0X,GAAAhZ,EAAAuB,EAAA2X,IACA9Y,EAAA,CAAAD,EAAAmB,EAAA0X,GAAA7Y,EAAAoB,EAAA2X,IACA,QAAAhZ,EAAA,GAAAE,EAAA,IACA,CAAAF,EAAA,GAAAE,EAAA,KAgCA,SAAAsuG,EAAAC,EAAAC,EAAAzD,EAAAE,EAAAx5G,EAAAk6B,EAAAC,EAAAhiB,GACA,IAAAohG,EAAAC,EAAAG,cACAqD,EAAAF,EAAAvD,EAAA3tF,OACAqxF,EAAAC,EAAA5D,EAAAp/E,EAAAC,GACA97B,EAAA2B,EAAA6T,MAAA,aAAAspG,GACA,IAAAC,EAAAvF,EAAAsF,GACAH,EAAAI,EAAA,IAAAA,EAAA,KAAAH,EAAAG,EAAA,MAEA7D,EAAA3tF,MAAAmxF,EAAAH,EAAAI,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QACA/C,EAAAX,EAAAE,GACAhwG,EAAA8vG,EAAA,CACAyB,OAAA,IAIA,SAAAsC,EAAA/D,EAAAE,EAAAt/E,EAAAC,EAAAhiB,GACA,IAAAyT,EAAA4tF,EAAAG,cAAA/tF,MACAqxF,EAAAC,EAAA5D,EAAAp/E,EAAAC,GACA97B,EAAAutB,EAAA,SAAAd,GACAA,EAAA,IAAAmyF,EAAA,GACAnyF,EAAA,IAAAmyF,EAAA,KAEAhD,EAAAX,EAAAE,GACAhwG,EAAA8vG,EAAA,CACAyB,OAAA,IAIA,SAAAmC,EAAA5D,EAAAp/E,EAAAC,GACA,IAAAmjF,EAAAhE,EAAA3yG,MACA42G,EAAAD,EAAAz5E,sBAAA3J,EAAAC,GACAqjF,EAAAF,EAAAz5E,sBAAA,KACA,OAAA05E,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAGA,SAAAb,EAAArD,EAAAE,EAAAv4G,GACA,IAAAo5G,EAAAI,EAAAnB,EAAAE,GACA,OAAAa,IAAA,IAAAA,IAAAoD,SAAAx8G,EAAAq4G,EAAAhtC,YAAAhpE,EAAA5G,MAAAuE,GAwCA,SAAA01D,EAAAx+C,GACA,IAAAulG,EAAAvlG,EAAA3D,MACAkpG,EAAA/mD,gBAAA+mD,EAAA/mD,iBAGA,SAAAgnD,EAAAnE,EAAA/pG,EAAAC,GACA,OAAA8pG,EAAAvuB,YAAA,QAAAtqD,QAAAlxB,EAAAC,GAGA,SAAAkuG,EAAAtE,EAAAnhG,EAAAiiG,EAAAW,GACA,IAGA8C,EAHAhE,EAAAP,EAAAP,eACAsB,EAAAf,EAAAN,eACA8E,EAAAxE,EAAAX,aAKA,GAFAW,EAAAT,OAAA33G,KAAAk5G,EAAAh+G,SAhPA,SAAAk9G,GACA,IAAA2B,EAAA3B,EAAAT,OAEA,IAAAoC,EAAA/9G,OACA,SAGA,IAAAmhE,EAAA48C,IAAA/9G,OAAA,GACAkhE,EAAA68C,EAAA,GACA/gF,EAAAmkC,EAAA,GAAAD,EAAA,GACAjkC,EAAAkkC,EAAA,GAAAD,EAAA,GAEA,OADAb,EAAArjC,IAAAC,IAAA,IACAu9E,EAsOAqG,CAAAzE,IAAAO,EAAA,CACA,GAAAQ,IAAAR,EAAA,CACA,WAAAiE,EAAAxF,WAAAqC,EAAArB,GACA,IAAAC,EAAAj2G,EAAA5G,MAAAohH,GACAvE,EAAAG,UAAAsE,EAAAzE,EAAAG,UAAAW,GACAd,EAAAmB,SAAA,IAAAL,EAAA,KAAAA,EAAAK,QACAb,EAAAP,EAAAP,eAAAM,EAAAC,EAAAC,GAEAD,EAAAR,QAAA53G,KAAA24G,GAGA,GAAAA,EAAA,CACA,IAAAC,EAAAL,EAAAuE,EAAA1E,EAAAZ,WAAA2B,IACAR,EAAAF,cACA/tF,MAAAkuF,EAAAmE,iBAAAtB,EAAArD,EAAAO,EAAAP,EAAAT,SAEAkC,IACAnB,EAAAN,EAAAO,GACAC,EAAAI,aAAAZ,EAAAO,IAGAG,EAAAV,EAAAO,GACAgE,EAAA,CACA9C,eAGGA,GAAA,WAAA+C,EAAAxF,WAAAwF,EAAAvF,eAMH4B,EAAAb,EAAAnhG,EAAAiiG,IAAAO,EAAArB,KACAuE,EAAA,CACA9C,QACAxC,eAAA,IAKA,OAAAsF,EAGA,SAAAG,EAAAtE,EAAAW,GACA,eAAAX,EACAW,EAAA6D,iBAGAxE,EAtiBAjB,EAAA98G,UAAA,CACAyB,YAAAq7G,EAmBA0F,YAAA,SAAA5E,GAGA,OAFA95G,KAAAi5G,YAoIA,SAAAY,GACA,IAAAzyG,EAAAyyG,EAAAxyG,IACA64F,EAAAye,QAAAv3G,EAAA+wG,EAAA0B,EAAAJ,MACA76G,EAAAi7G,EAAAH,UAAA,SAAAjzG,EAAAD,GACAY,EAAA+C,IAAA3D,EAAAC,KAEAozG,EAAAZ,WAAAY,EAAAX,aAAA,KA1IA0F,CAAA5+G,MACA85G,EAAAG,WAqHA,SAAAJ,EAAAC,GACA,IAAA1yG,EAAAyyG,EAAAxyG,IAEAwyG,EAAAL,kBACAtZ,EAAA2e,KAAAz3G,EAAA+wG,EAAA0B,EAAAJ,MAGA76G,EAAAi7G,EAAAH,UAAA,SAAAjzG,EAAAD,GACAY,EAAAwC,GAAApD,EAAAC,KAEAozG,EAAAZ,WAAAa,EAAAG,UACAJ,EAAAX,aAAAr1G,EAAA7F,MAAA6F,EAAA5G,MAAAy7G,GAAAoB,GAAA,GAhIAgF,CAAA9+G,KAAA85G,GACA95G,MAaA++G,UAAA,SAAAC,GACA,GAAAA,KAAAvhH,OAAA,CACA,IAAAo9G,EAAA76G,KAAAm5G,QAAA,GACAt1G,EAAAjF,KAAAogH,EAAA,SAAAA,GACAnE,EAAAmE,EAAA/D,SAAAp3G,EAAA5G,MAAA+hH,UAGAh/G,KAAAm5G,QAAA,KAGA,OAAAn5G,MAOAi/G,MAAA,SAAAlnG,GACAA,KAAA,GACA/X,KAAAw5G,iBAAAzhG,EAAAmnG,gBACA,IAAArB,EAAA79G,KAAAkH,MAUA,OARAlH,KAAAqH,IAAA8I,IAAA0tG,GAEAA,EAAAl3F,KAAA,CACA/G,SAAA7H,EAAA6H,UAAA,MACAsL,SAAAnT,EAAAmT,UAAA,EACAyR,MAAA5kB,EAAA4kB,OAAA,QAEA38B,KAAA6sE,WAAAgxC,EAAA92F,oBACA/mB,MAEAm/G,UAAA,SAAArgH,EAAAC,GACAH,EAAAoB,KAAAq5G,QAAAv6G,EAAAC,IAgBAqgH,aAAA,SAAAC,GACAA,EAAAx7G,EAAAhH,IAAAwiH,EAAA,SAAAvF,GACA,OAAAj2G,EAAA7F,MAAA6F,EAAA5G,MAAAy7G,GAAAoB,GAAA,KAEA,IAAAwF,EAAA,kBACAC,EAAAv/G,KAAAq5G,QACAmG,EAAAx/G,KAAAq5G,QAAA,GACAQ,EAAA75G,KACAo6G,EAAAp6G,KAAAs5G,eAEA,OADA,IAAA1pE,EAAA2vE,EAAAF,EAOA,SAAAtF,EAAAhxG,GACA,OAAA02G,EAAA1F,EAAAG,cAAAnxG,IARA02G,GAAAtvG,IAAAuvG,GAAAx0G,OAAAw0G,GAAA3pG,OAuBA,SAAA4pG,GACAJ,EAAAI,KAAAvF,GACAP,EAAA3yG,MAAA6O,OAAAwpG,EAAAI,MAzBAv0C,UACAprE,KAEA,SAAAy/G,EAAA3F,EAAA/wG,GACA,aAAA+wG,EAAA7yG,GAAA6yG,EAAA7yG,GAAAq4G,EAAAv2G,GAAA,IAAA+wG,EAAAG,UAOA,SAAAyF,EAAAE,EAAAD,GACA,IAAAE,EAAAR,EAAAO,GAGA,SAAAD,GAAAJ,EAAAI,KAAAvF,EACAoF,EAAAI,GAAAL,EAAAI,OACO,CACP,IAAA5F,EAAAyF,EAAAI,GAAA,MAAAD,GAAAJ,EAAAI,GAAAzF,cAAA2F,EAAAN,EAAAI,IAAAxF,EAAAN,EAAAD,EAAAC,EAAAgG,IACArF,EAAAX,EAAAE,MAUA+F,QAAA,WAOA,OANA9/G,KAAA0+G,aAAA,GAEAxD,EAAAl7G,MAEAA,KAAAqH,IAAA0O,OAAA/V,KAAAkH,OAEAlH,MAEA8V,QAAA,WACA9V,KAAA8/G,UACA9/G,KAAAmK,QAGAtG,EAAAvC,MAAA03G,EAAA/0G,GAgaA,IAAA01G,EAAA,CACApZ,UAAA,SAAA7nF,GACA,GAAA1Y,KAAAwhG,UAGAue,EAAA1iH,KAAA2C,KAAA0Y,QACK,IAAAA,EAAAza,SAAAya,EAAAza,OAAAogF,UAAA,CACLnnB,EAAAx+C,GACA,IAAAiiG,EAAA36G,KAAAkH,MAAAk9B,sBAAA1rB,EAAAg+C,QAAAh+C,EAAAo+C,SACA92D,KAAAs5G,eAAA,MACAt5G,KAAAu5G,eAAAmB,EAAA16G,KAAA0Y,EAAAiiG,MAGA36G,KAAAwhG,WAAA,EACAxhG,KAAAo5G,OAAA,CAAAuB,EAAAh+G,YAIA8jG,UAAA,SAAA/nF,GACA,IAAAiiG,EAAA36G,KAAAkH,MAAAk9B,sBAAA1rB,EAAAg+C,QAAAh+C,EAAAo+C,SAGA,GAlHA,SAAA+iD,EAAAnhG,EAAAiiG,GAEA,GAAAd,EAAAZ,WAAA,CAIA,IAAA7xG,EAAAyyG,EAAAxyG,IACA8zG,EAAAtB,EAAAR,QACA2G,EAAAtF,EAAAb,EAAAnhG,EAAAiiG,GAEA,IAAAd,EAAArY,UACA,QAAAjkG,EAAA,EAAmBA,EAAA49G,EAAA19G,OAAmBF,IAAA,CACtC,IAAAu8G,EAAAqB,EAAA59G,GAAA28G,cAEA,GAAA8F,KAAA,IAAAA,GAAAlG,EAAAmB,UAAA+E,EAAA/E,UAAAjB,EAAAF,EAAAG,WAAA/4E,QAAAi6E,EAAA59G,GAAAo9G,EAAA,GAAAA,EAAA,IAEA,OAKAqF,GAAA54G,EAAA4jF,eAAA,cA2FAi1B,CAAAjgH,KAAA0Y,EAAAiiG,GAEA36G,KAAAwhG,UAAA,CACAtqC,EAAAx+C,GACA,IAAA0lG,EAAAD,EAAAn+G,KAAA0Y,EAAAiiG,GAAA,GACAyD,GAAAr0G,EAAA/J,KAAAo+G,KAGAzd,QAAAof,GAOA,SAAAA,EAAArnG,GACA,GAAA1Y,KAAAwhG,UAAA,CACAtqC,EAAAx+C,GACA,IACA0lG,EAAAD,EAAAn+G,KAAA0Y,EADA1Y,KAAAkH,MAAAk9B,sBAAA1rB,EAAAg+C,QAAAh+C,EAAAo+C,UACA,GACA92D,KAAAwhG,WAAA,EACAxhG,KAAAo5G,OAAA,GACAp5G,KAAAs5G,eAAA,KAEA8E,GAAAr0G,EAAA/J,KAAAo+G,IASA,IAAApE,EAAA,CACAnyC,MAAAq4C,EAAA,GACAp4C,MAAAo4C,EAAA,GACAnhG,KAAA,CACA66F,YAAA,SAAAC,EAAAC,GACA,OAAA4B,EAAA95G,EAAAw7G,EAAA,SAAAjxF,GACA,OAAAA,GACO,SAAAA,GACP,OAAAA,IACO0tF,EAAAC,EAAA,wCAEP0E,iBAAA,SAAA2B,GACA,IAAAC,EAAA7E,EAAA4E,GACA,OAAAhD,EAAAiD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAEA7F,iBAAA,SAAAV,EAAAE,EAAAiC,EAAAlC,GACAiC,EAAAlC,EAAAE,EAAAiC,EAAAlC,IAEAW,eACAv5E,QAAAg9E,GAEAt2C,QAAA,CACAgyC,YAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAn1G,EAAA+Y,MAQA,OALAo8F,EAAA5pG,IAAA,IAAAvL,EAAAqZ,SAAA,CACA1d,KAAA,OACAwP,MAAA8rG,EAAA/B,GACA/uG,QAAA,KAEAgvG,GAEAyE,iBAAA,SAAA2B,GACA,OAAAA,GAEAhG,YAAA,SAAAN,EAAAE,GACAA,EAAAhkG,OAAAgkG,EAAA9gF,QAAA,IAEA8gF,EAAA5pG,IAAA,IAAAvL,EAAAoZ,QAAA,CACAzd,KAAA,OACA89E,WAAA,EACA6Z,MAAAt2F,EAAAg8G,EAAA/D,EAAAE,GACA+B,UAAAl6G,EAAAmI,EAAA8vG,EAAA,CACAyB,OAAA,QAIAf,iBAAA,SAAAV,EAAAE,EAAAiC,EAAAlC,GACAC,EAAA9gF,QAAA,GAAA4L,SAAA,CACAzZ,OAAA8xF,EAAArD,EAAAE,EAAAiC,MAGAvB,eACAv5E,QAAAg9E,IAIA,SAAAgC,EAAAG,GACA,OACAzG,YAAA,SAAAC,EAAAC,GACA,OAAA4B,EAAA95G,EAAAw7G,EAAA,SAAAjxF,GACA,IAAAoxF,EAAA,CAAApxF,EAAA,SAEA,OADAk0F,GAAA9C,EAAA1qC,UACA0qC,GACO,SAAAA,GACP,OAAAA,EAAA8C,KACOxG,EAAAC,EAAA,sBAAAuG,KAEP7B,iBAAA,SAAA2B,GACA,IAAAC,EAAA7E,EAAA4E,GAGA,OAFAzxG,EAAA0xG,EAAA,GAAAC,GAAAD,EAAA,GAAAC,IACAxxG,EAAAuxG,EAAA,GAAAC,GAAAD,EAAA,GAAAC,MAGA9F,iBAAA,SAAAV,EAAAE,EAAAiC,EAAAlC,GACA,IAAAwG,EAEA1F,EAAAI,EAAAnB,EAAAE,GAEA,QAAAa,KAAA2F,0BACAD,EAAA1F,EAAA2F,0BAAAF,EAAAxG,EAAAhtC,gBACO,CACP,IAAAzlE,EAAAyyG,EAAAxyG,IACAi5G,EAAA,IAAAl5G,EAAAsF,WAAAtF,EAAAuF,aAAA,EAAA0zG,IAGA,IAAA9C,EAAA,CAAAvB,EAAAsE,GACAD,GAAA9C,EAAA1qC,UACAkpC,EAAAlC,EAAAE,EAAAwD,EAAAzD,IAEAW,eACAv5E,QAAAg9E,GAIA,IAAA98E,EAAA43E,EACA7gF,EAAA93B,QAAA+gC,mBCt3BA,IAAAv9B,EAAaH,EAAQ,KAErBi2D,EAAgBj2D,EAAQ,KAExBkB,EAAclB,EAAQ,KAEtBiuE,EAA6BjuE,EAAQ,KAErCu8F,EAAgBv8F,EAAQ,KAExB88G,EAAmB98G,EAAQ,KAwB3B2iC,GAAArT,EAtBatvB,EAAQ,KAErBsvB,aAqBA/1B,EAAA4G,EAAA5G,MACA+B,EAAA6E,EAAA7E,KAMA,SAAAyhH,KAmaA,SAAA75F,EAAA85F,EAAAC,EAAAl4G,EAAAyd,IAQA,SAAA06F,EAAAC,EAAAC,GACA,GAAAj9G,EAAA1F,SAAA0iH,IAAAh9G,EAAA1F,SAAA2iH,GAAA,CACA,IAAAC,GAAA,EAIA,OAHAl9G,EAAAjF,KAAAkiH,EAAA,SAAAlxG,EAAA9R,GACAijH,KAAAH,EAAAC,EAAA/iH,GAAA8R,OAEAmxG,EAEA,OAAAF,IAAAC,GAdAF,CAAAv6E,EAAA59B,GAAAu4G,SAAA96F,KACAmgB,EAAA59B,GAAAu4G,SAAA96F,EACAy6F,EAAA/7G,EAAAgiB,YAAAne,EAAAyd,EAAAw6F,IAAAj4G,EAAAgF,gBAAAhF,EAAAke,KAAAT,KAgBA,SAAA+6F,EAAAC,EAAA3uC,GACA2uC,EAAA3uC,EAAApyE,IAAA,+BAGA,SAAAghH,EAAAC,GACA,OACAxhG,SAAAwhG,EAAAxhG,SAAAjjB,QACAuuB,SAAAk2F,EAAAl2F,UAAA,GAIA,SAAAm2F,EAAAn6G,EAAAqrE,EAAAxnE,GACA,IAAAwN,EAAAg6D,EAAApyE,IAAA,KACAqY,EAAA+5D,EAAApyE,IAAA,UACA+G,KAAAuP,SAAA,SAAAhO,GACA,UAAAA,EAAAlJ,OACA,MAAAgZ,IAAA9P,EAAA8P,KACA,MAAAC,IAAA/P,EAAA+P,UACA/P,EAAAsC,YAvcA01G,EAAAvkH,UAAA,CAIAolH,OAAA,KAKAC,gBAAA,KAKAC,QAAA,KAKAhgB,WAAA,EAKAigB,WAAA,KAKAC,YAAA,KAKAC,aAAA,KAOAC,mBAAA,GAKA/vG,OAAA,SAAAqyC,EAAAquB,EAAApqE,EAAAkqE,GACA,IAAA/yE,EAAAizE,EAAApyE,IAAA,SACAkb,EAAAk3D,EAAApyE,IAAA,UASA,GANAH,KAAA6hH,WAAA39D,EACAlkD,KAAA8hH,kBAAAvvC,EACAvyE,KAAAoI,KAAAD,EAIAkqE,GAAAryE,KAAAyhH,aAAAniH,GAAAU,KAAA0hH,cAAArmG,EAAA,CAIArb,KAAAyhH,WAAAniH,EACAU,KAAA0hH,YAAArmG,EACA,IAAAnU,EAAAlH,KAAAshH,OACAS,EAAA/hH,KAAAwhH,QAEA,IAAAnmG,GAAA,SAAAA,EAIA,OAFAnU,KAAA86G,YACAD,KAAAC,QAIA96G,KAAA8vB,OACA+qF,KAAA/qF,OAEA,IAAA2rE,EAAA,GACA3iG,KAAAiiH,aAAAtf,EAAArjG,EAAA4kD,EAAAquB,EAAApqE,GAEA,IAAA+5G,EAAAvf,EAAAuf,WAEAA,IAAAliH,KAAAuhH,iBACAvhH,KAAAkZ,MAAA/Q,GAGAnI,KAAAuhH,gBAAAW,EACA,IAAAvB,EAAA3gH,KAAAmiH,eAAAniH,KAAAoiH,mBAAAl+D,EAAAquB,GAEA,GAAArrE,EAKK,CACL,IAAAm7G,EAAAx+G,EAAAjC,MAAAglB,EAAA2rD,EAAAouC,GACA3gH,KAAAsiH,gBAAAp7G,EAAAy7F,EAAA0f,EAAA9vC,GACAvyE,KAAAuiH,cAAAr7G,EAAAy7F,EAAA0f,EAAA9vC,QAPArrE,EAAAlH,KAAAshH,OAAA,IAAA18G,EAAA+Y,MACA3d,KAAAwiH,gBAAAt7G,EAAAy7F,EAAAz+C,EAAAquB,GACAvyE,KAAAyiH,cAAAv7G,EAAAy7F,EAAAz+C,EAAAquB,GACApqE,EAAA2D,QAAAqE,IAAAjJ,GAOAm6G,EAAAn6G,EAAAqrE,GAAA,GAEAvyE,KAAA0iH,cAAApjH,KAMAyW,OAAA,SAAA5N,GACAnI,KAAAkZ,MAAA/Q,IAMA2N,QAAA,SAAA3N,GACAnI,KAAAkZ,MAAA/Q,IAMAi6G,mBAAA,SAAAl+D,EAAAquB,GACA,IAAA5oE,EAAA4oE,EAAApyE,IAAA,aACAwhD,EAAAuC,EAAAvC,KACAghE,EAAA,aAAAhhE,EAAApiD,KACAqjH,EAAArwC,EAAApyE,IAAA,QAEA,IAAAyiH,IAAAD,EACA,SAGA,YAAAh5G,GAAA,MAAAA,EAAA,CACA,IAAAi4G,EAAA5hH,KAAA4hH,mBAEA,GAAAe,GAAAhhE,EAAAgiB,eAAAi+C,EACA,SAMA,GAAAgB,EAAA,CACA,IAAA1lB,EAAAvrB,EAAA0oB,YAAAn2C,GAAAg5C,gBACAp7C,EAAAH,EAAAP,YAEA,OAAAzyC,KAAAyb,IAAA03B,EAAA,GAAAA,EAAA,IAAAo7C,EAAA0kB,EAGA,SAGA,WAAAj4G,GAOAs4G,aAAA,SAAAtf,EAAArjG,EAAA4kD,EAAAquB,EAAApqE,KAMAq6G,gBAAA,SAAAt7G,EAAAy7F,EAAAz+C,EAAAquB,GACA,IAAAswC,EAAAlgB,EAAAzqE,QAEA,GAAA2qF,EAAA,CACA,IAAAC,EAAAz8E,EAAAn/B,GAAA47G,UAAA,IAAAl+G,EAAAi+G,EAAAtjH,MAAAtC,EAAA0lG,EAAAzqE,UACAhxB,EAAAiJ,IAAA2yG,KAOAL,cAAA,SAAAv7G,EAAAy7F,EAAAz+C,EAAAquB,GACA,GAAAowB,EAAA/qE,MAAA,CACA,IAAAspF,EAAA76E,EAAAn/B,GAAAg6G,QAAA,IAAAt8G,EAAAsZ,KAAAjhB,EAAA0lG,EAAA/qE,QACA1wB,EAAAiJ,IAAA+wG,GACAD,EAAAC,EAAA3uC,KAOA+vC,gBAAA,SAAAp7G,EAAAy7F,EAAA/7E,GACA,IAAAk8F,EAAAz8E,EAAAn/B,GAAA47G,UAEAA,IACAA,EAAAlsG,SAAA+rF,EAAAzqE,QAAAnoB,OACA6W,EAAAk8F,EAAA,CACAt7F,MAAAm7E,EAAAzqE,QAAA1Q,UAQA+6F,cAAA,SAAAr7G,EAAAy7F,EAAA/7E,EAAA2rD,GACA,IAAA2uC,EAAA76E,EAAAn/B,GAAAg6G,QAEAA,IACAA,EAAAtqG,SAAA+rF,EAAA/qE,MAAA7nB,OACA6W,EAAAs6F,EAAA,CAGA15F,MAAAm7E,EAAA/qE,MAAApQ,MACA5H,SAAA+iF,EAAA/qE,MAAAhY,WAEAqhG,EAAAC,EAAA3uC,KAOAmwC,cAAA,SAAApjH,GACA,IAAAU,KAAAwhG,WAAAxhG,KAAA+iH,sBAAA,CAIA,IAcA37E,EAdAmrC,EAAAvyE,KAAA8hH,kBAEA16G,EAAApH,KAAAoI,KAAA0D,QAEAi2G,EAAA/hH,KAAAwhH,QACAwB,EAAAzwC,EAAA/lE,SAAA,UACA6O,EAAAk3D,EAAApyE,IAAA,UAEA,IAAA6iH,EAAA7iH,IAAA,UAAAkb,GAAA,SAAAA,EAGA,OAFA0mG,GAAA36G,EAAA2O,OAAAgsG,QACA/hH,KAAAwhH,QAAA,MAMAxhH,KAAAwhH,UACAp6E,GAAA,EACA26E,EAAA/hH,KAAAwhH,QAAA58G,EAAA4mB,WAAAw3F,EAAA7iH,IAAA,SACAq+E,OAAA,OACAH,WAAA,EACA4kC,YAAA,SAAAvqG,GAEAunF,EAAAhpC,KAAAv+C,EAAA3D,QAEAmuG,YAAAlkH,EAAAgB,KAAAmjH,kBAAAnjH,KAAA,KACAk4F,MAAAl5F,EAAAgB,KAAAmjH,kBAAAnjH,MACA87G,UAAA98G,EAAAgB,KAAAojH,iBAAApjH,QAEAoH,EAAA+I,IAAA4xG,IAGAV,EAAAU,EAAAxvC,GAAA,GAGAwvC,EAAAnrG,SAAAosG,EAAA7hC,aAAA,KADA,6GAGA,IAAA86B,EAAA+G,EAAA7iH,IAAA,QAEA0D,EAAAvF,QAAA29G,KACAA,EAAA,CAAAA,MAGA8F,EAAAp7F,KAAA,SAAAs1F,EAAA,KAAAA,EAAA,OACAuE,EAAAj5C,eAAAvnE,KAAA,yBAAAgjH,EAAA7iH,IAAA,0BAEAH,KAAAqjH,mBAAA/jH,EAAA8nC,KAMAi8E,mBAAA,SAAA/jH,EAAA8nC,GACAxgB,EAAA5mB,KAAA8hH,mBAAA16E,GAAApnC,KAAAmiH,eAAAniH,KAAAwhH,QAAAL,EAAAnhH,KAAAsjH,mBAAAhkH,EAAAU,KAAA6hH,WAAA7hH,KAAA8hH,sBAMAqB,kBAAA,SAAA1oF,EAAAC,GACA,IAAAqnF,EAAA/hH,KAAAwhH,QAEA,GAAAO,EAAA,CAIA/hH,KAAAwhG,WAAA,EAEA,IAAA4f,EAAAphH,KAAA+iH,sBAAA5B,EAAAY,GAAA,CAAAtnF,EAAAC,GAAA16B,KAAA6hH,WAAA7hH,KAAA8hH,mBACA9hH,KAAA2hH,aAAAP,EACAW,EAAAt0G,gBACAs0G,EAAAp7F,KAAAw6F,EAAAC,IACA/6E,EAAA07E,GAAAf,SAAA,KAEAhhH,KAAAujH,2BAOAA,uBAAA,WAGA,GAFAvjH,KAAAwhH,QAEA,CAIA,IAAAgC,EAAAxjH,KAAA2hH,aACAz9D,EAAAlkD,KAAA6hH,WAEA7hH,KAAAoI,KAAA0P,eAAA,CACAvY,KAAA,oBACAyQ,EAAAwzG,EAAAC,YAAA,GACAxzG,EAAAuzG,EAAAC,YAAA,GACAC,cAAAF,EAAAE,cACAppB,SAAA,EACAqpB,QAAAz/D,EAAAvC,KAAA3V,IACAs6C,UAAApiC,EAAAtuC,qBAQAwtG,iBAAA,SAAAzC,GAIA,GAHA3gH,KAAAwhG,WAAA,EACAxhG,KAAAwhH,QAEA,CAIA,IAAAliH,EAAAU,KAAA8hH,kBAAA3hH,IAAA,SAKAH,KAAAqjH,mBAAA/jH,GAIAU,KAAAoI,KAAA0P,eAAA,CACAvY,KAAA,cAYA+jH,mBAAA,KAWAP,sBAAA,KAKA7pG,MAAA,SAAA/Q,GACAnI,KAAAyhH,WAAA,KACAzhH,KAAA0hH,YAAA,KACA,IAAAt6G,EAAAe,EAAA2D,QACA5E,EAAAlH,KAAAshH,OACAS,EAAA/hH,KAAAwhH,QAEAp6G,GAAAF,IACAlH,KAAAuhH,gBAAA,KACAr6G,GAAAE,EAAA2O,OAAA7O,GACA66G,GAAA36G,EAAA2O,OAAAgsG,GACA/hH,KAAAshH,OAAA,KACAthH,KAAAwhH,QAAA,KACAxhH,KAAA2hH,aAAA,OAOAiC,QAAA,aASAC,WAAA,SAAA3f,EAAAC,EAAAH,GAEA,OACAh0F,EAAAk0F,EAFAF,KAAA,GAGA/zF,EAAAi0F,EAAA,EAAAF,GACAv8F,MAAA08F,EAAAH,GACAt8F,OAAAy8F,EAAA,EAAAH,MAIAyc,EAAAvkH,UAAAyB,YAAA8iH,EA6CA9mD,EAAA3xB,kBAAAy4E,GACA,IAAAr/E,EAAAq/E,EACAtoF,EAAA93B,QAAA+gC,mBC1fc19B,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErBogH,EAAYpgH,EAAQ,KAIpB6oB,EAFc7oB,EAAQ,KAEtB6oB,aAEAyhF,EAAkBtqG,EAAQ,KAE1BogD,EAAAkqD,EAAAlqD,mBACAP,EAAAyqD,EAAAzqD,gBAEAznC,EAAuBpY,EAAQ,KAI/B+5D,EAFuB/5D,EAAQ,KAE/B+5D,oBA8CA,SAAAsmD,EAAAt5G,EAAAtC,GACA,IAAA67G,EAAAhkH,KACAikH,EAAAD,EAAAE,eACAC,EAAAH,EAAAI,gBAkBA,GAhBAH,EAAAtnF,MAAA8mB,UAAAx0C,UACAk1G,EAAAxnF,MAAA8mB,UAAAx0C,UACAxE,EAAA+H,WAAA,SAAAzB,GACA,GAAAA,EAAAL,mBAAAszG,EAAA,CACA,IAAAxiH,EAAAuP,EAAAC,UACAnN,EAAAjF,KAAA4C,EAAA8pC,aAAA,sBAAAU,GACAm4E,EAAAxnF,MAAA02D,oBAAA7xF,EAAAi8D,EAAAj8D,EAAAwqC,MAEAnoC,EAAAjF,KAAA4C,EAAA8pC,aAAA,qBAAAU,GACAi4E,EAAAtnF,MAAA02D,oBAAA7xF,EAAAi8D,EAAAj8D,EAAAwqC,SAIAuX,EAAA0gE,EAAAtnF,MAAAsnF,EAAAxzG,OACA8yC,EAAA4gE,EAAAxnF,MAAAwnF,EAAA1zG,OAEA,aAAAwzG,EAAA1kH,OAAA0kH,EAAA3hD,OAAA,CACA,IAAA3pB,EAAAsrE,EAAA7iE,YACAzH,EAAA,IAAAsqE,EAAAtnF,MAAAtP,QACA42F,EAAA5hD,QAAA1pB,EAAA,IAAAgB,EAAAhB,EAAA,IAAAgB,EACAsqE,EAAAxgE,UAAA9K,EAAA,GAAAA,EAAA,KAWA,SAAA0rE,EAAA1iE,EAAAuC,GAMA,GALAvC,EAAApiD,KAAA2kD,EAAA/jD,IAAA,QACAwhD,EAAAhlB,MAAAmnB,EAAAI,GACAvC,EAAA2gB,OAAApe,EAAA/jD,IAAA,6BAAAwhD,EAAApiD,KACAoiD,EAAA0gB,QAAAne,EAAA/jD,IAAA,WAEA,cAAA+jD,EAAAp7C,SAAA,CACA64C,EAAA0gB,SAAAne,EAAA/jD,IAAA,aACA,IAAAm6E,EAAAp2B,EAAA/jD,IAAA,cACAwhD,EAAA8B,UAAA62B,KAAA34B,EAAA0gB,SAAA,UAIAne,EAAAvC,OACAA,EAAAlxC,MAAAyzC,EA9FAxgD,EAAQ,KAiGR,IAAA4gH,EAAA,CACAnoG,WAAA2nG,EAAA5nH,UAAAigB,WACAxK,OAAA,SAAAlH,EAAAtC,GACA,IAAAo8G,EAAA,GA2BA,OA1BA95G,EAAAuD,cAAA,iBAAAw2G,EAAAv2F,GACA,IAAA+1F,EAAA,IAAAF,EAAA71F,GAEA+1F,EAAA94G,OAAA64G,EACA,IAAAI,EAAAH,EAAAI,gBACAH,EAAAD,EAAAE,eACAO,EAAAD,EAAAE,cAAA,cACAC,EAAAH,EAAAE,cAAA,aACAL,EAAAF,EAAAM,GACAJ,EAAAJ,EAAAU,GAlFA,SAAAX,EAAAQ,EAAAr8G,GACA,IAAAkkF,EAAAm4B,EAAArkH,IAAA,UACAsH,EAAAU,EAAAuE,WACAhF,EAAAS,EAAAwE,YACAq3G,EAAA3mE,GAAA9wB,EAAA8/D,EAAA,GAAA5kF,GACAu8G,EAAA1mE,GAAA/wB,EAAA8/D,EAAA,GAAA3kF,GACA,IAAAy8G,EAAAH,EAAAI,gBACArlE,EAAApwC,KAAAC,IAAAnH,EAAAC,GAAA,EACAgzE,EAAAnuD,EAAAi4F,EAAArkH,IAAA,UAAA4+C,GACAolE,EAAA9hD,QAAA8hD,EAAA1gE,UAAAi3B,EAAA,GAAAypC,EAAA1gE,UAAA,EAAAi3B,GA0EAkqC,CAAAZ,EAAAQ,EAAAr8G,GACAo8G,EAAA9iH,KAAAuiH,GACAQ,EAAA9zG,iBAAAszG,EACAA,EAAAvzG,MAAA+zG,IAGA/5G,EAAA+H,WAAA,SAAAzB,GACA,aAAAA,EAAA5Q,IAAA,qBACA,IAAAqkH,EAAA/5G,EAAA8oB,gBAAA,CACAzqB,SAAA,QACAC,MAAAgI,EAAA5Q,IAAA,cACA8G,GAAA8J,EAAA5Q,IAAA,aACS,GACT4Q,EAAAL,iBAAA8zG,EAAA9zG,oBAGA6zG,IAGAzoG,EAAAC,SAAA,QAAAuoG,oBCzJA,IAAAzgH,EAAaH,EAAQ,KAErB00B,EAAiB10B,EAAQ,KAuBzBmhH,EAAA,qCAmBA,SAAAC,EAAA3pF,EAAA4pF,GACA5pF,IAAAx+B,QACA,IAAAqoH,EAAAnhH,EAAAhH,IAAAs+B,EAAA/C,EAAAuH,cACAolF,MAAA,IAAApoH,QACA,IAAAsoH,EAAAphH,EAAAhH,IAAAkoH,EAAA3sF,EAAAuH,cACA,gBAAA03C,EAAAt4E,GACA8E,EAAAjF,KAAAu8B,EAAA,SAAA56B,EAAAwI,GAMA,IALA,IAAAm8G,EAAA,CACA3kH,OACA4kH,QAAAH,EAAAj8G,IAGA4pB,EAAA,EAAqBA,EAAAoyF,EAAAtnH,OAAkBk1B,IACvCuyF,EAAAH,EAAApyF,IAAApyB,EAAA0kH,EAAAtyF,GAGA0kD,EAAAh6E,KAAA0B,EAAAmmH,MAoBA,IAAA1gC,EAAAsgC,EAzDA,wCAyDA,mCAsEAzkH,EAAA+kH,iBAvHA,SAAAC,GACA,OAAAxhH,EAAAhD,QAAAgkH,EAAAQ,IAAA,GAuHAhlH,EAAAykH,iBACAzkH,EAAAmkF,cACAnkF,EAAAilH,wBA5DA,SAAAC,EAAAC,EAAAC,GACA,gBAAAC,GACA,IAcAC,EAdAxoH,EAAA,CACAo2G,MAAA,GACAqS,QAAA,IAOA,GAJAJ,EAAA,SAAAK,GACA1oH,EAAAyoH,QAAAC,EAAAtlH,MAAA,MAGAmlH,EACA,OAAAvoH,EAGA2oH,EAAAJ,EAAAvoH,GAGA,GACAwoH,GAAA,EACAJ,EAAAQ,SACKJ,GAEL,SAAAI,EAAA9uG,IAUA,SAAAA,EAAA9Z,GACA,OAAA0G,EAAAhD,QAAA1D,EAAAo2G,MAAAt8F,IAAA,EAVA+uG,CAAA/uG,EAAA9Z,IAaA,SAAA8Z,EAAA9Z,GACA,IAAA8oH,GAAA,EAMA,OALAT,EAAA,SAAAK,GACAhiH,EAAAjF,KAAA6mH,EAAAxuG,EAAA4uG,IAAA,YAAAK,GACA/oH,EAAAyoH,QAAAC,EAAAtlH,MAAA2lH,KAAAD,GAAA,OAGAA,EApBAE,CAAAlvG,EAAA9Z,KACA2oH,EAAA7uG,EAAA9Z,GACAwoH,GAAA,GAIA,OAAAxoH,GAiBA,SAAA2oH,EAAA7uG,EAAA9Z,GACAA,EAAAo2G,MAAA9xG,KAAAwV,GACAuuG,EAAA,SAAAK,GACAhiH,EAAAjF,KAAA6mH,EAAAxuG,EAAA4uG,IAAA,YAAAK,GACA/oH,EAAAyoH,QAAAC,EAAAtlH,MAAA2lH,IAAA,yBChJcxiH,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBK,EAAUL,EAAQ,KAElBmB,EAAgBnB,EAAQ,KAExB00B,EAAiB10B,EAAQ,KAEzBylC,EAAsBzlC,EAAQ,KAqB9B26B,EAAAjG,EAAAiG,UACAV,EAAAvF,EAAAuF,WAEA,SAAAyoF,EAAAruG,GACAlT,EAAA+rB,gBAAA7Y,EAAA,kBAGA,IAAAsuG,EAAA/wF,EAAAhZ,qBAAA,CACA/c,KAAA,SACAyb,aAAA,gCAKA1T,KAAA,SAAA0E,EAAA+X,EAAAtZ,EAAAi8B,GACA1mC,KAAA4mC,qBAAA56B,EAAAvB,GACAzK,KAAAinC,YAAAj7B,EAAAvB,EAAAi8B,EAAA4/E,eAAA,IAMAlgG,mBAAA,WACA,GAAAriB,EAAAkT,KACA,SAGA,IAAAsvG,EAAAvmH,KAAAwmH,aACA,OAAAxmH,KAAAojB,WAAA,cAAAmjG,KAAAngG,sBAEA6gB,YAAA,SAAAw/E,EAAAh8G,EAAA67G,EAAAl/E,GACA,IAAAi/E,EAAArmH,KAAArC,YACA+oH,EAAA1mH,KAAA8I,SAAA,QAEAw9G,GACA77G,EAAA+H,WAAA,SAAAzB,GACA,IAAA41G,EAAA51G,EAAA5Q,IAAAH,KAAA8I,UAAA,GACA89G,EAAA71G,EAAA21G,GAEAC,KAAAnlH,MAKAolH,EAyBAA,EAAA3/E,YAAA0/E,EAAAl8G,GAAA,IAxBA28B,GAEAg/E,EAAAO,GAGA9iH,EAAAjF,KAAA+nH,EAAAnlH,KAAA,SAAAoO,GAEAA,aAAAvT,OACA+pH,EAAAx2G,EAAA,IACAw2G,EAAAx2G,EAAA,KAEAw2G,EAAAx2G,KAGAg3G,EAAA,IAAAP,EAAAM,EAAA3mH,KAAAyK,GACA5G,EAAAlD,OAAAimH,EAAA,CACA99G,SAAA9I,KAAA8I,SAEAsP,YAAArH,EAAAqH,YACA7X,KAAAwQ,EAAAxQ,KACA+lH,eAAA,IAEAM,EAAAJ,aAAAz1G,GAKAA,EAAA21G,GAAAE,GAhCA71G,EAAA21G,GAAA,MAiCO1mH,OAGPkrC,cAAA,SAAA/5B,GACA,IAAA3P,EAAAxB,KAAAgR,UACA1R,EAAAU,KAAAwrC,YAAAr6B,GACAu6B,EAAA7nC,EAAAvF,QAAAgB,GAAAuE,EAAAhH,IAAAyC,EAAA++B,GAAA3U,KAAA,MAAA2U,EAAA/+B,GACAiB,EAAAiB,EAAAgrC,QAAAr7B,GACA01G,EAAAlpF,EAAA39B,KAAAO,MAkBA,OAhBA,MAAAjB,GAAAiB,KACAsmH,GAAA,UAGAtmH,IACAsmH,GAAAlpF,EAAAp9B,GAEA,MAAAjB,IACAunH,GAAA,QAIA,MAAAvnH,IACAunH,GAAAlpF,EAAA+N,IAGAm7E,GAEA71G,QAAA,WACA,OAAAhR,KAAA2kE,OAEA95B,QAAA,SAAArpC,GACAxB,KAAA2kE,MAAAnjE,KAGAqC,EAAAvC,MAAA+kH,EAAAl9E,GACA,IAAA/H,EAAAilF,EACAluF,EAAA93B,QAAA+gC,mBCjJA,IAAAv9B,EAAaH,EAAQ,KAErBy5B,EAAiBz5B,EAAQ,KAIzB84D,EAFuB94D,EAAQ,KAE/B84D,mBAoBA37D,EAAAgD,EAAAhD,QAgCA,SAAAimH,EAAAC,EAAAvlH,EAAAwlH,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GAIAC,EAHA7qD,EAAAh7D,EAAAylH,GAGAzlH,EAAAo3C,mBAAA,wBAAAquE,EACA3nH,EAAAgoH,EAAA9lH,EAAA6lH,EAAAN,GACA51G,EAAA3P,EAAA63C,iBAAAguE,EAAA/nH,GAAA,GACA8nH,EAAAF,GAAA1lH,EAAArB,IAAA6mH,EAAA71G,GACAi2G,EAAAD,GAAA3lH,EAAArB,IAAA8mH,EAAA91G,GAEA,IAAA0b,EAAAsQ,EAAAhQ,aAAA3rB,EAAArB,IAAA8mH,EAAA91G,IAOA,OANA0b,EAAAle,KAAAC,IAAAie,EAAA,MAEA,IACAu6F,EAAAD,IAAAC,EAAAD,GAAAp6F,QAAAF,IAGAu6F,EAGA,IAAAxlH,EAAAiC,EAAAjC,MAEA2lH,EAAA,CAOA34G,IAAAhN,EAAAklH,EAAA,OAQAh4G,IAAAlN,EAAAklH,EAAA,OAQAU,QAAA5lH,EAAAklH,EAAA,YAiDA,SAAAzsB,EAAAzqF,EAAApO,EAAAoJ,EAAAmG,GACA,IAAAsnD,EAAA,GAcA,OAZA,MAAAzoD,EAAA63G,YAAA,MAAA73G,EAAAymF,UACAh+B,EAAAqvD,aAAA,MAAA93G,EAAA63G,WAAAjmH,EAAAuzC,aAAAnlC,EAAA63G,YAAA73G,EAAAymF,SACAh+B,EAAAvhC,UAAAlsB,EAAAqyF,QAaA,SAAAlsF,EAAA08B,GACA,IAAAjsC,EAAAuP,EAAAC,UACAmL,EAAA3a,EAAA2a,WACAsxB,EAAAjsC,EAAAuzC,aAAAtH,GAEA,QAAAlwC,EAAA,EAAiBA,EAAA4e,EAAA1e,OAAuBF,IAAA,CACxC,IAAAquC,EAAApqC,EAAAqqC,iBAAA1vB,EAAA5e,IAEA,GAAAquC,EAAArrC,OAAAktC,EACA,OAAA7B,EAAAmB,UAtBA46E,CAAA52G,EAAAsnD,EAAAqvD,eACArvD,EAAAw8B,SAAAjqF,EAAAwrF,aAAA/9B,EAAAvhC,WACAuhC,EAAAuvD,YAAApmH,EAAA8pC,aAAA+sB,EAAAw8B,SAAA7oD,OAEAqsB,EAAAw8B,SAAA9jF,EAAAk6B,cACAotB,EAAAvhC,UAAAlsB,EAAAwrF,aAAA/9B,EAAAw8B,UACAx8B,EAAAuvD,YAAApmH,EAAA8pC,aAAA+sB,EAAAw8B,SAAA7oD,KACAqsB,EAAAqvD,aAAAlmH,EAAA8pC,aAAA+sB,EAAAvhC,UAAAkV,MAGAqsB,EAuCA,SAAAivD,EAAA9lH,EAAAkmH,EAAAnoH,GACA,eAAAA,EAAA,CACA,IAAA2uB,EAAA,EACAb,EAAA,EAOA,OANA7rB,EAAA5C,KAAA8oH,EAAA,SAAAhlH,EAAAurB,GACAb,MAAA1qB,KACAwrB,GAAAxrB,EACA2qB,OAGAa,EAAAb,EACG,iBAAA9tB,EACHiC,EAAAu3C,UAAA2uE,GAGAlmH,EAAA42C,cAAAsvE,GAAA,WAAAnoH,EAAA,KAIAc,EAAAwnH,cA9GA,SAAA92G,EAAAnB,GACA,IAAApO,EAAAuP,EAAAC,UACApG,EAAAmG,EAAAL,iBAKA,GAAAd,IA3FA,SAAAA,GACA,OAAAwd,MAAAT,WAAA/c,EAAAI,MAAAod,MAAAT,WAAA/c,EAAAK,IA0FA63G,CAAAl4G,KAAA/L,EAAAvF,QAAAsR,EAAA6yD,QAAA73D,EAAA,CACA,IAAAwqC,EAAAxqC,EAAAuR,WACAogF,EAAAlC,EAAAzqF,EAAApO,EAAAoJ,EAAAmG,GAKA,IAFAnB,EAAA/L,EAAA5G,MAAA2S,IAEArQ,MAAAgoH,EAAA33G,EAAArQ,OAAAg9F,EAAA1H,UAAA0H,EAAAzlE,UAAA,CACA,IAAAowF,EAAArmH,EAAAu0C,EAAAmnD,EAAA1H,SAAA7oD,KACAm7E,EAAAtmH,EAAAu0C,EAAAmnD,EAAAzlE,UAAAkV,KACAp8B,EAAA6yD,MAAA8kD,EAAA33G,EAAArQ,MAAAiC,EAAA+6F,EAAAqrB,YAAArrB,EAAAmrB,aAAAR,EAAAC,GAEAv3G,EAAAtQ,MAAAsQ,EAAA6yD,MAAA0kD,OACK,CAIL,IAFA,IAAA1kD,EAAA,OAAA7yD,EAAAqzE,MAAArzE,EAAAqzE,MAAArzE,EAAAu0G,WAAA,MAAAv0G,EAAAszE,MAAAtzE,EAAAszE,MAAAtzE,EAAAq0G,WAEA1mH,EAAA,EAAqBA,EAAA,EAAOA,IAC5BgqH,EAAA9kD,EAAAllE,MACAklE,EAAAllE,GAAA+pH,EAAA9lH,IAAA8pC,aAAA8J,EAAA73C,IAAAklE,EAAAllE,KAIAqS,EAAA6yD,SAIA,OAAA7yD,GA6EAvP,EAAAg6F,cACAh6F,EAAA0nH,WAnCA,SAAAn9G,EAAAgF,GAEA,QAAAhF,KAAA83D,aAAA9yD,EAAA6yD,QAvKA,SAAA7yD,GACA,QAAAwd,MAAAT,WAAA/c,EAAAI,KAAAod,MAAAT,WAAA/c,EAAAK,KAsKA+3G,CAAAp4G,KAAAhF,EAAA83D,YAAA9yD,EAAA6yD,QAkCApiE,EAAAk1C,eA/BA,SAAA3lC,EAAA2sD,EAAAprD,EAAAqiC,GAEA,OAAAA,EAAA,EACA5jC,EAAA6yD,OAAA7yD,EAAA6yD,MAAAjvB,GAGA5jC,EAAAtQ,OA0BAe,EAAAinH,gCCtOA,IAAAhyF,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAqBrB09B,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,SACA+H,KAAA,WAMAtH,KAAAioH,eAAApkH,EAAAV,iBAEA0O,OAAA,SAAA+0G,EAAAn8G,EAAAtC,GACA,IAAA8/G,EAAAjoH,KAAAioH,eACAA,EAAArpH,KAAA,SAAAgR,GACAA,EAAAs4G,QAAA,IAEA,IAAAC,EAAAnoH,KAAAT,KAAA,QACAkL,EAAA+H,WAAA,SAAAzB,GACA,IAAA61G,EAAA71G,EAAAo3G,GACAvB,GAAA5mH,KAAA4L,aAAAmF,EAAA61G,EAAAn8G,EAAAtC,IACKnI,MACLioH,EAAArpH,KAAA,SAAAgR,IACAA,EAAAs4G,QAAAloH,KAAAkH,MAAA6O,OAAAnG,EAAA1I,QACKlH,OAEL4L,aAAA,eAGAusB,EAAA93B,QAAA+gC,mBClDA,IAEAzhC,EAFY+D,EAAQ,KAEpB/D,cAEA2hC,EAAgB59B,EAAQ,KAExB+a,EAAmB/a,EAAQ,KAE3B4Z,EAAa5Z,EAAQ,KAErBw5B,EAAkBx5B,EAAQ,KAE1Bq7E,EAAiBr7E,EAAQ,KAEzBka,EAAWla,EAAQ,KAKnBi1E,EAAAr3C,EAAAq3C,IACAyvC,EAAA/rH,MAAAH,UAAAwtB,KACA2+F,EAAA,OACAC,EAAA35G,KAAAgQ,MACAo6D,EAAApqE,KAAA2gC,IACAwpC,EAAAnqE,KAAA6gC,IACAjsB,EAAA5U,KAAA4U,GACAomF,EAAA,EAAAh7F,KAAA4U,GACAglG,EAAA,IAAAhlG,EACAy6C,EAAA,KAEA,SAAAwqD,EAAA9lH,GACA,OAAA4lH,EAAA,IAAA5lH,GAAA,IAGA,SAAA67D,EAAA77D,GACA,OAAAA,EAAAs7D,GAAAt7D,GAAAs7D,EAaA,SAAA17B,EAAAmmF,EAAAhpG,GACAA,GACAkH,EAAA8hG,EAAA,sBAAAL,EAAA/qH,KAAAoiB,EAAA,UAIA,SAAAkH,EAAAle,EAAA3K,EAAA4E,KACAA,GAAA,WAAAA,EAAAnD,MAAA,WAAAmD,EAAAnD,QAEA,kBAAAmD,KAAA7B,QAAA,WACAyL,QAAAC,IAAA7J,GAGA+F,EAAA2Q,aAAAtb,EAAA4E,IAQA,SAAAgmH,EAAAD,EAAA14G,EAAA44G,GACA,GAhCA,SAAA54G,EAAA44G,GACA,IAAAnoG,EAAAmoG,EAAA54G,EAAAoR,SAAApR,EAAAyQ,KACA,aAAAA,OAAA6nG,EA8BAO,CAAA74G,EAAA44G,GAAA,CACA,IAAAnoG,EAAAmoG,EAAA54G,EAAAoR,SAAApR,EAAAyQ,KACAA,EAAA,gBAAAA,EAAA6nG,EAAA7nG,EAiBA,SAAAioG,EAAA7uG,aAAA,cAAA4G,IAAA6nG,IACA7nG,EAAA,wBAGAmG,EAAA8hG,EAAA,OAAAjoG,GACAmG,EAAA8hG,EAAA,eAAA14G,EAAAsmE,cAEA1vD,EAAA8hG,EAAA,OAAAJ,GAGA,GAxDA,SAAAt4G,EAAA44G,GACA,IAAApoG,EAAAooG,EAAA54G,EAAAqR,WAAArR,EAAAwQ,OACA,aAAAA,OAAA8nG,EAsDAQ,CAAA94G,EAAA44G,GAAA,CACA,IAAApoG,EAAAooG,EAAA54G,EAAAqR,WAAArR,EAAAwQ,OAEAoG,EAAA8hG,EAAA,SADAloG,EAAA,gBAAAA,EAAA8nG,EAAA9nG,GAIAoG,EAAA8hG,EAAA,gBAFAE,EAAA54G,EAAAsR,gBAAAtR,EAAA8P,aACA8oG,GAAA54G,EAAA4b,cAAA5b,EAAAkT,KAAAihB,eAAA,IAGAvd,EAAA8hG,EAAA,cAAAE,EAAA,iBACAhiG,EAAA8hG,EAAA,iBAAA14G,EAAAsmE,SACAtmE,EAAA8yB,UAGAlc,EAAA8hG,EAAA,mBAAA14G,EAAA8yB,SAAAnZ,KAAA,MACA/C,EAAA8hG,EAAA,oBAAAH,EAAAv4G,EAAA+yB,gBAAA,KAEAnc,EAAA8hG,EAAA,uBAIA14G,EAAAq9D,SAAAzmD,EAAA8hG,EAAA,iBAAA14G,EAAAq9D,SACAr9D,EAAA+4G,UAAAniG,EAAA8hG,EAAA,kBAAA14G,EAAA+4G,UACA/4G,EAAAg5G,YAAApiG,EAAA8hG,EAAA,oBAAA14G,EAAAg5G,iBAEApiG,EAAA8hG,EAAA,SAAAJ,GAkHA,IAAAW,EAAA,GAEAA,EAAApnF,MAAA,SAAAn5B,GACA,IAAAsH,EAAAtH,EAAAsH,MACA04G,EAAAhgH,EAAAwgH,QAEAR,IACAA,EAAA9oH,EAAA,QACA8I,EAAAwgH,QAAAR,GAGAhgH,EAAAwW,MACAxW,EAAAk7B,kBAGA,IAAA1kB,EAAAxW,EAAAwW,KAEA,GAAAxW,EAAAi5B,YAAA,CACAziB,EAAAkkB,YACA16B,EAAA46B,UAAApkB,EAAAxW,EAAA+e,OACA/e,EAAAi5B,aAAA,EACA,IAAAwnF,EA/HA,SAAAjqG,GAKA,IAJA,IAAAjc,EAAA,GACAxB,EAAAyd,EAAAzd,KACA2nH,EAAAlqG,EAAAzhB,MAEAD,EAAA,EAAiBA,EAAA4rH,GAAgB,CACjC,IACAC,EAAA,GACAC,EAAA,EAEA,OAJA7nH,EAAAjE,MAKA,KAAAo7E,EAAAl5C,EACA2pF,EAAA,IACAC,EAAA,EACA,MAEA,KAAA1wC,EAAA/iB,EACAwzD,EAAA,IACAC,EAAA,EACA,MAEA,KAAA1wC,EAAAC,EACAwwC,EAAA,IACAC,EAAA,EACA,MAEA,KAAA1wC,EAAAvZ,EACAgqD,EAAA,IACAC,EAAA,EACA,MAEA,KAAA1wC,EAAAxZ,EACA,IAAA9hB,EAAA77C,EAAAjE,KACA+/C,EAAA97C,EAAAjE,KACAs+E,EAAAr6E,EAAAjE,KACAu+E,EAAAt6E,EAAAjE,KACAuiE,EAAAt+D,EAAAjE,KACA2+E,EAAA16E,EAAAjE,KACA4+E,EAAA36E,EAAAjE,KACA+mG,EAAA9iG,EAAAjE,KACA+rH,EAAA36G,KAAAyb,IAAA8xD,GACAqtC,EAAAhrD,EAAA+qD,EAAA3f,KAAAprC,EAAA+qD,GACA9sC,GAAA,EAGAA,EADA8sC,GAAA3f,IAESprC,EAAA+qD,KAGTptC,GAAA34D,GAAA24D,EAAA,GAAAA,EAAA34D,OAAA+gF,EAGA,IAAAzjC,EAAA2nD,EAAAnrE,EAAAw+B,EAAA/C,EAAAhZ,IACAgB,EAAA0nD,EAAAlrE,EAAAw+B,EAAA/C,EAAAjZ,IAIAypD,IAEArtC,EADAooB,EACAqF,EAAA,KAEA,KAAAA,EAGAntB,GAAA,EAEA,IAAAj/E,GAMAyF,EAAAvB,KAAA,IAAAo/D,EAAAC,IAIA,IAAA9wD,EAAAw4G,EAAAnrE,EAAAw+B,EAAA/C,EAAAhZ,EAAAoc,IACAjsE,EAAAu4G,EAAAlrE,EAAAw+B,EAAA/C,EAAAjZ,EAAAoc,IAEAl5E,EAAAvB,KAAA,IAAA+mH,EAAA3sC,GAAA2sC,EAAA1sC,GAAAwsC,EAAAnsC,EAAAosC,IAAA/rC,GAAA8nB,EAAAt0F,EAAAC,GACA,MAEA,KAAA0oE,EAAAE,EACAuwC,EAAA,IACA,MAEA,KAAAzwC,EAAArjB,EACAtlD,EAAAw4G,EAAAhnH,EAAAjE,MACA0S,EAAAu4G,EAAAhnH,EAAAjE,MADA,IAEAymC,EAAAwkF,EAAAhnH,EAAAjE,MACA68B,EAAAouF,EAAAhnH,EAAAjE,MACAyF,EAAAvB,KAAA,IAAAuO,EAAAC,EAAA,IAAAD,EAAAg0B,EAAA/zB,EAAA,IAAAD,EAAAg0B,EAAA/zB,EAAAmqB,EAAA,IAAApqB,EAAAC,EAAAmqB,EAAA,IAAApqB,EAAAC,GAIAm5G,GAAApmH,EAAAvB,KAAA2nH,GAEA,QAAAz2F,EAAA,EAAmBA,EAAA02F,EAAW12F,IAE9B3vB,EAAAvB,KAAA+mH,EAAAhnH,EAAAjE,OAIA,OAAAyF,EAAA0mB,KAAA,KAwBA8/F,CAAAvqG,GAEAiqG,EAAAroH,QAAA,UAGA8lB,EAAA8hG,EAAA,IAAAS,GAIAR,EAAAD,EAAA14G,GACAuyB,EAAAmmF,EAAAhgH,EAAAoe,WAEA,MAAA9W,EAAAqZ,MACAqgG,EAAAhhH,IAAA0W,oBAQA,IAAAuqG,EAAA,CAEA9nF,MAAA,SAAAn5B,GACA,IAAAsH,EAAAtH,EAAAsH,MACAG,EAAAH,EAAAG,MAEAA,aAAAy5G,mBAEAz5G,EADAA,EAAAwtE,KAIA,GAAAxtE,EAAA,CAIA,IAAAF,EAAAD,EAAAC,GAAA,EACAC,EAAAF,EAAAE,GAAA,EACA25G,EAAA75G,EAAAtI,MACAoiH,EAAA95G,EAAArI,OACA+gH,EAAAhgH,EAAAwgH,QAEAR,IACAA,EAAA9oH,EAAA,SACA8I,EAAAwgH,QAAAR,GAGAv4G,IAAAzH,EAAAqhH,cAhPA,SAAArhH,EAAA3K,EAAA4E,GACA+F,EAAAshH,eAAA,+BAAAjsH,EAAA4E,GAgPAsnH,CAAAvB,EAAA,OAAAv4G,GAEAzH,EAAAqhH,WAAA55G,GAGAyW,EAAA8hG,EAAA,QAAAmB,GACAjjG,EAAA8hG,EAAA,SAAAoB,GACAljG,EAAA8hG,EAAA,IAAAz4G,GACA2W,EAAA8hG,EAAA,IAAAx4G,GACAqyB,EAAAmmF,EAAAhgH,EAAAoe,WAEA,MAAA9W,EAAAqZ,MACAqgG,EAAAhhH,IAAA0W,sBAQA8qG,EAAA,GACAl+B,EAAA,IAAAttE,EAEAgrG,EAAA,SAAAhhH,EAAAsW,EAAAikC,GACA,IAAAjzC,EAAAtH,EAAAsH,MACAtH,EAAA85B,SAAAw8C,EAAAC,mBAAAjvE,GAAA,GACA,IAAAqZ,EAAArZ,EAAAqZ,KAEA,SAAAA,EAAA,CAIAA,GAAA,GAGA,IAOApZ,EACAC,EARAi6G,EAAAzhH,EAAA0hH,YAEAD,IACAA,EAAAvqH,EAAA,QACA8I,EAAA0hH,YAAAD,GAKA,IAAA/mG,EAAApT,EAAAoT,aACA8Y,EAAAlsB,EAAA0T,aACAs/E,EAAAhzF,EAAA8U,WAAA,OAEA,kBAAA9U,EAAA4U,WACA5U,EAAA4U,UAAA,MAGA,IAAAygC,EAAAr1C,EAAAq1C,MAAA,CAAAr1C,EAAA0U,WAAA,GAAA1U,EAAA2U,YAAA,GAAA3U,EAAA4U,UAAA,GAAA5U,EAAA6U,YAAA,IAAA8E,KAAA,MAAAwT,EAAAioB,aACA69C,EAAAonB,EAAAr6G,EAAA+U,mBAEAgiC,GADA9D,EAAA9lB,EAAA/d,gBAAAiK,EAAAg8B,EAAA29C,EAAAC,IACAl8C,WAEA,GAAA3jC,aAAA9mB,MACA2T,EAAA+O,EAAA/O,EAAAmT,EAAA,GACAlT,EAAA8O,EAAA9O,EAAAkT,EAAA,OACG,CACH,IAAAknG,EAAAntF,EAAAksB,yBAAAjmC,EAAApE,EAAAkd,GACAjsB,EAAAq6G,EAAAr6G,EACAC,EAAAo6G,EAAAp6G,EACA+yF,EAAAonB,EAAAC,EAAAvlG,mBACAi+E,EAAAsnB,EAAAxlG,UAGA8B,EAAAujG,EAAA,qBAAAlnB,GAEA59C,IACA8kE,EAAAn6G,MAAAq1C,QAGA,IAAA//B,EAAAtV,EAAAsV,YAMA,GAJAsB,EAAAujG,EAAA,IAAAl6G,GACA2W,EAAAujG,EAAA,IAAAj6G,GACAy4G,EAAAwB,EAAAn6G,GAAA,GAEAtH,aAAAmV,GAAAnV,EAAAsH,MAAAu6G,cAEAhoF,EAAA4nF,EAAAzhH,EAAAoe,eACG,CACH,GAAApe,EAAAoe,UACAklE,EAAArwD,KAAA3c,GACAgtE,EAAAvsE,eAAA/W,EAAAoe,WACA9H,EAAAgtE,MACK,CACL,IAAApe,EAAAllE,EAAA29F,uBAAArnF,EAAA/O,EAAA+O,EAAA9O,GACA8O,EAAA/O,EAAA29D,EAAA,GACA5uD,EAAA9O,EAAA09D,EAAA,GAIA,IAAAuP,EAAAntE,EAAA28E,WAEA,WAAAxP,GACAltE,EAAAgzC,EAAAv7C,MAAA,EAAAuI,EACAC,EAAA+yC,EAAAt7C,OAAA,EAAAuI,GACKitE,IACLltE,EAAAktE,EAAA,GAAAltE,EACAC,EAAAitE,EAAA,GAAAjtE,GAGA,IAAA4+B,GAAA9+B,EAAAyT,cAAA,EACAqD,EAAAvJ,EAAA3L,SAEA2L,EAAAuxB,OAAAhoB,EAAApe,EAAAoe,UAAAgoB,GACAvM,EAAA4nF,EAAArjG,GAGA,IAAAw+B,EAAAj8B,EAAAhV,MAAA,MACAm2G,EAAAllE,EAAA5nD,OACA+sH,EAAAznB,EAEA,SAAAynB,GACAA,EAAA,QACAnlG,IAAArV,GAAAqV,EAAA,KACG,UAAAmlG,GACHA,EAAA,MACAnlG,IAAArV,GAAAqV,EAAA,KACG,WAAAmlG,IACHA,EAAA,SACAnlG,IAAArV,IAAAqV,EAAA,GAAAA,EAAA,QAGA,IAAAqV,EAAA,EAaA,GAXA,aAAAsoE,GACAtoE,GAAAsoB,EAAAt7C,OAAAo/C,EACAzhC,IAAAqV,GAAArV,EAAA,KACG,WAAA29E,GACHtoE,IAAAsoB,EAAAt7C,OAAAo/C,GAAA,EACAzhC,IAAApV,IAAAoV,EAAA,GAAAA,EAAA,QAEAA,IAAAqV,GAAArV,EAAA,IAIA5c,EAAAgiH,SAAArhG,GAAA3gB,EAAAiiH,aAAAtlE,EAAA,CACA,IAAAulE,EAAAliH,EAAAmiH,aAAA,GACAniH,EAAAmiH,YAAAD,EAEA,QAAAptH,EAAA,EAAmBA,EAAAgtH,EAAgBhtH,IAAA,EAEnCstH,EAAAF,EAAAptH,IAQAstH,EAAAC,UAAA,IALAD,EAAAF,EAAAptH,GAAAoC,EAAA,SACAuqH,EAAAa,YAAAF,GACAlkG,EAAAkkG,EAAA,qBAAA7nB,GACAr8E,EAAAkkG,EAAA,cAAAL,IAKA7jG,EAAAkkG,EAAA,IAAA76G,GACA2W,EAAAkkG,EAAA,IAAA56G,EAAA1S,EAAAupD,EAAApsB,GACAmwF,EAAAE,YAAArrH,SAAAsrH,eAAA3lE,EAAA9nD,KAIA,KAAUA,EAAAotH,EAAAltH,OAAsBF,IAChC2sH,EAAAe,YAAAN,EAAAptH,IAGAotH,EAAAltH,OAAA8sH,EACA9hH,EAAAgiH,OAAArhG,EACA3gB,EAAAiiH,WAAAtlE,OACG,GAAA38C,EAAAmiH,YAAAntH,OAEH,KAAAD,EAAAiL,EAAAmiH,YAAAntH,OAEA,IAAAF,EAAA,EAAmBA,EAAAC,IAASD,EAAA,CAC5B,IAAAstH,KAAApiH,EAAAmiH,YAAArtH,MAGAopB,EAAAkkG,EAAA,IAAA76G,GACA2W,EAAAkkG,EAAA,IAAA56G,EAAA1S,EAAAupD,EAAApsB,QAMA,SAAA0vF,EAAApnB,GACA,iBAAAA,EACA,SACG,WAAAA,EACH,WAEA,UAIAinB,EAAAzmF,aAAAimF,EAEAQ,EAAAroF,MAAA,SAAAn5B,GACA,IAAAsH,EAAAtH,EAAAsH,MAEA,MAAAA,EAAAqZ,OAEArZ,EAAAoT,aAAA,MACAsmG,EAAAhhH,EAAA,CACAuH,EAAAD,EAAAC,GAAA,EACAC,EAAAF,EAAAE,GAAA,EACAxI,MAAA,EACAC,OAAA,GACKe,EAAA0W,qBAIL9e,EAAA4e,KAAA+pG,EACA3oH,EAAA6P,MAAAw5G,EACArpH,EAAA+oB,KAAA6gG,iBCxgBA,IAAAiB,EAAA,6BAMA7qH,EAAAV,cAJA,SAAAY,GACA,OAAAb,SAAAyrH,gBAAAD,EAAA3qH,qBCHA,IAEAZ,EAFY+D,EAAQ,KAEpB/D,cAEAkE,EAAaH,EAAQ,KAErB8Z,EAAW9Z,EAAQ,KAEnBga,EAAaha,EAAQ,KAErB0nH,EAAY1nH,EAAQ,KAEpB2nH,EAAe3nH,EAAQ,KAEvBslH,EAAAqC,EAAApsG,KACAyqG,EAAA2B,EAAAn7G,MACA+5G,EAAAoB,EAAAjiG,KAqBA,SAAAkiG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA3rH,KAAA4rH,MAAAL,EACAvrH,KAAA6rH,SAAAL,EACAxrH,KAAA8rH,UAAA,kBAAAL,EAAA,CAAAA,KACAzrH,KAAA+rH,WAAAL,EACA1rH,KAAAgsH,SAAAL,GAAA,OACA3rH,KAAAisH,OAAA,EAGAX,EAAApvH,UAAAyD,gBASA2rH,EAAApvH,UAAAgwH,QAAA,SAAAC,GACA,IAAAX,EAAAxrH,KAAA6rH,SAEAO,EAAApsH,KAAA6rH,SAAAQ,qBAAA,QAEA,WAAAD,EAAA3uH,OAEA0uH,IACAC,EAAAZ,EAAAc,aAAAtsH,KAAAL,cAAA,QACA6rH,EAAAe,aAGAr5C,WAEAk5C,EAAAl5C,SAAA,SAAAzqE,GACA,IAAA8iF,EAAA6gC,EAAA7gC,SAEA,IAAAA,EACA,SAGA,QAAAhuF,EAAAguF,EAAA9tF,OAAA,EAA2CF,GAAA,IAAQA,EACnD,GAAAguF,EAAAhuF,KAAAkL,EACA,SAIA,WAIA2jH,GAEA,KAGAA,EAAA,IAYAd,EAAApvH,UAAAgP,OAAA,SAAAshH,EAAAC,GACA,GAAAD,EAAA,CAIA,IAAAJ,EAAApsH,KAAAksH,SAAA,GAEA,GAAAM,EAAAxsH,KAAAgsH,WAAAI,EAAAl5C,SAAAs5C,EAAAxsH,KAAAgsH,WAEA,oBAAAS,GACAA,EAAAD,OAEG,CAEH,IAAA3lH,EAAA7G,KAAAmQ,IAAAq8G,GAEA3lH,IACA2lH,EAAAxsH,KAAAgsH,UAAAnlH,MAWAykH,EAAApvH,UAAAwwH,OAAA,SAAA7lH,GACA7G,KAAAksH,SAAA,GACAnB,YAAAlkH,IASAykH,EAAApvH,UAAAywH,UAAA,SAAAH,GACA,IAAAJ,EAAApsH,KAAAksH,SAAA,GAEAE,GAAAI,EAAAxsH,KAAAgsH,YACAI,EAAAnB,YAAAuB,EAAAxsH,KAAAgsH,WACAQ,EAAAxsH,KAAAgsH,UAAA,OAUAV,EAAApvH,UAAA0wH,QAAA,WACA,IAAAR,EAAApsH,KAAAksH,SAAA,GAEA,IAAAE,EAEA,SAGA,IAAAS,EAAA,GAQA,OAPAhpH,EAAAjF,KAAAoB,KAAA8rH,UAAA,SAAAgB,GACA,IAAAC,EAAAX,EAAAC,qBAAAS,GAIAD,IAAAxtH,OAAA,GAAA1C,MAAAU,KAAA0vH,MAEAF,GAQAvB,EAAApvH,UAAA8wH,cAAA,WACA,IAAAH,EAAA7sH,KAAA4sH,UACAK,EAAAjtH,KACA6D,EAAAjF,KAAAiuH,EAAA,SAAAhmH,GACAA,EAAAomH,EAAAlB,YAlKA,OA4KAT,EAAApvH,UAAAgxH,SAAA,SAAArmH,GACAA,IACAA,EAAA7G,KAAA+rH,YA7KA,MAqLAT,EAAApvH,UAAAixH,aAAA,WACA,IAAAf,EAAApsH,KAAAksH,SAAA,GAEA,GAAAE,EAAA,CAKA,IAAAS,EAAA7sH,KAAA4sH,UACAK,EAAAjtH,KACA6D,EAAAjF,KAAAiuH,EAAA,SAAAhmH,GA/LA,MAgMAA,EAAAomH,EAAAlB,aAEAK,EAAAnB,YAAApkH,OAYAykH,EAAApvH,UAAAkxH,YAAA,SAAAt2G,GACA,OAAAA,aAAA0G,EACAwrG,EACGlyG,aAAA4G,EACHgsG,EACG5yG,aAAAs0G,EACHnB,EAEAjB,GAWAsC,EAAApvH,UAAAmxH,kBAAA,SAAAv2G,GACA,OAAAA,EAAAqzG,aAUAmB,EAAApvH,UAAAoxH,cAAA,SAAAx2G,GACA,OAAAA,EAAAmyG,SAGA,IAAA7nF,EAAAkqF,EACAnzF,EAAA93B,QAAA+gC,oDCpQA,IAAAmsF,EAAA,KAMAp1F,EAAA93B,QAJA,WACA,OAAAktH,sBCRA,IAAAxkC,EAAWrlF,EAAQ,KAEnBO,EAAeP,EAAQ,KAEvB+Z,EAAoB/Z,EAAQ,KAE5B8pH,EAAiB9pH,EAAQ,KAEzBG,EAAaH,EAAQ,KAUrBu6E,EAAA,SAAAl3E,GAEA0W,EAAApgB,KAAA2C,KAAA+G,GACA9C,EAAA5G,KAAA2C,KAAA+G,GACAymH,EAAAnwH,KAAA2C,KAAA+G,GAMA/G,KAAAiH,GAAAF,EAAAE,IAAA8hF,KAGA9K,EAAA/hF,UAAA,CAMAqD,KAAA,UAOAgB,KAAA,GAQAwgB,KAAA,KASA3S,QAAA,EASA4vG,SAAA,KAMAtnG,SAAA,EAOAwhF,MAAA,SAAAz9D,EAAAC,GACA,OAAA16B,KAAAq+E,WACA,iBACA3jD,EAAA,EACA,MAEA,eACAD,EAAA,EAIA,IAAAhb,EAAAzf,KAAA6mB,UAEApH,IACAA,EAAAzf,KAAA6mB,UAAA,eAGApH,EAAA,IAAAgb,EACAhb,EAAA,IAAAib,EACA16B,KAAAovE,qBACApvE,KAAAqW,OAAA,IAMAggG,aAAA,aAKAoX,YAAA,aAKAviH,OAAA,WACAlL,KAAAmS,mBAOAsE,SAAA,SAAA3X,EAAAC,KAKA6lC,OAAA,SAAA9mC,EAAAwB,GACA,gBAAAxB,GAAA,UAAAA,GAAA,WAAAA,GAEA,GAAAwB,EAAA,CACA,IAAArB,EAAA+B,KAAAlC,GAEAG,IACAA,EAAA+B,KAAAlC,GAAA,IAGAG,EAAA,GAAAqB,EAAA,GACArB,EAAA,GAAAqB,EAAA,SAGAU,KAAAlC,GAAAwB,GAOA0iH,KAAA,WACAhiH,KAAAoO,QAAA,EACApO,KAAA+gB,MAAA/gB,KAAA+gB,KAAAwjB,WAMAvN,KAAA,WACAh3B,KAAAoO,QAAA,EACApO,KAAA+gB,MAAA/gB,KAAA+gB,KAAAwjB,WAOA5d,KAAA,SAAA7oB,EAAAwB,GACA,qBAAAxB,EACAkC,KAAA4kC,OAAA9mC,EAAAwB,QACK,GAAAuE,EAAA1F,SAAAL,GACL,QAAAyC,KAAAzC,EACAA,EAAAC,eAAAwC,IACAP,KAAA4kC,OAAArkC,EAAAzC,EAAAyC,IAMA,OADAP,KAAAqW,OAAA,GACArW,MAMA0tH,YAAA,SAAA1P,GACA,IAAA52G,EAAApH,KAAA+gB,KAEA3Z,GACA42G,EAAA7zB,YAAA/iF,GAIApH,KAAAg+G,UAAAh+G,KAAAg+G,cACAh+G,KAAA2tH,iBAGA3tH,KAAAg+G,WACAA,EAAAj9F,KAAA3Z,EACA42G,EAAAx5E,aAAAxkC,KACAA,KAAAqW,OAAA,IAKAs3G,eAAA,WACA,IAAA3P,EAAAh+G,KAAAg+G,SAEAA,IACAA,EAAAj9F,MACAi9F,EAAA9zB,iBAAA8zB,EAAAj9F,MAGAi9F,EAAAj9F,KAAA,KACAi9F,EAAAx5E,aAAA,KACAxkC,KAAAg+G,SAAA,KACAh+G,KAAAqW,OAAA,KASA8zE,YAAA,SAAA/iF,GACApH,KAAA+gB,KAAA3Z,EAEA,IAAAwmH,EAAA5tH,KAAA4tH,UAEA,GAAAA,EACA,QAAArwH,EAAA,EAAqBA,EAAAqwH,EAAAnwH,OAAsBF,IAC3C6J,EAAAuC,UAAAkkH,YAAAD,EAAArwH,IAIAyC,KAAAg+G,UACAh+G,KAAAg+G,SAAA7zB,YAAA/iF,IASA8iF,iBAAA,SAAA9iF,GACApH,KAAA+gB,KAAA,KAEA,IAAA6sG,EAAA5tH,KAAA4tH,UAEA,GAAAA,EACA,QAAArwH,EAAA,EAAqBA,EAAAqwH,EAAAnwH,OAAsBF,IAC3C6J,EAAAuC,UAAAmkH,eAAAF,EAAArwH,IAIAyC,KAAAg+G,UACAh+G,KAAAg+G,SAAA9zB,iBAAA9iF,KAIAvD,EAAAvC,MAAA28E,EAAAuvC,GACA3pH,EAAAvC,MAAA28E,EAAAxgE,GACA5Z,EAAAvC,MAAA28E,EAAAh6E,GACA,IAAAm9B,EAAA68C,EACA9lD,EAAA93B,QAAA+gC,mBC7QA,IAAA2sF,EAAWrqH,EAAQ,KAEnByc,EAAYzc,EAAQ,KAIpBnC,EAFYmC,EAAQ,KAEpBnC,YAKAysH,EAAA3xH,MAAAH,UAAAS,MAEA,SAAAsxH,EAAAhwH,EAAAH,GACA,OAAAG,EAAAH,GAGA,SAAAowH,EAAAjwH,EAAAH,EAAAwB,GACArB,EAAAH,GAAAwB,EAUA,SAAA6uH,EAAAzvD,EAAAC,EAAAnyC,GACA,OAAAmyC,EAAAD,GAAAlyC,EAAAkyC,EAUA,SAAA0vD,EAAA1vD,EAAAC,EAAAnyC,GACA,OAAAA,EAAA,GAAAmyC,EAAAD,EAWA,SAAA2vD,EAAA3vD,EAAAC,EAAAnyC,EAAA+P,EAAA+xF,GACA,IAAA9wH,EAAAkhE,EAAAjhE,OAEA,MAAA6wH,EACA,QAAA/wH,EAAA,EAAmBA,EAAAC,EAASD,IAC5Bg/B,EAAAh/B,GAAA4wH,EAAAzvD,EAAAnhE,GAAAohE,EAAAphE,GAAAivB,OAGA,KAAA+hG,EAAA/wH,GAAAkhE,EAAA,GAAAjhE,OAEA,IAAAF,EAAA,EAAmBA,EAAAC,EAASD,IAC5B,QAAAo1B,EAAA,EAAqBA,EAAA47F,EAAU57F,IAC/B4J,EAAAh/B,GAAAo1B,GAAAw7F,EAAAzvD,EAAAnhE,GAAAo1B,GAAAgsC,EAAAphE,GAAAo1B,GAAAnG,IAQA,SAAAgiG,EAAAC,EAAAC,EAAAJ,GACA,IAAAK,EAAAF,EAAAhxH,OACAmxH,EAAAF,EAAAjxH,OAEA,GAAAkxH,IAAAC,EAIA,GAFAD,EAAAC,EAIAH,EAAAhxH,OAAAmxH,OAGA,QAAArxH,EAAAoxH,EAA2BpxH,EAAAqxH,EAAarxH,IACxCkxH,EAAAhtH,KAAA,IAAA6sH,EAAAI,EAAAnxH,GAAAywH,EAAA3wH,KAAAqxH,EAAAnxH,KAMA,IAAAgxH,EAAAE,EAAA,IAAAA,EAAA,GAAAhxH,OAEA,IAAAF,EAAA,EAAiBA,EAAAkxH,EAAAhxH,OAAiBF,IAClC,OAAA+wH,EACAlhG,MAAAqhG,EAAAlxH,MACAkxH,EAAAlxH,GAAAmxH,EAAAnxH,SAGA,QAAAo1B,EAAA,EAAqBA,EAAA47F,EAAU57F,IAC/BvF,MAAAqhG,EAAAlxH,GAAAo1B,MACA87F,EAAAlxH,GAAAo1B,GAAA+7F,EAAAnxH,GAAAo1B,IAcA,SAAAk8F,EAAAJ,EAAAC,EAAAJ,GACA,GAAAG,IAAAC,EACA,SAGA,IAAAlxH,EAAAixH,EAAAhxH,OAEA,GAAAD,IAAAkxH,EAAAjxH,OACA,SAGA,OAAA6wH,GACA,QAAA/wH,EAAA,EAAmBA,EAAAC,EAASD,IAC5B,GAAAkxH,EAAAlxH,KAAAmxH,EAAAnxH,GACA,aAIA,KAAAgxH,EAAAE,EAAA,GAAAhxH,OAEA,IAAAF,EAAA,EAAmBA,EAAAC,EAASD,IAC5B,QAAAo1B,EAAA,EAAqBA,EAAA47F,EAAU57F,IAC/B,GAAA87F,EAAAlxH,GAAAo1B,KAAA+7F,EAAAnxH,GAAAo1B,GACA,SAMA,SAgBA,SAAAm8F,EAAApwD,EAAAC,EAAAC,EAAAC,EAAA5hC,EAAAwiC,EAAAS,EAAA3jC,EAAA+xF,GACA,IAAA9wH,EAAAkhE,EAAAjhE,OAEA,MAAA6wH,EACA,QAAA/wH,EAAA,EAAmBA,EAAAC,EAASD,IAC5Bg/B,EAAAh/B,GAAAwxH,EAAArwD,EAAAnhE,GAAAohE,EAAAphE,GAAAqhE,EAAArhE,GAAAshE,EAAAthE,GAAA0/B,EAAAwiC,EAAAS,OAGA,KAAAquD,EAAA7vD,EAAA,GAAAjhE,OAEA,IAAAF,EAAA,EAAmBA,EAAAC,EAASD,IAC5B,QAAAo1B,EAAA,EAAqBA,EAAA47F,EAAU57F,IAC/B4J,EAAAh/B,GAAAo1B,GAAAo8F,EAAArwD,EAAAnhE,GAAAo1B,GAAAgsC,EAAAphE,GAAAo1B,GAAAisC,EAAArhE,GAAAo1B,GAAAksC,EAAAthE,GAAAo1B,GAAAsK,EAAAwiC,EAAAS,IAkBA,SAAA6uD,EAAArwD,EAAAC,EAAAC,EAAAC,EAAA5hC,EAAAwiC,EAAAS,GACA,IAAA8uD,EAAA,IAAApwD,EAAAF,GACAxiC,EAAA,IAAA2iC,EAAAF,GACA,UAAAA,EAAAC,GAAAowD,EAAA9yF,GAAAgkC,IAAA,GAAAvB,EAAAC,GAAA,EAAAowD,EAAA9yF,GAAAujC,EAAAuvD,EAAA/xF,EAAA0hC,EAGA,SAAAswD,EAAA3vH,GACA,GAAAiC,EAAAjC,GAAA,CACA,IAAA9B,EAAA8B,EAAA7B,OAEA,GAAA8D,EAAAjC,EAAA,KAGA,IAFA,IAAA+4D,EAAA,GAEA96D,EAAA,EAAqBA,EAAAC,EAASD,IAC9B86D,EAAA52D,KAAAusH,EAAA3wH,KAAAiC,EAAA/B,KAGA,OAAA86D,EAGA,OAAA21D,EAAA3wH,KAAAiC,GAGA,OAAAA,EAGA,SAAA4vH,EAAA76D,GAIA,OAHAA,EAAA,GAAA1lD,KAAAod,MAAAsoC,EAAA,IACAA,EAAA,GAAA1lD,KAAAod,MAAAsoC,EAAA,IACAA,EAAA,GAAA1lD,KAAAod,MAAAsoC,EAAA,IACA,QAAAA,EAAA3qC,KAAA,SAQA,SAAAylG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAh+E,EAAAi+E,GACA,IAAAh5C,EAAA44C,EAAAK,QACAh5C,EAAA24C,EAAAM,QACAC,EAAA,WAAAN,EACAO,EAAAL,EAAA9xH,OAEA,GAAAmyH,EAAA,CAKA,IAMAC,EANAC,EAAAP,EAAA,GAAAjwH,MACAywH,EAAAxuH,EAAAuuH,GACAE,GAAA,EACAC,GAAA,EAEA3B,EAAAyB,EArBA,SAAAR,GACA,IAAAW,EAAAX,IAAA9xH,OAAA,GAAA6B,MACA,OAAAiC,EAAA2uH,KAAA,QAmBAC,CAAAZ,GAAA,EAGAA,EAAAriG,KAAA,SAAA7pB,EAAAC,GACA,OAAAD,EAAAqtC,KAAAptC,EAAAotC,OAEAm/E,EAAAN,EAAAK,EAAA,GAAAl/E,KAQA,IANA,IAAA0/E,EAAA,GAEAC,EAAA,GACAC,EAAAf,EAAA,GAAAjwH,MACAixH,GAAA,EAEAhzH,EAAA,EAAiBA,EAAAqyH,EAAcryH,IAAA,CAC/B6yH,EAAA3uH,KAAA8tH,EAAAhyH,GAAAmzC,KAAAm/E,GAEA,IAAAvwH,EAAAiwH,EAAAhyH,GAAA+B,MAQA,GANAywH,GAAAlB,EAAAvvH,EAAAgxH,EAAAhC,KAAAyB,GAAAzwH,IAAAgxH,IACAC,GAAA,GAGAD,EAAAhxH,EAEA,iBAAAA,EAAA,CACA,IAAAkxH,EAAArwG,EAAAnO,MAAA1S,GAEAkxH,GACAlxH,EAAAkxH,EACAR,GAAA,GAEAC,GAAA,EAIAI,EAAA5uH,KAAAnC,GAGA,GAAAkwH,IAAAe,EAAA,CAIA,IAAAL,EAAAG,EAAAT,EAAA,GAEA,IAAAryH,EAAA,EAAiBA,EAAAqyH,EAAA,EAAkBryH,IACnCwyH,EACAvB,EAAA6B,EAAA9yH,GAAA2yH,EAAA5B,IAEAlhG,MAAAijG,EAAA9yH,KAAA6vB,MAAA8iG,IAAAD,GAAAD,IACAK,EAAA9yH,GAAA2yH,GAKAH,GAAAvB,EAAAh4C,EAAA44C,EAAAqB,QAAAl/E,GAAA2+E,EAAA5B,GAGA,IAGAtqF,EACA06B,EACAC,EACAC,EACAC,EAPA6xD,EAAA,EACAC,EAAA,EAQA,GAAAX,EACA,IAAA37D,EAAA,UAGA,IAqFAu8D,EAAA,IAAA7C,EAAA,CACA9vH,OAAAmxH,EAAAqB,QACAI,KAAAhB,EACAnrF,KAAA0qF,EAAA0B,MACApqD,MAAA0oD,EAAA2B,OACAC,QA1FA,SAAA/yH,EAAAuuB,GAIA,IAAAykG,EAEA,GAAAzkG,EAAA,EACAykG,EAAA,OACK,GAAAzkG,EAAAmkG,EAAA,CAKL,IAAAM,EAFAtiH,KAAAC,IAAA8hH,EAAA,EAAAd,EAAA,GAEyBqB,GAAA,KACzBb,EAAAa,IAAAzkG,GADqCykG,KAOrCA,EAAAtiH,KAAAC,IAAAqiH,EAAArB,EAAA,OACK,CACL,IAAAqB,EAAAP,EAA6BO,EAAArB,KAC7BQ,EAAAa,GAAAzkG,GAD+CykG,KAM/CA,EAAAtiH,KAAAC,IAAAqiH,EAAA,EAAArB,EAAA,GAGAc,EAAAO,EACAN,EAAAnkG,EACA,IAAAL,EAAAikG,EAAAa,EAAA,GAAAb,EAAAa,GAEA,OAAA9kG,EAMA,GAHA6X,GAAAxX,EAAA4jG,EAAAa,IAAA9kG,EAGAwjG,EAMA,GALAhxD,EAAA0xD,EAAAY,GACAvyD,EAAA2xD,EAAA,IAAAY,MAAA,GACAryD,EAAAyxD,EAAAY,EAAArB,EAAA,EAAAA,EAAA,EAAAqB,EAAA,GACApyD,EAAAwxD,EAAAY,EAAArB,EAAA,EAAAA,EAAA,EAAAqB,EAAA,GAEAlB,EACAjB,EAAApwD,EAAAC,EAAAC,EAAAC,EAAA76B,YAAAwyC,EAAAv4E,EAAAszC,GAAA+8E,OACO,CAGP,GAAA0B,EACA1wH,EAAAwvH,EAAApwD,EAAAC,EAAAC,EAAAC,EAAA76B,YAAAqwB,EAAA,GACA/0D,EAAA4vH,EAAA76D,OACS,IAAA47D,EAET,OAAA7B,EAAAzvD,EAAAC,EAAA56B,GAEA1kC,EAAAyvH,EAAArwD,EAAAC,EAAAC,EAAAC,EAAA76B,aAGAyyC,EAAAx4E,EAAAszC,EAAAjyC,QAGA,GAAAywH,EACA1B,EAAAgC,EAAAY,GAAAZ,EAAAY,EAAA,GAAAjtF,EAAAwyC,EAAAv4E,EAAAszC,GAAA+8E,OACO,CACP,IAAAhvH,EAEA,GAAA0wH,EACA3B,EAAAgC,EAAAY,GAAAZ,EAAAY,EAAA,GAAAjtF,EAAAqwB,EAAA,GACA/0D,EAAA4vH,EAAA76D,OACS,IAAA47D,EAET,OAAA7B,EAAAiC,EAAAY,GAAAZ,EAAAY,EAAA,GAAAjtF,GAEA1kC,EAAA6uH,EAAAkC,EAAAY,GAAAZ,EAAAY,EAAA,GAAAjtF,GAGAyyC,EAAAx4E,EAAAszC,EAAAjyC,KAWA4xH,UAAA5B,IAOA,OAJAD,GAAA,WAAAA,IACAuB,EAAAvB,UAGAuB,IAYA,IAAAO,EAAA,SAAAlzH,EAAAymC,EAAA8xC,EAAAC,GACAz2E,KAAAoxH,QAAA,GACApxH,KAAAywH,QAAAxyH,EACA+B,KAAA8wH,MAAApsF,IAAA,EACA1kC,KAAAyvH,QAAAj5C,GAAAy3C,EACAjuH,KAAA0vH,QAAAj5C,GAAAy3C,EACAluH,KAAAqxH,WAAA,EACArxH,KAAA+wH,OAAA,EACA/wH,KAAAsxH,UAAA,GACAtxH,KAAAuxH,aAAA,GACAvxH,KAAAwxH,UAAA,IAGAL,EAAAj1H,UAAA,CAOAu1H,KAAA,SAAA/gF,EAEAxqB,GACA,IAAAwrG,EAAA1xH,KAAAoxH,QAEA,QAAA7/E,KAAArrB,EACA,GAAAA,EAAAnoB,eAAAwzC,GAAA,CAIA,IAAAmgF,EAAAngF,GAAA,CACAmgF,EAAAngF,GAAA,GAEA,IAAAjyC,EAAAU,KAAAyvH,QAAAzvH,KAAAywH,QAAAl/E,GAEA,SAAAjyC,EAEA,SAOA,IAAAoxC,GACAghF,EAAAngF,GAAA9vC,KAAA,CACAivC,KAAA,EACApxC,MAAA2vH,EAAA3vH,KAKAoyH,EAAAngF,GAAA9vC,KAAA,CACAivC,OACApxC,MAAA4mB,EAAAqrB,KAIA,OAAAvxC,MAQA2xH,OAAA,SAAAt6C,GAGA,OAFAr3E,KAAAuxH,aAAA9vH,KAAA41E,GAEAr3E,MAEA4xH,MAAA,WACA,QAAAr0H,EAAA,EAAmBA,EAAAyC,KAAAwxH,UAAA/zH,OAA2BF,IAC9CyC,KAAAwxH,UAAAj0H,GAAAq0H,QAGA5xH,KAAA6xH,SAAA,GAEAC,OAAA,WACA,QAAAv0H,EAAA,EAAmBA,EAAAyC,KAAAwxH,UAAA/zH,OAA2BF,IAC9CyC,KAAAwxH,UAAAj0H,GAAAu0H,SAGA9xH,KAAA6xH,SAAA,GAEAE,SAAA,WACA,QAAA/xH,KAAA6xH,SAEAG,cAAA,WAEAhyH,KAAAoxH,QAAA,GAEApxH,KAAAwxH,UAAA/zH,OAAA,EAIA,IAHA,IAAAw0H,EAAAjyH,KAAAsxH,UACA9zH,EAAAy0H,EAAAx0H,OAEAF,EAAA,EAAmBA,EAAAC,EAASD,IAC5B00H,EAAA10H,GAAAF,KAAA2C,OAWAi2C,MAAA,SAAAo5E,EAAAG,GACA,IAWA0C,EAXApkH,EAAA9N,KACAmyH,EAAA,EAEA7C,EAAA,aACA6C,GAGArkH,EAAAkkH,iBAMA,QAAAzgF,KAAAvxC,KAAAoxH,QACA,GAAApxH,KAAAoxH,QAAArzH,eAAAwzC,GAAA,CAIA,IAAAq/E,EAAAzB,EAAAnvH,KAAAqvH,EAAAC,EAAAtvH,KAAAoxH,QAAA7/E,KAAAi+E,GAEAoB,IACA5wH,KAAAwxH,UAAA/vH,KAAAmvH,GAEAuB,IAEAnyH,KAAA2J,WACA3J,KAAA2J,UAAAyoH,QAAAxB,GAGAsB,EAAAtB,GAKA,GAAAsB,EAAA,CACA,IAAAG,EAAAH,EAAAlB,QAEAkB,EAAAlB,QAAA,SAAA/yH,EAAAuuB,GACA6lG,EAAAp0H,EAAAuuB,GAEA,QAAAjvB,EAAA,EAAuBA,EAAAuQ,EAAAyjH,aAAA9zH,OAA8BF,IACrDuQ,EAAAyjH,aAAAh0H,GAAAU,EAAAuuB,IAYA,OAJA2lG,GACAnyH,KAAAgyH,gBAGAhyH,MAOAi3D,KAAA,SAAAq7D,GAIA,IAHA,IAAAC,EAAAvyH,KAAAwxH,UACA7nH,EAAA3J,KAAA2J,UAEApM,EAAA,EAAmBA,EAAAg1H,EAAA90H,OAAqBF,IAAA,CACxC,IAAAqzH,EAAA2B,EAAAh1H,GAEA+0H,GAEA1B,EAAAI,QAAAhxH,KAAAywH,QAAA,GAGA9mH,KAAA6oH,WAAA5B,GAGA2B,EAAA90H,OAAA,GAQAipE,MAAA,SAAAh2B,GAEA,OADA1wC,KAAA+wH,OAAArgF,EACA1wC,MAQAyyH,KAAA,SAAA3zH,GAKA,OAJAA,GACAkB,KAAAsxH,UAAA7vH,KAAA3C,GAGAkB,MAMA0yH,SAAA,WACA,OAAA1yH,KAAAwxH,YAGA,IAAApwF,EAAA+vF,EACAh5F,EAAA93B,QAAA+gC,iBC5nBA,IAAAuxF,EAAA,WAIA3yH,KAAA4yH,KAAA,KAKA5yH,KAAAy7G,KAAA,KACAz7G,KAAA05E,KAAA,GAGAm5C,EAAAF,EAAAz2H,UAOA22H,EAAAC,OAAA,SAAApwH,GACA,IAAAqwH,EAAA,IAAAC,EAAAtwH,GAEA,OADA1C,KAAAizH,YAAAF,GACAA,GAQAF,EAAAI,YAAA,SAAAF,GACA/yH,KAAA4yH,MAGA5yH,KAAAy7G,KAAAv6C,KAAA6xD,EACAA,EAAA9xD,KAAAjhE,KAAAy7G,KACAsX,EAAA7xD,KAAA,KACAlhE,KAAAy7G,KAAAsX,GALA/yH,KAAA4yH,KAAA5yH,KAAAy7G,KAAAsX,EAQA/yH,KAAA05E,QAQAm5C,EAAA98G,OAAA,SAAAg9G,GACA,IAAA9xD,EAAA8xD,EAAA9xD,KACAC,EAAA6xD,EAAA7xD,KAEAD,EACAA,EAAAC,OAGAlhE,KAAA4yH,KAAA1xD,EAGAA,EACAA,EAAAD,OAGAjhE,KAAAy7G,KAAAx6C,EAGA8xD,EAAA7xD,KAAA6xD,EAAA9xD,KAAA,KACAjhE,KAAA05E,QAOAm5C,EAAAr1H,IAAA,WACA,OAAAwC,KAAA05E,MAOAm5C,EAAA35G,MAAA,WACAlZ,KAAA4yH,KAAA5yH,KAAAy7G,KAAA,KACAz7G,KAAA05E,KAAA,GAQA,IAAAs5C,EAAA,SAAAtwH,GAIA1C,KAAAV,MAAAoD,EAKA1C,KAAAkhE,KAKAlhE,KAAAihE,MASAzX,EAAA,SAAA0pE,GACAlzH,KAAAmzH,MAAA,IAAAR,EACA3yH,KAAAozH,KAAA,GACApzH,KAAAqzH,SAAAH,GAAA,GACAlzH,KAAAszH,kBAAA,MAGAC,EAAA/pE,EAAAttD,UAOAq3H,EAAA3/D,IAAA,SAAA91D,EAAAwB,GACA,IAAAgO,EAAAtN,KAAAmzH,MACAt2H,EAAAmD,KAAAozH,KACAI,EAAA,KAEA,SAAA32H,EAAAiB,GAAA,CACA,IAAAN,EAAA8P,EAAA9P,MAEAu1H,EAAA/yH,KAAAszH,kBAEA,GAAA91H,GAAAwC,KAAAqzH,UAAA71H,EAAA,GAEA,IAAAi2H,EAAAnmH,EAAAslH,KACAtlH,EAAAyI,OAAA09G,UACA52H,EAAA42H,EAAA31H,KACA01H,EAAAC,EAAAn0H,MACAU,KAAAszH,kBAAAG,EAGAV,EACAA,EAAAzzH,QAEAyzH,EAAA,IAAAC,EAAA1zH,GAGAyzH,EAAAj1H,MACAwP,EAAA2lH,YAAAF,GACAl2H,EAAAiB,GAAAi1H,EAGA,OAAAS,GAQAD,EAAApzH,IAAA,SAAArC,GACA,IAAAi1H,EAAA/yH,KAAAozH,KAAAt1H,GACAwP,EAAAtN,KAAAmzH,MAEA,SAAAJ,EAOA,OALAA,IAAAzlH,EAAAmuG,OACAnuG,EAAAyI,OAAAg9G,GACAzlH,EAAA2lH,YAAAF,IAGAA,EAAAzzH,OAQAi0H,EAAAr6G,MAAA,WACAlZ,KAAAmzH,MAAAj6G,QAEAlZ,KAAAozH,KAAA,IAGA,IAAAhyF,EAAAooB,EACArxB,EAAA93B,QAAA+gC,mBCzMA,IAAA+qD,EAAgBzoF,EAAQ,KAExBgwH,EAAA,4IAGA11C,EAAA,SAAAj3E,EAAAkc,GACAjjB,KAAAuhB,WAAAxa,GAAA,GACA/G,KAAAijB,QAGA,SAAA0wG,EAAA9xF,EAAAhjC,EAAAkgB,GACA,IAAA/O,EAAA,MAAAnR,EAAAmR,EAAA,EAAAnR,EAAAmR,EACA0X,EAAA,MAAA7oB,EAAA6oB,GAAA,EAAA7oB,EAAA6oB,GACAzX,EAAA,MAAApR,EAAAoR,EAAA,EAAApR,EAAAoR,EACA2X,EAAA,MAAA/oB,EAAA+oB,GAAA,EAAA/oB,EAAA+oB,GAeA,OAbA/oB,EAAA20B,SACAxjB,IAAA+O,EAAAtX,MAAAsX,EAAA/O,EACA0X,IAAA3I,EAAAtX,MAAAsX,EAAA/O,EACAC,IAAA8O,EAAArX,OAAAqX,EAAA9O,EACA2X,IAAA7I,EAAArX,OAAAqX,EAAA9O,GAIAD,EAAAod,MAAApd,GAAA,EAAAA,EACA0X,EAAA0F,MAAA1F,GAAA,EAAAA,EACAzX,EAAAmd,MAAAnd,GAAA,EAAAA,EACA2X,EAAAwF,MAAAxF,GAAA,EAAAA,EACAia,EAAA8xF,qBAAA3jH,EAAAC,EAAAyX,EAAAE,GAIA,SAAAgsG,EAAA/xF,EAAAhjC,EAAAkgB,GACA,IAAAtX,EAAAsX,EAAAtX,MACAC,EAAAqX,EAAArX,OACAkH,EAAAD,KAAAC,IAAAnH,EAAAC,GACAsI,EAAA,MAAAnR,EAAAmR,EAAA,GAAAnR,EAAAmR,EACAC,EAAA,MAAApR,EAAAoR,EAAA,GAAApR,EAAAoR,EACA2tC,EAAA,MAAA/+C,EAAA++C,EAAA,GAAA/+C,EAAA++C,EASA,OAPA/+C,EAAA20B,SACAxjB,IAAAvI,EAAAsX,EAAA/O,EACAC,IAAAvI,EAAAqX,EAAA9O,EACA2tC,GAAAhvC,GAGAizB,EAAA+xF,qBAAA5jH,EAAAC,EAAA,EAAAD,EAAAC,EAAA2tC,GA4YA,IAFA,IAAAi2E,EAtYA71C,EAAA9hF,UAAA,CACAyB,YAAAqgF,EAKA/6D,KAAA,KAKAzC,KAAA,OAKAD,OAAA,KAKA81D,QAAA,EAKAxzC,SAAA,KAKAC,eAAA,EAKAm8C,WAAA,EAKAE,cAAA,EAKAC,cAAA,EAKAv/D,UAAA,EAMA8L,eAAA,EAOAvC,KAAA,KASAg8B,KAAA,KAOAmE,SAAA,KAMA9kC,UAAA,KAMAC,WAAA,KAOAC,SAAA,KAMAC,WAAA,KAMAM,QAAA,KAKA/D,SAAA,OAKAC,WAAA,KAKA4D,UAAA,KAMAC,WAAA,KASA5D,gBAAA,EAKA0D,eAAA,KASA5B,aAAA,SAMA6/B,SAAA,KAMA3/B,WAAA,KAKAwB,UAAA,KAKAC,kBAAA,KAKArB,aAAA,EAKAkC,gBAAA,cAKAC,eAAA,EAKAC,kBAAA,EAKAC,kBAAA,EAKAP,mBAAA,cAKAC,kBAAA,EAKAC,qBAAA,EAKAC,qBAAA,EAOA4kG,eAAA,EAMA9mG,aAAA,EAUAkpE,WAAA,KAKAtnE,oBAAA,KAKAd,gBAAA,KAKAC,gBAAA,EAKAe,iBAAA,EAMAD,YAAA,KAMAvB,KAAA,KAMA+iC,SAAA,KAMAlwC,MAAA,KAKA3X,KAAA,SAAA6iC,EAAAp5B,EAAAq5B,GAKA,IAJA,IACAgyF,EAAAhyF,KAAA/xB,MACAgkH,GAAAD,EAEAv2H,EAAA,EAAmBA,EAAAm2H,EAAAj2H,OAA+BF,IAAA,CAClD,IAAA6D,EAAAsyH,EAAAn2H,GACA2qD,EAAA9mD,EAAA,IAEA2yH,GARA/zH,KAQAkoD,KAAA4rE,EAAA5rE,MAEArmB,EAAAqmB,GAAAikC,EAAAtqD,EAAAqmB,EAVAloD,KAUAkoD,IAAA9mD,EAAA,KAoBA,IAhBA2yH,GAdA/zH,KAcAwgB,OAAAszG,EAAAtzG,QACAqhB,EAAAc,UAfA3iC,KAeAwgB,OAGAuzG,GAlBA/zH,KAkBAugB,SAAAuzG,EAAAvzG,UACAshB,EAAAe,YAnBA5iC,KAmBAugB,SAGAwzG,GAtBA/zH,KAsBAq2E,UAAAy9C,EAAAz9C,WACAx0C,EAAAmyF,YAAA,MAvBAh0H,KAuBAq2E,QAAA,EAvBAr2E,KAuBAq2E,UAGA09C,GA1BA/zH,KA0BA2W,QAAAm9G,EAAAn9G,SACAkrB,EAAAoyF,yBA3BAj0H,KA2BA2W,OAAA,eAGA3W,KAAA+hC,YAAA,CACA,IAAAliB,EA/BA7f,KA+BA6f,UACAgiB,EAAAhiB,aAAA7f,KAAA2rB,eAAAljB,KAAAy7B,aAAAz7B,EAAAy7B,eAAA,KAGAlC,QAAA,WACA,IAAAxhB,EAAAxgB,KAAAwgB,KACA,aAAAA,GAAA,SAAAA,GAEAuhB,UAAA,WACA,IAAAxhB,EAAAvgB,KAAAugB,OACA,aAAAA,GAAA,SAAAA,GAAAvgB,KAAA6f,UAAA,GAUA0B,WAAA,SAAA2yG,EAAAh2H,GACA,GAAAg2H,EACA,QAAA3zH,KAAA2zH,GACAA,EAAAn2H,eAAAwC,KAAA,IAAArC,KAAA,IAAAA,EAAA8B,KAAAjC,eAAAwC,GAAA,MAAA2zH,EAAA3zH,MACAP,KAAAO,GAAA2zH,EAAA3zH,KAWAL,IAAA,SAAArB,EAAAS,GACA,kBAAAT,EACAmB,KAAAnB,GAAAS,EAEAU,KAAAuhB,WAAA1iB,GAAA,IAQA5B,MAAA,WACA,IAAAk3H,EAAA,IAAAn0H,KAAArC,YAEA,OADAw2H,EAAA5yG,WAAAvhB,MAAA,GACAm0H,GAEA1xF,YAAA,SAAAZ,EAAAhjC,EAAAkgB,GAKA,IAJA,IACAq1G,GADA,WAAAv1H,EAAAU,KAAAq0H,EAAAD,GACA9xF,EAAAhjC,EAAAkgB,GACAmjB,EAAArjC,EAAAqjC,WAEA3kC,EAAA,EAAmBA,EAAA2kC,EAAAzkC,OAAuBF,IAC1C62H,EAAAtlC,aAAA5sD,EAAA3kC,GAAAiG,OAAA0+B,EAAA3kC,GAAA4iB,OAGA,OAAAi0G,IAKA72H,EAAA,EAAeA,EAAAm2H,EAAAj2H,OAA+BF,IAAA,CAC9C,IAAA6D,EAAAsyH,EAAAn2H,GAEA6D,EAAA,KAAAyyH,IACAA,EAAAzyH,EAAA,IAAAA,EAAA,IAKA48E,EAAAv7C,YAAAoxF,EAAApxF,YACA,IAAArB,EAAA48C,EACA7lD,EAAA93B,QAAA+gC,iBCrcA,IAAAizF,EAAA,CACAp1C,WAAA,EACAE,cAAA,EACAC,cAAA,EACAx5D,eAAA,EACAC,kBAAA,EACAC,kBAAA,EACAN,kBAAA,EACAC,qBAAA,EACAC,qBAAA,GAWAyS,EAAA93B,QARA,SAAAwhC,EAAA0P,EAAAjyC,GACA,OAAA+0H,EAAAt2H,eAAAwzC,GACAjyC,EAAAuiC,EAAA/0B,IAGAxN,kBCjBA,IAAAg1H,EAAA,SAAApkH,EAAAqkH,GAGAv0H,KAAAkQ,QACAlQ,KAAAu0H,SAEAv0H,KAAAT,KAAA,WAGA+0H,EAAAp4H,UAAAslC,iBAAA,SAAAK,GACA,OAAAA,EAAA2yF,cAAAx0H,KAAAkQ,MAAAlQ,KAAAu0H,QAAA,WAGA,IAAAnzF,EAAAkzF,EACAn8F,EAAA93B,QAAA+gC,iBCdA,IAAAA,EAAA,qBAAAr0B,gBAAA0nH,uBAAA1nH,OAAA0nH,sBAAAz1H,KAAA+N,SACAA,OAAA2nH,yBAAA3nH,OAAA2nH,wBAAA11H,KAAA+N,gBAAA4nH,0BAAA5nH,OAAA6nH,8BAAA,SAAA31H,GACAooE,WAAApoE,EAAA,KAGAk5B,EAAA93B,QAAA+gC,mBCLA,IAAA29C,EAAiBr7E,EAAQ,KASzBqoF,EAAA,IAPmBroF,EAAQ,MAS3Bw6E,EAAA,aAEAA,EAAAhiF,UAAA,CACAyB,YAAAugF,EAOA16C,aAAA,SAAA3B,EAAA9iB,GACA,IAAAhP,EAAA/P,KAAA+P,MACAgP,EAAAhP,EAAAizC,UAAAjkC,EAEA/e,KAAAuiC,SAAAw8C,EAAAC,mBAAAjvE,GAAA,GACA,IAAAqZ,EAAArZ,EAAAqZ,KAIA,GAFA,MAAAA,OAAA,IAEA21D,EAAAM,aAAAj2D,EAAArZ,GAAA,CAKA8xB,EAAAinD,OAEA,IAAAjiE,EAAA7mB,KAAA6mB,UAEA9W,EAAAu6G,cAOAtqH,KAAAsiC,aAAAT,GANAhb,IACAklE,EAAArwD,KAAA3c,GACAgtE,EAAAvsE,eAAAqH,GACA9H,EAAAgtE,GAOAhN,EAAAO,WAAAt/E,KAAA6hC,EAAAzY,EAAArZ,EAAAgP,GACA8iB,EAAA0mC,aAGA,IAAAnnC,EAAA88C,EACA/lD,EAAA93B,QAAA+gC,iBCyBA/gC,EAAAgjC,UAhFA,SAAAxB,EAAAra,GACA,IAKAqtG,EACAC,EACAC,EACAC,EAkCAC,EA1CAjlH,EAAAwX,EAAAxX,EACAC,EAAAuX,EAAAvX,EACAxI,EAAA+f,EAAA/f,MACAC,EAAA8f,EAAA9f,OACAk2C,EAAAp2B,EAAAo2B,EAMAn2C,EAAA,IACAuI,GAAAvI,EACAA,MAGAC,EAAA,IACAuI,GAAAvI,EACAA,MAGA,kBAAAk2C,EACAi3E,EAAAC,EAAAC,EAAAC,EAAAp3E,EACGA,aAAAvhD,MACH,IAAAuhD,EAAAngD,OACAo3H,EAAAC,EAAAC,EAAAC,EAAAp3E,EAAA,GACK,IAAAA,EAAAngD,QACLo3H,EAAAE,EAAAn3E,EAAA,GACAk3E,EAAAE,EAAAp3E,EAAA,IACK,IAAAA,EAAAngD,QACLo3H,EAAAj3E,EAAA,GACAk3E,EAAAE,EAAAp3E,EAAA,GACAm3E,EAAAn3E,EAAA,KAEAi3E,EAAAj3E,EAAA,GACAk3E,EAAAl3E,EAAA,GACAm3E,EAAAn3E,EAAA,GACAo3E,EAAAp3E,EAAA,IAGAi3E,EAAAC,EAAAC,EAAAC,EAAA,EAKAH,EAAAC,EAAArtH,IAEAotH,GAAAptH,GADAwtH,EAAAJ,EAAAC,GAEAA,GAAArtH,EAAAwtH,GAGAF,EAAAC,EAAAvtH,IAEAstH,GAAAttH,GADAwtH,EAAAF,EAAAC,GAEAA,GAAAvtH,EAAAwtH,GAGAH,EAAAC,EAAArtH,IAEAotH,GAAAptH,GADAutH,EAAAH,EAAAC,GAEAA,GAAArtH,EAAAutH,GAGAJ,EAAAG,EAAAttH,IAEAmtH,GAAAntH,GADAutH,EAAAJ,EAAAG,GAEAA,GAAAttH,EAAAutH,GAGApzF,EAAA0b,OAAAvtC,EAAA6kH,EAAA5kH,GACA4xB,EAAA2b,OAAAxtC,EAAAvI,EAAAqtH,EAAA7kH,GACA,IAAA6kH,GAAAjzF,EAAAsc,IAAAnuC,EAAAvI,EAAAqtH,EAAA7kH,EAAA6kH,KAAAnmH,KAAA4U,GAAA,KACAse,EAAA2b,OAAAxtC,EAAAvI,EAAAwI,EAAAvI,EAAAqtH,GACA,IAAAA,GAAAlzF,EAAAsc,IAAAnuC,EAAAvI,EAAAstH,EAAA9kH,EAAAvI,EAAAqtH,IAAA,EAAApmH,KAAA4U,GAAA,GACAse,EAAA2b,OAAAxtC,EAAAglH,EAAA/kH,EAAAvI,GACA,IAAAstH,GAAAnzF,EAAAsc,IAAAnuC,EAAAglH,EAAA/kH,EAAAvI,EAAAstH,IAAArmH,KAAA4U,GAAA,EAAA5U,KAAA4U,IACAse,EAAA2b,OAAAxtC,EAAAC,EAAA4kH,GACA,IAAAA,GAAAhzF,EAAAsc,IAAAnuC,EAAA6kH,EAAA5kH,EAAA4kH,IAAAlmH,KAAA4U,GAAA,IAAA5U,KAAA4U,sBC7Ec7f,EAAQ,KAEtBC,QAFA,IAIAmhD,EAAYphD,EAAQ,KAEpB9E,EAAAkmD,EAAAlmD,KACAnC,EAAAqoD,EAAAroD,OACAI,EAAAioD,EAAAjoD,IACAyB,EAAAwmD,EAAAxmD,QACAuC,EAAAikD,EAAAjkD,QACA1C,EAAA2mD,EAAA3mD,SACA2D,EAAAgjD,EAAAhjD,SACAqB,EAAA2hD,EAAA3hD,cACAR,EAAAmiD,EAAAniD,OACA1F,EAAA6nD,EAAA7nD,MACAe,EAAA8mD,EAAA9mD,MACA2C,EAAAmkD,EAAAnkD,OACAW,EAAAwjD,EAAAxjD,MAEAuD,EAAgBnB,EAAQ,KAExBsiC,EAAYtiC,EAAQ,KAEpBc,EAAqBd,EAAQ,KAE7BwxH,EAAoBxxH,EAAQ,KAE5BwlC,EAAwBxlC,EAAQ,KAIhC2tF,EAFoB3tF,EAAQ,KAE5B2tF,qBAuCA8jC,EAAA,cASAjxH,EAAA8hC,EAAArlC,OAAA,CACA2G,KAAA,SAAA0E,EAAA+X,EAAAjd,EAAAqF,GACArF,KAAA,GACA9G,KAAAgM,OAAA,KAOAhM,KAAA6H,OAAA,IAAAm+B,EAAAl/B,GAKA9G,KAAAo1H,eAAAjpH,GAEAJ,UAAA,SAAAC,EAAAI,GACAzJ,IAAAwyH,KAAAnpH,GAAA,gCAEAhM,KAAAo1H,eAAArpH,UAAAC,EAAAI,GAEApM,KAAAuX,YAAA,OAUAA,YAAA,SAAAhY,GACA,IAAA+X,GAAA,EACAnL,EAAAnM,KAAAo1H,eAEA,IAAA71H,GAAA,aAAAA,EAAA,CACA,IAAA81H,EAAAlpH,EAAAmpH,YAAA,aAAA/1H,GAEAS,KAAAgM,QAAA,aAAAzM,GAGAS,KAAA0R,cACA1R,KAAAinC,YAAAouF,IA2eA,SAAAA,GACAA,IAGAr1H,KAAAgM,OAAA,GACAhM,KAAAgM,OAAAmpH,GAAA,EAQAn1H,KAAAiI,eAAA9E,EAAA,CACAgW,OAAA,KASAnZ,KAAAu1H,eACAv1H,KAAAw1H,kBA9CA,SAAAxpH,EAAAlF,GAGA,IAAA2uH,EAAAzpH,EAAAmU,QAAAnU,EAAA0pH,WACA92H,EAAAkI,EAAA,SAAA6uH,EAAAp1H,GACA,eAAAA,GAAAk1H,GAKAjxH,EAAA8lC,SAAA/pC,KACA,kBAAAo1H,EACA3pH,EAAAzL,GAAAyL,EAAAzL,GAAAvC,EAAAgO,EAAAzL,GAAAo1H,GAAA,GAAA14H,EAAA04H,GAEA,MAAA3pH,EAAAzL,KACAyL,EAAAzL,GAAAo1H,MAgCAC,CAAAP,EAAAr1H,KAAA6H,OAAAmE,QAEAhO,EAAAq3H,EAAAH,GAAA,GACAl1H,KAAAinC,YAAAouF,IA1gBAh4H,KAAA2C,KAAAq1H,GAMA/9G,GAAA,EAOA,GAJA,aAAA/X,GAAA,UAAAA,GACAS,KAAA0R,eAGAnS,GAAA,aAAAA,GAAA,aAAAA,EAAA,CACA,IAAAs2H,EAAA1pH,EAAA2pH,kBAAA91H,MACA61H,IAAA71H,KAAAinC,YAAA4uF,GAAAv+G,GAAA,GAGA,IAAA/X,GAAA,aAAAA,GAAA,UAAAA,EAAA,CACA,IAAAw2H,EAAA5pH,EAAA6pH,eAAAh2H,UAAAoI,MAEA2tH,EAAAt4H,QACAmB,EAAAm3H,EAAA,SAAAE,GACAj2H,KAAAinC,YAAAgvF,EAAA3+G,GAAA,IACStX,MAIT,OAAAsX,GAMA2vB,YAAA,SAAAlM,GACA,IAAA/uB,EAAAhM,KAAAgM,OACAkqH,EAAAl2H,KAAAiI,eACAkuH,EAAA,GACA9kC,EAAArxF,MAGApB,EAAAm8B,EAAA,SAAAq7F,EAAAttH,GACA,MAAAstH,IAIA5xH,EAAA8lC,SAAAxhC,GAGOA,GACPqtH,EAAA10H,KAAAqH,GAFAkD,EAAAlD,GAAA,MAAAkD,EAAAlD,GAAA7L,EAAAm5H,GAAAp4H,EAAAgO,EAAAlD,GAAAstH,GAAA,MAKA5xH,EAAAgrF,kBAAA2mC,EAAA3xH,EAAA+0D,uBAEA,SAAAzwD,EAAAkS,GACA,IAAAq7G,EAAAxxH,EAAA4O,iBAAAsnB,EAAAjyB,IACA2oB,EAAA5sB,EAAAusB,gBAAA8kG,EAAA/1H,IAAA2I,GAAAutH,GACAxxH,EAAA2sB,cAAAC,GAEA7yB,EAAA6yB,EAAA,SAAA7hB,EAAA7G,GACA,IAAAgP,EAAAnI,EAAA5D,OAEA7N,EAAA4Z,KACAnI,EAAAgiB,QAAA9oB,WACA8G,EAAAgiB,QAAAte,QAkeA,SAAAxK,EAAAq+B,EAAAmvF,GAIA,OAHAnvF,EAAA5nC,KAAA4nC,EAAA5nC,KAAA+2H,IAAAhjH,QACA9O,EAAA0qF,iBAAApmF,EAAAq+B,GApeA+nD,CAAApmF,EAAAiP,EAAAnI,EAAA2hB,UAGA,IAAAgV,EA+cA,SAAA2vF,EAAA18D,GACAl7D,EAAAk7D,KACAA,IAAA,CAAAA,GAAA,IAGA,IAAAnB,EAAA,GAIA,OAHAz5D,EAAA46D,EAAA,SAAAj6D,GACA84D,EAAA94D,IAAA22H,EAAA/1H,IAAAZ,IAAA,IAAA5C,UAEA07D,EAxdAk+D,CAAAL,EAAAl7G,GACAhP,EAAAlD,GAAA,GACAotH,EAAAh2H,IAAA4I,EAAA,IACAlK,EAAA6yB,EAAA,SAAA+kG,EAAAztH,GACA,IAAAuI,EAAAklH,EAAAjlG,MACA4V,EAAAqvF,EAAAxqH,OAKA,GAJArJ,EAAAxE,EAAAgpC,IAAA71B,EAAA,8BAIA61B,EAGS,CACT,IAAAsvF,EAAAjyH,EAAAkR,SAAA5M,EAAA0tH,EAAA5kG,QAAAte,SAAA,GAEA,GAAAhC,gBAAAmlH,EACAnlH,EAAA/Q,KAAAi2H,EAAA5kG,QAAArxB,KAEA+Q,EAAA21B,YAAAE,EAAAnnC,MACAsR,EAAA41B,cAAAC,GAAA,OACW,CAEX,IAAAT,EAAA/lC,EAAA,CACA4lC,kBACA3wB,eAAA7M,GACaytH,EAAA5kG,SACbtgB,EAAA,IAAAmlH,EAAAtvF,EAAAnnC,UAAA0mC,GACA/lC,EAAA2Q,EAAAo1B,GACAp1B,EAAAhK,KAAA6/B,EAAAnnC,UAAA0mC,GAKAp1B,EAAA41B,cAAA,eAvBA51B,EAAA21B,YAAA,GAAuCjnC,MACvCsR,EAAA41B,cAAA,IAAyC,GA0BzCgvF,EAAA/1H,IAAA2I,GAAAC,GAAAuI,EACAtF,EAAAlD,GAAAC,GAAAuI,EAAAtF,QACOhM,MAEP,WAAA8I,GACA4tH,EAAA12H,KAAAk2H,EAAA/1H,IAAA,YA1DAH,MA8DAA,KAAAw1H,kBAAAryH,EAAAnD,KAAAu1H,eAAAv1H,KAAAu1H,gBAAA,KAQA9oH,UAAA,WACA,IAAAT,EAAA/O,EAAA+C,KAAAgM,QAgBA,OAfApN,EAAAoN,EAAA,SAAAjF,EAAA+B,GACA,GAAAtE,EAAA8lC,SAAAxhC,GAAA,CAGA,IAFA,IAEAvL,GAFAwJ,EAAAlC,EAAA4O,iBAAA1M,IAEAtJ,OAAA,EAAqCF,GAAA,EAAQA,IAE7CsH,EAAA2rB,UAAAzpB,EAAAxJ,KACAwJ,EAAAiP,OAAAzY,EAAA,GAIAyO,EAAAlD,GAAA/B,YAGAiF,EAAAmpH,GACAnpH,GAMA+6B,SAAA,WACA,OAAA/mC,KAAA6H,QAQAgB,aAAA,SAAAC,EAAAmlB,GACA,IAAA3gB,EAAAtN,KAAAiI,eAAA9H,IAAA2I,GAEA,GAAAwE,EACA,OAAAA,EAAA2gB,GAAA,IAcAsF,gBAAA,SAAA3wB,GACA,IAAAkG,EAAAlG,EAAAkG,SAEA,IAAAA,EACA,SAGA,IAUA3L,EAVA4L,EAAAnG,EAAAmG,MACA9B,EAAArE,EAAAqE,GACA1G,EAAAqC,EAAArC,KAEAo2H,EAAA32H,KAAAiI,eAAA9H,IAAA2I,GAEA,IAAA6tH,MAAAl5H,OACA,SAKA,SAAAsL,EACAzK,EAAAyK,KACAA,EAAA,CAAAA,IAGA5L,EAAAV,EAAAI,EAAAkM,EAAA,SAAAklB,GACA,OAAA0oG,EAAA1oG,KACO,SAAAvrB,GACP,QAAAA,SAEK,SAAAuE,EAAA,CACL,IAAA2vH,EAAAt4H,EAAA2I,GACA9J,EAAAV,EAAAk6H,EAAA,SAAAE,GACA,OAAAD,GAAA/1H,EAAAoG,EAAA4vH,EAAA5vH,KAAA,IAAA2vH,GAAAC,EAAA5vH,cAEK,SAAA1G,EAAA,CACL,IAAAu2H,EAAAx4H,EAAAiC,GACApD,EAAAV,EAAAk6H,EAAA,SAAAE,GACA,OAAAC,GAAAj2H,EAAAN,EAAAs2H,EAAAt2H,OAAA,IAAAu2H,GAAAD,EAAAt2H,gBAIApD,EAAAw5H,EAAAh6H,QAGA,OAAAo6H,EAAA55H,EAAAyF,IA+BAwgF,eAAA,SAAAxgF,GACA,IAmBAs6C,EAnBA3pC,EAAA3Q,EAAA2Q,MACAzK,EAAAlG,EAAAkG,SACAkuH,EAIA,SAAAC,GACA,IAAAC,EAAApuH,EAAA,QACAquH,EAAAruH,EAAA,KACAsuH,EAAAtuH,EAAA,OACA,OAAAmuH,GAAA,MAAAA,EAAAC,IAAA,MAAAD,EAAAE,IAAA,MAAAF,EAAAG,GAMO,KANP,CACAtuH,WAEAC,MAAAkuH,EAAAC,GACAjwH,GAAAgwH,EAAAE,GACA52H,KAAA02H,EAAAG,IAbAC,CAAA9jH,GACApW,EAAA65H,EAAAh3H,KAAAuzB,gBAAAyjG,GAAAh3H,KAAAiI,eAAA9H,IAAA2I,GACA,OAeAo0C,EAfA65E,EAAA55H,EAAAyF,GAgBAA,EAAAnG,SAAAygD,EAAAt6C,EAAAnG,QAAAygD,GA2BAlvC,cAAA,SAAAlF,EAAAhK,EAAAC,GACA,IAAAm3H,EAAAl2H,KAAAiI,eAEA,uBAAAa,EACA/J,EAAAD,EACAA,EAAAgK,EACAotH,EAAAt3H,KAAA,SAAA04H,EAAAvpH,GACAnP,EAAA04H,EAAA,SAAArpH,EAAAlF,GACAjK,EAAAzB,KAAA0B,EAAAgP,EAAAE,EAAAlF,YAGK,GAAAjH,EAAAgH,GACLlK,EAAAs3H,EAAA/1H,IAAA2I,GAAAhK,EAAAC,QACK,GAAAZ,EAAA2K,GAAA,CACL,IAAAyuH,EAAAv3H,KAAAojF,eAAAt6E,GACAlK,EAAA24H,EAAAz4H,EAAAC,KAQAy4H,gBAAA,SAAAj3H,GACA,IAAA4Y,EAAAnZ,KAAAiI,eAAA9H,IAAA,UAEA,OAAA1D,EAAA0c,EAAA,SAAAs+G,GACA,OAAAA,EAAAl3H,YAQA8X,iBAAA,SAAAD,GACA,OAAApY,KAAAiI,eAAA9H,IAAA,UAAAiY,IAUAs/G,gBAAA,SAAApkH,GACA,IAAA6F,EAAAnZ,KAAAiI,eAAA9H,IAAA,UAEA,OAAA1D,EAAA0c,EAAA,SAAAs+G,GACA,OAAAA,EAAAnkH,eAOAqkH,UAAA,WACA,OAAA33H,KAAAiI,eAAA9H,IAAA,UAAAxD,SAMAi7H,eAAA,WACA,OAAA53H,KAAAiI,eAAA9H,IAAA,UAAA1C,QAUA+U,WAAA,SAAA1T,EAAAC,GAEAH,EAAAoB,KAAAu1H,eAAA,SAAAsC,GACA,IAAA1+G,EAAAnZ,KAAAiI,eAAA9H,IAAA,UAAA03H,GAEA/4H,EAAAzB,KAAA0B,EAAAoa,EAAA0+G,IACK73H,OASL83H,cAAA,SAAAh5H,EAAAC,GACAH,EAAAoB,KAAAiI,eAAA9H,IAAA,UAAArB,EAAAC,IAWAy1F,iBAAA,SAAAlhF,EAAAxU,EAAAC,GAEAH,EAAAoB,KAAAu1H,eAAA,SAAAsC,GACA,IAAA1+G,EAAAnZ,KAAAiI,eAAA9H,IAAA,UAAA03H,GAEA1+G,EAAA7F,aACAxU,EAAAzB,KAAA0B,EAAAoa,EAAA0+G,IAEK73H,OAUL+3H,oBAAA,SAAAzkH,EAAAxU,EAAAC,GACA,OAAAH,EAAAoB,KAAA03H,gBAAApkH,GAAAxU,EAAAC,IAMA8sE,iBAAA,SAAA96D,GAEA,aAAA/Q,KAAAw1H,kBAAAr1H,IAAA4Q,EAAA6E,iBAMAoiH,wBAAA,WACA,OAAAh4H,KAAAu1H,gBAAA,IAAA54H,SAOAs7H,aAAA,SAAAn5H,EAAAC,GAGA23H,EAAA12H,KADAvD,EAAAuD,KAAAiI,eAAA9H,IAAA,UAAArB,EAAAC,KAGA2S,YAAA,SAAAD,GACA,IAAAykH,EAAAl2H,KAAAiI,eACAyuH,EAAA12H,KAAAk2H,EAAA/1H,IAAA,WACA,IAAA+3H,EAAA,GACAhC,EAAAt3H,KAAA,SAAA04H,EAAAvpH,GACAmqH,EAAAz2H,KAAAsM,KAEAvJ,EAAAgrF,kBAAA0oC,EAAA1zH,EAAA+0D,uBAAA,SAAAxrD,EAAAiN,GACApc,EAAAs3H,EAAA/1H,IAAA4N,GAAA,SAAAE,IACA,WAAAF,IAMA,SAAAgD,EAAAU,GACA,GAAAA,EAAA,CACA,IAAA1I,EAAA0I,EAAA0mH,YACAlxH,EAAAwK,EAAA+gB,SACAjyB,EAAAkR,EAAAg7B,WACA,aAAA1jC,GAAAgI,EAAA6E,iBAAA7M,GAAA,MAAA9B,GAAA8J,EAAA9J,QAAA,MAAA1G,GAAAwQ,EAAAxQ,UAXA63H,CAAAnqH,EAAAwD,KAAAxD,EAAAyD,qBAyGA,SAAAglH,EAAAjsH,EAAA8pF,GACA9pF,EAAA+qH,kBAAAryH,EAAAsH,EAAA8qH,eAAA14H,EAAA03F,EAAA,SAAAp7E,GACA,OAAAA,EAAAvD,kBACG,IAOH,SAAAmhH,EAAAO,EAAA10H,GAGA,OAAAA,EAAA7E,eAAA,WAAAtB,EAAA66H,EAAA,SAAAT,GACA,OAAAA,EAAAvjH,UAAA1Q,EAAA0Q,UACGgkH,EASHh2H,EAAA4C,EAAAglC,GACA,IAAA9H,EAAAl9B,EACAi0B,EAAA93B,QAAA+gC,iBC1pBA/gC,EAAAgkC,cA3BA,SAAAw8B,EAAAC,EAAAr5C,EAAAE,EAAA9H,EAAA7P,EAAAC,GACA,OAAA4P,EACA,SAGA,IAAAw4G,EAAAx4G,EACAy4G,EAAA,EAGA,GAAAroH,EAAA6wD,EAAAu3D,GAAApoH,EAAA0X,EAAA0wG,GAAApoH,EAAA6wD,EAAAu3D,GAAApoH,EAAA0X,EAAA0wG,GAAAroH,EAAA6wD,EAAAw3D,GAAAroH,EAAAyX,EAAA4wG,GAAAroH,EAAA6wD,EAAAw3D,GAAAroH,EAAAyX,EAAA4wG,EACA,SAGA,GAAAx3D,IAAAp5C,EAIA,OAAA9Y,KAAAyb,IAAApa,EAAA6wD,IAAAw3D,EAAA,EAGA,IAAAp4D,GANAq4D,GAAAx3D,EAAAn5C,IAAAk5C,EAAAp5C,IAMAzX,EAAAC,GALA4wD,EAAAl5C,EAAAF,EAAAq5C,IAAAD,EAAAp5C,GASA,OAFAw4C,KAAAq4D,IAAA,IAEAD,EAAA,EAAAA,EAAA,oBCnCA,IAEA12D,EAFaj+D,EAAQ,KAErBi+D,sBA8BAthE,EAAAgkC,cAfA,SAAAw8B,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAA/H,EAAA7P,EAAAC,GACA,OAAA4P,EACA,SAGA,IAAAw4G,EAAAx4G,EAEA,QAAA5P,EAAA6wD,EAAAu3D,GAAApoH,EAAA0X,EAAA0wG,GAAApoH,EAAA2X,EAAAywG,GAAApoH,EAAA6wD,EAAAu3D,GAAApoH,EAAA0X,EAAA0wG,GAAApoH,EAAA2X,EAAAywG,GAAAroH,EAAA6wD,EAAAw3D,GAAAroH,EAAAyX,EAAA4wG,GAAAroH,EAAA0X,EAAA2wG,GAAAroH,EAAA6wD,EAAAw3D,GAAAroH,EAAAyX,EAAA4wG,GAAAroH,EAAA0X,EAAA2wG,IAIA12D,EAAAd,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAA5X,EAAAC,EAAA,OACAooH,EAAA,kBC7BA,IAAA1uB,EAAA,EAAAh7F,KAAA4U,GAYAljB,EAAAk4H,gBAVA,SAAA16E,GAOA,OANAA,GAAA8rD,GAEA,IACA9rD,GAAA8rD,GAGA9rD,kBCaA1lB,EAAA93B,QAtBA,SAAAwgE,EAAAC,EAAAr5C,EAAAE,EAAA3X,EAAAC,GACA,GAAAA,EAAA6wD,GAAA7wD,EAAA0X,GAAA1X,EAAA6wD,GAAA7wD,EAAA0X,EACA,SAIA,GAAAA,IAAAm5C,EACA,SAGA,IAAA03D,EAAA7wG,EAAAm5C,EAAA,KACA7jC,GAAAhtB,EAAA6wD,IAAAn5C,EAAAm5C,GAEA,IAAA7jC,GAAA,IAAAA,IACAu7F,EAAA7wG,EAAAm5C,EAAA,QAGA,IAAA23D,EAAAx7F,GAAAxV,EAAAo5C,KAEA,OAAA43D,IAAAzoH,EAAAf,IAAAwpH,EAAAzoH,EAAAwoH,EAAA,oBCnBA,IAAAz0H,EAAUL,EAAQ,KAgBlBg1H,EAAA,kFAuCAvgG,EAAA93B,QArCA,SAAAs4H,GAEA,OAAA50H,EAAAiU,QAAA0tB,IAAA3hC,EAAAiU,QAAA+C,SAAA,cACA,IAEA69G,EAFAC,EAAA74H,KAAAm+E,YACApuE,EAAA/P,KAAA+P,MAGA,GAAA8oH,EACA,QAAAt7H,EAAA,EAAqBA,EAAAs7H,EAAAp7H,OAAsBF,IAAA,CAC3C,IAAAygH,EAAA6a,EAAAt7H,GACAiqB,EAAAw2F,KAAAx2F,MACAjoB,EAAAy+G,KAAAz+G,KAEA,GAAAioB,IAAA,WAAAjoB,GAAAioB,EAAA8yD,aAAA9yD,EAAA+yD,UAAA,SAAAh7E,KAAAioB,EAAA/f,QAAA+f,EAAA9f,SAAA,CACA,QAAAirB,EAAA,EAAyBA,EAAA+lG,EAAAj7H,OAAuBk1B,IAGhD+lG,EAAA/lG,GAAA,GAAA5iB,EAAA2oH,EAAA/lG,GAAA,IACA5iB,EAAA2oH,EAAA/lG,GAAA,IAAA+lG,EAAA/lG,GAAA,GAGAimG,GAAA,EACA,OAOA,GAFAD,EAAAv5H,MAAAY,KAAAb,WAEAy5H,EACA,IAAAjmG,EAAA,EAAqBA,EAAA+lG,EAAAj7H,OAAuBk1B,IAC5C5iB,EAAA2oH,EAAA/lG,GAAA,IAAA+lG,EAAA/lG,GAAA,IAGGgmG,oBCpDH,IAAAG,EAAmBp1H,EAAQ,KAE3Bq1H,EAAmBr1H,EAAQ,KAkC3BrD,EAAAgjC,UAhCA,SAAAxB,EAAAra,EAAAi2B,GACA,IAAAryB,EAAA5D,EAAA4D,OACAmM,EAAA/P,EAAA+P,OAEA,GAAAnM,KAAA3tB,QAAA,GACA,GAAA85B,GAAA,WAAAA,EAAA,CACA,IAAAyhG,EAAAD,EAAA3tG,EAAAmM,EAAAkmB,EAAAj2B,EAAAyxG,kBACAp3F,EAAA0b,OAAAnyB,EAAA,MAAAA,EAAA,OAGA,IAFA,IAAA5tB,EAAA4tB,EAAA3tB,OAEAF,EAAA,EAAqBA,GAAAkgD,EAAAjgD,IAAA,GAAiCD,IAAA,CACtD,IAAAy4G,EAAAgjB,EAAA,EAAAz7H,GACA27H,EAAAF,EAAA,EAAAz7H,EAAA,GACA61D,EAAAhoC,GAAA7tB,EAAA,GAAAC,GACAqkC,EAAAuc,cAAA43D,EAAA,GAAAA,EAAA,GAAAkjB,EAAA,GAAAA,EAAA,GAAA9lE,EAAA,GAAAA,EAAA,SAEK,CACL,WAAA77B,IACAnM,EAAA0tG,EAAA1tG,EAAAqyB,IAGA5b,EAAA0b,OAAAnyB,EAAA,MAAAA,EAAA,OAEA7tB,EAAA,UAAA+nD,EAAAl6B,EAAA3tB,OAAwCF,EAAA+nD,EAAO/nD,IAC/CskC,EAAA2b,OAAApyB,EAAA7tB,GAAA,GAAA6tB,EAAA7tB,GAAA,IAIAkgD,GAAA5b,EAAA4b,+BChCA,IAAA55C,EAAaH,EAAQ,KAErBmrF,EAAenrF,EAAQ,KAYvB6a,EAAA,SAAAvO,EAAAC,EAAAyX,EAAAE,EAAAsa,EAAAi3F,GAIAn5H,KAAAgQ,EAAA,MAAAA,EAAA,EAAAA,EACAhQ,KAAAiQ,EAAA,MAAAA,EAAA,EAAAA,EACAjQ,KAAA0nB,GAAA,MAAAA,EAAA,EAAAA,EACA1nB,KAAA4nB,GAAA,MAAAA,EAAA,EAAAA,EAEA5nB,KAAAT,KAAA,SAEAS,KAAAwzB,OAAA2lG,IAAA,EACAtqC,EAAAxxF,KAAA2C,KAAAkiC,IAGA3jB,EAAAriB,UAAA,CACAyB,YAAA4gB,GAEA1a,EAAA9C,SAAAwd,EAAAswE,GACA,IAAAztD,EAAA7iB,EACA4Z,EAAA93B,QAAA+gC,mBClCA,IAAAx4B,EAAalF,EAAQ,KAErBsvB,EAAApqB,EAAAoqB,UACAvf,EAAA7K,EAAA6K,iBAoBA4yB,EAAArT,IAcA,IAAAoO,EAAA,CACAxvB,kBAAA,WACAy0B,EAAArmC,MAAAo5H,SAAA,EACA/yF,EAAArmC,MAAAq5H,aAAA,IAUA1sF,oBAAA,SAAApsC,EAAAqsC,EAAAC,GAEA,IAAAysF,EAAAjzF,EADAuG,KAAA5sC,MAEAo5H,EAAAE,EAAAF,UAAA,EACAC,EAAAC,EAAAD,aAAAC,EAAAD,cAAA,GAEA,GAAAA,EAAAt7H,eAAAwC,GACA,OAAA84H,EAAA94H,GAGA,IAAAg5H,EAAA9lH,EAAAzT,KAAAG,IAAA,aACAq5H,EAAAx5H,KAAAG,IAAA,iBACAs1B,EAAA,MAAAoX,GAAA2sF,EArCA,SAAAhlE,EAAA3nB,GAGA,IAFA,IAAA4sF,EAAAjlE,EAAA/2D,OAEAF,EAAA,EAAiBA,EAAAk8H,EAAgBl8H,IACjC,GAAAi3D,EAAAj3D,GAAAE,OAAAovC,EACA,OAAA2nB,EAAAj3D,GAIA,OAAAi3D,EAAAilE,EAAA,GA4BAC,CAAAF,EAAA3sF,GAAA0sF,EAIA,IAFA9jG,KAAA8jG,IAEA9jG,EAAAh4B,OAAA,CAIA,IAAA0iB,EAAAsV,EAAA2jG,GAOA,OALA74H,IACA84H,EAAA94H,GAAA4f,GAGAm5G,EAAAF,YAAA,GAAA3jG,EAAAh4B,OACA0iB,KAGAgY,EAAA93B,QAAA+gC,mBChFc19B,EAAQ,KAEtBC,QAFA,IAIAmhD,EAAYphD,EAAQ,KAEpBP,EAAA2hD,EAAA3hD,cAEAvE,GADAkmD,EAAA7iD,SACA6iD,EAAAlmD,MA+DA,IAAA+6H,EAAA,CACAC,YAAA,SAAA7oH,EAAA5T,EAAAu+D,EAAAO,GACA,IAAAg0C,EAAAl/F,EAAAy2B,uBAAA,YACA0oE,EAAAn/F,EAAAy2B,uBAAA,YACArqC,EAAAs+D,aAAA,UACAC,EAAAx7D,IAAA,IAAA+vG,GACAv0C,EAAAx7D,IAAA,IAAAgwG,GAEA5rD,EAAA2rD,KACAh0C,EAAA/7D,IAAA,IAAA+vG,GACA9yG,EAAAw+D,sBAAA,GAGArX,EAAA4rD,KACAj0C,EAAA/7D,IAAA,IAAAgwG,GACA/yG,EAAAw+D,sBAAA,IAGAqrB,WAAA,SAAAj2E,EAAA5T,EAAAu+D,EAAAO,GACA,IAAAgrB,EAAAl2E,EAAAy2B,uBAAA,iBACArqC,EAAAs+D,aAAA,WACAC,EAAAx7D,IAAA,SAAA+mF,GAEA3iC,EAAA2iC,KACAhrB,EAAA/7D,IAAA,SAAA+mF,GACA9pF,EAAAw+D,sBAAA,IAGAqoD,MAAA,SAAAjzG,EAAA5T,EAAAu+D,EAAAO,GACA,IAAAuoD,EAAAzzG,EAAAy2B,uBAAA,YACAi9E,EAAAD,EAAAE,cAAA,cACAC,EAAAH,EAAAE,cAAA,aACAvnH,EAAAs+D,aAAA,mBACAC,EAAAx7D,IAAA,SAAAukH,GACA/oD,EAAAx7D,IAAA,QAAAykH,GAEArgE,EAAAmgE,KACAxoD,EAAA/7D,IAAA,SAAAukH,GACAtnH,EAAAw+D,sBAAA,GAGArX,EAAAqgE,KACA1oD,EAAA/7D,IAAA,QAAAykH,GACAxnH,EAAAw+D,sBAAA,IAGAmjC,IAAA,SAAA/tF,EAAA5T,EAAAu+D,EAAAO,GACA9+D,EAAAs+D,aAAA,eAEAwN,SAAA,SAAAl4D,EAAA5T,EAAAu+D,EAAAO,GACA,IAAAxxD,EAAAsG,EAAAtG,QACAovH,EAAApvH,EAAA5B,aAAA,WAAAkI,EAAA5Q,IAAA,kBACAs7D,EAAAt+D,EAAAs+D,aAAAo+D,EAAA19G,WAAAxf,QACAiC,EAAAi7H,EAAAC,kBAAA,SAAAxzC,EAAAv9E,GACA,IAAAm7C,EAAAz5C,EAAA5B,aAAA,eAAAy9E,GACAq9B,EAAAloD,EAAA1yD,GACA2yD,EAAAx7D,IAAAyjH,EAAAz/D,GAEAI,EAAAJ,IAAA,MAAA/mD,EAAAw+D,wBACAM,EAAA/7D,IAAAyjH,EAAAz/D,GACA/mD,EAAAw+D,sBAAA5yD,OAMA,SAAAu7C,EAAAJ,GACA,mBAAAA,EAAA/jD,IAAA,QAGAE,EAAA66D,0BAtFA,SAAAnqD,GACA,IAAAuqD,EAAAvqD,EAAA5Q,IAAA,oBACAhD,EAAA,CACAm+D,eACAG,aAAA,GACAC,QAAAv4D,IACA84D,gBAAA94D,KAEA42H,EAAAJ,EAAAr+D,GAEA,GAAAy+D,EAEA,OADAA,EAAAhpH,EAAA5T,IAAAu+D,QAAAv+D,EAAA8+D,iBACA9+D,oBCnEA,IAAA0G,EAAaH,EAAQ,KAqBrBs2H,EAAA,oNAQA,IAAA54F,EANA,SAAA64F,GACAp2H,EAAAjF,KAAAo7H,EAAA,SAAAz5H,GACAP,KAAAO,GAAAsD,EAAA7E,KAAAi7H,EAAA15H,GAAA05H,IACGj6H,OAIHm4B,EAAA93B,QAAA+gC,mBC9BA,IAAA58B,EAAqBd,EAAQ,KAE7BgB,EAAoBhB,EAAQ,KAI5BytF,EAFoBztF,EAAQ,KAE5BytF,mBAIA3R,EAFkB97E,EAAQ,KAE1B87E,wBA6BAh7E,EAAA7D,OAAA,CACApB,KAAA,UAKA+mC,cAAA,CAEAy+B,eAAAya,EAEAgS,aAAA,KACAr1E,WAAA,KACAjf,OAAA,MAEAgqC,cAAA,WACAiqD,EAAAnxF,SAGA0E,EAAA/D,OAAA,CACApB,KAAA,6BC1DA,IAAAqE,EAAcF,EAAQ,KAEtBrD,EAAAuD,UAEA,IAAA0Z,EAAa5Z,EAAQ,KAErBrD,EAAAid,SAEA,IAAAC,EAAa7Z,EAAQ,KAErBrD,EAAAkd,SAEA,IAAA1Z,EAAaH,EAAQ,KAErBI,EAAgBJ,EAAQ,KAExBrD,EAAA8f,MAAArc,EAEA,IAAAc,EAAclB,EAAQ,KAEtBrD,EAAAuE,UAEA,IAAAu4B,EAAiBz5B,EAAQ,KAEzBrD,EAAAowC,OAAAtT,EAEA,IAAA/E,EAAiB10B,EAAQ,KAEzBrD,EAAA65H,OAAA9hG,EAEA,IAAA+hG,EAAgBz2H,EAAQ,KAExBy2H,EAAAr1H,SACAzE,EAAAyE,SAAAq1H,EAAAr1H,SAEA,IAAAs1H,EAAe12H,EAAQ,KAEvBrD,EAAAikF,OAAA81C,EAEA,IAAAC,EAAmB32H,EAAQ,KAE3BrD,EAAAg6H,eAEA,IAAAC,EAAY52H,EAAQ,KAEpBrD,EAAAoxC,KAAA6oF,EAEA,IAAAC,EAAa72H,EAAQ,KAErBrD,EAAA2lC,MAAAu0F,EAEA,IAAAC,EAAY92H,EAAQ,KAEpBrD,EAAA+hE,KAAAo4D,EAEA,IAAAC,EAAW/2H,EAAQ,KAEnBrD,EAAA0D,IAAA02H,EAwBA,IAAAC,EAAAL,EACAM,EAAA,GACA92H,EAAAjF,KAAA,wKAAA2B,GACAo6H,EAAAp6H,GAAAsD,EAAAtD,KAEAF,EAAAq6H,eACAr6H,EAAAu6H,KAAAD,mBCvFA,IAAA71E,EAAYphD,EAAQ,KAEpBP,EAAA2hD,EAAA3hD,cACAvE,EAAAkmD,EAAAlmD,KACAkD,EAAAgjD,EAAAhjD,SACAtD,EAAAsmD,EAAAtmD,SACAmC,EAAAmkD,EAAAnkD,OACAxC,EAAA2mD,EAAA3mD,SACAlB,EAAA6nD,EAAA7nD,MAIAwW,EAFa/P,EAAQ,KAErB+P,iBAIAo/E,EAFoBnvF,EAAQ,KAE5BmvF,aAEAhjD,EAAansC,EAAQ,KAIrBo8E,EAFuBp8E,EAAQ,KAE/Bo8E,iBAgPA,SAAA+6C,EAAAt6H,EAAA1D,EAAAi+H,GACA,GAAAA,GAAA,MAAAj+H,EAAAsD,IAAAI,GAAA,CAGA,IAFA,IAAAhD,EAAA,EAEA,MAAAV,EAAAsD,IAAAI,EAAAhD,IACAA,IAGAgD,GAAAhD,EAIA,OADAV,EAAAqD,IAAAK,GAAA,GACAA,EAGA,IAAA6gC,EAtLA,SAAA25F,EAAA79H,EAAA6a,GACA83B,EAAA2F,WAAAt4C,KACAA,EAAA2yC,EAAAurB,mBAAAl+D,IAGA6a,KAAA,GACAgjH,MAAA,IAAAp+H,QASA,IARA,IAAAigF,GAAA7kE,EAAA6kE,SAAA,IAAAjgF,QACAkgF,EAAA15E,EAAA4U,EAAA8kE,WACAm+C,EAAA73H,IACA83H,EAAA93H,IAEAhG,EAAA,GACA4/E,EA+IA,SAAA7/E,EAAA69H,EAAAn+C,EAAAs+C,GAGA,IAAAn+C,EAAApuE,KAAAG,IAAA5R,EAAA0iF,uBAAA,EAAAm7C,EAAAt9H,OAAAm/E,EAAAn/E,OAAAy9H,GAAA,GAKA,OAJAt8H,EAAAm8H,EAAA,SAAAI,GACA,IAAAC,EAAAD,EAAAv+C,QACAw+C,IAAAr+C,EAAApuE,KAAAG,IAAAiuE,EAAAq+C,EAAA39H,WAEAs/E,EAvJAs+C,CAAAn+H,EAAA69H,EAAAn+C,EAAA7kE,EAAAglE,UAEAx/E,EAAA,EAAiBA,EAAAw/E,EAAcx/E,IAAA,CAC/B,IAAA+9H,EAAA1+C,EAAAr/E,GAAAoD,EAAA,GAA2CxC,EAAAy+E,EAAAr/E,IAAAq/E,EAAAr/E,GAAA,CAC3CgD,KAAAq8E,EAAAr/E,KAEAg+H,EAAAD,EAAA/6H,KACAi2H,EAAAr5H,EAAAI,GAAA,CACA2uC,UAAA,IAGA,MAAAqvF,GAAA,MAAAP,EAAA76H,IAAAo7H,KAIA/E,EAAAj2H,KAAAi2H,EAAA1qF,YAAAyvF,EACAP,EAAA96H,IAAAq7H,EAAAh+H,IAGA,MAAA+9H,EAAA/7H,OAAAi3H,EAAAj3H,KAAA+7H,EAAA/7H,MACA,MAAA+7H,EAAAxvF,cAAA0qF,EAAA1qF,YAAAwvF,EAAAxvF,aAIA+wC,EAAAj+E,KAAA,SAAA2uC,EAAAR,GACAQ,EAAA95B,EAAA85B,GAAA5wC,QACA,IAAA6+H,EAAA3+C,EAAA38E,IAAA6sC,EAAA,IACAnuC,EAAA2uC,EAAA,SAAAkuF,EAAAxtG,GAEAnsB,EAAA25H,OAAAT,EAAA76H,IAAAs7H,IAEA,MAAAA,KAAA1+C,IACAy+C,EAAAvtG,GAAAwtG,EACAC,EAAAv+H,EAAAs+H,GAAA1uF,EAAA9e,QAKA,IAAA0tG,EAAA,EAqDA,SAAAD,EAAAlF,EAAAzpF,EAAAiF,GACA,MAAA8tC,EAAA3/E,IAAA4sC,GACAypF,EAAAtqF,UAAAa,GAAAiF,GAEAwkF,EAAAzpF,WACAypF,EAAAxkF,gBACAipF,EAAA/6H,IAAA6sC,GAAA,IA1DAnuC,EAAAm8H,EAAA,SAAAI,EAAAS,GACA,IAAA7uF,EAEAquF,EACAS,EAEA,GAAA/5H,EAAAq5H,GACApuF,EAAAouF,EACAA,EAAA,OACK,CACLpuF,EAAAouF,EAAA56H,KACA,IAAAuzC,EAAAqnF,EAAArnF,YACAqnF,EAAArnF,YAAA,MACAqnF,EAAAl+H,EAAAk+H,IACArnF,cAEAsnF,EAAAD,EAAAv+C,QACAi/C,EAAAV,EAAAjvF,UACAivF,EAAA56H,KAAA46H,EAAApuF,SAAAouF,EAAAnpF,cAAAmpF,EAAAv+C,QAAAu+C,EAAAjvF,UAAA,KAGA,IAAAqB,EAAA95B,EAAAopE,EAAA18E,IAAA4sC,IAEA,IAAAQ,EAAA9vC,OACA,QAAAF,EAAA,EAAqBA,GAAA69H,KAAA39H,QAAA,GAA0DF,IAAA,CAC/E,KAAAo+H,EAAAx+H,EAAAM,QAAA,MAAAN,EAAAw+H,GAAA5uF,UACA4uF,IAGAA,EAAAx+H,EAAAM,QAAA8vC,EAAA9rC,KAAAk6H,KAKA/8H,EAAA2uC,EAAA,SAAAkuF,EAAAzpF,GACA,IAAAwkF,EAAAr5H,EAAAs+H,GAGA,GAFAC,EAAAl9H,EAAAg4H,EAAA2E,GAAApuF,EAAAiF,GAEA,MAAAwkF,EAAAj2H,MAAA66H,EAAA,CACA,IAAAU,EAAAV,EAAAppF,IACA7zC,EAAA29H,OAAA,CACAv7H,KAAAu7H,IAEAtF,EAAAj2H,KAAAi2H,EAAA1qF,YAAAgwF,EAAAv7H,KACAi2H,EAAAp2C,eAAA07C,EAAA17C,eAIAy7C,GAAAr9H,EAAAg4H,EAAAtqF,UAAA2vF,OAeA,IAAA9/D,EAAAhkD,EAAAgkD,cACAkhB,EAAAllE,EAAAklE,mBACA69C,EAAA,MAAA79C,EACAA,EAAAlhB,EAAAkhB,GAAA,IAGA,IAFA,IAAA8+C,EAAAhgE,GAAA,QAEA0/D,EAAA,EAA4BA,EAAA1+C,EAAyB0+C,IAIrD,OAHAjF,EAAAr5H,EAAAs+H,GAAAt+H,EAAAs+H,IAAA,IACA1uF,WAGAypF,EAAAzpF,SAAA8tF,EAAAkB,EAAAd,EAAAH,GACAtE,EAAAxkF,cAAA,IAEA+pB,GAAAkhB,GAAA,KACAu5C,EAAAv5D,cAAA,GAGAggB,KAGA,MAAAu5C,EAAAj2H,OAAAi2H,EAAAj2H,KAAAs6H,EAAArE,EAAAzpF,SAAAiuF,IAEA,MAAAxE,EAAAj3H,MAAAszF,EAAA31F,EAAAu+H,EAAAjF,EAAAj2H,QACAi2H,EAAAj3H,KAAA,WAIA,OAAApC,GAwCAg7B,EAAA93B,QAAA+gC,mBCtRA,IAAA0jB,EAAYphD,EAAQ,KAEpBP,EAAA2hD,EAAA3hD,cACAhF,EAAA2mD,EAAA3mD,SACAtB,EAAAioD,EAAAjoD,IA4BA,SAAA88F,EAAA5hF,GAKA/X,KAAA+zC,WAAAh8B,EAAAg8B,YAAA,GAMA/zC,KAAAg8H,aAAAjkH,EAAAkkH,YAMAj8H,KAAAk8H,eAAAnkH,EAAAokH,cAMAn8H,KAAAozH,KAQAz5B,EAAAM,kBAAA,SAAA/1C,GACA,IAAAl4C,EAAAk4C,EAAAl4C,OACAxK,EAAAwK,EAAAxK,KACAuyC,EAAAvyC,GAAA3E,EAAA2E,EAAAgrC,GACA,WAAAmtD,EAAA,CACA5lD,aACAkoF,aAAAloF,EAEAooF,eAAA,IAAAnwH,EAAAowH,gBAIA,IAAAzjE,EAAAghC,EAAAz9F,UA0DA,SAAAmgI,EAAAvoF,GACA,OAAAA,EAAAs/E,OAAAt/E,EAAAs/E,KAAAjwH,EAAA2wC,EAAAC,aAGA,SAAAvH,EAAA3tC,GACA,OAAAV,EAAAU,IAAA,MAAAA,EAAAS,MACAT,EAAAS,MAEAT,EAAA,GA5DA85D,EAAA2jE,WAAA,SAAA3mD,GACA,OAAA0mD,EAAAr8H,MAAAG,IAAAw1E,IAQAhd,EAAA0N,gBAAA,SAAAsP,GACA,IAAA5sE,EACAkzH,EAAAj8H,KAAAg8H,aAMA,qBAAArmD,IAAAsmD,EACA,OAAAtmD,EAWA,GAAAsmD,IAAAj8H,KAAAk8H,eAGA,OAFAnzH,EAAA/I,KAAA+zC,WAAAt2C,OACAuC,KAAA+zC,WAAAhrC,GAAA4sE,EACA5sE,EAGA,IAAAlM,EAAAw/H,EAAAr8H,MAaA,OAVA,OAFA+I,EAAAlM,EAAAsD,IAAAw1E,MAGAsmD,GACAlzH,EAAA/I,KAAA+zC,WAAAt2C,OACAuC,KAAA+zC,WAAAhrC,GAAA4sE,EACA94E,EAAAqD,IAAAy1E,EAAA5sE,IAEAA,EAAA6jB,KAIA7jB,GAgBA,IAAAq4B,EAAAu4D,EACAxhE,EAAA93B,QAAA+gC,mBClJA,IAAAjE,EAAiBz5B,EAAQ,KAyBzB8vF,EAAAr2D,EAAAxe,MAoCA,SAAAi1E,EAAA3jE,GAEA,OAAAkN,EAAA7P,iBAAA2C,GAAA,EAGA,SAAA7D,EAAA6nE,EAAAhmE,EAAA0qB,GACAs7C,EAAAhmE,GAAAtf,KAAAG,IAAAH,KAAAC,IAAAqlF,EAAAhmE,GAAA0qB,EAAA,IAAAA,EAAA,IAIA,SAAA4jF,EAAAtoC,EAAAt7C,IACA7qB,SAAAmmE,EAAA,MAAAA,EAAA,GAAAt7C,EAAA,KACA7qB,SAAAmmE,EAAA,MAAAA,EAAA,GAAAt7C,EAAA,IACAvsB,EAAA6nE,EAAA,EAAAt7C,GACAvsB,EAAA6nE,EAAA,EAAAt7C,GAEAs7C,EAAA,GAAAA,EAAA,KACAA,EAAA,GAAAA,EAAA,IA6CA5zF,EAAA0zF,uBAxFA,SAAAp7C,EAAA1gB,EAAA0rB,EAAAC,GACA,IAAAzmD,EAAA,GACA0jD,EAAAlI,EAAA,GAAAA,EAAA,GACA1oB,EAAA9yB,EAAA8yB,SAAAkN,EAAAzN,KAAAmxB,EAAA5oB,GAAA,GAEA,MAAA0rB,GAAA1zB,EAAA0zB,IACA1zB,EAAA9yB,EAAA8yB,SAAA0zB,GAGA,MAAAC,GAAA3zB,EAAA2zB,IACA3zB,EAAA9yB,EAAA8yB,SAAA2zB,GAIA,IAAA/2B,EAAA1vB,EAAA62F,kBAAAJ,EAAA3jE,GAIA,OADAssG,EADAp/H,EAAA82F,eAAA,CAAAT,EAAA7kF,KAAAg2C,KAAAhM,EAAA,GAAA1oB,KAAApD,GAAA2mE,EAAA7kF,KAAAod,MAAA4sB,EAAA,GAAA1oB,KAAApD,IACA8rB,GACAx7C,GAuEAkD,EAAAuzF,uBACAvzF,EAAAk8H,YACAl8H,EAAAwzF,sBA5CA,SAAA5jE,EAAA0oB,EAAAs7C,EAAAD,GACA,IAAA/wB,EAAA,GAEA,IAAAhzC,EACA,OAAAgzC,EAMAtqB,EAAA,GAAAs7C,EAAA,IACAhxB,EAAAxhE,KAAAk3C,EAAA,IAKA,IAFA,IAAAkK,EAAAoxC,EAAA,GAEApxC,GAAAoxC,EAAA,KACAhxB,EAAAxhE,KAAAohD,IAEAA,EAAA2wC,EAAA3wC,EAAA5yB,EAAA+jE,MAEA/wB,IAAAxlE,OAAA,KAMA,GAAAwlE,EAAAxlE,OAnBA,IAoBA,SAUA,OAJAk7C,EAAA,IAAAsqB,EAAAxlE,OAAAwlE,IAAAxlE,OAAA,GAAAw2F,EAAA,KACAhxB,EAAAxhE,KAAAk3C,EAAA,IAGAsqB,oBCxHA,IAAAp/D,EAAaH,EAAQ,KAErB84H,EAAa94H,EAAQ,KAgErB,SAAA+4H,EAAAC,EAAAC,EAAAC,GAKA,IAJA,IAAAz/H,EAAA,GACA0/H,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAp/H,EAAA,EAAiBA,EAAAm/H,EAAAj/H,OAAuBF,GAAA,GACxC,IAAAyS,EAAA0sH,EAAAj2E,WAAAlpD,GAAA,GACA0S,EAAAysH,EAAAj2E,WAAAlpD,EAAA,MAEAyS,KAAA,MAAAA,GACAC,KAAA,MAAAA,GAIA4sH,EAFA7sH,GAAA6sH,EAGAC,EAFA7sH,GAAA6sH,EAIA3/H,EAAAsE,KAAA,CAAAuO,EAAA4sH,EAAA3sH,EAAA2sH,IAGA,OAAAz/H,EAgDAg7B,EAAA93B,QAvCA,SAAAyc,GAEA,OArEA,SAAAigH,GACA,IAAAA,EAAAC,aACA,OAAAD,EAGA,IAAAH,EAAAG,EAAAE,UAEA,MAAAL,IACAA,EAAA,MAKA,IAFA,IAAA5/G,EAAA+/G,EAAA//G,SAEA6S,EAAA,EAAiBA,EAAA7S,EAAAvf,OAAqBoyB,IAMtC,IALA,IACAqtG,EADAlgH,EAAA6S,GACAqtG,SACAC,EAAAD,EAAAC,YACAR,EAAAO,EAAAP,cAEA/+F,EAAA,EAAmBA,EAAAu/F,EAAA1/H,OAAwBmgC,IAAA,CAC3C,IAAA8+F,EAAAS,EAAAv/F,GAEA,eAAAs/F,EAAA39H,KACA49H,EAAAv/F,GAAA6+F,EAAAC,EAAAC,EAAA/+F,GAAAg/F,QACO,oBAAAM,EAAA39H,KACP,QAAA69H,EAAA,EAAwBA,EAAAV,EAAAj/H,OAAwB2/H,IAAA,CAChD,IAAAx1D,EAAA80D,EAAAU,GACAV,EAAAU,GAAAX,EAAA70D,EAAA+0D,EAAA/+F,GAAAw/F,GAAAR,IAOAG,EAAAC,cAAA,EAkCAK,CAAAvgH,GACAjZ,EAAAhH,IAAAgH,EAAApH,OAAAqgB,EAAAE,SAAA,SAAAsgH,GAEA,OAAAA,EAAAJ,UAAAI,EAAAv0F,YAAAu0F,EAAAJ,SAAAC,YAAA1/H,OAAA,IACG,SAAA6/H,GACH,IAAAv0F,EAAAu0F,EAAAv0F,WACA+1D,EAAAw+B,EAAAJ,SACAC,EAAAr+B,EAAAq+B,YACAI,EAAA,GAEA,YAAAz+B,EAAAv/F,MACAg+H,EAAA97H,KAAA,CACAlC,KAAA,UAGAi+H,SAAAL,EAAA,GACAM,UAAAN,EAAAxgI,MAAA,KAIA,iBAAAmiG,EAAAv/F,MACAsE,EAAAjF,KAAAu+H,EAAA,SAAAvtH,GACAA,EAAA,IACA2tH,EAAA97H,KAAA,CACAlC,KAAA,UACAi+H,SAAA5tH,EAAA,GACA6tH,UAAA7tH,EAAAjT,MAAA,OAMA,IAAA+gI,EAAA,IAAAlB,EAAAzzF,EAAAxoC,KAAAg9H,EAAAx0F,EAAAiuE,IAEA,OADA0mB,EAAA30F,aACA20F,sBClIA,IAAAj/G,EAAmB/a,EAAQ,KAE3Bg1E,EAAWh1E,EAAQ,KAEnBk8B,EAAWl8B,EAAQ,KAEnBi6H,EAAqBj6H,EAAQ,KA+B7B,SAAA84H,EAAAj8H,EAAAg9H,EAAAvmB,GAaA,GARAh3G,KAAAO,OAMAP,KAAAu9H,aAEAvmB,EAIAA,EAAA,CAAAA,EAAA,GAAAA,EAAA,QAJA,CACA,IAAAj4F,EAAA/e,KAAAmf,kBACA63F,EAAA,CAAAj4F,EAAA/O,EAAA+O,EAAAtX,MAAA,EAAAsX,EAAA9O,EAAA8O,EAAArX,OAAA,GASA1H,KAAAqsF,OAAA2qB,EAGAwlB,EAAAtgI,UAAA,CACAyB,YAAA6+H,EACAzzF,WAAA,KAKA5pB,gBAAA,WACA,IAAAJ,EAAA/e,KAAA4jC,MAEA,GAAA7kB,EACA,OAAAA,EAUA,IAPA,IAAA6+G,EAAAhvG,OAAA6qB,UACA7qC,EAAA,CAAAgvH,KACA9uH,EAAA,EAAA8uH,MACArjF,EAAA,GACAC,EAAA,GACA+iF,EAAAv9H,KAAAu9H,WAEAhgI,EAAA,EAAmBA,EAAAggI,EAAA9/H,OAAuBF,IAE1C,eAAAggI,EAAAhgI,GAAAgC,KAAA,CAKA,IAAAi+H,EAAAD,EAAAhgI,GAAAigI,SACA9kD,EAAAqxB,WAAAyzB,EAAAjjF,EAAAC,GACA5a,EAAAhxB,QAAA2rC,GACA3a,EAAA9wB,QAAA0rC,GAQA,OAJA,IAAAj9C,IACAqR,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAA,EAAA,MAGA9O,KAAA4jC,MAAA,IAAAnlB,EAAA7P,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,KAOAsyB,QAAA,SAAAuhC,GACA,IAAA1jD,EAAA/e,KAAAmf,kBACAo+G,EAAAv9H,KAAAu9H,WAEA,IAAAx+G,EAAAmiB,QAAAuhC,EAAA,GAAAA,EAAA,IACA,SAGAo7D,EAAA,QAAAtgI,EAAA,EAAAC,EAAA+/H,EAAA9/H,OAAqDF,EAAAC,EAASD,IAE9D,eAAAggI,EAAAhgI,GAAAgC,KAAA,CAIA,IAAAi+H,EAAAD,EAAAhgI,GAAAigI,SACAC,EAAAF,EAAAhgI,GAAAkgI,UAEA,GAAAE,EAAAz8F,QAAAs8F,EAAA/6D,EAAA,GAAAA,EAAA,KAEA,QAAAxjC,EAAA,EAAuBA,GAAAw+F,IAAAhgI,OAAA,GAAwCwhC,IAC/D,GAAA0+F,EAAAz8F,QAAAu8F,EAAAx+F,IACA,SAAA4+F,EAIA,UAIA,UAEAC,YAAA,SAAA9tH,EAAAC,EAAAxI,EAAAC,GACA,IAAAqX,EAAA/e,KAAAmf,kBACAG,EAAAP,EAAAtX,MAAAsX,EAAArX,OAEAD,EAEKC,IACLA,EAAAD,EAAA6X,GAFA7X,EAAA6X,EAAA5X,EASA,IAJA,IAAAzJ,EAAA,IAAAwgB,EAAAzO,EAAAC,EAAAxI,EAAAC,GACAmf,EAAA9H,EAAAW,mBAAAzhB,GACAs/H,EAAAv9H,KAAAu9H,WAEAhgI,EAAA,EAAmBA,EAAAggI,EAAA9/H,OAAuBF,IAE1C,eAAAggI,EAAAhgI,GAAAgC,KAAA,CAOA,IAHA,IAAAi+H,EAAAD,EAAAhgI,GAAAigI,SACAC,EAAAF,EAAAhgI,GAAAkgI,UAEArqE,EAAA,EAAqBA,EAAAoqE,EAAA//H,OAAqB21D,IAC1CxzB,EAAApgB,eAAAg+G,EAAApqE,GAAAoqE,EAAApqE,GAAAvsC,GAGA,QAAAuT,EAAA,EAAqBA,GAAAqjG,IAAAhgI,OAAA,GAAwC28B,IAC7D,IAAAg5B,EAAA,EAAuBA,EAAAqqE,EAAArjG,GAAA38B,OAAyB21D,IAChDxzB,EAAApgB,eAAAi+G,EAAArjG,GAAAg5B,GAAAqqE,EAAArjG,GAAAg5B,GAAAvsC,IAKA9H,EAAA/e,KAAA4jC,OACAlI,KAAAz9B,GAEA+B,KAAAqsF,OAAA,CAAAttE,EAAA/O,EAAA+O,EAAAtX,MAAA,EAAAsX,EAAA9O,EAAA8O,EAAArX,OAAA,KAGA,IAAA05B,EAAAo7F,EACArkG,EAAA93B,QAAA+gC,mBCtLA,IAAA28F,EAAkBr6H,EAAQ,KAE1Bs6D,EAAA,KAEA,SAAAggE,EAAA36H,EAAAC,GACA,OAAAqL,KAAAyb,IAAA/mB,EAAAC,GAAA06D,EA2BA39D,EAAA6gC,QAxBA,SAAA9V,EAAApb,EAAAC,GACA,IAAA+zB,EAAA,EACAovB,EAAAhoC,EAAA,GAEA,IAAAgoC,EACA,SAGA,QAAA71D,EAAA,EAAiBA,EAAA6tB,EAAA3tB,OAAmBF,IAAA,CACpC,IAAAqhE,EAAAxzC,EAAA7tB,GACAymC,GAAA+5F,EAAA3qE,EAAA,GAAAA,EAAA,GAAAwL,EAAA,GAAAA,EAAA,GAAA5uD,EAAAC,GACAmjD,EAAAwL,EAIA,IAAAF,EAAAtzC,EAAA,GAMA,OAJA4yG,EAAA5qE,EAAA,GAAAsL,EAAA,KAAAs/D,EAAA5qE,EAAA,GAAAsL,EAAA,MACA16B,GAAA+5F,EAAA3qE,EAAA,GAAAA,EAAA,GAAAsL,EAAA,GAAAA,EAAA,GAAA1uD,EAAAC,IAGA,IAAA+zB,oBC7BA,IAEAw4B,EAFuB94D,EAAQ,KAE/B84D,mBAIA3/D,EAFY6G,EAAQ,KAEpB7G,IA6GAwD,EAAA49H,qBAnFA,SAAArzH,EAAApJ,EAAA08H,GACA,IAWArnC,EAXAhC,EAAAjqF,EAAAqgC,cACAnU,EAAAlsB,EAAAwrF,aAAAvB,GACAspC,EAuCA,SAAArnG,EAAAonG,GACA,IAAAC,EAAA,EACAxlF,EAAA7hB,EAAA6F,MAAAykB,YAkBA,MAhBA,UAAA88E,EACAC,EAAAxlF,EAAA,GACG,QAAAulF,EACHC,EAAAxlF,EAAA,GAIAA,EAAA,KACAwlF,EAAAxlF,EAAA,GAEAA,EAAA,OACAwlF,EAAAxlF,EAAA,IAKAwlF,EA3DAC,CAAAtnG,EAAAonG,GACAG,EAAAxpC,EAAA7oD,IACAsyF,EAAAxnG,EAAAkV,IACAqqD,EAAA70F,EAAA8pC,aAAAgzF,GACAhoC,EAAA90F,EAAA8pC,aAAA+yF,GACAE,EAAA,MAAAD,GAAA,WAAAA,EAAA,IACAlpF,EAAAv4C,EAAA+N,EAAAuR,WAAA,SAAA4wB,GACA,OAAAvrC,EAAA8pC,aAAAyB,KAGA21C,EAAAlhF,EAAAo3C,mBAAA,wBAgBA,OAdAi+C,GAAAr6B,EAAAh7D,EAAA4zC,EAAA,OAIAA,EAAA,GAAAstC,IAGAmU,GAAAr6B,EAAAh7D,EAAA4zC,EAAA,OAIAA,EAAA,GAAAstC,GAGA,CACA87C,iBAAAppF,EACA+oF,aACAG,eACAD,cACAxnC,YACAR,WACAC,UACAioC,iBACA1hE,qBAAAr7D,EAAAo3C,mBAAA,0BA8CAv4C,EAAAo+H,kBAnBA,SAAAC,EAAA9zH,EAAApJ,EAAAysB,GACA,IAAA3uB,EAAAstB,IAEA8xG,EAAA7nC,UACAv3F,EAAAkC,EAAArB,IAAAqB,EAAAo3C,mBAAA,wBAAA3qB,IAGAb,MAAA9tB,KACAA,EAAAo/H,EAAAP,YAGA,IAAAI,EAAAG,EAAAH,eACAI,EAAA,GAGA,OAFAA,EAAAJ,GAAA/8H,EAAArB,IAAAu+H,EAAApoC,QAAAroE,GACA0wG,EAAA,EAAAJ,GAAAj/H,EACAsL,EAAAk4E,YAAA67C,qBChHA,IAAAnhH,EAAW9Z,EAAQ,KAEnBk8B,EAAWl8B,EAAQ,KAEnBk7H,EAAwBl7H,EAAQ,KAsBhCwmG,EAAAtqE,EAAAhxB,IACAu7F,EAAAvqE,EAAA9wB,IACA0tB,EAAAoD,EAAApD,YACAqiG,EAAAj/F,EAAAlE,KAEApL,EAAA,GACAwuG,EAAA,GACA9oB,EAAA,GAEA,SAAA+oB,EAAA3rE,GACA,OAAAhmC,MAAAgmC,EAAA,KAAAhmC,MAAAgmC,EAAA,IAGA,SAAA4rE,EAAAn9F,EAAAzW,EAAA6qB,EAAAgpF,EAAAC,EAAA1G,EAAA2G,EAAAC,EAAA7nG,EAAA8nG,EAAAC,GAoBA,eAAAD,KA+CA,SAAAx9F,EAAAzW,EAAA6qB,EAAAgpF,EAAAC,EAAA1G,EAAA2G,EAAAC,EAAA7nG,EAAA8nG,EAAAC,GAIA,IAHA,IAAAC,EAAA,EACAtxG,EAAAgoB,EAEAhX,EAAA,EAAiBA,EAAAggG,EAAYhgG,IAAA,CAC7B,IAAAm0B,EAAAhoC,EAAA6C,GAEA,GAAAA,GAAAixG,GAAAjxG,EAAA,EACA,MAGA,GAAA8wG,EAAA3rE,GAAA,CACA,GAAAksE,EAAA,CACArxG,GAAAuqG,EACA,SAGA,MAGA,GAAAvqG,IAAAgoB,EACApU,EAAA22F,EAAA,qBAAAplE,EAAA,GAAAA,EAAA,SAEA,GAAA77B,EAAA,GACA,IAAAioG,EAAAp0G,EAAAm0G,GACAvzF,EAAA,MAAAqzF,EAAA,IAEAI,GAAArsE,EAAApnB,GAAAwzF,EAAAxzF,IAAAzU,EACAsnG,EAAAC,EAAAU,GACAV,EAAA9yF,GAAAwzF,EAAAxzF,GAAAyzF,EACAZ,EAAA7oB,EAAA5iD,GACA4iD,EAAAhqE,GAAAonB,EAAApnB,GAAAyzF,EACA59F,EAAAuc,cAAA0gF,EAAA,GAAAA,EAAA,GAAA9oB,EAAA,GAAAA,EAAA,GAAA5iD,EAAA,GAAAA,EAAA,SAEAvxB,EAAA2b,OAAA4V,EAAA,GAAAA,EAAA,IAIAmsE,EAAAtxG,EACAA,GAAAuqG,EAGA,OAAAv5F,GAtFA7/B,MAAAY,KAAAb,WA+FA,SAAA0iC,EAAAzW,EAAA6qB,EAAAgpF,EAAAC,EAAA1G,EAAA2G,EAAAC,EAAA7nG,EAAA8nG,EAAAC,GAIA,IAHA,IAAAC,EAAA,EACAtxG,EAAAgoB,EAEAhX,EAAA,EAAiBA,EAAAggG,EAAYhgG,IAAA,CAC7B,IAAAm0B,EAAAhoC,EAAA6C,GAEA,GAAAA,GAAAixG,GAAAjxG,EAAA,EACA,MAGA,GAAA8wG,EAAA3rE,GAAA,CACA,GAAAksE,EAAA,CACArxG,GAAAuqG,EACA,SAGA,MAGA,GAAAvqG,IAAAgoB,EACApU,EAAA22F,EAAA,qBAAAplE,EAAA,GAAAA,EAAA,IACAyrE,EAAAC,EAAA1rE,QAEA,GAAA77B,EAAA,GACA,IAAAmoG,EAAAzxG,EAAAuqG,EACAmH,EAAAv0G,EAAAs0G,GAEA,GAAAJ,EAEA,KAAAK,GAAAZ,EAAA3zG,EAAAs0G,KAEAC,EAAAv0G,EADAs0G,GAAAlH,GAKA,IAAAoH,EAAA,GACAJ,EAAAp0G,EAAAm0G,GACAI,EAAAv0G,EAAAs0G,GAEA,IAAAC,GAAAZ,EAAAY,GACAd,EAAA7oB,EAAA5iD,OACS,CAOT,IAAAysE,EACAC,EAEA,GARAf,EAAAY,KAAAL,IACAK,EAAAvsE,GAGAxzB,EAAA3qB,IAAAqb,EAAAqvG,EAAAH,GAIA,MAAAH,GAAA,MAAAA,EAAA,CACA,IAAArzF,EAAA,MAAAqzF,EAAA,IACAQ,EAAAlxH,KAAAyb,IAAAgpC,EAAApnB,GAAAwzF,EAAAxzF,IACA8zF,EAAAnxH,KAAAyb,IAAAgpC,EAAApnB,GAAA2zF,EAAA3zF,SAEA6zF,EAAAjgG,EAAAxD,KAAAg3B,EAAAosE,GACAM,EAAAlgG,EAAAxD,KAAAg3B,EAAAusE,GAKAnjG,EAAAw5E,EAAA5iD,EAAA9iC,GAAAiH,GAAA,GADAqoG,EAAAE,KAAAD,MAKA31B,EAAA40B,IAAAM,GACAj1B,EAAA20B,IAAAK,GACAj1B,EAAA8L,IAAAopB,GACAj1B,EAAA6L,IAAAmpB,GACAt9F,EAAAuc,cAAA0gF,EAAA,GAAAA,EAAA,GAAA9oB,EAAA,GAAAA,EAAA,GAAA5iD,EAAA,GAAAA,EAAA,IAEA52B,EAAAsiG,EAAA1rE,EAAA9iC,EAAAiH,EAAAqoG,QAEA/9F,EAAA2b,OAAA4V,EAAA,GAAAA,EAAA,IAIAmsE,EAAAtxG,EACAA,GAAAuqG,EAGA,OAAAv5F,GApLA7/B,MAAAY,KAAAb,WAuLA,SAAA4gI,EAAA30G,EAAA6tG,GACA,IAAA+G,EAAA,CAAA/wH,SACAgxH,EAAA,EAAAhxH,UAEA,GAAAgqH,EACA,QAAA17H,EAAA,EAAmBA,EAAA6tB,EAAA3tB,OAAmBF,IAAA,CACtC,IAAAs3G,EAAAzpF,EAAA7tB,GAEAs3G,EAAA,GAAAmrB,EAAA,KACAA,EAAA,GAAAnrB,EAAA,IAGAA,EAAA,GAAAmrB,EAAA,KACAA,EAAA,GAAAnrB,EAAA,IAGAA,EAAA,GAAAorB,EAAA,KACAA,EAAA,GAAAprB,EAAA,IAGAA,EAAA,GAAAorB,EAAA,KACAA,EAAA,GAAAprB,EAAA,IAKA,OACAjmG,IAAAqqH,EAAA+G,EAAAC,EACAnxH,IAAAmqH,EAAAgH,EAAAD,GAIA,IAAA/hH,EAAAT,EAAA7c,OAAA,CACApB,KAAA,cACAioB,MAAA,CACA4D,OAAA,GACAmM,OAAA,EACA0hG,kBAAA,EACAoG,eAAA,KACAC,cAAA,GAEAvvH,MAAA,CACAyQ,KAAA,KACAD,OAAA,QAEAqhB,MAAAg9F,EAAAphH,EAAAthB,UAAA0lC,OACAyB,UAAA,SAAAxB,EAAAra,GACA,IAAA4D,EAAA5D,EAAA4D,OACA7tB,EAAA,EACAC,EAAA4tB,EAAA3tB,OACAN,EAAA4iI,EAAA30G,EAAA5D,EAAAyxG,kBAEA,GAAAzxG,EAAA83G,aAAA,CAEA,KAAY9hI,EAAA,GACZuhI,EAAA3zG,EAAA5tB,EAAA,IADqBA,KAMrB,KAAYD,EAAAC,GACZuhI,EAAA3zG,EAAA7tB,IADqBA,MAOrB,KAAAA,EAAAC,GACAD,GAAAyhI,EAAAn9F,EAAAzW,EAAA7tB,EAAAC,IAAA,EAAAL,EAAAyR,IAAAzR,EAAA2R,IAAA0Y,EAAA+P,OAAA/P,EAAA63G,eAAA73G,EAAA83G,cAAA,KAIAthH,EAAAR,EAAA7c,OAAA,CACApB,KAAA,aACAioB,MAAA,CACA4D,OAAA,GAEA80G,gBAAA,GACA3oG,OAAA,EACA4oG,gBAAA,EACAlH,kBAAA,EACAoG,eAAA,KACAC,cAAA,GAEA19F,MAAAg9F,EAAAphH,EAAAthB,UAAA0lC,OACAyB,UAAA,SAAAxB,EAAAra,GACA,IAAA4D,EAAA5D,EAAA4D,OACA80G,EAAA14G,EAAA04G,gBACA3iI,EAAA,EACAC,EAAA4tB,EAAA3tB,OACA4hI,EAAA73G,EAAA63G,eACA3mD,EAAAqnD,EAAA30G,EAAA5D,EAAAyxG,kBACAmH,EAAAL,EAAAG,EAAA14G,EAAAyxG,kBAEA,GAAAzxG,EAAA83G,aAAA,CAEA,KAAY9hI,EAAA,GACZuhI,EAAA3zG,EAAA5tB,EAAA,IADqBA,KAMrB,KAAYD,EAAAC,GACZuhI,EAAA3zG,EAAA7tB,IADqBA,MAOrB,KAAAA,EAAAC,GAAA,CACA,IAAAyhC,EAAA+/F,EAAAn9F,EAAAzW,EAAA7tB,EAAAC,IAAA,EAAAk7E,EAAA9pE,IAAA8pE,EAAA5pE,IAAA0Y,EAAA+P,OAAA8nG,EAAA73G,EAAA83G,cACAN,EAAAn9F,EAAAq+F,EAAA3iI,EAAA0hC,EAAA,EAAAA,EAAAzhC,GAAA,EAAA4iI,EAAAxxH,IAAAwxH,EAAAtxH,IAAA0Y,EAAA24G,gBAAAd,EAAA73G,EAAA83G,cACA/hI,GAAA0hC,EAAA,EACA4C,EAAA4b,gBAIAp9C,EAAA4d,WACA5d,EAAA2d,2BCzWA,IAAAna,EAAaH,EAAQ,KAErBc,EAAqBd,EAAQ,KAE7B28H,EAAuB38H,EAAQ,KAE/B48H,EAA2B58H,EAAQ,KAqBnC68H,EAAA/7H,EAAA7D,OAAA,CACApB,KAAA,kBAKAoiD,KAAA,KAKAr6C,KAAA,WACAi5H,EAAA/nE,WAAAx4D,KAAA,OAAAb,WACAa,KAAAu9E,cAMAt2C,YAAA,WACAs5F,EAAA/nE,WAAAx4D,KAAA,cAAAb,WACAa,KAAAu9E,cAMA7rE,YAAA,WACA6uH,EAAA/nE,WAAAx4D,KAAA,cAAAb,WACAa,KAAAu9E,cAOAF,iBAAA,WACA,OAAAr9E,KAAAyK,QAAA8oB,gBAAA,CACAzqB,SAAA,OACAC,MAAA/I,KAAAgM,OAAAw0H,UACAv5H,GAAAjH,KAAAgM,OAAAy0H,SACK,MAIL,SAAAC,EAAA/c,EAAA33G,GAEA,OAAAA,EAAAzM,OAAAyM,EAAAxK,KAAA,oBAGAqC,EAAA7F,MAAAuiI,EAAArkI,UAAAokI,GACA,IAAAK,EAAA,CAIAn9H,OAAA,GAEA68H,EAAA,IAAAE,EAAAG,EAAAC,GACAN,EAAA,IAAAE,EAAAG,EAAAC,GACA,IAAAv/F,EAAAm/F,EACApoG,EAAA93B,QAAA+gC,mBCvFA,IAAAv9B,EAAaH,EAAQ,KAqBrB4iC,EAAA,CACAtP,MAAA,EACAxe,OAAA,EACAD,EAAA,EAEA8pD,SAAA,EAEA9hE,KAAA,GAEA8vE,aAAA,MAEAuwD,WAAA,KACAC,aAAA,CACAnoG,SAAA,KACAgtB,SAAA,MACAQ,YAAA,KAGA46E,cAAA,GAEAC,QAAA,GAEAh2H,QAAA,EAEA4jE,cAAA,EACA14C,QAAA,CACAe,MAAA,GAEAd,YAAA,GACAU,SAAA,CACAI,MAAA,EACA+3E,QAAA,EACAC,gBAAA,KACA74E,UAAA,CACAhW,MAAA,OACA1Y,MAAA,EACAlI,KAAA,SAGA63B,OAAA,gBACAC,WAAA,SAEAW,SAAA,CACAhB,MAAA,EAEAgqG,QAAA,EAEAvjI,OAAA,EACA04B,UAAA,CACA1uB,MAAA,IAGAw5H,UAAA,CACAjqG,MAAA,EAEAgqG,QAAA,EACAnyF,OAAA,EAEAygC,aAAA,KAEAC,aAAA,KACA31C,OAAA,EAEAjV,SAAA,IAEAkS,UAAA,CACAG,MAAA,EACAb,UAAA,CACAhW,MAAA,SACA1Y,MAAA,EACAlI,KAAA,UAGAw3B,UAAA,CACAC,MAAA,EACAC,UAAA,CACA9W,MAAA,qDAIAu5E,EAAA,GACAA,EAAA/iE,aAAA9yB,EAAA7F,MAAA,CAEA4iD,aAAA,EAQAu7E,cAAA,KAIAtlG,UAAA,CACAG,MAAA,GAEAgB,SAAA,CAEAmrC,gBAAA,EACAlzC,SAAA,QAEAgxG,UAAA,CACAhxG,SAAA,SAECqW,GACDozD,EAAA5iE,UAAAjzB,EAAA7F,MAAA,CAGA4iD,YAAA,MAsBA3oB,YAAA,GAOCqO,GACDozD,EAAAwnC,SAAAr9H,EAAArF,SAAA,CACAm+B,OAAA,EACA/tB,IAAA,UACAE,IAAA,WACC4qF,EAAA5iE,WACD4iE,EAAAynC,QAAAt9H,EAAArF,SAAA,CACAm+B,OAAA,EACAykG,QAAA,IACC1nC,EAAA5iE,WACD,IAAAsK,EAAAs4D,EACAvhE,EAAA93B,QAAA+gC,mBC3KA,IAAAv9B,EAAaH,EAAQ,KAwFrBrD,EAAA2e,OAxDA,SAAA+jE,EAAA7+B,EAAAnsC,GACAA,KAAA,GACA,IAAA2e,EAAAqsD,EAAAryE,iBACAixC,EAAAuC,EAAAvC,KACA3iC,EAAA,GACAqiH,EAAA1/E,EAAAm1C,kBAAA,GACAwqC,EAAA3/E,EAAA/hC,SACA2wF,EAAA8wB,EAAA,SAAAC,EACA3d,EAAAhiE,EAAA3V,IACAjtB,EAAA2X,EAAAssD,UACAu+C,EAAA,CAAAxiH,EAAA/O,EAAA+O,EAAA/O,EAAA+O,EAAAtX,MAAAsX,EAAA9O,EAAA8O,EAAA9O,EAAA8O,EAAArX,QACAumB,EAAA,CACAjf,KAAA,EACAG,MAAA,EACAD,IAAA,EACAE,OAAA,EACA2/F,OAAA,GAEAyyB,EAAAt9E,EAAA/jD,IAAA,aACAshI,EAAA,MAAA9d,EAAA,CAAA4d,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GAAA,CAAAD,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GAEA,GAAAH,EAAA,CACA,IAAAK,EAAAL,EAAAtqC,cAAAsqC,EAAA1+D,YAAA,IACA8+D,EAAAxzG,EAAA,QAAAtf,KAAAG,IAAAH,KAAAC,IAAA8yH,EAAAD,EAAA,IAAAA,EAAA,IAIAziH,EAAAY,SAAA,OAAA+jG,EAAA8d,EAAAxzG,EAAAsiF,IAAAgxB,EAAA,SAAA5d,EAAA8d,EAAAxzG,EAAAsiF,IAAAgxB,EAAA,IAEAviH,EAAAkM,SAAAvc,KAAA4U,GAAA,SAAAogG,EAAA,KAQA3kG,EAAA2tD,eAAA3tD,EAAA0tD,cAAA1tD,EAAAytD,cANA,CACAv9D,KAAA,EACAE,OAAA,EACAJ,MAAA,EACAG,MAAA,GAEAmyH,GACAtiH,EAAAwtD,YAAA60D,EAAAI,EAAAxzG,EAAAqzG,IAAAG,EAAAxzG,EAAA,UAEAi2B,EAAA/jD,IAAA,qBACA6e,EAAA0tD,eAAA1tD,EAAA0tD,eAGA7oE,EAAA5B,SAAA8V,EAAA4pH,YAAAz9E,EAAA/jD,IAAA,uBACA6e,EAAA2tD,gBAAA3tD,EAAA2tD,gBAIA,IAAArpD,EAAA4gC,EAAA/jD,IAAA,oBAIA,OAHA6e,EAAAsE,YAAA,QAAAitF,GAAAjtF,IAEAtE,EAAA2C,GAAA,EACA3C,oBCrFA,IAAAva,EAAkBf,EAAQ,KAE1Bk+H,EAA0Bl+H,EAAQ,KAqBlC09B,EAAA38B,EAAA9D,OAAA,CACApB,KAAA,sBACA0qC,eAAA,SAAAj+B,EAAAvB,GACA,OAAAm3H,EAAA5hI,KAAAypC,YAAAzpC,OAEA6hI,kBAAA,SAAAviI,GACA,IAAAsL,EAAA5K,KAAA0Q,iBAEA,GAAA9F,EAAA,CAEA,IAAAiqG,EAAAjqG,EAAAk4E,YAAAl4E,EAAAk3H,UAAAxiI,IACAkC,EAAAxB,KAAAgR,UACAxN,EAAAhC,EAAA46C,UAAA,UACA2C,EAAAv9C,EAAA46C,UAAA,QAGA,OADAy4D,EADAjqG,EAAAqgC,cAAA24B,eAAA,MACApgE,EAAAu7C,EAAA,EACA81D,EAGA,OAAAjoF,UAEA0Z,cAAA,CACA9tB,OAAA,EAEAD,EAAA,EAEA7H,iBAAA,cACAqxH,iBAAA,EAMAtqC,aAAA,EAEAuqC,YAAA,EAEAxlD,OAAA,EACAylD,eAAA,IACAvlD,YAAA,IACAwlD,qBAAA,MAWAzqG,UAAA,GACA3G,SAAA,MAIAqH,EAAA93B,QAAA+gC,mBC/EA,IAAAx8B,EAAclB,EAAQ,KAItBm0F,EAFmBn0F,EAAQ,KAE3Bm0F,gBAkCA,SAAAsqC,EAAApyH,EAAAqyH,GACA,YAAAryH,EAAAoT,eACApT,EAAAoT,aAAAi/G,GAIA/hI,EAAAgiI,SApBA,SAAA1hH,EAAAF,EAAAwrD,EAAA9rD,EAAApP,EAAAI,EAAAixH,GACA,IAAA94G,EAAA2iD,EAAAz/D,SAAA,SACAg1E,EAAAvV,EAAAz/D,SAAA,kBACA5H,EAAAwjB,cAAAzH,EAAAF,EAAA6I,EAAAk4D,EAAA,CACA74D,aAAA5X,EACA6X,eAAAzX,EACA8X,YAAA4uE,EAAA9mF,EAAAC,UAAAG,GACA+R,YAAA,EACAxB,UAAAvB,IAEAgiH,EAAAxhH,GACAwhH,EAAA1hH,qBCnCA,IAAA6U,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAwDrBy0B,EAAA93B,QAnCA,SAAAmrE,EAAA82D,GACAz+H,EAAAjF,KAAA0jI,EAAA,SAAApuH,GACAA,EAAAhJ,OAAA,aAOAoqB,EAAAlb,eAAAlG,EAAA,SAAAzC,EAAAhH,GACA,IAAA0mG,EAAA,GAiBA,OAhBA1mG,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAAk4D,EACAj4D,MAAA9B,GACO,SAAAV,GACPA,EAAAmD,EAAA3N,SACAwK,EAAAmD,EAAA3N,QAAAkL,EAAAlR,KAAAkR,EAAAN,WAGA,IAAA3P,EAAAuP,EAAAC,UAEAxP,EAAA5C,KAAA,SAAAqvB,GACA,IAAA1tB,EAAAiB,EAAAgrC,QAAAve,GACAkjF,EAAA5wG,GAAAwQ,EAAAsyE,WAAA9iF,KAAA,MAGA,CACAA,KAAAkR,EAAAlR,KACA4wG,kCCpDA,IAAAttG,EAAaH,EAAQ,KAErB6Z,EAAa7Z,EAAQ,KAErB4Z,EAAa5Z,EAAQ,KAErB+a,EAAmB/a,EAAQ,KAE3B+Z,EAAoB/Z,EAAQ,KA0B5Bm8B,EAAAtiB,EAAAiC,eAEA,SAAA+iH,IACA9kH,EAAApgB,KAAA2C,MAKA,SAAAwiI,EAAAjiI,GAIAP,KAAAO,OAKAP,KAAAo/F,UACA3hF,EAAApgB,KAAA2C,MACAA,KAAAyiI,mBAAA,IAAAF,EACAviI,KAAA0iI,kBAAA,IAAAH,EACAviI,KAAA2iI,QACA3iI,KAAA4iI,MAsOA,SAAAC,EAAAt4H,EAAAE,EAAAD,EAAAlL,GACA,IAAAyR,EAAAvG,EAAAuG,YACAnG,EAAAmG,IAAAL,iBAAA,KAEA,OAAA9F,IAAA5K,KAAA4K,EAAAL,GAAAjL,GAAA,KA1PAuE,EAAAvC,MAAAihI,EAAA9kH,GAmBA+kH,EAAAtmI,UAAA,CACAyB,YAAA6kI,EACAjjI,KAAA,OAMA4c,WAAA,UAUA+hF,gBAAA,SAAAluF,EAAAC,EAAAxI,EAAAC,GAEA,OADA1H,KAAA4jC,MAAA,IAAAnlB,EAAAzO,EAAAC,EAAAxI,EAAAC,GACA1H,KAAA4jC,OAOAzkB,gBAAA,WACA,OAAAnf,KAAA4jC,OASA86D,YAAA,SAAA1uF,EAAAC,EAAAxI,EAAAC,GACA1H,KAAA89H,YAAA9tH,EAAAC,EAAAxI,EAAAC,GACA1H,KAAA8iI,UAAA,IAAArkH,EAAAzO,EAAAC,EAAAxI,EAAAC,IAUAo2H,YAAA,SAAA9tH,EAAAC,EAAAxI,EAAAC,GACA,IAAAqX,EAAA/e,KAAAmf,kBACA4jH,EAAA/iI,KAAA0iI,kBACAK,EAAAl8G,UAAA9H,EAAAW,mBAAA,IAAAjB,EAAAzO,EAAAC,EAAAxI,EAAAC,IACAq7H,EAAA3zD,qBAEApvE,KAAAgjI,oBAOArkC,UAAA,SAAAskC,GACAA,IAIAjjI,KAAA2iI,QAAAM,EAEAjjI,KAAAkjI,yBAMAtkC,QAAA,SAAA32B,GACAA,KAAA,EACA,IAAAm3B,EAAAp/F,KAAAo/F,UAEAA,IACA,MAAAA,EAAAtwF,MACAm5D,EAAAt5D,KAAAC,IAAAwwF,EAAAtwF,IAAAm5D,IAGA,MAAAm3B,EAAAxwF,MACAq5D,EAAAt5D,KAAAG,IAAAswF,EAAAxwF,IAAAq5D,KAIAjoE,KAAA4iI,MAAA36D,EAEAjoE,KAAAkjI,wBAMAC,iBAAA,WAEA,IAAAC,EAAApjI,KAAAmf,kBAGA,OAFAikH,EAAApzH,EAAAozH,EAAA37H,MAAA,EACA27H,EAAAnzH,EAAAmzH,EAAA17H,OAAA,IAGA27H,UAAA,WACA,OAAArjI,KAAA2iI,SAAA3iI,KAAAmjI,oBAEAG,QAAA,WACA,OAAAtjI,KAAA4iI,OAAA,GAMAW,iBAAA,WACA,OAAAvjI,KAAAyiI,mBAAA17G,qBAMAm8G,qBAAA,WAEA,IAAAM,EAAAxjI,KAAA0iI,kBAAA37G,oBAEA08G,EAAAzjI,KAAAyiI,mBACAiB,EAAA1jI,KAAAmjI,mBACA92C,EAAArsF,KAAAqjI,YACAp7D,EAAAjoE,KAAAsjI,UACAj3C,EAAA9uE,EAAAiC,eAAA,GAAA6sE,EAAAm3C,GACAE,EAAAnmH,EAAAiC,eAAA,GAAAkkH,EAAAF,GACAC,EAAAvmD,OAAAmP,EACAo3C,EAAA7jH,SAAA,CAAA8jH,EAAA,GAAAr3C,EAAA,GAAAq3C,EAAA,GAAAr3C,EAAA,IACAo3C,EAAA9mG,MAAA,CAAAsrC,KAEAjoE,KAAAgjI,oBAOAA,iBAAA,WACA,IAAAW,EAAA3jI,KAAAyiI,mBACAmB,EAAA5jI,KAAA0iI,kBACAkB,EAAA56H,OAAA26H,EACAA,EAAAxxH,kBACAyxH,EAAAzxH,kBACAmL,EAAAoe,KAAA17B,KAAA6mB,YAAA7mB,KAAA6mB,UAAA,IAAA+8G,EAAA/8G,WAAAvJ,EAAA3L,UACA3R,KAAA6jI,cAAAD,EAAA78G,oBACA/mB,KAAAimG,aAAAjmG,KAAAimG,cAAA,GACA3oF,EAAAwJ,OAAA9mB,KAAAimG,aAAAjmG,KAAA6mB,WACA7mB,KAAAovE,sBAMA00D,YAAA,WACA,OAAA9jI,KAAA8iI,WAOAiB,qBAAA,WACA,IAAAhlH,EAAA/e,KAAAmf,kBAAAliB,QAEA,OADA8hB,EAAAS,eAAAxf,KAAA6mB,WACA9H,GAUA+jE,YAAA,SAAAthF,EAAAwiI,EAAAznG,GACA,IAAA1V,EAAAm9G,EAAAhkI,KAAA6jI,cAAA7jI,KAAA6mB,UAEA,OADA0V,KAAA,GACA1V,EAAAgZ,EAAAtD,EAAA/6B,EAAAqlB,GAAAtJ,EAAAme,KAAAa,EAAA/6B,IAQAqhE,YAAA,SAAAx3C,GACA,IAAA46E,EAAAjmG,KAAAimG,aACA,OAAAA,EAAApmE,EAAA,GAAAxU,EAAA46E,GAAA,CAAA56E,EAAA,GAAAA,EAAA,KAOAhb,eAAAxM,EAAAjC,MAAAihI,EAAA,eAMAvyH,iBAAAzM,EAAAjC,MAAAihI,EAAA,eAMAlyH,aAAA,SAAA0a,GACA,OAAArrB,KAAA+jI,uBAAA7iG,QAAA7V,EAAA,GAAAA,EAAA,MAaAxnB,EAAAvC,MAAAkhI,EAAA/kH,GASA,IAAA2jB,EAAAohG,EACArqG,EAAA93B,QAAA+gC,mBCtSA,IAAAv9B,EAAaH,EAAQ,KAErBy8F,EAAqBz8F,EAAQ,KAE7BugI,EAAiBvgI,EAAQ,KAIzB6tG,EAFoB7tG,EAAQ,KAE5B6tG,oBAEA3sG,EAAclB,EAAQ,KAqBtB,SAAAwgI,EAAAzzH,EAAAksB,GACA,IAAAlF,EAAAhnB,EAAA0wE,eACAtpD,EAAApnB,EAAAtQ,IAAA,aAOA,OAJA,MAAA03B,IACAJ,EAAAjX,KAAAqX,GAGAJ,EA2CA,SAAA0sG,EAAAC,EAAAl9H,GAEAA,EAAA2xB,UAAA,SAAAwrG,GACAxgI,EAAAjF,KAAAylI,EAAAC,UAAA,SAAA5G,GACA2G,EAAAt6H,QAAAq6H,EAAA/gD,WAAAq6C,EAAAn9H,MAAA,yBAWA,SAAAgkI,EAAAp8H,EAAAq8H,GACA,IAAAt9H,EAAA,IAAAtC,EAAA+Y,MAMA3d,KAAAykI,YAAA,IAAAtkC,EAAAh4F,EAAA2D,SAMA9L,KAAA0kI,gBAAA,CACAzmI,OAAAumI,EAAAt9H,EAAA,MAOAlH,KAAAkH,QAMAlH,KAAA2kI,aAAAH,EAQAxkI,KAAA4kI,eAGAL,EAAAroI,UAAA,CACAyB,YAAA4mI,EACAM,KAAA,SAAAT,EAAA35H,EAAAtC,EAAA28H,EAAArzH,GACA,IAAAszH,EAAA,QAAAX,EAAAt7H,SAGAtH,EAAA4iI,EAAApzH,SAAAozH,EAAApzH,UACA+zH,GAAAt6H,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,OACK,SAAAosF,GACLl+F,GAAAk+F,EAAAH,oBAAA6kC,IACA5iI,EAAAk+F,EAAA1uF,aAGA,IAAA8tF,EAAAslC,EAAA1zH,iBACAxJ,EAAAlH,KAAAkH,MACAy1B,EAAAmiE,EAAAniE,MACAqoG,EAAA,CACAplH,SAAAk/E,EAAAl/E,SACA+c,UAGAz1B,EAAA+xB,QAAA,IAAAxnB,EACAvK,EAAAyf,KAAAq+G,GAEApgI,EAAAgiB,YAAA1f,EAAA89H,EAAAZ,GAGAl9H,EAAAkzD,YACA,IAAA6qE,EAAA,cACAC,EAAA,yBACAC,EAAA,UACAC,EAAA,qBACAv0C,EAAAhtF,EAAAV,gBACAU,EAAAjF,KAAAkgG,EAAAumC,QAAA,SAAA3H,GAMA,IAAA4H,EAAAz0C,EAAA1wF,IAAAu9H,EAAAn9H,OAAAswF,EAAA3wF,IAAAw9H,EAAAn9H,KAAA,IAAAqE,EAAA+Y,OACA4nH,EAAA,IAAA3gI,EAAA0Z,aAAA,CACAkJ,MAAA,CACAg+G,MAAA,MAGAF,EAAAn1H,IAAAo1H,GACA,IAOA9pF,EANAgqF,GADAC,EAAAtB,EAAAuB,eAAAjI,EAAAn9H,OAAA6jI,GACA53H,SAAAy4H,GACAW,EAAAF,EAAAl5H,SAAA04H,GACAztG,EAAAysG,EAAAuB,GACArkD,EAAA8iD,EAAA0B,GACAt8G,EAAAo8G,EAAAl5H,SAAA24H,GACA3jD,EAAAkkD,EAAAl5H,SAAA44H,GAGA,GAAA5jI,EAAA,CACAi6C,EAAAj6C,EAAAuxB,YAAA2qG,EAAAn9H,MAKA,IAAA+2G,EAAA91G,EAAA4P,cAAAqqC,EAAA,YAEA67D,IACA7/E,EAAAjX,KAAA82F,GAIAzzG,EAAAjF,KAAA8+H,EAAAH,WAAA,SAAAL,GACA,eAAAA,EAAA39H,KAAA,CAIAgmI,EAAA/9G,MAAAg+G,MAAA/jI,KAAA,IAAAmD,EAAAoZ,QAAA,CACAwJ,MAAA,CACA4D,OAAA8xG,EAAAM,aAIA,QAAAjgI,EAAA,EAAuBA,GAAA2/H,EAAAO,UAAAP,EAAAO,UAAAhgI,OAAA,GAA0DF,IACjFgoI,EAAA/9G,MAAAg+G,MAAA/jI,KAAA,IAAAmD,EAAAoZ,QAAA,CACAwJ,MAAA,CACA4D,OAAA8xG,EAAAO,UAAAlgI,UAKAgoI,EAAA3uH,SAAA6gB,GACA8tG,EAAAx1H,MAAA4b,eAAA,EACA45G,EAAAhnD,SAAA,EAEA,IAAAk5B,EAAAnuF,EAAAnpB,IAAA,QACAu3G,EAAAl2B,EAAArhF,IAAA,QACA0lI,EAAArkI,GAAA4rB,MAAA5rB,EAAArB,IAAAqB,EAAA8pC,aAAA,SAAAmQ,IACAqqF,EAAAtkI,KAAA66C,cAAAZ,GAKA,GAAAspF,GAAAc,IAAApuB,GAAAC,IAAAouB,KAAAruB,UAAA,CACA,IACA9uF,EADApV,EAAAwxH,EAAArH,EAAAn9H,KAAAk7C,IAGAj6C,GAAAi6C,GAAA,KACA9yB,EAAAy7G,GAGA,IAAAl1D,EAAA,IAAAtqE,EAAAgZ,KAAA,CACAgC,SAAA89G,EAAArxC,OAAA1vF,QACAggC,MAAA,GAAAA,EAAA,KAAAA,EAAA,IACAhb,GAAA,GACA5W,QAAA,IAEAnG,EAAAwjB,cAAA8mD,EAAAn/D,MAAAm/D,EAAAzuD,WAAA,GAAkE6I,EAAAk4D,EAAA,CAClE74D,eACAC,eAAArV,EACA0V,YAAAy0G,EAAAn9H,KACAwlB,gBAAA,GACS,CACTlB,UAAA,SACAC,kBAAA,WAEAwgH,EAAAn1H,IAAA++D,GAKA,GAAA1tE,EACAA,EAAAo7C,iBAAAnB,EAAA6pF,OACO,CACP,IAAAI,EAAAtB,EAAAuB,eAAAjI,EAAAn9H,MAEAglI,EAAAzsH,UAAA,CACA/K,cAAA,MACAsxF,SAAA+kC,EAAAxuH,eACArV,KAAAm9H,EAAAn9H,KACAm9H,OAAAgI,KAAA15H,QAAA,KAIAs5H,EAAAhB,YAAAgB,EAAAhB,UAAA,KACA7iI,KAAAi8H,GACA94H,EAAAsjB,cAAAo9G,EAAAlkD,EAAA,CACAj5D,qBAAAi8G,EAAAjkI,IAAA,kBAEA+G,EAAAiJ,IAAAm1H,KAGAtlI,KAAA+lI,kBAAA3B,EAAA35H,EAAAtC,GAnPA,SAAA69H,EAAA5B,EAAAl9H,EAAAiB,EAAA28H,GACA59H,EAAAiD,IAAA,SACAjD,EAAAiD,IAAA,aAEAi6H,EAAAjkI,IAAA,kBACA+G,EAAA0C,GAAA,uBACAo8H,EAAApB,gBAAA,IAEA19H,EAAA0C,GAAA,iBAAA8O,GACA,GAAAstH,EAAApB,eAAA,CAIAoB,EAAApB,gBAAA,EAGA,IAFA,IAAAn8H,EAAAiQ,EAAAza,QAEAwK,EAAA67H,WACA77H,IAAAO,OAGA,GAAAP,EAAA,CAIA,IAAAqM,EAAA,CACAvV,MAAA,QAAA6kI,EAAAt7H,SAAA,4BACA2L,MAAA5Q,EAAAhH,IAAA4L,EAAA67H,UAAA,SAAA5G,GACA,OACAn9H,KAAAm9H,EAAAn9H,KACA3C,KAAAknI,EAAApyH,QAIAoC,EAAAsvH,EAAAt7H,SAAA,MAAAs7H,EAAAn9H,GACAkB,EAAA2P,eAAAhD,GACAqvH,EAAAC,EAAAl9H,QAkNA++H,CAAAjmI,KAAAokI,EAAAl9H,EAAAiB,EAAA28H,GACAX,EAAAC,EAAAl9H,IAEA6O,OAAA,WACA/V,KAAAkH,MAAAkzD,YAEAp6D,KAAAykI,YAAA3uH,UAEA9V,KAAA0kI,gBAAA,IAEAqB,kBAAA,SAAA3B,EAAA35H,EAAAtC,GACA,IAAA22F,EAAAslC,EAAA1zH,iBACAmpG,EAAA75G,KAAAykI,YACAyB,EAAAlmI,KAAA0kI,gBACAwB,EAAA9mC,UAAAglC,EAAAjkI,IAAA,cACA+lI,EAAAj+D,KAAA62B,EAAAwkC,UAEAzpB,EAAA5Y,OAAAmjC,EAAAjkI,IAAA,aACA,IAAA2I,EAAAs7H,EAAAt7H,SAEA,SAAAq9H,IACA,IAAArxH,EAAA,CACAvV,KAAA,UACAwO,cAAAjF,GAGA,OADAgM,EAAAhM,EAAA,MAAAs7H,EAAAn9H,GACA6N,EAGA+kG,EAAA1vG,IAAA,OAAAP,GAAA,eAAA6wB,EAAAC,GACA16B,KAAA4kI,gBAAA,EACAX,EAAAmC,gBAAAF,EAAAzrG,EAAAC,GACAvyB,EAAA2P,eAAAjU,EAAAlD,OAAAwlI,IAAA,CACA1rG,KACAC,SAEK16B,MACL65G,EAAA1vG,IAAA,QAAAP,GAAA,gBAAAq+D,EAAAo+D,EAAAC,GASA,GARAtmI,KAAA4kI,gBAAA,EACAX,EAAAsC,iBAAAL,EAAAj+D,EAAAo+D,EAAAC,GACAn+H,EAAA2P,eAAAjU,EAAAlD,OAAAwlI,IAAA,CACAl+D,OACAngD,QAAAu+G,EACAt+G,QAAAu+G,KAGAtmI,KAAA2kI,aAAA,CACA,IAAAz9H,EAAAlH,KAAAkH,MACAy1B,EAAAz1B,EAAAy1B,MACAz1B,EAAAuP,SAAA,SAAAhO,GACA,SAAAA,EAAAlJ,MACAkJ,EAAAke,KAAA,WAAAgW,EAAA,KAAAA,EAAA,SAIK38B,MACL65G,EAAA7Y,kBAAA,SAAAtoF,EAAA1I,EAAAC,GACA,OAAA6uF,EAAAilC,uBAAA7iG,QAAAlxB,EAAAC,KAAAshG,EAAA74F,EAAAvQ,EAAAi8H,OAIA,IAAAhjG,EAAAmjG,EACApsG,EAAA93B,QAAA+gC,mBC9VA,IAAA9L,EAAc5xB,EAAQ,KAqBtB8iI,EAAA,0BAoBA,SAAAC,EAAAr/H,GACA,OAAAA,EAAAo/H,KAAAp/H,EAAAo/H,GAAA,IAWAlxG,EAAAlb,eAAA,CACA7a,KAAA,mBACAwV,MAAA,oBACA7J,OAAA,UACC,cACD7K,EAAAw+G,KAnCA,SAAAz3G,EAAAs/H,EAAAC,GACAF,EAAAr/H,GACAs/H,GAAAC,GAkCAtmI,EAAAs+G,QA/BA,SAAAv3G,EAAAs/H,EAAAC,GACA,IAAA/9C,EAAA69C,EAAAr/H,GACAwhF,EAAA89C,KAEAC,IACA/9C,EAAA89C,GAAA,OA2BArmI,EAAA0hG,QAvBA,SAAA36F,EAAAs/H,GACA,QAAAD,EAAAr/H,GAAAs/H,mBC4BArmI,EAAA+lI,gBAzCA,SAAAF,EAAAzrG,EAAAC,GACA,IAAAz8B,EAAAioI,EAAAjoI,OACA0vE,EAAA1vE,EAAA2hB,SACA+tD,EAAA,IAAAlzC,EACAkzC,EAAA,IAAAjzC,EACAz8B,EAAAoY,SAqCAhW,EAAAkmI,iBAzBA,SAAAL,EAAAhkC,EAAAI,EAAAC,GACA,IAAAtkG,EAAAioI,EAAAjoI,OACAmhG,EAAA8mC,EAAA9mC,UACAzxB,EAAA1vE,EAAA2hB,SACA+c,EAAA1+B,EAAA0+B,MACAiqG,EAAAV,EAAAj+D,KAAAi+D,EAAAj+D,MAAA,EAGA,GAFA2+D,GAAA1kC,EAEA9C,EAAA,CACA,IAAAynC,EAAAznC,EAAAxwF,KAAA,EACAk4H,EAAA1nC,EAAAtwF,KAAAG,IACA23H,EAAAj4H,KAAAG,IAAAH,KAAAC,IAAAk4H,EAAAF,GAAAC,GAGA,IAAAE,EAAAH,EAAAV,EAAAj+D,KACAi+D,EAAAj+D,KAAA2+D,EAEAj5D,EAAA,KAAA20B,EAAA30B,EAAA,KAAAo5D,EAAA,GACAp5D,EAAA,KAAA40B,EAAA50B,EAAA,KAAAo5D,EAAA,GACApqG,EAAA,IAAAoqG,EACApqG,EAAA,IAAAoqG,EACA9oI,EAAAoY,0BC/DA,IAAAif,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAIrBsjI,EAFkBtjI,EAAQ,KAE1BsjI,oBA8BA1xG,EAAAlb,eAAA,CACA7a,KAAA,UACAwV,MAAA,UACA7J,OAAA,mBACC,SAAAuG,EAAAhH,GACD,IAAAsD,EAAA0D,EAAA1D,eAAA,SACAtD,EAAAuD,cAAA,CACAlF,SAAAiF,EACAwF,MAAA9B,GACG,SAAAH,GACH,IAAAwtF,EAAAxtF,EAAAZ,iBAEA,WAAAouF,EAAAv/F,KAAA,CAIA,IAAA29C,EAAA8pF,EAAAloC,EAAArtF,EAAAH,EAAAnR,IAAA,eACAmR,EAAAqtF,WAAArtF,EAAAqtF,UAAAzhD,EAAAmvC,QACA/6E,EAAAstF,SAAAttF,EAAAstF,QAAA1hD,EAAA+qB,MAGA,WAAAl6D,GACAlK,EAAAjF,KAAA0S,EAAA21H,YAAA,SAAAl2H,GACAA,EAAA4tF,UAAAzhD,EAAAmvC,QACAt7E,EAAA6tF,QAAA1hD,EAAA+qB,4BCKA5nE,EAAA2mI,oBAzCA,SAAA94H,EAAAuD,EAAA2tF,GACA,IAAA8nC,EAAAh5H,EAAAo1H,UACAj3C,EAAAn+E,EAAAm1H,YACAp7D,EAAAx2D,EAAAw2D,KACA58C,EAAAnd,EAAA40E,YAAAuJ,GAEA,MAAA56E,EAAAgpB,IAAA,MAAAhpB,EAAAipB,KACArP,EAAA,IAAA5Z,EAAAgpB,GACApP,EAAA,IAAA5Z,EAAAipB,GACA2xD,EAAAn+E,EAAA20D,YAAAx3C,GACAnd,EAAAywF,UAAAtS,IAGA,SAAApkB,EAAA,CACA,GAAAm3B,EAAA,CACA,IAAAynC,EAAAznC,EAAAxwF,KAAA,EACAk4H,EAAA1nC,EAAAtwF,KAAAG,IACAg5D,EAAAt5D,KAAAG,IAAAH,KAAAC,IAAAs4H,EAAAj/D,EAAA6+D,GAAAD,GAAAK,EAIAh5H,EAAAyuB,MAAA,IAAAsrC,EACA/5D,EAAAyuB,MAAA,IAAAsrC,EACA,IAAAroD,EAAA1R,EAAA0R,SACAunH,GAAA11H,EAAAqW,QAAAlI,EAAA,KAAAqoD,EAAA,GACAm/D,GAAA31H,EAAAsW,QAAAnI,EAAA,KAAAqoD,EAAA,GACAroD,EAAA,IAAAunH,EACAvnH,EAAA,IAAAwnH,EACAl5H,EAAAiE,kBAEAk6E,EAAAn+E,EAAA20D,YAAAx3C,GACAnd,EAAAywF,UAAAtS,GACAn+E,EAAA0wF,QAAA32B,EAAAi/D,GAGA,OACA76C,OAAAn+E,EAAAm1H,YACAp7D,KAAA/5D,EAAAo1H,6BC7DA,IAAAz/H,EAAaH,EAAQ,KAyBrB9E,EAAAiF,EAAAjF,KACAyoI,EAAA,iBACAC,EAAA,oBAmDA,SAAAC,EAAAxvH,EAAAmlC,GACA,IA0CA17C,EA1CAxB,MA2CAsnI,KAAA9lI,EA3CA,CAEA,IAAAgmI,EAAA3jI,EAAAlD,OAAA,GAAgCX,KAAAqnI,IAChCG,EAAAxnI,KAAA6Y,UAAAqkC,EACAuqF,EAAAvqF,EAAAsqF,EAAAzvH,QAGA2vH,EAAAxqF,EAAAl9C,KAAA6Y,SAAA7Y,KAAAsnI,GAAAvvH,GAmCA,IAAAvW,EAhCA,OAAA07C,EAGA,SAAAyqF,EAAA5vH,EAAAmlC,GAEA,OADAnlC,EAAAq8F,QAAAr8F,EAAAq8F,OAAAlpG,OAAAlL,MACAk9C,EAGA,SAAA0qF,EAAA7vH,EAAAmlC,GAQA,OAHAt+C,EAAAs+C,EAAAmqF,GAAA,SAAA7lI,EAAAqX,GACArX,IAAA07C,GAAAwqF,EAAAlmI,EAAAmsC,eAAA90B,EAAAqkC,EAAAnlC,KAEAmlC,EAWA,SAAAtS,EAAA/xB,GACA,IAAAs7F,EAAAn0G,KAAAsnI,GACA,aAAAzuH,GAAA,MAAAs7F,MAAAkzB,GAAAxuH,GAOA,SAAA4uH,EAAAtzB,EAAAqzB,EAAAzvH,GACAo8F,EAAAkzB,GAAA,GACAzoI,EAAA4oI,EAAA,SAAAhmI,EAAAqX,GACA6uH,EAAAlmI,EAAAqX,EAAAs7F,EAAAp8F,KAIA,SAAA2vH,EAAAlmI,EAAAqX,EAAAs7F,EAAAp8F,GACAo8F,EAAAkzB,GAAAxuH,GAAArX,EACAA,EAAA8lI,GAAAnzB,EACA3yG,EAAAqX,WAEAd,EAAAq8F,SACA5yG,EAAAuW,EAAAs8F,YAAAt8F,EAAAq8F,OACAr8F,EAAAq8F,OAAAr8F,EAAA8vH,UAAAhvH,IAAArX,GAIAA,EAAAopC,gBAGA,IAAAxJ,EApGA,SAAArpB,GACA,IAAAo8F,EAAAp8F,EAAAo8F,SACAqzB,EAAAzvH,EAAAyvH,MAEAA,IACAA,EAAA,CACAxyH,KAAAm/F,GAEAp8F,EAAA8vH,UAAA,CACA7yH,KAAA,SAIA+C,EAAAyvH,MAAAzvH,EAAAo8F,SAAA,KACAszB,EAAAtzB,EAAAqzB,EAAAzvH,GAEAnZ,EAAA4oI,EAAA,SAAAhmI,GACA5C,EAAAu1G,EAAAh3D,qBAAA,SAAA5yC,GACA/I,EAAAusC,WAAAxjC,EAAA1G,EAAAjC,MAAA2lI,EAAAxvH,QAIAo8F,EAAApmE,WAAA,eAAAlqC,EAAAjC,MAAAgmI,EAAA7vH,IAGAnZ,EAAAu1G,EAAArmE,kBAAA,SAAAvjC,GACA4pG,EAAApmE,WAAAxjC,EAAA1G,EAAAjC,MAAA+lI,EAAA5vH,MAGAlU,EAAAlB,OAAA6kI,EAAArzB,EAAAt7F,YAAAs7F,IAwEAh8E,EAAA93B,QAAA+gC,mBCnJA,IAAApiB,EAAatb,EAAQ,KA6OrB,SAAAokI,EAAA7wH,GACA,IAAAs0E,EAAAt0E,EAAAs0E,SACA,OAAAA,EAAA9tF,QAAAwZ,EAAAg8F,SAAA1nB,IAAA9tF,OAAA,GAAAwZ,EAAA8wH,SAAAC,OAWA,SAAAC,EAAAhxH,GACA,IAAAs0E,EAAAt0E,EAAAs0E,SACA,OAAAA,EAAA9tF,QAAAwZ,EAAAg8F,SAAA1nB,EAAA,GAAAt0E,EAAA8wH,SAAAC,OAYA,SAAAE,EAAAC,EAAAlxH,EAAA4S,GACA,OAAAs+G,EAAAJ,SAAAl+G,SAAA+oD,aAAA37D,EAAA27D,WAAAu1D,EAAAJ,SAAAl+G,WAUA,SAAAu+G,EAAAC,EAAAC,EAAAnzH,GACA,IAAAozH,EAAApzH,GAAAmzH,EAAAP,SAAAxqI,EAAA8qI,EAAAN,SAAAxqI,GACA+qI,EAAAP,SAAAQ,UACAD,EAAAP,SAAA5yH,SACAmzH,EAAAP,SAAAS,UAAArzH,EACAmzH,EAAAP,SAAAU,QAAAtzH,EACAkzH,EAAAN,SAAAQ,UAGA,SAAAG,EAAAC,EAAAC,GACA,OAAAD,EAAA/1D,aAAAg2D,EAAAh2D,WAAA,IAGAvyE,EAAAiH,KAhQA,SAAA0rE,GACAA,EAAA+0D,SAAA,CACAc,gBAAA,KACAh/G,SAAAmpD,EACAy1D,OAAA,EACAD,SAAA,EACAD,OAAA,EACApzH,MAAA,EACA5X,EAAA,EACAyqI,OAAA,MAMA,IAJA,IACA/wH,EACAs0E,EAFAgoB,EAAA,CAAAvgC,GAIA/7D,EAAAs8F,EAAAj/F,OAIA,GAFAi3E,EAAAt0E,EAAAs0E,SAEAt0E,EAAAg8F,UAAA1nB,EAAA9tF,OAGA,IAFA,IAEAF,EAFAguF,EAAA9tF,OAEA,EAAyBF,GAAA,EAAQA,IAAA,CACjC,IAAAykB,EAAAupE,EAAAhuF,GACAykB,EAAA+lH,SAAA,CACAc,gBAAA,KACAh/G,SAAA7H,EACAymH,OAAA,EACAD,SAAA,EACAD,OAAA,EACApzH,MAAA,EACA5X,IACAyqI,OAAA,MAEAz0B,EAAA9xG,KAAAugB,KA+NA3hB,EAAAyoI,UAhNA,SAAA7xH,EAAA8xH,GACA,IAAAx9C,EAAAt0E,EAAAg8F,SAAAh8F,EAAAs0E,SAAA,GACAy9C,EAAA/xH,EAAA27D,WAAA2Y,SACA09C,EAAAhyH,EAAA8wH,SAAAxqI,EAAAyrI,EAAA/xH,EAAA8wH,SAAAxqI,EAAA,QAEA,GAAAguF,EAAA9tF,OAAA,EAqEA,SAAAwZ,GAMA,IALA,IAAAs0E,EAAAt0E,EAAAs0E,SACAlsB,EAAAksB,EAAA9tF,OACA0X,EAAA,EACAozH,EAAA,IAEAlpE,GAAA,IACA,IAAAr9C,EAAAupE,EAAAlsB,GACAr9C,EAAA+lH,SAAAU,QAAAtzH,EACA6M,EAAA+lH,SAAAS,UAAArzH,EACAozH,GAAAvmH,EAAA+lH,SAAAQ,OACApzH,GAAA6M,EAAA+lH,SAAA5yH,MAAAozH,GA/EAW,CAAAjyH,GACA,IAAAkyH,GAAA59C,EAAA,GAAAw8C,SAAAU,OAAAl9C,IAAA9tF,OAAA,GAAAsqI,SAAAU,QAAA,EAEAQ,GACAhyH,EAAA8wH,SAAAU,OAAAQ,EAAAlB,SAAAU,OAAAM,EAAA9xH,EAAAgyH,GACAhyH,EAAA8wH,SAAAS,SAAAvxH,EAAA8wH,SAAAU,OAAAU,GAEAlyH,EAAA8wH,SAAAU,OAAAU,OAEGF,IACHhyH,EAAA8wH,SAAAU,OAAAQ,EAAAlB,SAAAU,OAAAM,EAAA9xH,EAAAgyH,IAGAhyH,EAAA27D,WAAAm1D,SAAAc,gBAqFA,SAAAO,EAAAH,EAAAp/G,EAAAk/G,GACA,GAAAE,EAAA,CAUA,IATA,IAAAI,EAAAD,EACAE,EAAAF,EACAG,EAAAD,EAAA12D,WAAA2Y,SAAA,GACA48C,EAAAc,EACAO,EAAAH,EAAAtB,SAAAS,SACAiB,EAAAH,EAAAvB,SAAAS,SACAkB,EAAAH,EAAAxB,SAAAS,SACAmB,EAAAxB,EAAAJ,SAAAS,SAEAL,EAAAL,EAAAK,GAAAmB,EAAArB,EAAAqB,GAAAnB,GAAAmB,GAAA,CACAD,EAAAvB,EAAAuB,GACAE,EAAAtB,EAAAsB,GACAF,EAAAtB,SAAAl+G,SAAAu/G,EACA,IAAAj0H,EAAAgzH,EAAAJ,SAAAU,OAAAkB,EAAAL,EAAAvB,SAAAU,OAAAgB,EAAAV,EAAAZ,EAAAmB,GAEAn0H,EAAA,IACAizH,EAAAF,EAAAC,EAAAiB,EAAAv/G,GAAAu/G,EAAAj0H,GACAs0H,GAAAt0H,EACAq0H,GAAAr0H,GAGAw0H,GAAAxB,EAAAJ,SAAAS,SACAiB,GAAAH,EAAAvB,SAAAS,SACAgB,GAAAH,EAAAtB,SAAAS,SACAkB,GAAAH,EAAAxB,SAAAS,SAGAL,IAAAL,EAAAuB,KACAA,EAAAtB,SAAAC,OAAAG,EACAkB,EAAAtB,SAAAS,UAAAmB,EAAAH,GAGAF,IAAArB,EAAAsB,KACAA,EAAAxB,SAAAC,OAAAsB,EACAC,EAAAxB,SAAAS,UAAAiB,EAAAC,EACA7/G,EAAAu/G,GAIA,OAAAv/G,EA9HA+/G,CAAA3yH,EAAAgyH,EAAAhyH,EAAA27D,WAAAm1D,SAAAc,iBAAAG,EAAA,GAAAD,IA8LA1oI,EAAAwpI,WAtLA,SAAA5yH,GACA,IAAA6yH,EAAA7yH,EAAA8wH,SAAAU,OAAAxxH,EAAA27D,WAAAm1D,SAAAS,SACAvxH,EAAAklC,UAAA,CACAnsC,EAAA85H,IACG,GACH7yH,EAAA8wH,SAAAS,UAAAvxH,EAAA27D,WAAAm1D,SAAAS,UAkLAnoI,EAAA0oI,WA/KA,SAAAjqI,GACA,OAAAK,UAAA1B,OAAAqB,EAAA4pI,GA+KAroI,EAAA0pI,iBArKA,SAAA/5H,EAAAC,GACA,IAAA+5H,EAAA,GAIA,OAHAh6H,GAAArB,KAAA4U,GAAA,EACAymH,EAAAh6H,EAAAC,EAAAtB,KAAA6gC,IAAAx/B,GACAg6H,EAAA/5H,IAAAtB,KAAA2gC,IAAAt/B,GACAg6H,GAiKA3pI,EAAAyjI,YAvJA,SAAA/yH,EAAA5I,GACA,OAAA6W,EAAAya,cAAA1oB,EAAA0tF,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,gCCjJA,IAAA9I,EAAaH,EAAQ,KAErB+tC,EAAW/tC,EAAQ,KAEnBumI,EAAYvmI,EAAQ,KAEpBguG,EAAehuG,EAAQ,KAEvBq3D,EAAuBr3D,EAAQ,KAE/BoY,EAAuBpY,EAAQ,KAE/Bk+H,EAA0Bl+H,EAAQ,KA0FlCy0B,EAAA93B,QArEA,SAAAkzG,EAAA22B,EAAAn5H,EAAAo5H,EAAAC,GAKA,IAFA,IAAAtyG,EAAA,IAAAmyG,EAAAE,GAEA5sI,EAAA,EAAiBA,EAAAg2G,EAAA91G,OAAkBF,IACnCu6B,EAAAuyG,QAAAxmI,EAAA5B,SACAsxG,EAAAh2G,GAAA0J,GAAAssG,EAAAh2G,GAAAgD,KAAAhD,MAGA,IAAA+sI,EAAA,GACAC,EAAA,GACAC,EAAA,EAEA,IAAAjtI,EAAA,EAAiBA,EAAA2sI,EAAAzsI,OAAkBF,IAAA,CACnC,IAAA4mF,EAAA+lD,EAAA3sI,GACAL,EAAAinF,EAAAjnF,OACAe,EAAAkmF,EAAAlmF,OAEA65B,EAAA2yG,QAAAvtI,EAAAe,EAAAusI,KACAD,EAAA9oI,KAAA0iF,GACAmmD,EAAA7oI,KAAAoC,EAAA5B,SAAAkiF,EAAAl9E,GAAA/J,EAAA,MAAAe,IACAusI,KAIA,IACAE,EADA9/H,EAAAmG,EAAA5Q,IAAA,oBAGA,mBAAAyK,GAAA,UAAAA,EACA8/H,EAAA9I,EAAAruB,EAAAxiG,OACG,CACH,IAAA45H,EAAA7uH,EAAA3b,IAAAyK,GACAkxD,EAAA6uE,GAAA,SAAAA,EAAAprI,MAAAorI,EAAAxuH,YAAA,GAIAtY,EAAAhD,QAAAi7D,EAAA,YACAA,EAAAz8D,OAAA,WAGA,IAAAuyC,EAAAmpB,EAAAw4C,EAAA,CACAz3C,qBAEA4uE,EAAA,IAAAj5F,EAAAG,EAAA7gC,IACAskC,SAAAk+D,GAGA,IAAAq3B,EAAA,IAAAn5F,EAAA,UAAA1gC,GAkBA,OAjBA65H,EAAAv1F,SAAAk1F,EAAAD,GACAF,KAAAM,EAAAE,GACAl5B,EAAA,CACAyC,SAAAu2B,EACAt2B,OAAAt8E,EACAu8E,WAAA,QACAmzB,MAAA,CACAvwH,KAAAyzH,EACA/kG,KAAAilG,GAEA/C,UAAA,CACA5wH,KAAA,OACA0uB,KAAA,cAIA7N,EAAA5sB,SACA4sB,oBCnGA,IAAA8H,EAAWl8B,EAAQ,KAoCnB,SAAAmnI,EAAA/yG,GACAA,EAAAgzG,SAAA,SAAAnlG,GACA,IAAAolG,EAAAplG,EAAAn5B,WAAArM,IAAA,0BACAw+D,EAAA/+B,EAAA3iC,MAAA0oC,EAAAgjG,MAAAvsF,aACAwiB,EAAAh/B,EAAA3iC,MAAA0oC,EAAAijG,MAAAxsF,aACAhxB,EAAA,CAAAuzC,EAAAC,IAEAmsE,GACA3/G,EAAA3pB,KAAA,EAAAk9D,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,IAAAmsE,GAAApsE,EAAA,GAAAC,EAAA,OAAAA,EAAA,GAAAD,EAAA,IAAAosE,IAGAplG,EAAAwW,UAAA/wB,KAIA/qB,EAAA2qI,aA9BA,SAAAj6H,GACA,IAAAnG,EAAAmG,EAAAL,iBAEA,IAAA9F,GAAA,SAAAA,EAAArL,KAAA,CAIA,IAAAu4B,EAAA/mB,EAAAk6H,WACAnzG,EAAAy6E,SAAA,SAAAt7F,GACA,IAAAxG,EAAAwG,EAAAzK,WACAyK,EAAAklC,UAAA,EAAA1rC,EAAAtQ,IAAA,MAAAsQ,EAAAtQ,IAAA,SAEA0qI,EAAA/yG,KAmBAz3B,EAAAwqI,oCCpDA,IAAAjrG,EAAWl8B,EAAQ,KAgEnBrD,EAAA6qI,eA3CA,SAAAn6H,GACA,IAAAnG,EAAAmG,EAAAL,iBAEA,IAAA9F,GAAA,SAAAA,EAAArL,KAAA,CAIA,IAAAwf,EAAAnU,EAAAuU,kBACAurH,EAAA35H,EAAAC,UACA8mB,EAAA4yG,EAAA5yG,MACA+lB,EAAA,EACA3vB,EAAAw8G,EAAA5xF,OAAA,SACAqyF,EAAA,EAAAx8H,KAAA4U,IAAA2K,GAAAw8G,EAAAr9G,SACAgwB,EAAAt+B,EAAAtX,MAAA,EAAAsX,EAAA/O,EACAstC,EAAAv+B,EAAArX,OAAA,EAAAqX,EAAA9O,EACA2tC,EAAAjvC,KAAAC,IAAAmQ,EAAAtX,MAAAsX,EAAArX,QAAA,EACAowB,EAAAy6E,SAAA,SAAAt7F,GACA,IAAA3X,EAAA2X,EAAA67F,SAAA,SACAj1D,GAAAstF,GAAAj9G,EAAA5uB,EAAA,KACA2X,EAAAklC,UAAA,CAAAyB,EAAAjvC,KAAA6gC,IAAAqO,GAAAR,EAAAO,EAAAjvC,KAAA2gC,IAAAuO,GAAAP,IACAO,GAAAstF,GAAAj9G,EAAA5uB,EAAA,OAEAorI,EAAAvuF,UAAA,CACAkB,KACAC,OAEAxlB,EAAAgzG,SAAA,SAAAnlG,GACA,IAGAqwE,EAHA+0B,EAAAplG,EAAAn5B,WAAArM,IAAA,0BACAw+D,EAAA/+B,EAAA3iC,MAAA0oC,EAAAgjG,MAAAvsF,aACAwiB,EAAAh/B,EAAA3iC,MAAA0oC,EAAAijG,MAAAxsF,aAEAgvF,GAAAzsE,EAAA,GAAAC,EAAA,MACAysE,GAAA1sE,EAAA,GAAAC,EAAA,OAEAmsE,IAEA/0B,EAAA,CAAA34D,GADA0tF,GAAA,GACAK,GAAA,EAAAL,GAAAztF,EAAAytF,EAAAM,GAAA,EAAAN,KAGAplG,EAAAwW,UAAA,CAAAwiB,EAAAC,EAAAo3C,yBC5DA,IAAA1gF,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErB88G,EAAmB98G,EAAQ,KAE3B4nI,EAA2B5nI,EAAQ,KAEnCA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAwBR4xB,EAAA/Y,oBAAA,CACAhd,KAAA,WACAsS,OAAA,SAAAgoH,EAAApvH,EAAAtC,GACAnI,KAAA4I,OAAAixH,EACA75H,KAAAoI,KAAAD,EAEAnI,KAAA05G,YACA15G,KAAA05G,UAAA,GACA71G,EAAAjF,KAAA2sI,EAAA,SAAA9kI,EAAAD,GACA2B,EAAA2D,QAAAlC,GAAApD,EAAAxG,KAAA05G,UAAAlzG,GAAA3C,EAAA7E,KAAAyH,EAAAzG,QACOA,OAGPwgH,EAAAj5C,eAAAvnE,KAAA,2BAAA65H,EAAA15H,IAAA,8BAEA2V,QAAA,SAAArL,EAAAtC,GACAtE,EAAAjF,KAAAoB,KAAA05G,UAAA,SAAAjzG,EAAAD,GACA2B,EAAA2D,QAAA3B,IAAA3D,EAAAC,KAEAzG,KAAA05G,UAAA,MAMA8xB,yBAAA,SAAAzzH,GACA/X,KAAAyrI,gBAAA1zH,IAEA0zH,gBAAA,SAAA1zH,GACAA,GAAA/X,KAAAoI,KAAA0P,eAAAjU,EAAAlD,OAAA,CACApB,KAAA,sBACKwY,OAGL,IAAAwzH,EAAA,CACAhrC,UAAA,SAAA7nF,GACAgzH,EAAA1rI,KAAA,WACAA,KAAA2rI,gBAAA,CAAAjzH,EAAAg+C,QAAAh+C,EAAAo+C,WAGA6pC,QAAA,SAAAjoF,GACA,IAAAkzH,EAAA5rI,KAAA2rI,gBAEA,GAAAD,EAAA1rI,KAAA,UAAA4rI,EAAA,CACA,IAAAvgH,EAAA,CAAA3S,EAAAg+C,QAAAh+C,EAAAo+C,SAGA,GAFAnoD,KAAA0f,IAAAu9G,EAAA,GAAAvgH,EAAA,MAAA1c,KAAA0f,IAAAu9G,EAAA,GAAAvgH,EAAA,MAhDA,EAmDA,OAGA,IAAAluB,EAAA6C,KAAA4I,OAAA8H,iBAAAm7H,0BAAA,CAAAnzH,EAAAg+C,QAAAh+C,EAAAo+C,UAEA,SAAA35D,EAAA2uI,UAAA9rI,KAAAyrI,gBAAA,CACAM,iBAAA5uI,EAAA4uI,mBAIA/rI,KAAA2rI,gBAAA,MAEAlrC,UAAA,SAAA/nF,GAEA,IAAA1Y,KAAA2rI,iBAAAD,EAAA1rI,KAAA,cAIA,IAAAyQ,EAAAzQ,KAAA4I,OACAzL,EAAAsT,EAAAC,iBAAAm7H,0BAAA,CAAAnzH,EAAAg+C,QAAAh+C,EAAAo+C,UACAg1E,EAAA3uI,EAAA2uI,SACA,SAAAA,GAAA9rI,KAAAwrI,yBAAA3kE,iBAAAp2D,EAAAtQ,IAAA,uBAEAH,KAAAwrI,yBAAA,SAAAM,EAAA,KACA,CACAC,iBAAA5uI,EAAA4uI,iBAEApiI,UAAA,SAAAmiI,GAAA,UAKA,SAAAJ,EAAAx9H,EAAA89H,GACA,IAAAv7H,EAAAvC,EAAAtF,OACA,OAAA6H,EAAAtQ,IAAA,mBAAAsQ,EAAAtQ,IAAA,yBAAA6rI,EAGA12G,EAAAxb,qBAAAwxH,oBCzHA,IAAAW,EAAevoI,EAAQ,KAEAA,EAAQ,KAiD/BqY,SAAA,YACApK,OAzBA,SAAAlH,EAAAtC,GACA,IAAAuC,EAAA,GAoBA,OAnBAD,EAAAuD,cAAA,oBAAA6rH,EAAA5rG,GACA,IAAArjB,EAAA,IAAAqhI,EAAApS,EAAApvH,EAAAtC,GACAyC,EAAArK,KAAA,YAAA0tB,EACArjB,EAAAnB,OAAAowH,EAAA1xH,GACA0xH,EAAAnpH,iBAAA9F,EACAA,EAAA6F,MAAAopH,EACAnvH,EAAAjJ,KAAAmJ,KAGAH,EAAA+H,WAAA,SAAAzB,GACA,gBAAAA,EAAA5Q,IAAA,qBACA,IAAA05H,EAAApvH,EAAA8oB,gBAAA,CACAzqB,SAAA,WACAC,MAAAgI,EAAA5Q,IAAA,iBACA8G,GAAA8J,EAAA5Q,IAAA,gBACO,GACP4Q,EAAAL,iBAAAmpH,EAAAnpH,oBAGAhG,sBChDA,IAAA+T,EAAmB/a,EAAQ,KAI3B6tG,EAFoB7tG,EAAQ,KAE5B6tG,oBAEA26B,EAAkBxoI,EAAQ,KA8C1B,SAAAyoI,EAAAptH,GACA,OAAAN,EAAA9M,OAAAoN,GAGA1e,EAAA+rI,sBA7BA,SAAArtH,GAEA,OADAA,EAAAotH,EAAAptH,GACA,SAAAstH,EAAAxlH,GACA,OAAAqlH,EAAA/gH,iBAAAkhH,EAAAttH,KA2BA1e,EAAAisI,2BAvBA,SAAAvtH,EAAAwtH,GAEA,OADAxtH,EAAAotH,EAAAptH,GACA,SAAAshG,GACA,IAAApyF,EAAA,MAAAs+G,IAAAlsB,EACAmsB,EAAAv+G,EAAAlP,EAAAtX,MAAAsX,EAAArX,OACA87C,EAAAv1B,EAAAlP,EAAA/O,EAAA+O,EAAA9O,EACA,OAAAuzC,KAAAgpF,GAAA,MAkBAnsI,EAAAosI,yBAdA,SAAA1tH,EAAA5W,EAAAukI,GAEA,OADA3tH,EAAAotH,EAAAptH,GACA,SAAArG,EAAAiiG,EAAA9zF,GACA,OAAA9H,EAAAmiB,QAAAy5E,EAAA,GAAAA,EAAA,MAAApJ,EAAA74F,EAAAvQ,EAAAukI,sBC/CA,IAAA7oI,EAAaH,EAAQ,KA0HrBy0B,EAAA93B,QAhGA,WACA,IAAAssI,EAAA,GACAC,EAAA,GAgEA,OAMA9uI,IAAA,SAAAg/B,GAEA,OADA6vG,EAAAlrI,KAAAq7B,GACA98B,MAOA6sI,SAAA,SAAAr6B,GAEA,OADAo6B,EAAAD,EAAAlvI,OAAA,GAAA+0G,EACAxyG,MAOA8sI,QAAA,SAAAhsI,GACA,OAhDA,SAAAisI,EAAAC,EAAAn7B,GACA,GAAAA,GAAA86B,EAAAlvI,OACA,OAAAuvI,EAGA,IAAAlsI,EAAA,GACAmsI,EAAAL,EAAA/6B,KAQA,OAPAhuG,EAAAjF,KAAAouI,EAAA,SAAA1tI,EAAAxB,GACAgD,EAAAW,KAAA,CACA3D,MACAoE,OAAA6qI,EAAAztI,EAAAuyG,OAIAo7B,EACAnsI,EAAAosB,KAAA,SAAA7pB,EAAAC,GACA,OAAA2pI,EAAA5pI,EAAAvF,IAAAwF,EAAAxF,OAGAgD,EA6BAisI,CAlFA,SAAAlwI,EAAAiE,EAAA+wG,GACA,GAAAA,GAAA86B,EAAAlvI,OACA,OAAAqD,EASA,IANA,IAAAvD,GAAA,EACA8hE,EAAAv+D,EAAArD,OACAyvI,EAAAP,EAAA96B,KACAm7B,EAAA,GACAG,EAAA,KAEA5vI,EAAA8hE,GAAA,CACA,IAAA+tE,EAAAF,EAAApsI,EAAAvD,IACA2E,EAAAirI,EAAAC,GAEAlrI,EACAA,EAAAT,KAAAX,EAAAvD,IAEA4vI,EAAAC,GAAA,CAAAtsI,EAAAvD,IAOA,OAHAsG,EAAAjF,KAAAuuI,EAAA,SAAA7tI,EAAAxB,GACAkvI,EAAAlvI,GAAAjB,EAAAyC,EAAAuyG,KAEAm7B,EAyDAnwI,CAAAiE,EAAA,0BCrHA,IAAAusI,EAAuB3pI,EAAQ,KAE/BG,EAAaH,EAAQ,KAIrBu3D,EAFuBv3D,EAAQ,KAE/Bu3D,uBAoBAqyE,EAAA,CAKAC,aAAA,KAKAtjG,eAAA,SAAAj+B,EAAAvB,GAIA,IAAAqpC,EAKA05F,EAJAv9B,EAAAxlG,EAAA5B,aAAA,QAAA7I,KAAAG,IAAA,eACA+vG,EAAAzlG,EAAA5B,aAAA,QAAA7I,KAAAG,IAAA,eACAstI,EAAAx9B,EAAA9vG,IAAA,QACAutI,EAAAx9B,EAAA/vG,IAAA,QAIA,aAAAstI,GACAzhI,EAAAgT,OAAA,aACA80B,EAAAm8D,EAAA1uD,iBACAisF,GAAA,GACK,aAAAE,GACL1hI,EAAAgT,OAAA,WACA80B,EAAAo8D,EAAA3uD,iBACAisF,GAAA,GAEAxhI,EAAAgT,OAAAhT,EAAAgT,QAAA,aAGA,IAAA2uH,EAAA,UACAC,EAAA,eAAA5hI,EAAAgT,OAAA,IACAq/G,EAAAr+H,KAAAutI,aAAAI,EAAAC,GACA/+B,EAAA8+B,EAAA,EAAAC,GACAxmD,EAAA,CAAA6oB,EAAAC,GACA29B,EAAAzmD,EAAAwmD,GAAAztI,IAAA,QACA2tI,EAAA1mD,EAAA,EAAAwmD,GAAAztI,IAAA,QACAqB,EAAAwK,EAAAxK,KAGA,GAAAA,GAAAgsI,EAAA,CACA,IAAAO,EAAA,GACAlqI,EAAAjF,KAAA4C,EAAA,SAAAoO,EAAA7G,GACA,IAAAilI,EAEAp+H,EAAAtQ,OAAAuE,EAAAvF,QAAAsR,EAAAtQ,QACA0uI,EAAAp+H,EAAAtQ,MAAA3C,QACAiT,EAAAtQ,MAAAyoC,QAAAh/B,IACSlF,EAAAvF,QAAAsR,IACTo+H,EAAAp+H,EAAAjT,QACAiT,EAAAm4B,QAAAh/B,IAEAilI,EAAAp+H,EAGAm+H,EAAAtsI,KAAAusI,KAEAhiI,EAAAxK,KAAAusI,EAGA,IAAAE,EAAAjuI,KAAAiuI,uBACA,OAAAZ,EAAArtI,KAAA,CACA87D,gBAAA,EACAv7D,KAAA89H,EACA9+H,KAAA07D,EAAA4yE,GACA/5F,cACA5H,UAAA,CACAjW,SAAA,EACA0gB,SAAA,GAEAimC,QAAA,UACO,CACPr8E,KAAAsuG,EACAtvG,KAAA07D,EAAA6yE,GACAlxD,QAAAqxD,EAAAtxI,UAEAqgF,gBAAAixD,EAAAxwI,OAAA,KAQAwtC,YAAA,WACA,IAAAe,EAAAhsC,KAAAutI,aACA,OAAAvtI,KAAAyK,QAAA5B,aAAAmjC,EAAA,OAAAhsC,KAAAG,IAAA6rC,EAAA,cAAA2V,OAGAthD,EAAAitI,oCCvHA,IAAA1oI,EAAclB,EAAQ,KAEtBya,EAAWza,EAAQ,KAEnBG,EAAaH,EAAQ,KAIrBg8C,EAFch8C,EAAQ,KAEtBg8C,aAEA9f,EAAWl8B,EAAQ,KAEnBwqI,EAAgBxqI,EAAQ,KAgCxB,SAAAyqI,EAAAz5B,EAAAzmF,EAAA4zD,GACAj9E,EAAA+Y,MAAAtgB,KAAA2C,MACAA,KAAAmQ,IAAAnQ,KAAAm3G,WAAAzC,EAAAzmF,EAAA4zD,IAEA7hF,KAAAouI,oBAAA15B,EAAAzmF,GAGA,IAAAogH,EAAAF,EAAAjyI,UAEAmyI,EAAAl3B,WAAA,SAAAzC,EAAAzmF,EAAA4zD,GACA,WAAA1jE,EAAAu2F,EAAAzmF,EAAA4zD,IAGAwsD,EAAAD,oBAAA,SAAA15B,EAAAzmF,GACA,IACAqgH,EADA55B,EAAA54D,aAAA7tB,GACAzhB,SAAA,UACAuyC,EAAAuvF,EAAAnuI,IAAA,cACA++C,EAAAovF,EAAAnuI,IAAA,UAEA0D,EAAAvF,QAAAygD,KACAA,EAAA,CAAAA,MAGA,IAAA5+B,EAAAmuH,EAAAnuI,IAAA,UAAAu0G,EAAAtjG,cAAA6c,EAAA,SACAmJ,EAAAp3B,KAAAi5B,QAAA,GAEAj5B,KAAAo4F,cAAAl5C,IAEAl/C,KAAA+V,OAAAqhB,IACAA,EAAAsoB,EAAAR,GAAA,WAAA/+B,IACAwB,GAAA,IACAyV,EAAAmnD,SAAA,EACAv+E,KAAAmQ,IAAAinB,IAIAA,IAKAA,EAAAxgB,SAAA,cAAAuJ,GACAiX,EAAAxgB,SAAA03H,EAAAntD,aAAA,YACA/pD,EAAAzQ,KAAA,QAAAo4B,GACA3nB,EAAAyoB,SAAA1/B,GACAiX,EAAAzQ,KAAA,QAAAo4B,GACA/+C,KAAAo4F,YAAAl5C,EAEAl/C,KAAAuuI,uBAAA75B,EAAA45B,EAAArgH,KAGAogH,EAAAE,uBAAA,SAAA75B,EAAA45B,EAAArgH,GACA,IAAAmJ,EAAAp3B,KAAAi5B,QAAA,GAEA,GAAA7B,EAAA,CAIA,IAAAtpB,EAAA9N,KACAorB,EAAAspF,EAAAr4D,cAAApuB,GACAugH,EAAA,IAAAF,EAAAnuI,IAAA,UACAukC,EAAA4pG,EAAAnuI,IAAA,QACAsuI,EAAAH,EAAAnuI,IAAA,iBACAuuI,EAAA7qI,EAAA5B,SAAAqsI,EAAAnuI,IAAA,kBAAA8tB,GACA,OAAAA,EAAAymF,EAAArnF,QAAAmhH,EAAA,IAEAG,EAAA,oBAAAD,EASA,GAPAt3G,EAAAhpB,QAAA,EACApO,KAAA4uI,sBAAAx3G,EAAAhM,GAEAqjH,EAAA,IACAD,EAAAxuI,KAAA6uI,cAAAz3G,GAAAq3G,EAAA,KAGAD,IAAAxuI,KAAA8uI,SAAApqG,IAAA1kC,KAAA8wH,MAAA,CACA15F,EAAA3pB,gBACA,IAAAi5D,EAAAgoE,EAEAC,IACAjoE,EAAAgoE,EAAAzgH,IAGAmJ,EAAA23G,IAAA,IACAroE,GAAA8nE,EAAAp3G,EAAA23G,KAGA33G,EAAA23G,IAAA,EACA,IAAA3f,EAAAh4F,EAAAuN,QAAA,GAAAD,GAAA+sF,KAAA+c,EAAA,CACAO,IAAA,IACKroE,SAAAirD,OAAA,WACL7jH,EAAAkhI,qBAAA53G,KAGAsN,GACA0qF,EAAAqD,KAAA,WACA3kH,EAAAiI,OAAAqhB,KAIAg4F,EAAAn5E,QAGAj2C,KAAA8uI,QAAAN,EACAxuI,KAAA8wH,MAAApsF,IAGA2pG,EAAAQ,cAAA,SAAAz3G,GAEA,OAAAwI,EAAAxD,KAAAhF,EAAA63G,KAAA73G,EAAA83G,OAAAtvG,EAAAxD,KAAAhF,EAAA83G,MAAA93G,EAAA+3G,OAGAd,EAAAO,sBAAA,SAAAx3G,EAAAhM,GACAgM,EAAA63G,KAAA7jH,EAAA,GACAgM,EAAA+3G,KAAA/jH,EAAA,GACAgM,EAAA83G,MAAA9jH,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAAAA,EAAA,MAAAA,EAAA,WAGAijH,EAAA3sD,WAAA,SAAAgzB,EAAAzmF,EAAA4zD,GACA7hF,KAAAi5B,QAAA,GAAAyoD,WAAAgzB,EAAAzmF,EAAA4zD,GAEA7hF,KAAAouI,oBAAA15B,EAAAzmF,IAGAogH,EAAAW,qBAAA,SAAA53G,GACA,IAAAunC,EAAAvnC,EAAA63G,KACArwE,EAAAxnC,EAAA+3G,KACAn5B,EAAA5+E,EAAA83G,MACAjyG,EAAA7F,EAAA23G,IACAphE,EAAAv2C,EAAAxX,SACAm/C,EAAAmvE,EAAAnvE,YACAuC,EAAA4sE,EAAA5sE,sBACAqM,EAAA,GAAA5O,EAAAJ,EAAA,GAAAq3C,EAAA,GAAAp3C,EAAA,GAAA3hC,GACA0wC,EAAA,GAAA5O,EAAAJ,EAAA,GAAAq3C,EAAA,GAAAp3C,EAAA,GAAA3hC,GAEA,IAAA+sE,EAAA1oC,EAAA3C,EAAA,GAAAq3C,EAAA,GAAAp3C,EAAA,GAAA3hC,GACAgtE,EAAA3oC,EAAA3C,EAAA,GAAAq3C,EAAA,GAAAp3C,EAAA,GAAA3hC,GACA7F,EAAAlM,UAAAvc,KAAAw3F,MAAA8D,EAAAD,GAAAr7F,KAAA4U,GAAA,EACA6T,EAAAhpB,QAAA,GAGAigI,EAAAr7H,aAAA,SAAA0hG,EAAAzmF,GACAjuB,KAAAi5B,QAAA,GAAAjmB,aAAA0hG,EAAAzmF,GACA,IAAAqgH,EAAA55B,EAAA54D,aAAA7tB,GAAAzhB,SAAA,UAEAxM,KAAAuuI,uBAAA75B,EAAA45B,EAAArgH,IAGApqB,EAAA9C,SAAAotI,EAAAvpI,EAAA+Y,OACA,IAAAyjB,EAAA+sG,EACAh2G,EAAA93B,QAAA+gC,mBClMA,IAAAx8B,EAAclB,EAAQ,KAEtBG,EAAaH,EAAQ,KA+BrB,SAAAua,EAAAy2F,EAAAzmF,EAAA4zD,GACAj9E,EAAA+Y,MAAAtgB,KAAA2C,MAEAA,KAAAovI,gBAAA16B,EAAAzmF,EAAA4zD,GAGA,IAAAwtD,EAAApxH,EAAA/hB,UAEAmzI,EAAAD,gBAAA,SAAA16B,EAAAzmF,EAAA4zD,GAEA,IAAAz2D,EAAAspF,EAAAr4D,cAAApuB,GACAqJ,EAAA,IAAA1yB,EAAAqZ,SAAA,CACAuJ,MAAA,CACA4D,YAGAprB,KAAAmQ,IAAAmnB,GAEAt3B,KAAAo3G,iBAAA1C,EAAAzmF,EAAA4zD,IAGAwtD,EAAA3tD,WAAA,SAAAgzB,EAAAzmF,EAAA4zD,GACA,IAAA9wE,EAAA2jG,EAAAhjE,UACApa,EAAAt3B,KAAAi5B,QAAA,GACAh7B,EAAA,CACAupB,MAAA,CACA4D,OAAAspF,EAAAr4D,cAAApuB,KAGArpB,EAAAgiB,YAAA0Q,EAAAr5B,EAAA8S,EAAAkd,GAEAjuB,KAAAo3G,iBAAA1C,EAAAzmF,EAAA4zD,IAGAwtD,EAAAj4B,iBAAA,SAAA1C,EAAAzmF,EAAA4zD,GACA,IAAAvqD,EAAAt3B,KAAAi5B,QAAA,GACAgzC,EAAAyoC,EAAA54D,aAAA7tB,GACAqpF,EAAA5C,EAAAtjG,cAAA6c,EAAA,SACAkI,EAAA0rD,KAAA1rD,UACAw+E,EAAA9yB,KAAA8yB,eAEA9yB,IAAA6yB,EAAA5/D,gBACA3e,EAAA81C,EAAAz/D,SAAA,aAAA6gE,eACAsnC,EAAA1oC,EAAAz/D,SAAA,sBAAA6gE,gBAGA/1C,EAAAwnD,SAAAj7E,EAAArF,SAAA,CACAmtB,eAAA,EACAnL,KAAA,OACAD,OAAA+2F,GACGnhF,IACHmB,EAAA7W,WAAAk0F,EACA/vG,EAAAsjB,cAAAloB,OAGAqvI,EAAAr8H,aAAA,SAAA0hG,EAAAzmF,GACAjuB,KAAAi5B,QAAA,GACA4L,SAAA,SAAA6vE,EAAAr4D,cAAApuB,KAGApqB,EAAA9C,SAAAkd,EAAArZ,EAAA+Y,OACA,IAAAyjB,EAAAnjB,EACAka,EAAA93B,QAAA+gC,mBC/FA,IAqBAA,EAAA,CACAoqC,WAAA,QACAp4D,KAvB0B1P,EAAQ,IAuBlCk2D,GACA7vB,MAAA,SAAAh5B,GACA,IAAAnG,EAAAmG,EAAAL,iBACA4+H,EAAAv+H,EAAA5Q,IAAA,YACAovI,EAAAx+H,EAAAu8B,gBAAAkvC,MAgEA,OACA3hB,SA/DA,SAAA1iD,EAAAu8F,GACA,IAAA86B,EAAA,GAEA,GAAAD,EAAA,CACA,IAAAnkH,EACAu3D,EAAAxqE,EAAA01B,IAAA11B,EAAA89B,MAEA,GAAAq5F,EAAA,CAGA,IAFA,IAAAG,EAAA,EAEAlyI,EAAA4a,EAAA89B,MAAoC14C,EAAA4a,EAAA01B,IAAgBtwC,IACpDkyI,GAAA1+H,EAAA2+H,mBAAAnyI,GAGA6tB,EAAA,IAAAyQ,aAAA8mD,EAAA,EAAA8sD,QAEArkH,EAAA,IAAAyQ,aAAA,EAAA8mD,GAGA,IAAAn/E,EAAA,EACAqxG,EAAA,GAEA,IAAAt3G,EAAA4a,EAAA89B,MAAkC14C,EAAA4a,EAAA01B,IAAgBtwC,IAAA,CAClD,IAAAC,EAAAuT,EAAA4+H,cAAApyI,EAAAiyI,GAEAF,IACAlkH,EAAA5nB,KAAAhG,GAGA,QAAAyhC,EAAA,EAAyBA,EAAAzhC,EAASyhC,IAClC41E,EAAAjqG,EAAAk4E,YAAA0sD,EAAAvwG,IAAA,EAAA41E,GACAzpF,EAAA5nB,KAAAqxG,EAAA,GACAzpF,EAAA5nB,KAAAqxG,EAAA,GAIAH,EAAAv4D,UAAA,cAAA/wB,QAEA,IAAA7tB,EAAA4a,EAAA89B,MAAkC14C,EAAA4a,EAAA01B,IAAgBtwC,IAAA,CAClD,IAAA0uE,EAAAyoC,EAAA54D,aAAAv+C,GAEAw3G,GADAv3G,EAAAuT,EAAA4+H,cAAApyI,EAAAiyI,GACA,IAEA,GAAAF,EACA,QAAA38G,EAAA,EAA2BA,EAAAn1B,EAASm1B,IACpCoiF,EAAAtzG,KAAAmJ,EAAAk4E,YAAA0sD,EAAA78G,SAEW,CACXoiF,EAAA,GAAAnqG,EAAAk4E,YAAA0sD,EAAA,IACAz6B,EAAA,GAAAnqG,EAAAk4E,YAAA0sD,EAAA,IACA,IAAAzE,EAAA9+D,EAAA9rE,IAAA,wBAEA4qI,IACAh2B,EAAA,KAAAA,EAAA,MAAAA,EAAA,UAAAA,EAAA,MAAAA,EAAA,OAAAg2B,GAAAh2B,EAAA,MAAAA,EAAA,UAAAA,EAAA,MAAAA,EAAA,OAAAg2B,IAIAr2B,EAAAp4D,cAAA/+C,EAAAw3G,QAUA58E,EAAA93B,QAAA+gC,mBChGA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAqBR4xB,EAAA/Y,oBAAA,CACAhd,KAAA,4BChCA,IAAAsE,EAAaH,EAAQ,KA6ErBrD,EAAA2e,OAhDA,SAAAklC,EAAAnsC,GACAA,KAAA,GACA,IAAA2xD,EAAAxlB,EAAAxzC,iBACAixC,EAAAuC,EAAAvC,KACA3iC,EAAA,GACAuxF,EAAA5uD,EAAA/hC,SACA4Y,EAAAmpB,EAAAnpB,OACAzZ,EAAA2qD,EAAAsZ,UACAu+C,EAAA,CAAAxiH,EAAA/O,EAAA+O,EAAA/O,EAAA+O,EAAAtX,MAAAsX,EAAA9O,EAAA8O,EAAA9O,EAAA8O,EAAArX,QACAkoI,EAAA,CACAC,WAAA,CACA3gI,IAAAqyH,EAAA,GACAnyH,OAAAmyH,EAAA,IAEAuO,SAAA,CACA9gI,KAAAuyH,EAAA,GACApyH,MAAAoyH,EAAA,KAGAviH,EAAAY,SAAA,cAAA4Y,EAAAo3G,EAAAE,SAAAv/B,GAAAgxB,EAAA,kBAAA/oG,EAAAo3G,EAAAC,WAAAt/B,GAAAgxB,EAAA,IAKAviH,EAAAkM,SAAAvc,KAAA4U,GAAA,EAJA,CACAssH,WAAA,EACAC,SAAA,GAEAt3G,GAOAxZ,EAAA2tD,eAAA3tD,EAAA0tD,cAAA1tD,EAAAytD,cANA,CACAv9D,KAAA,EACAE,OAAA,EACAD,MAAA,EACAH,MAAA,GAEAuhG,GAEArsD,EAAA/jD,IAAA,qBACA6e,EAAA0tD,eAAA1tD,EAAA0tD,eAGA7oE,EAAA5B,SAAA8V,EAAA4pH,YAAAz9E,EAAA/jD,IAAA,uBACA6e,EAAA2tD,gBAAA3tD,EAAA2tD,gBAGA,IAAA4B,EAAAx2D,EAAA82B,OAIA,OAHA,MAAA0/B,MAAArqB,EAAA/jD,IAAA,qBACA6e,EAAAuvD,cAAA,QAAAgiC,GAAAhiC,IACAvvD,EAAA2C,GAAA,EACA3C,oBC1EA,IAAAnb,EAAaH,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAqExBy0B,EAAA93B,QA1CA,SAAAmK,EAAAC,GACA,IAEAsG,EAFAsa,EAAA,GACAjT,EAAA5N,EAAA4N,YAGA,SAAAA,KAAArH,EAAAtG,EAAA4N,iBAAAD,IACA,OACAiT,MAAA,IAIA,IAAA7pB,EAAAuP,EAAAC,UACAG,EAAAtM,EAAAiuB,eAAAtxB,EAAAgJ,GAEA,SAAA2G,KAAA,GAAAtN,EAAAvF,QAAA6S,GACA,OACAka,MAAA,IAIA,IAAA5iB,EAAAjH,EAAAq7C,iBAAA1rC,GACAvG,EAAAmG,EAAAL,iBAEA,GAAAK,EAAAo8B,mBACA9hB,EAAAta,EAAAo8B,mBAAAh8B,IAAA,QACG,GAAAvG,KAAAk4E,YACHz3D,EAAAzgB,EAAAk4E,YAAAthF,EAAA22C,UAAAt0C,EAAAhH,IAAA+N,EAAAuR,WAAA,SAAA6vB,GACA,OAAAxqC,EAAA8pC,aAAAU,KACK76B,GAAA,aACF,GAAA1I,EAAA,CAEH,IAAAsW,EAAAtW,EAAA0W,kBAAAliB,QACA8hB,EAAAS,eAAA/W,EAAAoe,WACAwE,EAAA,CAAAtM,EAAA/O,EAAA+O,EAAAtX,MAAA,EAAAsX,EAAA9O,EAAA8O,EAAArX,OAAA,GAGA,OACA2jB,QACA5iB,wBCnEA,IAAA5E,EAAaH,EAAQ,KAErBK,EAAUL,EAAQ,KAwBlB2iC,GAAArT,EAtBatvB,EAAQ,KAErBsvB,aAqBAp0B,EAAAiF,EAAAjF,KA4DA,SAAAmxI,EAAAC,EAAAt3H,EAAAZ,GACAk4H,EAAAvpI,QAAA,aAAAqR,GAGA,SAAAm4H,EAAAC,EAAAF,EAAAt3H,EAAAZ,GACAk4H,EAAAvpI,QAAAypI,EAAAx3H,EAAAZ,GAgDAzX,EAAA0b,SAxGA,SAAAje,EAAAqK,EAAA1B,GACA,IAAA1C,EAAAkT,KAAA,CAIA,IAAA7P,EAAAe,EAAA2D,QACAu6B,EAAAj/B,GAAAw+G,UAAAv/E,EAAAj/B,GAAAw+G,QAAA,IAMA,SAAAx+G,EAAAe,GAWA,SAAAgoI,EAAAn3H,EAAAla,GACAsI,EAAAwC,GAAAoP,EAAA,SAAAN,GACA,IAAA03H,EAkCA,SAAAjoI,GACA,IAAAkoI,EAAA,CACAC,QAAA,GACAC,QAAA,IAkBA,OACAz4H,eAZA,SAAAA,EAAArG,GACA,IAAAk2C,EAAA0oF,EAAA5+H,EAAAlS,MAEAooD,EACAA,EAAAlmD,KAAAgQ,IAEAA,EAAAqG,iBACA3P,EAAA2P,eAAArG,KAMA4+H,YAzDAG,CAAAroI,GACAvJ,EAAAynC,EAAAj/B,GAAAw+G,QAAA,SAAAoqB,GACAA,GAAAlxI,EAAAkxI,EAAAt3H,EAAA03H,EAAAt4H,kBAOA,SAAAu4H,EAAAloI,GACA,IAEAsoI,EAFAC,EAAAL,EAAAC,QAAA7yI,OACAkzI,EAAAN,EAAAE,QAAA9yI,OAGAizI,EACAD,EAAAJ,EAAAC,QAAAI,EAAA,GACGC,IACHF,EAAAJ,EAAAE,QAAAI,EAAA,IAGAF,IACAA,EAAA34H,eAAA,KACA3P,EAAA2P,eAAA24H,IAlBAG,CAAAR,EAAAC,SAAAloI,KAhBAk+B,EAAAj/B,GAAAypI,cAIAxqG,EAAAj/B,GAAAypI,aAAA,EACAV,EAAA,QAAAtsI,EAAAjC,MAAAquI,EAAA,UACAE,EAAA,YAAAtsI,EAAAjC,MAAAquI,EAAA,cAEAE,EAAA,YAAAJ,IAdAe,CAAA1pI,EAAAe,IACAk+B,EAAAj/B,GAAAw+G,QAAA9nH,KAAAuoC,EAAAj/B,GAAAw+G,QAAA9nH,GAAA,KACA2I,YAgGApG,EAAA0wI,WAdA,SAAAjzI,EAAAqK,GACA,IAAApE,EAAAkT,KAAA,CAIA,IAAA7P,EAAAe,EAAA2D,SACAu6B,EAAAj/B,GAAAw+G,SAAA,IAAuC9nH,KAGvCuoC,EAAAj/B,GAAAw+G,QAAA9nH,GAAA,yBCxIA,IAAA8G,EAAclB,EAAQ,KAEtB+8G,EAAsB/8G,EAAQ,KAE9BstI,EAAiBttI,EAAQ,KAEzButI,EAA0BvtI,EAAQ,KAElCkuE,EAAeluE,EAAQ,KAqBvBwtI,EAAAzwB,EAAA9/G,OAAA,CAIAshH,aAAA,SAAAtf,EAAArjG,EAAA4kD,EAAAquB,EAAApqE,GACA,IAAAw5C,EAAAuC,EAAAvC,KACAjrB,EAAAirB,EAAAjrB,KACAgtE,EAAAnxB,EAAApyE,IAAA,QACAmgH,EAAAzQ,EAAAn5E,EAAAirB,GAAAy0C,aAAAz0C,GAAAq1C,kBACAm6C,EAAAxvF,EAAAo1C,cAAAp1C,EAAAghB,YAAArjE,GAAA,IAEA,GAAAokG,GAAA,SAAAA,EAAA,CACA,IAAAzK,EAAA+3C,EAAAvtC,aAAAlxB,GACAswC,EAAAuuB,EAAA1tC,GAAA/hD,EAAAwvF,EAAA7wB,EAAArnB,GACA4pB,EAAA9yG,MAAAkpF,EACA0J,EAAAuf,WAAAW,EAAAtjH,KACAojG,EAAAzqE,QAAA2qF,EAGA,IAAArf,EAAAytC,EAAAjyH,OAAA0X,EAAAjmB,MAAAyzC,GACA8sF,EAAAntC,kCAAAvkG,EAAAqjG,EAAAa,EAAAt/C,EAAAquB,EAAApqE,IAMAm7G,mBAAA,SAAAhkH,EAAA4kD,EAAAquB,GACA,IAAAixB,EAAAytC,EAAAjyH,OAAAklC,EAAAvC,KAAAjrB,KAAAjmB,MAAAyzC,EAAA,CACAy9E,aAAA,IAGA,OADAn+B,EAAAl1B,YAAAiE,EAAApyE,IAAA,iBACA,CACAyf,SAAAoxH,EAAAztC,uBAAAr/C,EAAAvC,KAAAriD,EAAAkkG,GACAt4E,SAAAs4E,EAAAt4E,UAAAs4E,EAAA72B,eAAA,EAAAh+D,KAAA4U,GAAA,KAOAw/F,sBAAA,SAAAl8F,EAAA8uC,EAAAzR,EAAAquB,GACA,IAAA5wB,EAAAuC,EAAAvC,KACAjrB,EAAAirB,EAAAjrB,KACAorB,EAAAH,EAAAq1C,iBAAA,GACAspB,EAAAzQ,EAAAn5E,EAAAirB,GAAAy0C,aAAAz0C,GAAAq1C,kBACAxjD,EAAA,MAAAmO,EAAA3V,IAAA,IACAqlG,EAAAxqH,EAAAjH,SACAyxH,EAAA79F,IAAAmiB,EAAAniB,GACA69F,EAAA79F,GAAA7kC,KAAAC,IAAAkzC,EAAA,GAAAuvF,EAAA79F,IACA69F,EAAA79F,GAAA7kC,KAAAG,IAAAgzC,EAAA,GAAAuvF,EAAA79F,IACA,IAAA89F,GAAAhxB,EAAA,GAAAA,EAAA,MACAmD,EAAA,CAAA6tB,KACA7tB,EAAAjwE,GAAA69F,EAAA79F,GAOA,OACA5zB,SAAAyxH,EACAnmH,SAAArE,EAAAqE,SACAu4F,cACAC,cATA,EACA1gB,cAAA,UACK,CACLD,MAAA,WAMAvvD,OAKA,SAAAq8D,EAAAn5E,EAAAirB,GACA,IAAA5pC,EAAA,GAEA,OADAA,EAAA4pC,EAAA3V,IAAA,aAAA2V,EAAA54C,MACA2tB,EAAAm5E,aAAA93F,GAGA,IAAAq5H,EAAA,CACA95G,KAAA,SAAAqqB,EAAAwvF,EAAA7wB,EAAArnB,GACA,IAAA8c,EAAAi7B,EAAAjtC,cAAA,CAAAotC,EAAA7wB,EAAA,KAAA6wB,EAAA7wB,EAAA,IAAAixB,EAAA5vF,IAKA,OAJA/8C,EAAA0iB,qBAAA,CACAE,MAAAuuF,EACAhmG,MAAAkpF,IAEA,CACA15F,KAAA,OACAioB,MAAAuuF,IAGAy7B,OAAA,SAAA7vF,EAAAwvF,EAAA7wB,EAAArnB,GACA,IAAAnE,EAAAnmF,KAAAG,IAAA,EAAA6yC,EAAAgiB,gBACA9iB,EAAAy/D,EAAA,GAAAA,EAAA,GACA,OACA/gH,KAAA,OACAioB,MAAAwpH,EAAA/sC,cAAA,CAAAktC,EAAAr8C,EAAA,EAAAwrB,EAAA,KAAAxrB,EAAAj0C,GAAA0wF,EAAA5vF,OAKA,SAAA4vF,EAAA5vF,GACA,YAAAA,EAAA3V,IAAA,IAGA4lC,EAAAc,yBAAA,uBAAAw+D,GACA,IAAA9vG,EAAA8vG,EACA/4G,EAAA93B,QAAA+gC,mBCnIA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBsiC,EAAYtiC,EAAQ,KAIpBouB,EAFapuB,EAAQ,KAErBouB,gBAoBA2/G,EAAAn8G,EAAAhZ,qBAAA,CACA/c,KAAA,eACAyb,aAAA,WACAwrB,WAAA,CACAjnC,KAAA,MAQAy7B,YAAA,GAEA1zB,KAAA,SAAA0E,EAAA+X,EAAAtZ,GACAzK,KAAA4mC,qBAAA56B,EAAAvB,GACAuB,EAAAmlG,SAAAnlG,EAAAmlG,UAAA,IAEAlqE,YAAA,SAAAj7B,GACAylI,EAAAl5E,UAAAv4D,KAAA,cAAAgM,IAEAk7B,cAAA,WACAlnC,KAAA0xI,YAAA1xI,KAAAyK,SAEA,IAAAknI,EAAA3xI,KAAA2kE,MAEA,GAAAgtE,EAAA,eAAA3xI,KAAAG,IAAA,iBAGA,IAFA,IAAAyxI,GAAA,EAEAr0I,EAAA,EAAqBA,EAAAo0I,EAAAl0I,OAAuBF,IAAA,CAC5C,IAAAgD,EAAAoxI,EAAAp0I,GAAA4C,IAAA,QAEA,GAAAH,KAAAqjF,WAAA9iF,GAAA,CAEAP,KAAAkxG,OAAA3wG,GACAqxI,GAAA,EACA,QAKAA,GAAA5xI,KAAAkxG,OAAAygC,EAAA,GAAAxxI,IAAA,WAGAuxI,YAAA,SAAAjnI,GACA,IAAAonI,EAAA,GACAC,EAAA,GACArnI,EAAAqtH,cAAA,SAAA/mH,GACA,IAEAghI,EAFAtlG,EAAA17B,EAAAxQ,KAIA,GAHAuxI,EAAArwI,KAAAgrC,GAGA17B,EAAA44B,mBAAA,CACA,IAAAnoC,EAAAuP,EAAA44B,qBACAxO,EAAA35B,EAAAo5C,SAAAp5C,EAAAgrC,SAEA/hC,EAAAohE,iBAAA96D,KACA+gI,IAAAzyI,OAAA87B,IAGAA,EAAA19B,OACAo0I,IAAAxyI,OAAA87B,GAEA42G,GAAA,OAGAA,GAAA,EAGAA,GAAAjgH,EAAA/gB,IACA8gI,EAAApwI,KAAAsP,EAAAxQ,QAQAP,KAAAgyI,gBAAAF,EAGA,IAAA97F,EAAAh2C,KAAAG,IAAA,SAAA0xI,EACAF,EAAA9tI,EAAAhH,IAAAm5C,EAAA,SAAA9kB,GAQA,MANA,kBAAAA,GAAA,kBAAAA,IACAA,EAAA,CACA3wB,KAAA2wB,IAIA,IAAA8U,EAAA9U,EAAAlxB,UAAAyK,UACKzK,MAMLA,KAAA2kE,MAAAgtE,GAMA3gI,QAAA,WACA,OAAAhR,KAAA2kE,OAMAusC,OAAA,SAAA3wG,GACA,IAAA4wG,EAAAnxG,KAAAgM,OAAAmlG,SAGA,cAFAnxG,KAAAG,IAAA,gBAEA,CACA,IAAAqB,EAAAxB,KAAA2kE,MACA9gE,EAAAjF,KAAA4C,EAAA,SAAA0vB,GACAigF,EAAAjgF,EAAA/wB,IAAA,cAIAgxG,EAAA5wG,IAAA,GAMA6wG,SAAA,SAAA7wG,GACA,WAAAP,KAAAG,IAAA,kBACAH,KAAAgM,OAAAmlG,SAAA5wG,IAAA,IAOA8wG,eAAA,SAAA9wG,GACA,IAAA4wG,EAAAnxG,KAAAgM,OAAAmlG,SAEAA,EAAApzG,eAAAwC,KACA4wG,EAAA5wG,IAAA,GAGAP,KAAAmxG,EAAA5wG,GAAA,qBAAAA,IAMA8iF,WAAA,SAAA9iF,GACA,IAAA4wG,EAAAnxG,KAAAgM,OAAAmlG,SACA,QAAAA,EAAApzG,eAAAwC,KAAA4wG,EAAA5wG,KAAAsD,EAAAhD,QAAAb,KAAAgyI,gBAAAzxI,IAAA,GAEA+lC,cAAA,CAEA9tB,OAAA,EAEAD,EAAA,EACAye,MAAA,EAGAwB,OAAA,aACAxpB,KAAA,SAEAE,IAAA,EAKA6zF,MAAA,OACA51F,gBAAA,gBAEA6oB,YAAA,OACAi8G,aAAA,EAEAC,YAAA,EAGAtrF,QAAA,EAGAurF,QAAA,GAEAv8G,UAAA,GAEAw8G,WAAA,GAEAC,cAAA,OACAzvH,UAAA,CAEAzC,MAAA,QAIAmyH,cAAA,EAMAr8G,QAAA,CACAe,MAAA,MAIAoK,EAAAqwG,EACAt5G,EAAA93B,QAAA+gC,mBC1Oc19B,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAIrBg8C,EAFch8C,EAAQ,KAEtBg8C,aAEA96C,EAAclB,EAAQ,KAItB6uI,EAFqB7uI,EAAQ,KAE7B6uI,eAEAC,EAAiB9uI,EAAQ,KAqBzB9B,EAAAiC,EAAAjC,MACAhD,EAAAiF,EAAAjF,KACA+e,EAAA/Y,EAAA+Y,MAEAyjB,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,eACAkzI,iBAAA,EAKAnrI,KAAA,WAKAtH,KAAAkH,MAAAiJ,IAAAnQ,KAAA0yI,cAAA,IAAA/0H,GAMA3d,KAAA2yI,eAMAC,gBAAA,WACA,OAAA5yI,KAAA0yI,eAMA7gI,OAAA,SAAAghI,EAAApoI,EAAAtC,GAGA,GAFAnI,KAAA8yI,aAEAD,EAAA1yI,IAAA,YAIA,IAAA4yI,EAAAF,EAAA1yI,IAAA,SAEA4yI,GAAA,SAAAA,IACAA,EAAA,UAAAF,EAAA1yI,IAAA,sBAAA0yI,EAAA1yI,IAAA,0BAGAH,KAAAgzI,YAAAD,EAAAF,EAAApoI,EAAAtC,GAEA,IAAAuxB,EAAAm5G,EAAAp0C,qBACAw0C,EAAA,CACAxrI,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aAEAi6C,EAAAisF,EAAA1yI,IAAA,WACA+yH,EAAAsf,EAAA/4G,cAAAC,EAAAu5G,EAAArsF,GACAssF,EAAAlzI,KAAAmzI,YAAAN,EAAAE,EAAA7f,GAEAkgB,EAAAZ,EAAA/4G,cAAA51B,EAAArF,SAAA,CACAiJ,MAAAyrI,EAAAzrI,MACAC,OAAAwrI,EAAAxrI,QACKgyB,GAAAu5G,EAAArsF,GACL5mD,KAAAkH,MAAAyf,KAAA,YAAAysH,EAAApjI,EAAAkjI,EAAAljI,EAAAojI,EAAAnjI,EAAAijI,EAAAjjI,IAEAjQ,KAAAkH,MAAAiJ,IAAAnQ,KAAA2yI,cAAAJ,EAAAW,EAAAL,MAMAC,WAAA,WACA9yI,KAAA4yI,kBAAAx4E,YACAp6D,KAAA2yI,eAAA3yI,KAAAkH,MAAA6O,OAAA/V,KAAA2yI,gBAMAK,YAAA,SAAAD,EAAAF,EAAApoI,EAAAtC,GACA,IAAAkrI,EAAArzI,KAAA4yI,kBACAU,EAAAzvI,EAAAV,gBACAowI,EAAAV,EAAA1yI,IAAA,gBACAqT,EAAA,GACA/I,EAAAqtH,cAAA,SAAA/mH,IACAA,EAAA5Q,IAAA,oBAAAqT,EAAA/R,KAAAsP,EAAA9J,MAEArI,EAAAi0I,EAAA7hI,UAAA,SAAAi7D,EAAA96D,GACA,IAAA5Q,EAAA0rE,EAAA9rE,IAAA,QAEA,GAAAH,KAAAyyI,iBAAA,KAAAlyI,GAAA,OAAAA,EAAA,CAQA,IAAAwQ,EAAAtG,EAAA+sH,gBAAAj3H,GAAA,GAEA,IAAA+yI,EAAAnzI,IAAAI,GAMA,GAAAwQ,EAAA,CACA,IAAAvP,EAAAuP,EAAAC,UACAmP,EAAA3e,EAAAoP,UAAA,SAEA,oBAAAuP,IAEAA,IAAApP,EAAA6H,cAAA,KAIA,IAAA46H,EAAAhyI,EAAAoP,UAAA,6BACAsuC,EAAA19C,EAAAoP,UAAA,UAEA5Q,KAAAyzI,YAAAlzI,EAAA4Q,EAAA86D,EAAA4mE,EAAAW,EAAAt0F,EAAA6zF,EAAA5yH,EAAAozH,GAEA3pI,GAAA,QAAAhI,EAAA8xI,EAAAnzI,EAAA4H,IAAAyB,GAAA,YAAAhI,EAAA+xI,EAAA5iI,EAAA,KAAA5I,EAAAqL,IAAA5J,GAAA,WAAAhI,EAAAgyI,EAAA7iI,EAAA,KAAA5I,EAAAqL,IACA8/H,EAAApzI,IAAAK,GAAA,QAGAkK,EAAAqtH,cAAA,SAAA/mH,GAEA,IAAAuiI,EAAAnzI,IAAAI,IAIAwQ,EAAA44B,mBAAA,CACA,IAAAnoC,EAAAuP,EAAA44B,qBACA1b,EAAAzsB,EAAAuxB,YAAAxyB,GAEA,GAAA0tB,EAAA,EACA,OAGA,IAAA9N,EAAA3e,EAAA4P,cAAA6c,EAAA,SAGAjuB,KAAAyzI,YAAAlzI,EAAA4Q,EAAA86D,EAAA4mE,EAFA,YAEA,KAAAE,EAAA5yH,EAAAozH,GAGA3pI,GAAA,QAAAhI,EAAA8xI,EAAAnzI,EAAA4H,IACAyB,GAAA,YAAAhI,EAAA+xI,EAAA5iI,EAAAxQ,EAAA4H,EAAAqL,IAAA5J,GAAA,WAAAhI,EAAAgyI,EAAA7iI,EAAAxQ,EAAA4H,EAAAqL,IACA8/H,EAAApzI,IAAAK,GAAA,KAESP,WA1DTqzI,EAAAljI,IAAA,IAAAwN,EAAA,CACAyb,SAAA,MA2DKp5B,OAELyzI,YAAA,SAAAlzI,EAAA4Q,EAAA86D,EAAA4mE,EAAAW,EAAAt0F,EAAA6zF,EAAA5yH,EAAAozH,GACA,IAAA39G,EAAAi9G,EAAA1yI,IAAA,aACAiyI,EAAAS,EAAA1yI,IAAA,cACAkyI,EAAAQ,EAAA1yI,IAAA,iBACAyrE,EAAAinE,EAAA1yI,IAAA,oBACAkjF,EAAAwvD,EAAAxvD,WAAA9iF,GACAszI,EAAA,IAAAl2H,EACAkF,EAAAopD,EAAAz/D,SAAA,aACAsnI,EAAA7nE,EAAA9rE,IAAA,QACA4zI,EAAA9nE,EAAAz/D,SAAA,WACAwnI,EAAAD,EAAAhwH,YAOA,GALAyvH,EAAAM,GAAAN,EACAK,EAAA1jI,IAAAuvC,EAAA8zF,EAAA,IAAA59G,EAAAw8G,EAAA/uD,EAAAljE,EAAAkyH,EACA,MAAAzmE,QAGAkoE,GAAA50F,IACAA,IAAAs0F,GAAA,QAAAt0F,GAAA,CACA,IAAAH,EAAA,GAAAqzF,EAEA,SAAAlzF,IACAA,EAAA,UAIA20F,EAAA1jI,IAAAuvC,EAAAR,GAAAtpB,EAAAmpB,GAAA,GAAAqzF,EAAArzF,GAAA,EAAAA,IAAAskC,EAAAljE,EAAAkyH,EACA,MAAAzmE,OAGA,IAAA6iB,EAAA,SAAAskD,EAAAn9G,EAAA,KACA/Q,EAAAkuH,EACA1hE,EAAAwhE,EAAA1yI,IAAA,aACAixE,EAAA7wE,EAEA,kBAAA8wE,KACAD,EAAAC,EAAApuE,QAAA,SAAyC,MAAA1C,IAAA,IACpC,oBAAA8wE,IACLD,EAAAC,EAAA9wE,IAGAszI,EAAA1jI,IAAA,IAAAvL,EAAAgZ,KAAA,CACA7N,MAAAnL,EAAA+d,aAAA,GAAoCE,EAAA,CACpCuG,KAAAgoD,EACAphE,EAAAy+E,EACAx+E,EAAAmiI,EAAA,EACAjxH,SAAAkiE,EAAAxgE,EAAAosD,eAAAojE,EACAxtH,YACAC,kBAAA,cAIA,IAAAmvH,EAAA,IAAArvI,EAAAsZ,KAAA,CACAsJ,MAAAqsH,EAAA10H,kBACAi/D,WAAA,EACAnoD,QAAA89G,EAAA5zI,IAAA,QAAA0D,EAAAlD,OAAA,CACAywE,QAAA7wE,EAEA8wE,UAAA2iE,EAAA7zI,IAAA,4BACA,OAAAI,GAEA0wE,gBAAA,CACAljE,cAAA,SACAmmI,YAAArB,EAAAj9H,eACArV,OACAw+B,MAAA,WAEOg1G,EAAA/nI,QAAA,OAUP,OARA6nI,EAAA1jI,IAAA8jI,GACAJ,EAAAh7G,UAAA,SAAA7W,GACAA,EAAAjX,QAAA,IAEAkpI,EAAAlpI,QAAAwoI,EACAvzI,KAAA4yI,kBAAAziI,IAAA0jI,GACAjvI,EAAAsjB,cAAA2rH,GACAA,EAAAM,kBAAAhjI,EACA0iI,GAMAV,YAAA,SAAAN,EAAAE,EAAA7f,GACA,IAAAmgB,EAAArzI,KAAA4yI,kBAEAJ,EAAAl5G,IAAAu5G,EAAA1yI,IAAA,UAAAkzI,EAAAR,EAAA1yI,IAAA,WAAA+yH,EAAAzrH,MAAAyrH,EAAAxrH,QACA,IAAA0sI,EAAAf,EAAAl0H,kBAEA,OADAk0H,EAAA1sH,KAAA,aAAAytH,EAAApkI,GAAAokI,EAAAnkI,IACAjQ,KAAAkH,MAAAiY,qBAIA,SAAAu0H,EAAAnzI,EAAA4H,GACAA,EAAA2P,eAAA,CACAvY,KAAA,qBACAgB,SAIA,SAAAozI,EAAA5iI,EAAAsjI,EAAAlsI,EAAAqL,GAEA,IAAA/K,EAAAN,EAAA2D,QAAAyB,QAAAC,iBAAA,GAEA/E,KAAAyO,eACA/O,EAAA2P,eAAA,CACAvY,KAAA,YACAktC,WAAA17B,EAAAxQ,KACAA,KAAA8zI,EACA7gI,oBAKA,SAAAogI,EAAA7iI,EAAAsjI,EAAAlsI,EAAAqL,GAEA,IAAA/K,EAAAN,EAAA2D,QAAAyB,QAAAC,iBAAA,GAEA/E,KAAAyO,eACA/O,EAAA2P,eAAA,CACAvY,KAAA,WACAktC,WAAA17B,EAAAxQ,KACAA,KAAA8zI,EACA7gI,oBAKA2kB,EAAA93B,QAAA+gC,mBChUA,IAAAgI,EAAc1lC,EAAQ,KAEtB+1B,EAAA2P,EAAA3P,cACA66G,EAAAlrG,EAAA9P,IACAa,EAAAiP,EAAAjP,gBAEA/B,EAAiB10B,EAAQ,KAEzBkB,EAAclB,EAAQ,KAgEtBrD,EAAA2e,OAnCA,SAAA9X,EAAAoK,EAAAnJ,GACA,IAAAosI,EAAAjjI,EAAAmtF,qBACA73C,EAAAt1C,EAAAnR,IAAA,WACA8yI,EAAA,CACAxrI,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aAEAoS,EAAA0a,EAAA86G,EAAAtB,EAAArsF,GACA0tF,EAAAhjI,EAAAnR,IAAA,UAAA+G,EAAAoK,EAAAnR,IAAA,WAAA4e,EAAAtX,MAAAsX,EAAArX,QACAyyB,EAAAjzB,EAAAqtI,EAAAtB,EAAArsF,IA2BAvmD,EAAAkyI,eAxBA,SAAAxzH,EAAAzN,GACA,IAAAs1C,EAAAxuB,EAAA31B,kBAAA6O,EAAAnR,IAAA,YACA4P,EAAAuB,EAAA6vE,aAAA,qBAkBA,OAjBApxE,EAAAyQ,KAAAlP,EAAAnR,IAAA,mBACA4e,EAAA,IAAAna,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAA+O,EAAA/O,EAAA42C,EAAA,GACA32C,EAAA8O,EAAA9O,EAAA22C,EAAA,GACAn/C,MAAAsX,EAAAtX,MAAAm/C,EAAA,GAAAA,EAAA,GACAl/C,OAAAqX,EAAArX,OAAAk/C,EAAA,GAAAA,EAAA,GACAhJ,EAAAtsC,EAAAnR,IAAA,iBAEA4P,QACAhF,QAAA,EACA4W,IAAA,sBC/Dcje,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBmB,EAAgBnB,EAAQ,KAExB8wI,EAAkB9wI,EAAQ,KAqB1B9E,EAAAiF,EAAAjF,KACAiC,EAAAgD,EAAAhD,QACAe,EAAAiC,EAAAjC,MACA6yI,EAAA,8BAGAC,EAAA,+EA4DA,SAAAC,EAAA3oI,EAAAvB,EAAAsN,GAKA,IAAA68H,EAAA50I,KAAA60I,gBAAA,GACAC,EAAA,GACAC,EAAApqI,EAAAF,EAAAuB,GACApN,EAAAo2I,EAAA,SAAAC,EAAA11I,KACAwY,MAAAm9H,SAAAr0I,EAAAkX,EAAAm9H,QAAA31I,IAAA,IACA01I,EAAAF,EAAAH,EAAAE,KAKA,IAAAn8E,EAAAg8E,EAAAz4I,UA6GA,SAAAi5I,EAAAC,GAEA,OADAA,EAAA,GAAAA,EAAA,IAAAA,EAAAviE,UACAuiE,EAGA,SAAAzqI,EAAAF,EAAAuB,GACA,OAAAnH,EAAA8F,YAAAF,EAAAuB,EAAA,CACAqnB,iBAAAqhH,IAlHA/7E,EAAA08E,gBAAA,SAAAh6B,EAAA5wG,GACAzK,KAAAs1I,kBAAAj6B,EAAA5wG,EAAA,SAAA8qI,EAAAC,EAAA5qI,GAGA,IAFA2qI,EAAAE,cAAAF,EAAAE,YAAA,KAAAh0I,KAAA+zI,IAEAD,EAAAC,WAAA,CACAD,EAAAC,aAMA,IAAAr4I,EAAAu4I,EAAAH,EAAAt7B,WAAA,EAAArvG,EAAA4qI,GACAD,EAAAI,cAAA,CACAnyI,OAAAoyI,EAAAL,EAAAt7B,WAAA98G,EAAA+E,OAAAqzI,EAAAppH,MAAA,OACA0pH,SAAA14I,EAAA04I,cAMAl9E,EAAA28E,kBAAA,SAAAj6B,EAAA5wG,EAAA3L,GACAF,EAAAy8G,EAAA,SAAAk6B,GACA,IAAAO,EAAA91I,KAAA+1I,eAAAR,EAAA9qI,GAEAqrI,IAAA,IAAAA,GACAjyI,EAAAjF,KAAAk3I,EAAAE,WAAA,SAAAprI,GACA,IAAAzN,EAAAu4I,EAAAH,EAAAt7B,WAAA,EAAArvG,EAAA2qI,EAAAppH,OACArtB,EAAAy2I,EAAAp4I,EAAA+E,OAAA0I,EAAAH,MAGGzK,OAGH24D,EAAAs9E,eAAA,SAAA56B,EAAA5wG,GACA7L,EAAAy8G,EAAA,SAAAk6B,GACA,IAAAO,EAAA91I,KAAA+1I,eAAAR,EAAA9qI,GAGA,GAFA8qI,EAAAppH,MAAAopH,EAAAppH,OAAA,GAEA2pH,IAAA,IAAAA,EAAA,CACAP,EAAAt6B,QAAA66B,EAAA76B,QAOA,IAAA99G,EAAAu4I,EAAAH,EAAAt7B,WAAA,EAAA67B,EAAAlrI,SAAA2qI,EAAAC,YACAU,EAAAX,EAAAI,cACAJ,EAAAppH,MAAA+pH,EAAAN,EAAAL,EAAAt7B,WAAA98G,EAAA+E,OAAAg0I,EAAA1yI,OA8NA,SAAA2yI,EAAAC,GACA,IAAAC,EAAAC,EAAAH,GACAI,EAAAD,EAAAF,GACAI,EAAA,CAAAH,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,IAGA,OAFAnpH,MAAAopH,EAAA,MAAAA,EAAA,MACAppH,MAAAopH,EAAA,MAAAA,EAAA,MACAA,EApOAC,CAAAt5I,EAAA04I,SAAAK,EAAAL,WAAA14I,EAAA+E,SAEGlC,OAGH24D,EAAA+9E,cAAA,SAAAvuI,EAAAwuI,GACA,OAAA9yI,EAAAhH,IAAAmD,KAAA60I,gBAAA,SAAAiB,GACA,IAAA/2H,EAAA+2H,EAAAc,eACA,OACA37B,QAAA66B,EAAA76B,QACAwD,iBAAAk4B,KAAAb,GACA93B,SAAAw2B,EAAApI,sBAAArtH,GACAg8F,iBAAAy5B,EAAA/H,yBAAA1tH,EAAA5W,EAAA2tI,EAAA56C,eACAqlB,0BAAAi0B,EAAAlI,2BAAAvtH,OAKA45C,EAAAk+E,cAAA,SAAAtB,EAAAxkI,EAAAtG,GAGA,IAAAqrI,EAAA91I,KAAA+1I,eAAAR,EAAA9qI,GACA,WAAAqrI,MAAAj1I,EAAAi1I,EAAAE,WAAAjlI,EAAAL,mBAAA,GAaAioD,EAAAo9E,eAAA,SAAAR,EAAA9qI,GAIA,IAHA,IAAAmqI,EAAA50I,KAAA60I,gBACAE,EAAApqI,EAAAF,EAAA8qI,GAEAh4I,EAAA,EAAiBA,EAAAq3I,EAAAn3I,OAA2BF,IAAA,CAC5C,IAAAu4I,EAAAlB,EAAAr3I,GACAu5I,EAAAvB,EAAAt6B,QAEA,GAAA67B,GACA,GAAAhB,EAAA76B,UAAA67B,EACA,OAAAhB,OAGA,IAAAv4I,EAAA,EAAqBA,EAAAw5I,EAAAt5I,OAA+BF,IACpD,GAAAw5I,EAAAx5I,GAAAw3I,EAAAe,GACA,OAAAA,EAMA,UAcA,IAAAd,EAAA,CACAt+G,KAAA,SAAAq+G,EAAAH,GACA,IAAAoC,EAAAjC,EAAAiC,YACAC,EAAAlC,EAAAkC,YACAC,EAAAnC,EAAAmC,WAEAC,EAAAtzI,EAAAV,gBACAi0I,EAAA,GACAC,EAAA,IAEAL,GAAAC,GAAAC,KAIAt4I,EAAAo4I,EAAA,SAAA9yF,GACA,IAAA6+B,EAAA7+B,EAAAvC,KAAAjrB,KAAAjmB,MACA0mI,EAAAj3I,IAAA6iF,EAAA97E,GAAA87E,GACAq0D,EAAAr0D,EAAA97E,KAAA,IAEArI,EAAAq4I,EAAA,SAAA/yF,GACA,IAAA6+B,EAAA7+B,EAAAvC,KAAAjrB,KAAAjmB,MACA0mI,EAAAj3I,IAAA6iF,EAAA97E,GAAA87E,GACAs0D,EAAAt0D,EAAA97E,KAAA,IAEArI,EAAAs4I,EAAA,SAAAn0D,GACAo0D,EAAAj3I,IAAA6iF,EAAA97E,GAAA87E,GACAq0D,EAAAr0D,EAAA97E,KAAA,EACAowI,EAAAt0D,EAAA97E,KAAA,IAEAkwI,EAAAv4I,KAAA,SAAAmkF,GACA,IAAArsD,EAAAqsD,EAAAryE,iBACA4mI,EAAA,GACA14I,EAAA83B,EAAAq5E,gBAAA,SAAA5Z,EAAAptF,IACAlI,EAAAm2I,EAAA7gD,EAAA8G,QAAA,KAAAxsF,QAAA,GAAA5P,EAAAo2I,EAAA9gD,EAAA8G,QAAA,KAAAxsF,QAAA,IACA6mI,EAAA71I,KAAA00F,KAGAy+C,EAAAnzI,KAAA,CACAw5G,QAAA,SAAAl4B,EAAA97E,GACA87E,YACAmY,cAAAnY,EAEAn4E,SAAA0sI,EAAA,GACAtB,WAAAsB,EACAV,aAAAW,EAAA7gH,KACA8gH,cAAAJ,EAAAr0D,EAAA97E,IACAwwI,cAAAJ,EAAAt0D,EAAA97E,UAIA63F,IAAA,SAAAi2C,EAAAH,GACAh2I,EAAAm2I,EAAA2C,UAAA,SAAA55C,GACA,IAAAlzF,EAAAkzF,EAAAptF,iBACAkkI,EAAAnzI,KAAA,CACAw5G,QAAA,QAAAnd,EAAA72F,GACA62F,WACA5C,cAAA4C,EACAlzF,WACAorI,WAAA,CAAAprI,GACAgsI,aAAAW,EAAAz4C,UAKAi4C,EAAA,CACA,SAAAhC,EAAAe,GACA,IAAA7lC,EAAA8kC,EAAA9kC,WACAC,EAAA6kC,EAAA7kC,WACAntB,EAAAgyD,EAAAhyD,UAGA,OAFAA,GAAAktB,IAAAltB,EAAAktB,EAAAtuD,KAAAjrB,KAAAjmB,QACAsyE,GAAAmtB,IAAAntB,EAAAmtB,EAAAvuD,KAAAjrB,KAAAjmB,OACAsyE,OAAA+yD,EAAA/yD,WAEA,SAAAgyD,EAAAe,GACA,IAAAh4C,EAAAi3C,EAAAj3C,SACA,OAAAA,OAAAg4C,EAAAh4C,WAEAy5C,EAAA,CACA7gH,KAAA,WAEA,OAAA12B,KAAA4K,SAAA8rB,KAAAssD,UAAA/lF,SAEA6hG,IAAA,WACA,IAAAl0F,EAAA5K,KAAA4K,SACAmU,EAAAnU,EAAAuU,kBAAAliB,QAGA,OADA8hB,EAAAS,eAAA5a,EAAAglB,aAAAhf,IACAmU,IAGA22H,EAAA,CACA7tE,MAAAjmE,EAAA+1I,EAAA,GACA7vE,MAAAlmE,EAAA+1I,EAAA,GACA54H,KAAA,SAAA64H,EAAAhtI,EAAAitI,GACA,IAAAC,EAAAltI,EAAA6pI,EAAAmD,IAAA,CAAAC,EAAA,MAAAA,EAAA,QACAE,EAAAntI,EAAA6pI,EAAAmD,IAAA,CAAAC,EAAA,MAAAA,EAAA,QACA31I,EAAA,CAAAizI,EAAA,CAAA2C,EAAA,GAAAC,EAAA,KAAA5C,EAAA,CAAA2C,EAAA,GAAAC,EAAA,MACA,OACA71I,SACA2zI,SAAA3zI,IAGA0lE,QAAA,SAAAgwE,EAAAhtI,EAAAitI,GACA,IAAAhC,EAAA,EAAA5mI,UAAA,CAAAA,WASA,OACA/M,OATA2B,EAAAhH,IAAAg7I,EAAA,SAAAjoI,GACA,IAAAwjD,EAAAxoD,EAAA6pI,EAAAmD,IAAAhoI,GAKA,OAJAimI,EAAA,MAAAlnI,KAAAC,IAAAinI,EAAA,MAAAziF,EAAA,IACAyiF,EAAA,MAAAlnI,KAAAC,IAAAinI,EAAA,MAAAziF,EAAA,IACAyiF,EAAA,MAAAlnI,KAAAG,IAAA+mI,EAAA,MAAAziF,EAAA,IACAyiF,EAAA,MAAAlnI,KAAAG,IAAA+mI,EAAA,MAAAziF,EAAA,IACAA,IAIAyiF,cAKA,SAAA8B,EAAAK,EAAAJ,EAAAhtI,EAAAitI,GACA,IAAAl2F,EAAA/2C,EAAAqyF,QAAA,UAAA+6C,IACA91I,EAAAizI,EAAAtxI,EAAAhH,IAAA,eAAAU,GACA,OAAAq6I,EAAAj2F,EAAAihB,YAAAjhB,EAAA8tD,aAAAooC,EAAAt6I,KAAAokD,EAAAo1C,cAAAp1C,EAAAghB,YAAAk1E,EAAAt6I,QAEAs4I,EAAA,GAGA,OAFAA,EAAAmC,GAAA91I,EACA2zI,EAAA,EAAAmC,GAAA,CAAAprH,SACA,CACA1qB,SACA2zI,YAIA,IAAAD,EAAA,CACA/tE,MAAAjmE,EAAAq2I,EAAA,GACAnwE,MAAAlmE,EAAAq2I,EAAA,GACAl5H,KAAA,SAAA7c,EAAAg2I,EAAA1B,GACA,QAAAt0I,EAAA,MAAAs0I,EAAA,GAAA0B,EAAA,MAAAh2I,EAAA,MAAAs0I,EAAA,GAAA0B,EAAA,QAAAh2I,EAAA,MAAAs0I,EAAA,GAAA0B,EAAA,MAAAh2I,EAAA,MAAAs0I,EAAA,GAAA0B,EAAA,SAEAtwE,QAAA,SAAA1lE,EAAAg2I,EAAA1B,GACA,OAAA3yI,EAAAhH,IAAAqF,EAAA,SAAA0N,EAAAqe,GACA,OAAAre,EAAA,GAAA4mI,EAAA,GAAA0B,EAAAjqH,GAAA,GAAAre,EAAA,GAAA4mI,EAAA,GAAA0B,EAAAjqH,GAAA,QAKA,SAAAgqH,EAAAD,EAAA91I,EAAAg2I,EAAA1B,GACA,OAAAt0I,EAAA,GAAAs0I,EAAAwB,GAAAE,EAAA,GAAAh2I,EAAA,GAAAs0I,EAAAwB,GAAAE,EAAA,IAcA,SAAA5B,EAAAT,GACA,OAAAA,EAAA,CAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAjpH,SAGA,IAAAwU,EAAAuzG,EACAx8G,EAAA93B,QAAA+gC,mBC9YgB19B,EAAQ,KAqBxBsrF,yBAAA,sBAEA,kCCvBA,IAAA15D,EAAc5xB,EAAQ,KAEtBohD,EAAYphD,EAAQ,KAEpBP,EAAA2hD,EAAA3hD,cACAvE,EAAAkmD,EAAAlmD,KAoBA02B,EAAAtb,kBAAA,CAIAojF,gBAAA,SAAA3yF,GACA,IAAA0tI,EAAAh1I,IASA,OARAsH,EAAAuD,cAAA,oBAAA22E,GACAA,EAAAyB,eAAA,SAAAC,EAAAC,EAAA3B,GACA,IAAA4B,EAAA5B,EAAAkD,aAAAxB,EAAA9lF,KAAA+lF,GACA1nF,EAAA2nF,EAAA6xD,wBAAA,SAAArnI,GACAonI,EAAAj4I,IAAA6Q,EAAA2B,IAAA3B,SAIAonI,GAEArtG,iBAAA,EAIAutG,aAAA,SAAA5tI,EAAAtC,GACAsC,EAAAuD,cAAA,oBAAA22E,GAIAA,EAAAyB,eAAA,SAAAC,EAAAC,EAAA3B,GACAA,EAAAkD,aAAAxB,EAAA9lF,KAAA+lF,GAAAv8C,MAAA46C,EAAAx8E,KAgBAw8E,EAAAyB,eAAA,SAAAC,EAAAC,EAAA3B,GACAA,EAAAkD,aAAAxB,EAAA9lF,KAAA+lF,GAAAgyD,WAAA3zD,EAAAx8E,OAGAsC,EAAAuD,cAAA,oBAAA22E,GAGA,IAAA4B,EAAA5B,EAAAuD,8BACAqwD,EAAAhyD,EAAA4B,uBACAqwD,EAAAjyD,EAAA+B,qBACA3D,EAAAoD,YAAA,CACA9xC,MAAAsiG,EAAA,GACA1qG,IAAA0qG,EAAA,GACAlzD,WAAAmzD,EAAA,GACAlzD,SAAAkzD,EAAA,KACO,yBClFP,IAAAljH,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErB4gF,EAAa5gF,EAAQ,KAqBrB4xB,EAAAlb,eAAA,oBAAA3I,EAAAhH,GACA,IAAAguI,EAAAn0D,EAAAghC,wBAAAzhH,EAAA7E,KAAAyL,EAAAuD,cAAAvD,EAAA,YAAA65E,EAAAE,YAAA,SAAA/zE,EAAA41E,GACA,OAAA51E,EAAAtQ,IAAAkmF,EAAAC,aAEAoyD,EAAA,GACAjuI,EAAAuD,cAAA,CACAlF,SAAA,WACAyK,MAAA9B,GACG,SAAAhB,EAAA1H,GACH2vI,EAAAj3I,KAAArC,MAAAs5I,EAAAD,EAAAhoI,GAAA8iG,SAEA1vG,EAAAjF,KAAA85I,EAAA,SAAA/zD,EAAA57E,GACA47E,EAAAoD,YAAA,CACA9xC,MAAAxkC,EAAAwkC,MACApI,IAAAp8B,EAAAo8B,IACAw3C,WAAA5zE,EAAA4zE,WACAC,SAAA7zE,EAAA6zE,gCCzCA,IAAAzhF,EAAaH,EAAQ,KAqBrB9E,EAAAiF,EAAAjF,KAsCA,SAAA+xB,EAAA9xB,EAAA0B,GACA,OAAA1B,KAAAd,gBAAAc,EAAAd,eAAAwC,GAGA43B,EAAA93B,QAxCA,SAAA2L,GACA,IAAA2pB,EAAA3pB,KAAA2pB,UAEA9xB,EAAAvF,QAAAq3B,KACAA,IAAA,CAAAA,GAAA,IAGA/2B,EAAA+2B,EAAA,SAAA5d,GACA,GAAAA,EAAA,CAKA4Y,EAAA5Y,EAAA,eAAA4Y,EAAA5Y,EAAA,YACAA,EAAA4gI,OAAA5gI,EAAA6gI,iBACA7gI,EAAA6gI,WAGA,IAAAD,EAAA5gI,EAAA4gI,OAEAA,GAAA90I,EAAAvF,QAAAq6I,IACA/5I,EAAA+5I,EAAA,SAAAjkE,GACA7wE,EAAA1F,SAAAu2E,KACA/jD,EAAA+jD,EAAA,WAAA/jD,EAAA+jD,EAAA,SACAA,EAAA9lE,IAAA8lE,EAAAz+B,OAGAtlB,EAAA+jD,EAAA,SAAA/jD,EAAA+jD,EAAA,SACAA,EAAA5lE,IAAA4lE,EAAA7mC,6BCnDgBnqC,EAAQ,KAqBxBsrF,yBAAA,qBAAAhjF,GAEA,OAAAA,EAAA+nC,aAAA/nC,EAAA2sI,OAAA3sI,EAAA2sI,OAAAl7I,OAAA,EAAAuO,EAAAisB,YAAA,KAAAjsB,EAAA6sI,WAAA,4CCvBA,IAAAvjH,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBo1I,EAAqBp1I,EAAQ,KAE7BmwE,EAAoBnwE,EAAQ,KAqB5Bq1I,EAAAzjH,EAAA7vB,SAAAI,OAAAI,UA8CA,SAAA+yI,EAAAjoI,EAAAkoI,EAAA35I,EAAAomG,GAQA,IAPA,IAAAd,EAAAq0C,EAAAC,cAAAxzC,GACAzuB,EAAApD,EAAA+D,mBAAAgtB,GACAu0C,EAAA,CACAh5H,MAAApP,EAAAC,UAAAJ,UAAA,UAIArT,EAAA,EAAAC,EAAAy5E,EAAAx5E,OAA2CF,EAAAC,EAASD,IAAA,CACpD,IAAAgC,EAAA03E,EAAA15E,GACA67I,EAAAx0C,EAAA,YAAArlG,EAAA,oBAAAA,GACA65I,KAAAhlE,YAAA90E,EAAAsR,EAAAsrC,GAGA,OAAAi9F,EAAAh5H,MAEA,SAAAvP,EAAA9S,GACA,OAAAq7I,EAAAr7I,GAGA,SAAAo+C,EAAAp+C,EAAAwB,GACA65I,EAAAr7I,GAAAwB,GAlEAg2B,EAAAhb,eAAAy+H,EAAA,CACAM,mBAAA,EACAtvG,MAAA,SAAAh5B,EAAAtG,GACA,IAAA6uI,EAAA,GAUA,OATA7uI,EAAAuD,cAAA,qBAAAirI,GACA,IAAA3rG,EAAAv8B,EAAAu8B,iBAEA2rG,EAAAM,eAAAxoI,IAAAu8B,KAAAkvC,OAIA88D,EAAA73I,KAAAq3I,EAAAnzC,uBAAAszC,EAAAx0C,UAAAw0C,EAAAC,cAAAr1I,EAAA7E,KAAAi6I,EAAA5zC,cAAA4zC,KAAAO,iBAAAzoI,EAAAC,eAEAsoI,KAIAhkH,EAAAhb,eAAAy+H,EAAA,CACAM,mBAAA,EACAtvG,MAAA,SAAAh5B,EAAAtG,GACA,IAAAjJ,EAAAuP,EAAAC,UACAyoI,EAAA,GACAhvI,EAAAuD,cAAA,qBAAAirI,GACA,GAAAA,EAAAM,eAAAxoI,GAAA,CACA,IAAA2oI,EAAAT,EAAAU,cAAA91I,EAAA7E,KAAAg6I,EAAA,KAAAjoI,EAAAkoI,KAAA,CACAW,MAAA,GACAC,YAAA,IAEAC,EAAAb,EAAAO,iBAAAh4I,GACAyqC,EAAAzqC,EAAAqqC,iBAAAiuG,GAEA,MAAA7tG,IAEAytG,EAAAx+F,UAAAjP,EAAAljC,MACA0wI,EAAAh4I,KAAAi4I,OAKA3oI,EAAAC,UAAAkrC,UAAA,aAAAu9F,uBCnEA,IAAAnkH,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBK,EAAUL,EAAQ,KAElBq2I,EAAoBr2I,EAAQ,KAE5BmwE,EAAoBnwE,EAAQ,KAE5Bo1I,EAAqBp1I,EAAQ,KAE7BmB,EAAgBnB,EAAQ,KAExBy5B,EAAiBz5B,EAAQ,KAqBzB4zE,EAAAzD,EAAAyD,UACAF,EAAAvD,EAAAuD,WACA94E,EAAAuF,EAAAvF,QACAM,EAAAiF,EAAAjF,KACAouB,EAAAmQ,EAAAnQ,IACAf,EAAAkR,EAAAlR,UACAxoB,EAAAI,EAAAJ,KAieA29B,EAheA9L,EAAAhZ,qBAAA,CACA/c,KAAA,YACAyb,aAAA,WAMAypF,UAAA,yBAMAu1C,qBAAA,uDAQAC,UAAA,EAAAhrI,SAMAu3B,WAAA,CACAjnC,KAAA,MACAy7B,YAAA,GAMAsL,cAAA,CACAtP,MAAA,EACAxe,OAAA,EACAD,EAAA,EACAH,YAAA,MAKAxJ,IAAA,EAEAE,IAAA,IAEAosC,UAAA,KACAg/F,QAAA,KAGAC,WAAA,KAIAnrI,KAAA,EAEAG,MAAA,KAEAD,IAAA,KAEAE,OAAA,EAEAwmB,UAAA,KACAw8G,WAAA,KACA/vE,SAAA,EACA7pC,OAAA,WAEArrB,gBAAA,gBACA6oB,YAAA,OAEAokH,aAAA,UACA/H,cAAA,OACAH,YAAA,EAEAtrF,QAAA,EAGAyzF,QAAA,GAEAxtH,UAAA,EAEA1M,MAAA,KAEAkxD,UAAA,KACAjoD,KAAA,KAEAxG,UAAA,CACAzC,MAAA,SAQA7Y,KAAA,SAAA0E,EAAA+X,EAAAtZ,GAKAzK,KAAAs6I,YAKAt6I,KAAAk5I,cAAA,GAKAl5I,KAAAu6I,kBAAA,GAKAv6I,KAAA6iB,eAOA7iB,KAAAw6I,SACAx6I,KAAA4mC,qBAAA56B,EAAAvB,IAMAy8B,cAAA,SAAAnM,EAAAqM,GACA,IAAA2sC,EAAA/zE,KAAAgM,OAIAjI,EAAAkJ,kBACA8mE,EAAAgS,UAAA,IAGA3+C,GAAA0xG,EAAA3zC,oBAAApxB,EAAAh5C,EAAA/6B,KAAAg6I,sBACAh6I,KAAA6iB,eAAA7iB,KAAAwM,SAAA,aACAxM,KAAAy6I,gBACAz6I,KAAA06I,wBAMAC,YAAA,SAAAj2C,GACA,IAAAD,EAAAzkG,KAAAykG,UACAC,EAAA7gG,EAAA7E,KAAA0lG,EAAA1kG,MACAA,KAAAu6I,kBAAAzB,EAAAt0C,qBAAAxkG,KAAAgM,OAAA6tG,WAAApV,EAAAC,GACA1kG,KAAAk5I,cAAAJ,EAAAt0C,qBAAAxkG,KAAAgM,OAAA/N,OAAAwmG,EAAAC,IAOAk2C,uBAAA,WACA,IAAAC,EAAA76I,KAAAgM,OAAAoM,YACA0iI,EAAA,GAUA,OARA,MAAAD,GAAA,QAAAA,EACA76I,KAAAyK,QAAA+H,WAAA,SAAAzB,EAAAhI,GACA+xI,EAAAr5I,KAAAsH,KAGA+xI,EAAAj2I,EAAA4O,iBAAAonI,GAGAC,GAMAC,iBAAA,SAAA1jE,EAAAt4E,GACA8E,EAAAjF,KAAAoB,KAAA46I,yBAAA,SAAAxiI,GACAi/D,EAAAh6E,KAAA0B,EAAAiB,KAAAyK,QAAA4N,iBAAAD,KACKpY,OAMLu5I,eAAA,SAAAxoI,GACA,IAAAw2E,GAAA,EAIA,OAHAvnF,KAAA+6I,iBAAA,SAAAtqI,GACAA,IAAAM,IAAAw2E,GAAA,KAEAA,GAiBAyzD,gBAAA,SAAA17I,EAAAglD,EAAA22F,GACA,IAIAC,EACAC,EALAnvI,EAAAhM,KAAAgM,OACA6gB,EAAA7gB,EAAA6gB,UACAotH,EAAAj6I,KAAAi6I,UACA5oE,EAAArlE,EAAAqlE,UAYA,OATA4pE,KAAA,UAEAp3I,EAAAvF,QAAAgB,KACAA,IAAA3C,QACAu+I,GAAA,GAGAC,EAAA72F,EAAAhlD,EAAA47I,EAAA,CAAAnuH,EAAAztB,EAAA,IAAAytB,EAAAztB,EAAA,KAAAytB,EAAAztB,GAEAuE,EAAA/B,SAAAuvE,GACAA,EAAApuE,QAAA,UAAuCi4I,EAAAC,EAAA,GAAAA,GAAAl4I,QAAA,WAAyDi4I,EAAAC,EAAA,GAAAA,GAC3Ft3I,EAAAhC,WAAAwvE,GACL6pE,EAAA7pE,EAAA/xE,EAAA,GAAAA,EAAA,IAAA+xE,EAAA/xE,GAGA47I,EACA57I,EAAA,KAAA26I,EAAA,GACAgB,EAAA,OAAAE,EAAA,GACO77I,EAAA,KAAA26I,EAAA,GACPgB,EAAA,OAAAE,EAAA,GAEAA,EAAA,SAAAA,EAAA,GAIAA,EAGA,SAAApuH,EAAArqB,GACA,OAAAA,IAAAu3I,EAAA,SAAAv3I,IAAAu3I,EAAA,WAAAv3I,GAAAqqB,QAAApe,KAAAC,IAAAie,EAAA,OAOAuuH,YAAA,WACA,IAAArnE,EAAA/zE,KAAAgM,OAIA2sC,EAAA3rB,EAAA,CAAA+mD,EAAAnlE,IAAAmlE,EAAAjlE,MACA9O,KAAAs6I,YAAA3hG,GASA6gG,iBAAA,SAAAlsI,GACA,IAAA+tI,EAAAr7I,KAAAgM,OAAAkvC,UACAogG,EAAAhuI,EAAA6O,WAEA,SAAAk/H,GAAAC,EAAA79I,OAAA,CAIA,SAAA49I,EACA,OAAA/tI,EAAAynC,aAAAsmG,GAKA,IAFA,IAAAh1D,EAAA/4E,EAAA6O,WAEA5e,EAAA8oF,EAAA5oF,OAAA,EAAqCF,GAAA,EAAQA,IAAA,CAC7C,IAAAg/D,EAAA8pB,EAAA9oF,GAGA,IAFA+P,EAAAu+B,iBAAA0wB,GAEAc,mBACA,OAAAd,KASAnb,UAAA,WACA,OAAAphD,KAAAs6I,YAAA39I,SAMA+9I,qBAAA,WACA,IAAAjwI,EAAAzK,KAAAyK,QACAspE,EAAA/zE,KAAAgM,OACAw3C,EAAA,CACA02F,QAAAnmE,EAAAmmE,QACAC,WAAApmE,EAAAomE,YAEAl8I,EAAA81E,EAAA91E,SAAA81E,EAAA91E,OAAA,IACA47G,EAAA9lC,EAAA8lC,aAAA9lC,EAAA8lC,WAAA,IACAh2G,EAAA7F,MAAAC,EAAAulD,GAEA3/C,EAAA7F,MAAA67G,EAAAr2D,GAEA,IAAAc,EAAAtkD,KAAAskD,aAOA,SAAAi3F,EAAA/3F,GAKAllD,EAAAy1E,EAAA5zD,SAEAqjC,EAAA02F,UACA12F,EAAA02F,QAAA,CACA/5H,MAAA4zD,EAAA5zD,MAAAxjB,QAAAk2E,YAUArvB,EAAA02F,QAAA12F,EAAA02F,SAAA,CACA/5H,MAAA1V,EAAAtK,IAAA,kBAGAvB,EAAAoB,KAAAykG,UAAA,SAAAhqC,GACA,IAAA5pD,EAAA2yC,EAAAiX,GAEA,GAAA52D,EAAA/B,SAAA+O,GAAA,CACA,IAAA2qI,EAAAzB,EAAA55I,IAAA0Q,EAAA,SAAAyzC,GAEAk3F,GACAh4F,EAAAiX,GAAA,GACAjX,EAAAiX,GAAA5pD,GAAA2qI,UAGAh4F,EAAAiX,KAGOz6D,MA3CPu7I,EAAAl+I,KAAA2C,KAAA/B,GACAs9I,EAAAl+I,KAAA2C,KAAA65G,GA6CA,SAAAr2D,EAAAi4F,EAAAC,GACA,IAAAC,EAAAn4F,EAAAi4F,GACAG,EAAAp4F,EAAAk4F,GAEAC,IAAAC,IACAA,EAAAp4F,EAAAk4F,GAAA,GACA98I,EAAA+8I,EAAA,SAAA32C,EAAAn0F,GACA,GAAAgjE,EAAAsD,YAAAtmE,GAAA,CAIA,IAAA2qI,EAAAzB,EAAA55I,IAAA0Q,EAAA,WAAAyzC,GAEA,MAAAk3F,IACAI,EAAA/qI,GAAA2qI,EAIA,UAAA3qI,GAAA+qI,EAAA79I,eAAA,YAAA69I,EAAA79I,eAAA,gBACA69I,EAAAvlE,QAAA,aA/DAh5E,KAAA2C,KAAA/B,EAAA,wBAsEA,SAAA47G,GACA,IAAAgiC,GAAAhiC,EAAAqgC,SAAA,IAAkD9iH,SAAAyiF,EAAAsgC,YAAA,IAAwC/iH,OAC1F0kH,GAAAjiC,EAAAqgC,SAAA,IAAsD7iH,aAAAwiF,EAAAsgC,YAAA,IAA4C9iH,WAClGg7G,EAAAryI,KAAAG,IAAA,iBACAvB,EAAAoB,KAAAykG,UAAA,SAAAhqC,GACA,IAAA+/E,EAAAx6I,KAAAw6I,SACAuB,EAAAliC,EAAAp/C,GAGAshF,IACAA,EAAAliC,EAAAp/C,GAAA,CACAt6C,MAAAmkC,EAAA+tF,EAAA,CAAAA,KAKA,MAAA0J,EAAA3kH,SACA2kH,EAAA3kH,OAAAykH,GAAAh4I,EAAA5G,MAAA4+I,KAAAv3F,EAAA,4BAGA,MAAAy3F,EAAA1kH,aACA0kH,EAAA1kH,WAAAykH,GAAAj4I,EAAA5G,MAAA6+I,KAAAx3F,EAAAk2F,EAAA,IAAAA,EAAA,GAAAA,EAAA,MAIAuB,EAAA3kH,OAAAkgD,EAAAykE,EAAA3kH,OAAA,SAAAA,GACA,eAAAA,GAAA,WAAAA,EAAA,YAAAA,IAGA,IAAAC,EAAA0kH,EAAA1kH,WAEA,SAAAA,EAAA,CACA,IAAAvoB,GAAAG,IAEAmoE,EAAA//C,EAAA,SAAA/3B,GACAA,EAAAwP,MAAAxP,KAEAy8I,EAAA1kH,WAAAigD,EAAAjgD,EAAA,SAAA/3B,GACA,OAAA2sB,EAAA3sB,EAAA,GAAAwP,GAAA,GAAA0rI,EAAA,YAGOx6I,OA7GP3C,KAAA2C,KAAA65G,IAoHA4gC,cAAA,WACAz6I,KAAAw6I,SAAA,CAAA7tH,WAAA3sB,KAAAG,IAAA,cAAAwsB,WAAA3sB,KAAAG,IAAA,iBAMAmkD,WAAA,WACA,QAAAtkD,KAAAgM,OAAA+nC,YAOAioG,YAAAv4I,EASA4hG,cAAA5hG,EAiBAk2I,cAAAl2I,IAGA00B,EAAA93B,QAAA+gC,mBC3gBA,IAAAv9B,EAAaH,EAAQ,KAyBrBq2I,EAAA,CAIA55I,IAAA,SAAA0Q,EAAA/S,EAAAwmD,GACA,IAAAhlD,EAAAuE,EAAA5G,OAAAqpC,EAAAz1B,IAAA,IAA6D/S,IAC7D,OAAAwmD,GAAAzgD,EAAAvF,QAAAgB,OAAA7B,OAAA,GAAA6B,IAGAgnC,EAAA,CACAnmB,MAAA,CACA87H,OAAA,sBACAC,SAAA,mBAEAlmE,SAAA,CACAimE,OAAA,QACAC,SAAA,OAEAhmE,gBAAA,CACA+lE,OAAA,OACAC,SAAA,OAEA/lE,eAAA,CACA8lE,OAAA,QACAC,SAAA,OAEA9lE,WAAA,CACA6lE,OAAA,OACAC,SAAA,OAEA7lE,QAAA,CACA4lE,OAAA,OACAC,SAAA,OAEA9kH,OAAA,CACA6kH,OAAA,iCACAC,SAAA,UAEA7kH,WAAA,CACA4kH,OAAA,QACAC,SAAA,QAGA96G,EAAA24G,EACA5hH,EAAA93B,QAAA+gC,mBCrEA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtB00B,EAAiB10B,EAAQ,KAEzBsb,EAAatb,EAAQ,KAErBmwE,EAAoBnwE,EAAQ,KAqB5B09B,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,YAMA48I,mBAAA,CACAntI,KAAA,EACAG,MAAA,EACAD,IAAA,EACAE,OAAA,GAEA9H,KAAA,SAAAmD,EAAAtC,GAKAnI,KAAAyK,UAMAzK,KAAAmI,MAMAnI,KAAAi5I,gBAMApnI,OAAA,SAAAonI,EAAAxuI,EAAAtC,EAAAsJ,GACAzR,KAAAi5I,kBAEA,IAAAA,EAAA94I,IAAA,QAKAH,KAAAo8I,SAAAh9I,MAAAY,KAAAb,WAJAa,KAAAkH,MAAAkzD,aAUAiiF,iBAAA,SAAAn1I,GACA,IAAA+xI,EAAAj5I,KAAAi5I,eACAryF,EAAAxuB,EAAA31B,kBAAAw2I,EAAA94I,IAAA,eACA4e,EAAA7X,EAAAiY,kBACAjY,EAAAiJ,IAAA,IAAAvL,EAAAsZ,KAAA,CACAyD,IAAA,EAEA5W,QAAA,EACAyc,MAAA,CACAxX,EAAA+O,EAAA/O,EAAA42C,EAAA,GACA32C,EAAA8O,EAAA9O,EAAA22C,EAAA,GACAn/C,MAAAsX,EAAAtX,MAAAm/C,EAAA,GAAAA,EAAA,GACAl/C,OAAAqX,EAAArX,OAAAk/C,EAAA,GAAAA,EAAA,IAEA72C,MAAA,CACAyQ,KAAAy4H,EAAA94I,IAAA,mBACAogB,OAAA04H,EAAA94I,IAAA,eACA0f,UAAAo5H,EAAA94I,IAAA,oBAcAm8I,oBAAA,SAAAC,EAAAC,EAAAz1I,GAEA,IAAA01I,GADA11I,KAAA,IACA01I,WACAxD,EAAAj5I,KAAAi5I,eACAyD,EAAA,GAMA,GAJA,WAAAF,IACAE,EAAAtlH,OAAA6hH,EAAA94I,IAAA,eAGA,UAAAq8I,EAAA,CACA,IAAAjzH,EAAA0vH,EAAA94I,IAAA,gBACAu8I,EAAAv8H,MAAAoJ,EAGA,SAAAitD,EAAA14E,GACA,OAAA4+I,EAAA5+I,GAGA,SAAA24E,EAAA34E,EAAAwB,GACAo9I,EAAA5+I,GAAAwB,EAGA,IAAAslG,EAAAq0C,EAAAsB,kBAAAkC,GAAAxD,EAAA5zC,cAAAk3C,IACAtlE,EAAApD,EAAA+D,mBAAAgtB,GAaA,OAZA/gG,EAAAjF,KAAAq4E,EAAA,SAAA13E,GACA,IAAAo9I,EAAA/3C,EAAArlG,GAEAwH,EAAA61I,uBAAA,YAAAr9I,IACAA,EAAA,aACAo9I,EAAA/3C,EAAAM,mBAGArxB,EAAAkE,UAAAx4E,EAAAi9I,IACAG,KAAAvoE,YAAAmoE,EAAA/lE,EAAAC,KAGAimE,EAAAF,IAMAK,cAAA,SAAA31I,GACA,IAAAuJ,EAAAzQ,KAAAi5I,eACA9wI,EAAAnI,KAAAmI,IACA6W,EAAAmb,gBAAAjzB,EAAAuJ,EAAAguF,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,eAQAyvI,SAAAv4I,EAAAJ,OAGA00B,EAAA93B,QAAA+gC,mBC3KA,IAAAv9B,EAAaH,EAAQ,KAIrB+1B,EAFc/1B,EAAQ,KAEtB+1B,cAuEAp5B,EAAAy8I,aA5CA,SAAA7D,EAAA9wI,EAAAqyI,GACA,IAAAuC,EAAA9D,EAAAjtI,OACA+mI,EAAAgK,EAAAh6C,MAEA,SAAAgwC,GAAA,SAAAA,EACA,OAAAA,EAcA,IAVA,IAAAiK,EAAA,CACAv1I,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aAEAswI,EAAA,eAAAF,EAAAvkH,OAAA,IACA0kH,EAAA,qDACAC,EAAAD,EAAAD,GACAG,EAAA,YACAC,EAAA,GAEA9/I,EAAA,EAAiBA,EAAA,EAAOA,IACxB8/I,EAAAH,EAAA,EAAAD,GAAA1/I,IAAA6/I,EAAA7/I,GACA8/I,EAAAF,EAAA5/I,IAAA,IAAAA,EAAAi9I,EAAA,GAAAuC,EAAAI,EAAA5/I,IAGA,IAAA+/I,EAAA,mCAAAL,GACAl+H,EAAA0a,EAAA4jH,EAAAL,EAAAD,EAAAn2F,SACA,OAAAu2F,GAAAp+H,EAAA6a,OAAA0jH,EAAA,QAAAv+H,EAAAu+H,EAAA,OAAAv+H,EAAAu+H,EAAA,OAAAN,EAAAM,EAAA,UAmBAj9I,EAAAk9I,iBAXA,SAAA9oI,GAOA,OANA5Q,EAAAjF,KAAA6V,GAAA,YAAAI,GACA,MAAAJ,EAAAtD,YACAsD,EAAAxD,gBAAAwD,EAAAtD,UACAsD,EAAAtD,UAAA,QAGAsD,oBCxEc/Q,EAAQ,KA2BtB0W,eANA,CACA7a,KAAA,kBACAwV,MAAA,oBAEA7J,OAAA,UAEA,SAAAuG,EAAAhH,GACAA,EAAAuD,cAAA,CACAlF,SAAA,YACAyK,MAAA9B,GACG,SAAAhB,GACHA,EAAAurI,YAAAvqI,EAAA0/F,+BChCA,IAqBAvyG,EArBa8E,EAAQ,KAqBrB9E,KACA4nI,EAAA,mBA0FA,SAAAgX,EAAA/yI,GACA,IAAAm+E,EAAAn+E,EAAA+7H,GAMA,OAJA59C,IACAA,EAAAn+E,EAAA+7H,GAAA,MAGA59C,EAGAvoF,EAAAoB,KA9FA,SAAAgJ,EAAAgzI,GACA,IAAA70D,EAAA40D,EAAA/yI,GAGA7L,EAAA6+I,EAAA,SAAA5oI,EAAA6oI,GAGA,IAFA,IAAAngJ,EAAAqrF,EAAAnrF,OAAA,EAEUF,GAAA,IACVqrF,EAAArrF,GAEAmgJ,GAHkBngJ,KAQlB,GAAAA,EAAA,GAEA,IAAAonF,EAAAl6E,EAAA8oB,gBAAA,CACAzqB,SAAA,WACAwK,QAAA,SACArM,GAAAy2I,IACO,GAEP,GAAA/4D,EAAA,CACA,IAAA4zD,EAAA5zD,EAAAsD,kBACAW,EAAA,GAAA80D,GAAA,CACAA,aACAznG,MAAAsiG,EAAA,GACA1qG,IAAA0qG,EAAA,QAKA3vD,EAAAnnF,KAAAg8I,IA8DAp9I,EAAAiU,IAtDA,SAAA7J,GACA,IAAAm+E,EAAA40D,EAAA/yI,GACAmoH,EAAAhqC,IAAAnrF,OAAA,GACAmrF,EAAAnrF,OAAA,GAAAmrF,EAAAt0E,MAEA,IAAAqpI,EAAA,GAWA,OAVA/+I,EAAAg0H,EAAA,SAAA/9G,EAAA6oI,GACA,QAAAngJ,EAAAqrF,EAAAnrF,OAAA,EAAkCF,GAAA,EAAQA,IAG1C,GAFAsX,EAAA+zE,EAAArrF,GAAAmgJ,GAEA,CACAC,EAAAD,GAAA7oI,EACA,SAIA8oI,GAuCAt9I,EAAA6Y,MAhCA,SAAAzO,GACAA,EAAA+7H,GAAA,MAgCAnmI,EAAAgtB,MAxBA,SAAA5iB,GACA,OAAA+yI,EAAA/yI,GAAAhN,yBCtGA,IAYAmgJ,EAZA75I,EAAUL,EAAQ,KAElBm6I,EAAA,gCACAC,EAAA,qBAAA/wI,OAAA,KAAAA,OACAgxI,GAAA,EACAC,EAAAF,KAAAp+I,SASA,GAAAs+I,IAAAj6I,EAAAkJ,gBACA,KACA+wI,EAAAC,WAAAC,OAAAF,EAAAC,WAAA9tI,IAAA,QAAA0tI,GAEAD,EAAA,SAAA9wB,GACA,OAAAkxB,EAAAr+I,cAAA,UAAAmtH,EAAA,oBAEG,MAAAp0G,GACHklI,EAAA,SAAA9wB,GACA,OAAAkxB,EAAAr+I,cAAA,IAAAmtH,EAAA,WAAA+wB,EAAA,qBAsBAx9I,EAAA29I,MACA39I,EAAA89I,WAvCA,SAAArxB,GACA,OAAA8wB,EAAA9wB,IAuCAzsH,EAAA+9I,QAlBA,WACA,IAAAL,GAAAC,EAAA,CAIAD,GAAA,EACA,IAAAM,EAAAL,EAAAK,YAEAA,EAAA5gJ,OAAA,GACAugJ,EAAAM,mBAAAC,QAAA,uCAGAF,EAAA,GAAAE,QAAA,uECvCAtiJ,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAOAe,EAAA2zB,QAAA,SAAAxzB,GACA,IAAAkmE,EAAAvnE,UAAA1B,OAAA,QAAAk2B,IAAAx0B,UAAA,GAAAA,UAAA,MACA6nE,EAAA,KACA,kBAGA,IAFA,IAAAzyC,EAAAv0B,KAEA05E,EAAAv6E,UAAA1B,OAAAyB,EAAA7C,MAAAq9E,GAAA8kE,EAAA,EAAmEA,EAAA9kE,EAAa8kE,IAChFt/I,EAAAs/I,GAAAr/I,UAAAq/I,GAGAp3E,aAAAJ,GACAA,EAAAK,WAAA,WACA7mE,EAAApB,MAAAm1B,EAAAr1B,IACKwnE,KAILvuC,EAAA93B,UAAA,sCCzBApE,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAOAe,EAAAo+I,aAAA,iBACAp+I,EAAAq+I,YAAA,+HACAr+I,EAAAs+I,gBAAA,yICZA,IAAA/jB,EAAWl3H,EAAQ,KAEnBk8B,EAAWl8B,EAAQ,KAEnBk7I,EAAgBl7I,EAAQ,KAExBO,EAAeP,EAAQ,KAEvBm7I,EAAA,SAuBA,SAAAC,KAEAA,EAAA5iJ,UAAA4Z,QAAA,aAEA,IAAAipI,EAAA,6FAWA/1D,EAAA,SAAAz7E,EAAAV,EAAAmyI,EAAAC,GACAh7I,EAAA5G,KAAA2C,MACAA,KAAAuN,UACAvN,KAAA6M,UACA7M,KAAAi/I,cACAD,KAAA,IAAAF,EAKA9+I,KAAAg/I,MAAA,KAOAh/I,KAAAk/I,SAAA,GAMAl/I,KAAAm/I,iBAMAn/I,KAAAo/I,OAMAp/I,KAAAq/I,OACAT,EAAAvhJ,KAAA2C,MACAA,KAAAs/I,gBAAAN,IAoNA,SAAAO,EAAAzoI,EAAA9G,EAAAC,GACA,GAAA6G,IAAA4U,UAAA,yBAAA1b,EAAAC,GAAA,CAIA,IAHA,IACAi0D,EADAz7D,EAAAqO,EAGArO,GAAA,CAIA,GAAAA,EAAAu1G,WAAAv1G,EAAAu1G,SAAA98E,QAAAlxB,EAAAC,GACA,SAGAxH,EAAAsC,SACAm5D,GAAA,GAGAz7D,IAAAO,OAGA,OAAAk7D,GAAA26E,EAGA,SAxOA71D,EAAA9sF,UAAA,CACAyB,YAAAqrF,EACAs2D,gBAAA,SAAAN,GACAh/I,KAAAg/I,OACAh/I,KAAAg/I,MAAAlpI,UAGAkpI,IACApkB,EAAAh8H,KAAAmgJ,EAAA,SAAAx+I,GACAy+I,EAAAp1I,IAAAo1I,EAAAp1I,GAAArJ,EAAAP,KAAAO,GAAAP,OACOA,MAEPg/I,EAAAv4I,QAAAzG,MAGAA,KAAAg/I,SAEAv+C,UAAA,SAAA1rF,GACA,IAAA/E,EAAA+E,EAAA4hD,IACA1mD,EAAA8E,EAAA6hD,IACA4oF,EAAAx/I,KAAAk/I,SACAO,EAAAD,EAAAvhJ,OAKAwhJ,MAAA1+H,OAEA0+H,GADAD,EAAAx/I,KAAAirF,UAAAu0D,EAAAxvI,EAAAwvI,EAAAvvI,IACAhS,QAGA,IAAAyhJ,EAAA1/I,KAAAk/I,SAAAl/I,KAAAirF,UAAAj7E,EAAAC,GACA0vI,EAAAD,EAAAzhJ,OACA+gJ,EAAAh/I,KAAAg/I,MACAA,EAAAY,WAAAZ,EAAAY,UAAAD,IAAAnhE,OAAA,WAEAihE,GAAAE,IAAAF,GACAz/I,KAAA6/I,kBAAAL,EAAA,WAAAzqI,GAIA/U,KAAA6/I,kBAAAH,EAAA,YAAA3qI,GAEA4qI,OAAAF,GACAz/I,KAAA6/I,kBAAAH,EAAA,YAAA3qI,IAGA+qI,SAAA,SAAA/qI,GACA/U,KAAA6/I,kBAAA7/I,KAAAk/I,SAAA,WAAAnqI,GAMA,IACAgrI,EADAvzB,EAAAz3G,EAAAirI,WAAAjrI,EAAAkrI,cAGA,GACAzzB,OAAA55C,iBACK45C,GAAA,GAAAA,EAAAhtH,YAAAugJ,EAAAvzB,IAAAxsH,KAAAi/I,eAELc,GAAA//I,KAAA+J,QAAA,aACAgL,WAOAtL,OAAA,SAAAsL,GACA/U,KAAAk/I,SAAA,IAQAgB,SAAA,SAAA15I,EAAA25I,GACA,IAAA15I,EAAAzG,KAAAwG,GACAC,KAAApJ,KAAA2C,KAAAmgJ,IAMArqI,QAAA,WACA9V,KAAAg/I,MAAAlpI,UACA9V,KAAAuN,QAAAvN,KAAAg/I,MAAAh/I,KAAA6M,QAAA,MAOAm+E,eAAA,SAAAvJ,GACA,IAAAu9D,EAAAh/I,KAAAg/I,MACAA,EAAAY,WAAAZ,EAAAY,UAAAn+D,IAWAo+D,kBAAA,SAAA/J,EAAAtvI,EAAAuO,GAEA,IAAAtM,GADAqtI,KAAA,IACA73I,OAEA,IAAAwK,MAAAsC,OAAA,CAOA,IAHA,IAAAmgF,EAAA,KAAA1kF,EACA45I,EAjMA,SAAAC,EAAAvK,EAAA/gI,GACA,OACAxV,KAAA8gJ,EACAtrI,QAEA9W,OAAA63I,EAAA73I,OAEAwzG,UAAAqkC,EAAArkC,UACAr6C,cAAA,EACAV,QAAA3hD,EAAA4hD,IACAG,QAAA/hD,EAAA6hD,IACAkrC,aAAA/sF,EAAA+sF,aACAM,OAAArtF,EAAAqtF,OACAC,OAAAttF,EAAAstF,OACAF,WAAAptF,EAAAotF,WACAxqC,WAAA5iD,EAAA2iD,QACAp1C,UAAAvN,EAAAuN,UACAw1C,MAAA/iD,EAAA+iD,OAgLAwoF,CAAA95I,EAAAsvI,EAAA/gI,GAEAtM,IACAA,EAAAyiF,KAAAk1D,EAAAhpF,aAAA3uD,EAAAyiF,GAAA7tF,KAAAoL,EAAA23I,IACA33I,EAAAsB,QAAAvD,EAAA45I,GACA33I,IAAAO,QAEAo3I,EAAAhpF,gBAKAgpF,EAAAhpF,eAEAp3D,KAAA+J,QAAAvD,EAAA45I,GAGApgJ,KAAA6M,SAAA7M,KAAA6M,QAAA0zI,eAAA,SAAAC,GACA,mBAAAA,EAAAt1D,IACAs1D,EAAAt1D,GAAA7tF,KAAAmjJ,EAAAJ,GAGAI,EAAAz2I,SACAy2I,EAAAz2I,QAAAvD,EAAA45I,QAcAn1D,UAAA,SAAAj7E,EAAAC,EAAAwwI,GAOA,IANA,IAAAnzI,EAAAtN,KAAAuN,QAAAC,iBACA+uB,EAAA,CACAvsB,IACAC,KAGA1S,EAAA+P,EAAA7P,OAAA,EAAiCF,GAAA,EAAQA,IAAA,CACzC,IAAAmjJ,EAEA,GAAApzI,EAAA/P,KAAAkjJ,IACAnzI,EAAA/P,GAAA6Q,SAAAsyI,EAAAnB,EAAAjyI,EAAA/P,GAAAyS,EAAAC,OACAssB,EAAAk1E,YAAAl1E,EAAAk1E,UAAAnkG,EAAA/P,IAEAmjJ,IAAA7B,GAAA,CACAtiH,EAAAt+B,OAAAqP,EAAA/P,GACA,OAKA,OAAAg/B,IAIAq+F,EAAAh8H,KAAA,+EAAA2B,GACAyoF,EAAA9sF,UAAAqE,GAAA,SAAAwU,GAEA,IAAA2qI,EAAA1/I,KAAAirF,UAAAl2E,EAAA4hD,IAAA5hD,EAAA6hD,KACA+oF,EAAAD,EAAAzhJ,OAEA,iBAAAsC,EACAP,KAAA2gJ,QAAAhB,EACA3/I,KAAA4gJ,WAAA,CAAA7rI,EAAA4hD,IAAA5hD,EAAA6hD,KAEA52D,KAAA6gJ,MAAAlB,OACK,eAAAp/I,EACLP,KAAA6gJ,MAAAlB,OACK,aAAAp/I,EAAA,CACL,GAAAP,KAAA2gJ,UAAA3gJ,KAAA6gJ,QAIA7gJ,KAAA4gJ,YACAhhH,EAAAxD,KAAAp8B,KAAA4gJ,WAAA,CAAA7rI,EAAA4hD,IAAA5hD,EAAA6hD,MAAA,EACA,OAGA52D,KAAA4gJ,WAAA,KAGA5gJ,KAAA6/I,kBAAAH,EAAAn/I,EAAAwU,MA8BA6lH,EAAAt5H,MAAA0nF,EAAA/kF,GACA22H,EAAAt5H,MAAA0nF,EAAA41D,GACA,IAAAx9G,EAAA4nD,EACA7wD,EAAA93B,QAAA+gC,iBClUA,SAAAw9G,IACA5+I,KAAA4J,GAAA,YAAA5J,KAAA8gJ,WAAA9gJ,MACAA,KAAA4J,GAAA,YAAA5J,KAAA+gJ,MAAA/gJ,MACAA,KAAA4J,GAAA,UAAA5J,KAAAghJ,SAAAhhJ,MACAA,KAAA4J,GAAA,YAAA5J,KAAAghJ,SAAAhhJ,MAgEA,SAAAunB,EAAAtpB,EAAAya,GACA,OACAza,SACAwzG,UAAA/4F,KAAA+4F,WA7DAmtC,EAAA1iJ,UAAA,CACAyB,YAAAihJ,EACAkC,WAAA,SAAApoI,GACA,IAAAuoI,EAAAvoI,EAAAza,OAEAgjJ,KAAA5iE,YACAr+E,KAAAkhJ,gBAAAD,EACAA,EAAA3iE,UAAA,EACAt+E,KAAA2hG,GAAAjpF,EAAAg+C,QACA12D,KAAA4hG,GAAAlpF,EAAAo+C,QACA92D,KAAA6/I,kBAAAt4H,EAAA05H,EAAAvoI,GAAA,YAAAA,EAAA3D,SAGAgsI,MAAA,SAAAroI,GACA,IAAAuoI,EAAAjhJ,KAAAkhJ,gBAEA,GAAAD,EAAA,CACA,IAAAjxI,EAAA0I,EAAAg+C,QACAzmD,EAAAyI,EAAAo+C,QACAr8B,EAAAzqB,EAAAhQ,KAAA2hG,GACAjnE,EAAAzqB,EAAAjQ,KAAA4hG,GACA5hG,KAAA2hG,GAAA3xF,EACAhQ,KAAA4hG,GAAA3xF,EACAgxI,EAAA/oD,MAAAz9D,EAAAC,EAAAhiB,GACA1Y,KAAA6/I,kBAAAt4H,EAAA05H,EAAAvoI,GAAA,OAAAA,EAAA3D,OACA,IAAAosI,EAAAnhJ,KAAAirF,UAAAj7E,EAAAC,EAAAgxI,GAAAhjJ,OACAmjJ,EAAAphJ,KAAAqhJ,YACArhJ,KAAAqhJ,YAAAF,EAEAF,IAAAE,IACAC,GAAAD,IAAAC,GACAphJ,KAAA6/I,kBAAAt4H,EAAA65H,EAAA1oI,GAAA,YAAAA,EAAA3D,OAGAosI,OAAAC,GACAphJ,KAAA6/I,kBAAAt4H,EAAA45H,EAAAzoI,GAAA,YAAAA,EAAA3D,UAKAisI,SAAA,SAAAtoI,GACA,IAAAuoI,EAAAjhJ,KAAAkhJ,gBAEAD,IACAA,EAAA3iE,UAAA,GAGAt+E,KAAA6/I,kBAAAt4H,EAAA05H,EAAAvoI,GAAA,UAAAA,EAAA3D,OAEA/U,KAAAqhJ,aACArhJ,KAAA6/I,kBAAAt4H,EAAAvnB,KAAAqhJ,YAAA3oI,GAAA,OAAAA,EAAA3D,OAGA/U,KAAAkhJ,gBAAA,KACAlhJ,KAAAqhJ,YAAA,OAWA,IAAAjgH,EAAAw9G,EACAzmH,EAAA93B,QAAA+gC,mBC9EA,IAAAw5F,EAAWl3H,EAAQ,KAEnBK,EAAUL,EAAQ,KAElBia,EAAYja,EAAQ,KAEpBM,EAAcN,EAAQ,KAItB,SAAA49I,EAAAj+I,EAAAC,GACA,OAAAD,EAAAmV,SAAAlV,EAAAkV,OACAnV,EAAAkV,IAAAjV,EAAAiV,EAOAlV,EAAAse,GAAAre,EAAAqe,GAGAte,EAAAkV,EAAAjV,EAAAiV,EAGAlV,EAAAmV,OAAAlV,EAAAkV,OASA,IAAAywE,EAAA,WAEAjpF,KAAAuhJ,OAAA,GACAvhJ,KAAAwhJ,aAAA,GACAxhJ,KAAAyhJ,gBAAA,GAGAx4D,EAAA/sF,UAAA,CACAyB,YAAAsrF,EAMAxyE,SAAA,SAAA3X,EAAAC,GACA,QAAAxB,EAAA,EAAmBA,EAAAyC,KAAAuhJ,OAAA9jJ,OAAwBF,IAC3CyC,KAAAuhJ,OAAAhkJ,GAAAkZ,SAAA3X,EAAAC,IAYAyO,eAAA,SAAAtC,EAAAw2I,GAOA,OANAA,MAAA,EAEAx2I,GACAlL,KAAA2hJ,kBAAAD,GAGA1hJ,KAAAwhJ,cASAG,kBAAA,SAAAD,GACA1hJ,KAAAyhJ,gBAAA,EAIA,IAHA,IAAAviF,EAAAl/D,KAAAuhJ,OACAK,EAAA5hJ,KAAAwhJ,aAEAjkJ,EAAA,EAAAC,EAAA0hE,EAAAzhE,OAAuCF,EAAAC,EAASD,IAChDyC,KAAA6hJ,yBAAA3iF,EAAA3hE,GAAA,KAAAmkJ,GAGAE,EAAAnkJ,OAAAuC,KAAAyhJ,gBACA19I,EAAAkJ,iBAAAjJ,EAAA49I,EAAAN,IAEAO,yBAAA,SAAAp5I,EAAAowH,EAAA6oB,GACA,IAAAj5I,EAAA2F,QAAAszI,EAAA,CAIAj5I,EAAA4tG,eAEA5tG,EAAA85B,SACA95B,EAAAyC,SAGAzC,EAAAglH,cACA,IAAAq0B,EAAAr5I,EAAAu1G,SAEA,GAAA8jC,EAAA,CAGAjpB,EADAA,EACAA,EAAAl8H,QAEA,GAMA,IAHA,IAAAolJ,EAAAD,EACAE,EAAAv5I,EAEAs5I,GAEAA,EAAA/4I,OAAAg5I,EACAD,EAAA5vI,kBACA0mH,EAAAp3H,KAAAsgJ,GACAC,EAAAD,EACAA,IAAA/jC,SAIA,GAAAv1G,EAAAiO,QAAA,CAGA,IAFA,IAAA60E,EAAA9iF,EAAA4iF,UAEA9tF,EAAA,EAAqBA,EAAAguF,EAAA9tF,OAAqBF,IAAA,CAC1C,IAAAykB,EAAAupE,EAAAhuF,GAGAkL,EAAA85B,UACAvgB,EAAAugB,SAAA,GAGAviC,KAAA6hJ,yBAAA7/H,EAAA62G,EAAA6oB,GAIAj5I,EAAA85B,SAAA,OAEA95B,EAAA01E,YAAA06C,EACA74H,KAAAwhJ,aAAAxhJ,KAAAyhJ,mBAAAh5I,IAQA2hF,QAAA,SAAA3hF,GACAA,EAAA6iF,YAAAtrF,OAIAyI,aAAAkV,GACAlV,EAAAmjF,qBAAA5rF,MAGAA,KAAAiqF,aAAAxhF,GAEAzI,KAAAuhJ,OAAA9/I,KAAAgH,KAOA4hF,QAAA,SAAA5hF,GACA,SAAAA,EAAA,CAEA,QAAAlL,EAAA,EAAqBA,EAAAyC,KAAAuhJ,OAAA9jJ,OAAwBF,IAAA,CAC7C,IAAAy1E,EAAAhzE,KAAAuhJ,OAAAhkJ,GAEAy1E,aAAAr1D,GACAq1D,EAAA6Y,uBAAA7rF,MAOA,OAHAA,KAAAuhJ,OAAA,GACAvhJ,KAAAwhJ,aAAA,QACAxhJ,KAAAyhJ,gBAAA,GAIA,GAAAh5I,aAAApM,MACA,CAAAkB,EAAA,UAAA+nD,EAAA78C,EAAAhL,OAAoCF,EAAA+nD,EAAO/nD,IAC3CyC,KAAAqqF,QAAA5hF,EAAAlL,QAFA,CAQA,IAAA0wB,EAAA2sG,EAAA/5H,QAAAb,KAAAuhJ,OAAA94I,GAEAwlB,GAAA,IACAjuB,KAAA+pF,eAAAthF,GAEAzI,KAAAuhJ,OAAAvrI,OAAAiY,EAAA,GAEAxlB,aAAAkV,GACAlV,EAAAojF,uBAAA7rF,SAIAiqF,aAAA,SAAAxhF,GAMA,OALAA,IACAA,EAAA6iF,UAAAtrF,KACAyI,EAAA4N,OAAA,IAGArW,MAEA+pF,eAAA,SAAAthF,GAKA,OAJAA,IACAA,EAAA6iF,UAAA,MAGAtrF,MAMA8V,QAAA,WACA9V,KAAAiiJ,YAAAjiJ,KAAAuhJ,OAAA,MAEAW,oBAAAZ,GAEA,IAAAlgH,EAAA6nD,EACA9wD,EAAA93B,QAAA+gC,mBCvOA,IAAA+vF,EAAeztH,EAAQ,KAEvB6I,EAAU7I,EAAQ,KAElBohD,EAAYphD,EAAQ,KAEpB5B,EAAAgjD,EAAAhjD,SACAD,EAAAijD,EAAAjjD,WACA1D,EAAA2mD,EAAA3mD,SACAoD,EAAAujD,EAAAvjD,YACAV,EAAAikD,EAAAjkD,QAMA2sH,EAAA,WAKAxtH,KAAA4tH,UAAA,IAGAJ,EAAAtxH,UAAA,CACAyB,YAAA6vH,EAcA7oF,QAAA,SAAA1lB,EAAAylB,GACA,IAAAzmC,EACAkkJ,GAAA,EACA15I,EAAAzI,KACAoH,EAAApH,KAAA+gB,KAEA,GAAA9B,EAAA,CACA,IAAAmjI,EAAAnjI,EAAA7K,MAAA,KACAhT,EAAAqH,EAEA05I,EAAA,UAAAC,EAAA,GAEA,QAAA7kJ,EAAA,EAAA+nD,EAAA88F,EAAA3kJ,OAA8CF,EAAA+nD,EAAO/nD,IACrD6D,IAIAA,IAAAghJ,EAAA7kJ,KAGA6D,IACAnD,EAAAmD,QAGAnD,EAAAwK,EAGA,GAAAxK,EAAA,CAKA,IAAA2vH,EAAAnlH,EAAAmlH,UACAwB,EAAA,IAAA+B,EAAAlzH,EAAAymC,GAaA,OAZA0qF,EAAAuC,OAAA,SAAA1zH,GACAwK,EAAA4N,MAAA8rI,KACK1vB,KAAA,WAEL7E,EAAA53G,OAAAnV,EAAA+sH,EAAAwB,GAAA,KAEAxB,EAAAnsH,KAAA2tH,GAEAhoH,GACAA,EAAAuC,UAAAkkH,YAAAuB,GAGAA,EAlBA7iH,EAAA,aAAA0S,EAAA,+BAAAxW,EAAAxB,KAyBAwG,cAAA,SAAA6kH,GAIA,IAHA,IAAA1E,EAAA5tH,KAAA4tH,UACApwH,EAAAowH,EAAAnwH,OAEAF,EAAA,EAAmBA,EAAAC,EAASD,IAC5BqwH,EAAArwH,GAAA05D,KAAAq7D,GAIA,OADA1E,EAAAnwH,OAAA,EACAuC,MAiCA0mB,UAAA,SAAAzoB,EAAAyyC,EAAAg2B,EAAA2oD,EAAAh4C,EAAAm4C,GAEA1tH,EAAA4kE,IACA2Q,EAAAg4C,EACAA,EAAA3oD,EACAA,EAAA,GAEA7kE,EAAAwtH,IACAh4C,EAAAg4C,EACAA,EAAA,SACA3oD,EAAA,GAEA7kE,EAAA6kE,IACA2Q,EAAA3Q,EACAA,EAAA,GAEA7kE,EAAA6uC,IACA2mC,EAAA3mC,EACAA,EAAA,KAEAA,IACAA,EAAA,KAIA1wC,KAAAyN,gBAEAzN,KAAAqiJ,kBAAA,GAAAriJ,KAAA/B,EAAAyyC,EAAAg2B,GAIA,IAAAknD,EAAA5tH,KAAA4tH,UAAAjxH,QACA0wB,EAAAugG,EAAAnwH,OAEA,SAAAg1H,MACAplG,GAGAgqD,OAMAhqD,GACAgqD,OAKA,QAAA95E,EAAA,EAAmBA,EAAAqwH,EAAAnwH,OAAsBF,IACzCqwH,EAAArwH,GAAAk1H,QAAAx8E,MAAAo5E,EAAAG,IA6BA6yB,kBAAA,SAAApjI,EAAA/hB,EAAAe,EAAAyyC,EAAAg2B,GACA,IAAA47E,EAAA,GACAC,EAAA,EAEA,QAAAhiJ,KAAAtC,EACA,GAAAA,EAAAF,eAAAwC,GAIA,SAAArD,EAAAqD,GACApC,EAAAF,EAAAsC,MAAAgB,EAAAtD,EAAAsC,IACAP,KAAAqiJ,kBAAApjI,IAAA,IAAA1e,IAAArD,EAAAqD,GAAAtC,EAAAsC,GAAAmwC,EAAAg2B,IAEA47E,EAAA/hJ,GAAAtC,EAAAsC,GACAgiJ,UAEO,SAAAtkJ,EAAAsC,GAGP,GAAA0e,EAES,CAET,IAAAiH,EAAA,GACAA,EAAAjH,GAAA,GACAiH,EAAAjH,GAAA1e,GAAAtC,EAAAsC,GACAP,KAAA2mB,KAAAT,QANAlmB,KAAA2mB,KAAApmB,EAAAtC,EAAAsC,IAeA,OAJAgiJ,EAAA,GACAviJ,KAAA2kC,QAAA1lB,GAAA,GAAAwyG,KAAA,MAAA/gF,EAAA,IAAAA,EAAA4xG,GAAA57E,SAAA,GAGA1mE,OAGA,IAAAohC,EAAAosF,EACAr1F,EAAA93B,QAAA+gC,mBC7PA,IAAAohH,EAAkB9+I,EAAQ,KAiB1B,SAAAqqH,EAAApoE,GACA3lD,KAAAywH,QAAA9qE,EAAA1nD,OAEA+B,KAAAyiJ,MAAA98F,EAAAkrE,MAAA,IAEA7wH,KAAA+wH,OAAAprE,EAAA+gB,OAAA,EAGA1mE,KAAA0iJ,cAAA,EAEA1iJ,KAAA0kC,KAAA,MAAAihB,EAAAjhB,MAAAihB,EAAAjhB,KACA1kC,KAAAy4B,IAAAktB,EAAAltB,KAAA,EACAz4B,KAAAqvH,OAAA1pE,EAAA0pE,QAAA,SACArvH,KAAAgxH,QAAArrE,EAAAqrE,QACAhxH,KAAAkxH,UAAAvrE,EAAAurE,UACAlxH,KAAA2iJ,UAAAh9F,EAAAg9F,UACA3iJ,KAAA4iJ,YAAA,EACA5iJ,KAAA6xH,SAAA,EAGA9D,EAAA7xH,UAAA,CACAyB,YAAAowH,EACArpE,KAAA,SAAAm+F,EAAAC,GAQA,GALA9iJ,KAAA0iJ,eACA1iJ,KAAA+iJ,WAAAF,EAAA7iJ,KAAA+wH,OACA/wH,KAAA0iJ,cAAA,GAGA1iJ,KAAA6xH,QACA7xH,KAAA4iJ,aAAAE,MADA,CAKA,IAAAt2H,GAAAq2H,EAAA7iJ,KAAA+iJ,WAAA/iJ,KAAA4iJ,aAAA5iJ,KAAAyiJ,MAEA,KAAAj2H,EAAA,IAIAA,EAAA7d,KAAAC,IAAA4d,EAAA,GACA,IAAA6iG,EAAArvH,KAAAqvH,OACA2zB,EAAA,iBAAA3zB,EAAAmzB,EAAAnzB,KACA4zB,EAAA,oBAAAD,IAAAx2H,KAGA,OAFAxsB,KAAAkjJ,KAAA,QAAAD,GAEA,GAAAz2H,EACAxsB,KAAA0kC,MACA1kC,KAAAmjJ,QAAAN,GAGA,YAKA7iJ,KAAAojJ,cAAA,EACA,WAGA,QAEAD,QAAA,SAAAN,GACA,IAAAl0H,GAAAk0H,EAAA7iJ,KAAA+iJ,WAAA/iJ,KAAA4iJ,aAAA5iJ,KAAAyiJ,MACAziJ,KAAA+iJ,WAAAF,EAAAl0H,EAAA3uB,KAAAy4B,IACAz4B,KAAA4iJ,YAAA,EACA5iJ,KAAAojJ,cAAA,GAEAF,KAAA,SAAAlqI,EAAAqqI,GAGArjJ,KAFAgZ,EAAA,KAAAA,IAGAhZ,KAAAgZ,GAAAhZ,KAAAywH,QAAA4yB,IAGAzxB,MAAA,WACA5xH,KAAA6xH,SAAA,GAEAC,OAAA,WACA9xH,KAAA6xH,SAAA,IAGA,IAAAzwF,EAAA2sF,EACA51F,EAAA93B,QAAA+gC,iBChGA,IAAAiuF,EAAA,CAKA35C,OAAA,SAAAz2C,GACA,OAAAA,GAOAqkH,YAAA,SAAArkH,GACA,OAAAA,KAOAskH,aAAA,SAAAtkH,GACA,OAAAA,GAAA,EAAAA,IAOAukH,eAAA,SAAAvkH,GACA,OAAAA,GAAA,KACA,GAAAA,KAGA,MAAAA,KAAA,OAQAwkH,QAAA,SAAAxkH,GACA,OAAAA,OAOAykH,SAAA,SAAAzkH,GACA,QAAAA,MAAA,GAOA0kH,WAAA,SAAA1kH,GACA,OAAAA,GAAA,KACA,GAAAA,MAGA,KAAAA,GAAA,GAAAA,IAAA,IAQA2kH,UAAA,SAAA3kH,GACA,OAAAA,SAOA4kH,WAAA,SAAA5kH,GACA,YAAAA,SAOA6kH,aAAA,SAAA7kH,GACA,OAAAA,GAAA,KACA,GAAAA,SAGA,KAAAA,GAAA,GAAAA,MAAA,IAQA8kH,UAAA,SAAA9kH,GACA,OAAAA,WAOA+kH,WAAA,SAAA/kH,GACA,QAAAA,UAAA,GAOAglH,aAAA,SAAAhlH,GACA,OAAAA,GAAA,KACA,GAAAA,UAGA,KAAAA,GAAA,GAAAA,QAAA,IAQAilH,aAAA,SAAAjlH,GACA,SAAAtwB,KAAA6gC,IAAAvQ,EAAAtwB,KAAA4U,GAAA,IAOA4gI,cAAA,SAAAllH,GACA,OAAAtwB,KAAA2gC,IAAArQ,EAAAtwB,KAAA4U,GAAA,IAOA6gI,gBAAA,SAAAnlH,GACA,YAAAtwB,KAAA6gC,IAAA7gC,KAAA4U,GAAA0b,KAQAolH,cAAA,SAAAplH,GACA,WAAAA,EAAA,EAAAtwB,KAAA0f,IAAA,KAAA4Q,EAAA,IAOAqlH,eAAA,SAAArlH,GACA,WAAAA,EAAA,IAAAtwB,KAAA0f,IAAA,MAAA4Q,IAOAslH,iBAAA,SAAAtlH,GACA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,KACA,GAAAtwB,KAAA0f,IAAA,KAAA4Q,EAAA,GAGA,MAAAtwB,KAAA0f,IAAA,OAAA4Q,EAAA,MAQAulH,WAAA,SAAAvlH,GACA,SAAAtwB,KAAAmtB,KAAA,EAAAmD,MAOAwlH,YAAA,SAAAxlH,GACA,OAAAtwB,KAAAmtB,KAAA,KAAAmD,MAOAylH,cAAA,SAAAzlH,GACA,OAAAA,GAAA,MACA,IAAAtwB,KAAAmtB,KAAA,EAAAmD,KAAA,GAGA,IAAAtwB,KAAAmtB,KAAA,GAAAmD,GAAA,GAAAA,GAAA,IAQA0lH,UAAA,SAAA1lH,GACA,IAAArC,EACAv5B,EAAA,GAGA,WAAA47B,EACA,EAGA,IAAAA,EACA,IAGA57B,KAAA,GACAA,EAAA,EACAu5B,EAAAw2B,IAEAx2B,EAdA,GAcAjuB,KAAAmvC,KAAA,EAAAz6C,IAAA,EAAAsL,KAAA4U,KAGAlgB,EAAAsL,KAAA0f,IAAA,MAAA4Q,GAAA,IAAAtwB,KAAA2gC,KAAArQ,EAAArC,IAAA,EAAAjuB,KAAA4U,IAjBA,MAwBAqhI,WAAA,SAAA3lH,GACA,IAAArC,EACAv5B,EAAA,GAGA,WAAA47B,EACA,EAGA,IAAAA,EACA,IAGA57B,KAAA,GACAA,EAAA,EACAu5B,EAAAw2B,IAEAx2B,EAdA,GAcAjuB,KAAAmvC,KAAA,EAAAz6C,IAAA,EAAAsL,KAAA4U,IAGAlgB,EAAAsL,KAAA0f,IAAA,MAAA4Q,GAAAtwB,KAAA2gC,KAAArQ,EAAArC,IAAA,EAAAjuB,KAAA4U,IAjBA,IAiBA,IAOAshI,aAAA,SAAA5lH,GACA,IAAArC,EACAv5B,EAAA,GAGA,WAAA47B,EACA,EAGA,IAAAA,EACA,IAGA57B,KAAA,GACAA,EAAA,EACAu5B,EAAAw2B,IAEAx2B,EAdA,GAcAjuB,KAAAmvC,KAAA,EAAAz6C,IAAA,EAAAsL,KAAA4U,KAGA0b,GAAA,KACA57B,EAAAsL,KAAA0f,IAAA,MAAA4Q,GAAA,IAAAtwB,KAAA2gC,KAAArQ,EAAArC,IAAA,EAAAjuB,KAAA4U,IAlBA,KAkBA,GAGAlgB,EAAAsL,KAAA0f,IAAA,OAAA4Q,GAAA,IAAAtwB,KAAA2gC,KAAArQ,EAAArC,IAAA,EAAAjuB,KAAA4U,IArBA,IAqBA,OAQAuhI,OAAA,SAAA7lH,GACA,IAAArC,EAAA,QACA,OAAAqC,MAAArC,EAAA,GAAAqC,EAAArC,IAOAmoH,QAAA,SAAA9lH,GACA,IAAArC,EAAA,QACA,QAAAqC,MAAArC,EAAA,GAAAqC,EAAArC,GAAA,GAOAooH,UAAA,SAAA/lH,GACA,IAAArC,EAAA,UAEA,OAAAqC,GAAA,KACAA,MAAArC,EAAA,GAAAqC,EAAArC,GAAA,GAGA,KAAAqC,GAAA,GAAAA,IAAArC,EAAA,GAAAqC,EAAArC,GAAA,IAQAqoH,SAAA,SAAAhmH,GACA,SAAAowF,EAAA61B,UAAA,EAAAjmH,IAOAimH,UAAA,SAAAjmH,GACA,OAAAA,EAAA,OACA,OAAAA,IACKA,EAAA,OACL,QAAAA,GAAA,UAAAA,EAAA,IACKA,EAAA,SACL,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAQAkmH,YAAA,SAAAlmH,GACA,OAAAA,EAAA,GACA,GAAAowF,EAAA41B,SAAA,EAAAhmH,GAGA,GAAAowF,EAAA61B,UAAA,EAAAjmH,EAAA,QAGAmC,EAAAiuF,EACAl3F,EAAA93B,QAAA+gC,mBCzXA,IAEA55B,EAFc9D,EAAQ,KAEtB8D,iBAEAozH,EAAWl3H,EAAQ,KAEnB6I,EAAU7I,EAAQ,KAElB+a,EAAmB/a,EAAQ,KAE3BM,EAAcN,EAAQ,KAEtB0hJ,EAAY1hJ,EAAQ,KAEpB+wH,EAA4B/wH,EAAQ,KAEpCoM,EAAYpM,EAAQ,KAEpBK,EAAUL,EAAQ,KAOlB,SAAA2hJ,EAAA3iJ,GACA,OAAAkmD,SAAAlmD,EAAA,IAmBA,IAAAqpF,EAAA,IAAAttE,EAAA,SACA+/E,EAAA,IAAA//E,EAAA,SA0DA,IAAAyqE,EAAA,SAAAlW,EAAAzlE,EAAAxG,GACA/G,KAAAT,KAAA,SAEA,IAAA+lJ,GAAAtyE,EAAAuyE,UACA,WAAAvyE,EAAAuyE,SAAAh2H,cACAvvB,KAAAwlJ,MAAAz+I,EAAA6zH,EAAAj6H,OAAA,GAAoCoG,GAAA,IAKpC/G,KAAA8M,IAAA/F,EAAAS,oBAMAxH,KAAAylJ,cAAAH,EAMAtlJ,KAAAgzE,OACA,IAAA0yE,EAAA1yE,EAAAjjE,MAEA21I,IACAA,EAAA,6CACAA,EAAA,uBAAAA,EAAA,eAAAA,EAAA,gCACA1yE,EAAA83C,UAAA,IAOA9qH,KAAAuN,UAMA,IAAAo4I,EAAA3lJ,KAAA4lJ,YAAA,GAMAC,EAAA7lJ,KAAA8lJ,QAAA,GAaA,GAPA9lJ,KAAA+lJ,aAAA,GAKA/lJ,KAAAgmJ,2BAAA,EAEAV,EAKG,CACH,IAAA79I,EAAAurE,EAAAvrE,MACAC,EAAAsrE,EAAAtrE,OAEA,MAAAX,EAAAU,QACAA,EAAAV,EAAAU,OAGA,MAAAV,EAAAW,SACAA,EAAAX,EAAAW,QAGA1H,KAAA8M,IAAA/F,EAAAS,kBAAA,EAEAwrE,EAAAvrE,QAAAzH,KAAA8M,IACAkmE,EAAAtrE,SAAA1H,KAAA8M,IACA9M,KAAAimJ,OAAAx+I,EACAzH,KAAAkmJ,QAAAx+I,EAGA,IAAAy+I,EAAA,IAAAf,EAAApyE,EAAAhzE,UAAA8M,KACAq5I,EAAAC,aAAA,EACAD,EAAAE,cAGAR,EA7KA,QA6KAM,EACAA,EAAA3tI,OA9KA,OAgLAmtI,EAAAlkJ,KAhLA,QAiLAzB,KAAAsmJ,SAAAtzE,MAlCA,CACAhzE,KAAAimJ,OAAAjmJ,KAAAumJ,SAAA,GACAvmJ,KAAAkmJ,QAAAlmJ,KAAAumJ,SAAA,GACA,IAAAC,EAAAxmJ,KAAAsmJ,SA9EA,SAAA7+I,EAAAC,GACA,IAAA8+I,EAAA9mJ,SAAAC,cAAA,OAGA,OADA6mJ,EAAAz2I,MAAA02I,QAAA,gDAAAh/I,EAAA,eAAAC,EAAA,8CAAAgiB,KAAA,KAAyK,IACzK88H,EA0EAE,CAAA1mJ,KAAAimJ,OAAAjmJ,KAAAkmJ,SACAlzE,EAAA+3C,YAAAy7B,GAsCAxmJ,KAAA2mJ,YAAA,KACA3mJ,KAAA4mJ,eAAA,IAGA19D,EAAAhtF,UAAA,CACAyB,YAAAurF,EACA56E,QAAA,WACA,gBAOAu4I,eAAA,WACA,OAAA7mJ,KAAAylJ,eAMA97D,gBAAA,WACA,OAAA3pF,KAAAsmJ,UAEAQ,sBAAA,WACA,IAAAC,EAAA/mJ,KAAA2pF,kBAEA,GAAAo9D,EACA,OACAC,WAAAD,EAAAC,YAAA,EACAC,UAAAF,EAAAE,WAAA,IASA1iH,QAAA,SAAA2iH,GACA,IAAA55I,EAAAtN,KAAAuN,QAAAC,gBAAA,GACAm4I,EAAA3lJ,KAAA4lJ,YACA5lJ,KAAAmnJ,UAAAx4I,KAAAskB,SAEAjzB,KAAAonJ,WAAA95I,EAAA45I,EAAAlnJ,KAAAmnJ,WAGA,QAAA5pJ,EAAA,EAAmBA,EAAAooJ,EAAAloJ,OAAuBF,IAAA,CAC1C,IAAAgb,EAAAotI,EAAApoJ,GACAijJ,EAAAxgJ,KAAA8lJ,QAAAvtI,GAEA,IAAAioI,EAAA4F,aAAA5F,EAAAj8G,QAAA,CACA,IAAA8iH,EAAA,IAAA9pJ,EAAAyC,KAAAsnJ,iBAAA,KACA9G,EAAAj8G,QAAA8iH,IAKA,OADArnJ,KAAA4qF,eACA5qF,MAEAghB,SAAA,SAAAvY,EAAAgY,GACA,IAAAhY,EAAA8+I,WAAA,CAIA,IAAAC,EAAA,IAAA/+I,EAAA9K,YAAA,CACAoS,MAAAtH,EAAAsH,MACAyX,MAAA/e,EAAA+e,QAEAggI,EAAAC,OAAAh/I,EACAA,EAAA8+I,WAAAC,EACAA,EAAA5wI,SAAA6J,GAEAzgB,KAAA4mJ,eAAAnlJ,KAAA+lJ,KAEA1lI,YAAA,SAAArZ,GACA,IAAA++I,EAAA/+I,EAAA8+I,WACAG,EAAA1nJ,KAAA4mJ,eACA34H,EAAA2sG,EAAA/5H,QAAA6mJ,EAAAF,GAEAv5H,GAAA,GACAy5H,EAAA1xI,OAAAiY,EAAA,GAGAxlB,EAAA8+I,WAAA,MAEA18D,WAAA,SAAApiF,GAGA,IAFA,IAAAi/I,EAAA1nJ,KAAA4mJ,eAEArpJ,EAAA,EAAmBA,EAAAmqJ,EAAAjqJ,OAA0BF,IAAA,CAC7C,IAAAK,EAAA8pJ,EAAAnqJ,GAAAkqJ,OAEA7pJ,IACAA,EAAA2pJ,WAAA,MAIAG,EAAAjqJ,OAAA,GAEAmtF,aAAA,WACA,IAAA88D,EAAA1nJ,KAAA4mJ,eACAppJ,EAAAkqJ,EAAAjqJ,OACAkqJ,EAAA3nJ,KAAA2mJ,YAGA,GAFAgB,KAAAzuI,QAEA1b,EAAA,CAIAwG,EAAA0jJ,EAAA1nJ,KAAAuN,QAAA20I,qBAGAyF,IACAA,EAAA3nJ,KAAA2mJ,YAAA3mJ,KAAA4nJ,SA3SA,MA8SA,IAAAh7G,EAAA,GACA+6G,EAAA9lH,IAAAinD,OAEA,QAAAvrF,EAAA,EAAmBA,EAAAC,GAAS,CAC5B,IAAAiL,EAAAi/I,EAAAnqJ,GACAsqJ,EAAAp/I,EAAAg/I,OAGAI,KAAA9mI,MAOAxjB,IAGAsqJ,EAAAzpE,YACA31E,EAAAoe,UAAAghI,EAAAhhI,UACApe,EAAAw9F,aAAA4hD,EAAA5hD,aACAx9F,EAAA01E,YAAA0pE,EAAA1pE,YAEAn+E,KAAA8nJ,WAAAr/I,EAAAk/I,GAAA,EAAA/6G,MAdA86G,EAAA1xI,OAAAzY,EAAA,GACAsqJ,EAAAN,WAAA,KACA/pJ,KAgBAmqJ,EAAA9lH,IAAA0mC,YAEAw/E,cAAA,WACA,OAAA/nJ,KAAA4nJ,SA5UA,MA8UAR,WAAA,SAAA95I,EAAA45I,EAAAc,GACA,GAAAhoJ,KAAAmnJ,YAAAa,EAAA,CAIAd,MAAA,EAEAlnJ,KAAAioJ,mBAAA36I,GAEA,IAAA46I,EAAAloJ,KAAAmoJ,aAAA76I,EAAA45I,GAMA,GAJAlnJ,KAAAgmJ,2BACAhmJ,KAAAooJ,sBAGAF,EAAA,CACA,IAAAp6I,EAAA9N,KACAy0H,EAAA,WACA3mH,EAAAs5I,WAAA95I,EAAA45I,EAAAc,QAIAI,mBAAA,WACA,IAAAvmH,EAAA7hC,KAAA4nJ,SApWA,QAoWA/lH,IACAp6B,EAAAzH,KAAAsmJ,SAAA7+I,MACAC,EAAA1H,KAAAsmJ,SAAA5+I,OACAm6B,EAAAwmH,UAAA,IAAA5gJ,EAAAC,GAEA1H,KAAAsoJ,iBAAA,SAAA9H,GACAA,EAAA+H,SACA1mH,EAAAk8C,UAAAyiE,EAAA35I,IAAA,IAAAY,EAAAC,MAIAygJ,aAAA,SAAA76I,EAAA45I,GAGA,IAFA,IAAAsB,EAAA,GAEAC,EAAA,EAAoBA,EAAAzoJ,KAAA4lJ,YAAAnoJ,OAA8BgrJ,IAAA,CAClD,IAAAjwI,EAAAxY,KAAA4lJ,YAAA6C,IACAjI,EAAAxgJ,KAAA8lJ,QAAAttI,IAEA4tI,aAAA5F,IAAAxgJ,KAAA2mJ,cAAAnG,EAAAj+G,SAAA2kH,IACAsB,EAAA/mJ,KAAA++I,GAMA,IAFA,IAAA0H,GAAA,EAEAjpH,EAAA,EAAmBA,EAAAupH,EAAA/qJ,OAAsBwhC,IAAA,CACzC,IAAAuhH,EACA3+G,GADA2+G,EAAAgI,EAAAvpH,IACA4C,IACA+K,EAAA,GACA/K,EAAAinD,OACA,IAAA7yC,EAAAixG,EAAA1G,EAAAkI,aAAAlI,EAAAmI,YACAC,GAAA1B,GAAA1G,EAAA/hE,aAAAlzE,KAAAs9I,IACAv9I,EAAAs9I,GAAAr9I,KAAAs9I,MACAxB,EAAA7G,EAAAhoI,SAAAxY,KAAA4lJ,YAAA,GAAA5lJ,KAAAsnJ,iBAAA,KAEA,GAAA9G,EAAAkI,eAAAlI,EAAAsI,WACAtI,EAAAtnI,OAAA,EAAAmuI,QACO,GAAApxG,IAAAuqG,EAAAkI,aAAA,CACP,IAAAK,EAAAz7I,EAAA2oC,GAEA8yG,EAAAtqE,aAAAsqE,EAAAt+C,WAAAy8C,GACA1G,EAAAtnI,OAAA,EAAAmuI,IAIA,IAAApxG,IACA3pC,QAAAkpB,MAAA,4CACAygB,EAAAuqG,EAAAkI,cAGA,QAAAnrJ,EAAA04C,EAAyB14C,EAAAijJ,EAAAsI,WAAsBvrJ,IAAA,CAC/C,IAAAkL,EAAA6E,EAAA/P,GAMA,GAJAyC,KAAA8nJ,WAAAr/I,EAAA+3I,EAAA0G,EAAAt6G,GAEAnkC,EAAA85B,SAAA,EAEAqmH,EAKA,GAHAr9I,KAAAs9I,MAAAv9I,EAGA,GACA,MAKAk1I,EAAAmI,YAAAprJ,EAEAijJ,EAAAmI,YAAAnI,EAAAsI,aACAZ,GAAA,GAGAt7G,EAAAo8G,iBAEAnnH,EAAA0mC,UAGA1mC,EAAA0mC,UAYA,OATAxkE,EAAAqhC,KAEAw1F,EAAAh8H,KAAAoB,KAAA8lJ,QAAA,SAAAtF,GACAA,KAAA3+G,KAAA2+G,EAAA3+G,IAAAgjG,MACA2b,EAAA3+G,IAAAgjG,SAKAqjB,GAEAJ,WAAA,SAAAr/I,EAAAwgJ,EAAAC,EAAAt8G,GACA,IAAA/K,EAAAonH,EAAApnH,IACApiB,EAAAhX,EAAAoe,UAEA,IAAAoiI,EAAA1mH,SAAA2mH,KACAzgJ,EAAA21E,WACA,IAAA31E,EAAAsH,MAAAsmE,WAGA52D,KAAA,IAAAA,EAAA,OACAhX,EAAA81E,UAhbA,SAAA91E,EAAAhB,EAAAC,GASA,OARAqkF,EAAArwD,KAAAjzB,EAAA0W,mBAEA1W,EAAAoe,WACAklE,EAAAvsE,eAAA/W,EAAAoe,WAGA23E,EAAA/2F,QACA+2F,EAAA92F,UACAqkF,EAAAtrD,UAAA+9D,GAuaA2qD,CAAA1gJ,EAAAzI,KAAAimJ,OAAAjmJ,KAAAkmJ,UAAA,CACA,IAAArtB,EAAApwH,EAAA01E,YAEAvxC,EAAAo8G,kBAvaA,SAAAnwB,EAAAuwB,GACA,GAAAvwB,GAAAuwB,EAEA,SAGA,IAAAvwB,IAAAuwB,GAAAvwB,EAAAp7H,SAAA2rJ,EAAA3rJ,OACA,SAGA,QAAAF,EAAA,EAAiBA,EAAAs7H,EAAAp7H,OAAsBF,IACvC,GAAAs7H,EAAAt7H,KAAA6rJ,EAAA7rJ,GACA,SA2ZA8rJ,CAAAxwB,EAAAjsF,EAAAo8G,mBAEAp8G,EAAAo8G,kBACAC,EAAApnH,IAAA0mC,UACA37B,EAAAo8G,gBAAA,KAEAp8G,EAAA9K,OAAA,MAIA+2F,IACAh3F,EAAAinD,OAjaA,SAAA+vC,EAAAh3F,GACA,QAAAtkC,EAAA,EAAiBA,EAAAs7H,EAAAp7H,OAAsBF,IAAA,CACvC,IAAAygH,EAAA6a,EAAAt7H,GACAygH,EAAA17E,aAAAT,GACAA,EAAAsB,YACA66E,EAAA36E,UAAAxB,EAAAm8E,EAAAx2F,OACAqa,EAAA+uF,OAEA5S,EAAAz6E,iBAAA1B,IA0ZAynH,CAAAzwB,EAAAh3F,GACA+K,EAAAo8G,gBAAAnwB,IAIApwH,EAAA02C,aAAA12C,EAAA02C,YAAAtd,GACAp5B,EAAAm5B,MAAAC,EAAA+K,EAAA9K,QAAA,MACA8K,EAAA9K,OAAAr5B,EACAA,EAAAk2E,YAAAl2E,EAAAk2E,WAAA98C,KAUA+lH,SAAA,SAAApvI,EAAA+vI,GACAvoJ,KAAAylJ,gBAAAzlJ,KAAAgmJ,4BACAxtI,EA9eA,QAifA,IAAAgoI,EAAAxgJ,KAAA8lJ,QAAAttI,GAsBA,OApBAgoI,KAEAA,EAAA,IAAA4E,EAAA,MAAA5sI,EAAAxY,UAAA8M,MACA0L,SACAgoI,EAAA4F,aAAA,EAEApmJ,KAAA+lJ,aAAAvtI,IACAoiH,EAAA58H,MAAAwiJ,EAAAxgJ,KAAA+lJ,aAAAvtI,IAAA,GAGA+vI,IACA/H,EAAA+H,WAGAvoJ,KAAAupJ,YAAA/wI,EAAAgoI,GAGAA,EAAA6F,eAGA7F,GAEA+I,YAAA,SAAA/wI,EAAAgoI,GACA,IAAAgJ,EAAAxpJ,KAAA8lJ,QACAH,EAAA3lJ,KAAA4lJ,YACApoJ,EAAAmoJ,EAAAloJ,OACAgsJ,EAAA,KACAlsJ,GAAA,EACAipJ,EAAAxmJ,KAAAsmJ,SAEA,GAAAkD,EAAAhxI,GACAjM,EAAA,UAAAiM,EAAA,+BAKA,GA/gBA,SAAAgoI,GACA,QAAAA,MAIAA,EAAA4F,aAIA,oBAAA5F,EAAA/2I,QAAA,oBAAA+2I,EAAAj8G,SAsgBAmlH,CAAAlJ,GAAA,CAKA,GAAAhjJ,EAAA,GAAAgb,EAAAmtI,EAAA,IACA,IAAApoJ,EAAA,EAAiBA,EAAAC,EAAA,KACjBmoJ,EAAApoJ,GAAAib,GAAAmtI,EAAApoJ,EAAA,GAAAib,GAD8Bjb,KAM9BksJ,EAAAD,EAAA7D,EAAApoJ,IAQA,GALAooJ,EAAA3vI,OAAAzY,EAAA,IAAAib,GACAgxI,EAAAhxI,GAAAgoI,GAIAA,EAAA+H,QACA,GAAAkB,EAAA,CACA,IAAAE,EAAAF,EAAA5iJ,IAEA8iJ,EAAAh+D,YACA66D,EAAAl6B,aAAAk0B,EAAA35I,IAAA8iJ,EAAAh+D,aAEA66D,EAAAz7B,YAAAy1B,EAAA35I,UAGA2/I,EAAAj6B,WACAi6B,EAAAl6B,aAAAk0B,EAAA35I,IAAA2/I,EAAAj6B,YAEAi6B,EAAAz7B,YAAAy1B,EAAA35I,UAhCA0F,EAAA,mBAAAiM,EAAA,kBAsCAoxI,UAAA,SAAA9qJ,EAAAC,GACA,IACAwZ,EACAhb,EAFAooJ,EAAA3lJ,KAAA4lJ,YAIA,IAAAroJ,EAAA,EAAeA,EAAAooJ,EAAAloJ,OAAuBF,IACtCgb,EAAAotI,EAAApoJ,GACAuB,EAAAzB,KAAA0B,EAAAiB,KAAA8lJ,QAAAvtI,OAIA+vI,iBAAA,SAAAxpJ,EAAAC,GACA,IACAyhJ,EACAjoI,EACAhb,EAHAooJ,EAAA3lJ,KAAA4lJ,YAKA,IAAAroJ,EAAA,EAAeA,EAAAooJ,EAAAloJ,OAAuBF,IACtCgb,EAAAotI,EAAApoJ,IACAijJ,EAAAxgJ,KAAA8lJ,QAAAvtI,IAEA6tI,aACAtnJ,EAAAzB,KAAA0B,EAAAyhJ,EAAAjoI,IAKAgoI,eAAA,SAAAzhJ,EAAAC,GACA,IACAyhJ,EACAjoI,EACAhb,EAHAooJ,EAAA3lJ,KAAA4lJ,YAKA,IAAAroJ,EAAA,EAAeA,EAAAooJ,EAAAloJ,OAAuBF,IACtCgb,EAAAotI,EAAApoJ,IACAijJ,EAAAxgJ,KAAA8lJ,QAAAvtI,IAEA6tI,aACAtnJ,EAAAzB,KAAA0B,EAAAyhJ,EAAAjoI,IASAsxI,UAAA,WACA,OAAA7pJ,KAAA8lJ,SAEAmC,mBAAA,SAAA36I,GAKA,SAAAw8I,EAAA77H,GACAw7H,IACAA,EAAAX,aAAA76H,IACAw7H,EAAAlnH,SAAA,GAGAknH,EAAAX,WAAA76H,GAIA,GAdAjuB,KAAAsoJ,iBAAA,SAAA9H,EAAAjoI,GACAioI,EAAAj+G,QAAAi+G,EAAAuJ,QAAA,IAaA/pJ,KAAAylJ,cACA,QAAAloJ,EAAA,EAAqBA,EAAA+P,EAAA7P,OAAiBF,IAAA,CAGtC,IAFAkL,EAAA6E,EAAA/P,IAEAib,SAAAlL,EAAA/P,EAAA,GAAAib,QAAA/P,EAAAg2E,YAAA,CACAz+E,KAAAgmJ,2BAAA,EACA,OAKA,IAAAyD,EAAA,KACAO,EAAA,EAEA,IAAAzsJ,EAAA,EAAmBA,EAAA+P,EAAA7P,OAAiBF,IAAA,CACpC,IAAAkL,EAEA+3I,EADAhoI,GADA/P,EAAA6E,EAAA/P,IACAib,OAIA/P,EAAAg2E,cACA+hE,EAAAxgJ,KAAA4nJ,SAAApvI,EAlpBA,KAkpBAxY,KAAAgmJ,4BACAvnE,aAAA,EACAurE,EAAA,GAEAxJ,EAAAxgJ,KAAA4nJ,SAAApvI,GAAAwxI,EAAA,EAvpBA,IAupBA,GAAAhqJ,KAAAgmJ,2BAGAxF,EAAA4F,aACA75I,EAAA,UAAAiM,EAAA,kCAAAgoI,EAAAv5I,IAGAu5I,IAAAiJ,IACAjJ,EAAAuJ,QAAA,EAEAvJ,EAAAkI,eAAAnrJ,IACAijJ,EAAAj+G,SAAA,GAGAi+G,EAAAkI,aAAAnrJ,EAEAijJ,EAAA/hE,YAIA+hE,EAAAmI,aAAA,EAHAnI,EAAAmI,YAAAprJ,EAMAusJ,EAAAvsJ,GACAksJ,EAAAjJ,GAGA/3I,EAAA85B,UACAi+G,EAAAj+G,SAAA,EAEAi+G,EAAA/hE,aAAA+hE,EAAAmI,YAAA,IAEAnI,EAAAmI,YAAAprJ,IAKAusJ,EAAAvsJ,GACAyC,KAAAsoJ,iBAAA,SAAA9H,EAAAjoI,IAEAioI,EAAAuJ,QAAAvJ,EAAAyJ,kBAAA,IACAzJ,EAAAj+G,SAAA,EACAi+G,EAAAkI,aAAAlI,EAAAsI,WAAAtI,EAAAmI,YAAA,GAIAnI,EAAAj+G,SAAAi+G,EAAAmI,YAAA,IACAnI,EAAAmI,YAAAnI,EAAAkI,iBAQAxvI,MAAA,WAEA,OADAlZ,KAAAsoJ,iBAAAtoJ,KAAAkqJ,aACAlqJ,MAEAkqJ,YAAA,SAAA1J,GACAA,EAAAtnI,SAEApH,mBAAA,SAAA3E,GACAnN,KAAAsnJ,iBAAAn6I,GAaAm9E,YAAA,SAAA9xE,EAAAgyE,GACA,GAAAA,EAAA,CACA,IAAA2/D,EAAAnqJ,KAAA+lJ,aAEAoE,EAAA3xI,GAGAoiH,EAAA58H,MAAAmsJ,EAAA3xI,GAAAgyE,GAAA,GAFA2/D,EAAA3xI,GAAAgyE,EAKA,QAAAjtF,EAAA,EAAqBA,EAAAyC,KAAA4lJ,YAAAnoJ,OAA6BF,IAAA,CAClD,IAAA6sJ,EAAApqJ,KAAA4lJ,YAAAroJ,GAEA,GAAA6sJ,IAAA5xI,GAAA4xI,IAAA5xI,EAhvBA,IAgvBA,CACA,IAAAgoI,EAAAxgJ,KAAA8lJ,QAAAsE,GACAxvB,EAAA58H,MAAAwiJ,EAAA2J,EAAA3xI,IAAA,OAUA6xI,SAAA,SAAA7xI,GACA,IAAAqtI,EAAA7lJ,KAAA8lJ,QACAH,EAAA3lJ,KAAA4lJ,YACApF,EAAAqF,EAAArtI,GAEAgoI,IAIAA,EAAA35I,IAAA+rE,WAAAq4C,YAAAu1B,EAAA35I,YACAg/I,EAAArtI,GACAmtI,EAAA3vI,OAAA4kH,EAAA/5H,QAAA8kJ,EAAAntI,GAAA,KAMA/O,OAAA,SAAAhC,EAAAC,GACA,GAAA1H,KAAAsmJ,SAAAv2I,MASK,CACL,IAAAy2I,EAAAxmJ,KAAAsmJ,SAEAE,EAAAz2I,MAAAu6I,QAAA,OAEA,IAAAvjJ,EAAA/G,KAAAwlJ,MAOA,GANA,MAAA/9I,IAAAV,EAAAU,SACA,MAAAC,IAAAX,EAAAW,UACAD,EAAAzH,KAAAumJ,SAAA,GACA7+I,EAAA1H,KAAAumJ,SAAA,GACAC,EAAAz2I,MAAAu6I,QAAA,GAEAtqJ,KAAAimJ,QAAAx+I,GAAAC,GAAA1H,KAAAkmJ,QAAA,CAIA,QAAAj/I,KAHAu/I,EAAAz2I,MAAAtI,QAAA,KACA++I,EAAAz2I,MAAArI,SAAA,KAEA1H,KAAA8lJ,QACA9lJ,KAAA8lJ,QAAA/nJ,eAAAkJ,IACAjH,KAAA8lJ,QAAA7+I,GAAAwC,OAAAhC,EAAAC,GAIAkzH,EAAAh8H,KAAAoB,KAAAuqJ,mBAAA,SAAA/J,GACAA,EAAA/2I,OAAAhC,EAAAC,KAEA1H,KAAAukC,SAAA,GAGAvkC,KAAAimJ,OAAAx+I,EACAzH,KAAAkmJ,QAAAx+I,MAtCA,CAEA,SAAAD,GAAA,MAAAC,EACA,OAGA1H,KAAAimJ,OAAAx+I,EACAzH,KAAAkmJ,QAAAx+I,EACA1H,KAAA4nJ,SAvxBA,QAuxBAn+I,OAAAhC,EAAAC,GAiCA,OAAA1H,MAOAwqJ,WAAA,SAAAhyI,GACA,IAAAgoI,EAAAxgJ,KAAA8lJ,QAAAttI,GAEAgoI,GACAA,EAAAtnI,SAOApD,QAAA,WACA9V,KAAAgzE,KAAA83C,UAAA,GACA9qH,KAAAgzE,KAAAhzE,KAAAuN,QAAAvN,KAAAsmJ,SAAAtmJ,KAAA8lJ,QAAA,MASA94I,kBAAA,SAAAjG,GAGA,GAFAA,KAAA,GAEA/G,KAAAylJ,gBAAAzlJ,KAAAooJ,mBACA,OAAApoJ,KAAA8lJ,QAz1BA,QAy1BAj/I,IAGA,IAAA4jJ,EAAA,IAAArF,EAAA,QAAAplJ,KAAA+G,EAAAmG,YAAAlN,KAAA8M,KAIA,GAHA29I,EAAApE,cACAoE,EAAAvxI,OAAA,EAAAnS,EAAAoG,iBAAAnN,KAAAsnJ,kBAEAvgJ,EAAAmG,YAAAlN,KAAA8M,IAAA,CACA9M,KAAAukC,UACA,IAAA98B,EAAAgjJ,EAAA5jJ,IAAAY,MACAC,EAAA+iJ,EAAA5jJ,IAAAa,OACAm6B,EAAA4oH,EAAA5oH,IACA7hC,KAAA4pJ,UAAA,SAAApJ,GACAA,EAAA4F,YACAvkH,EAAAk8C,UAAAyiE,EAAA35I,IAAA,IAAAY,EAAAC,GACS84I,EAAAkK,iBACTD,EAAA5oH,IAAAinD,OACA03D,EAAAkK,eAAAD,EAAA5oH,KACA4oH,EAAA5oH,IAAA0mC,kBAQA,IAHA,IAAA37B,EAAA,GACAg1G,EAAA5hJ,KAAAuN,QAAAC,gBAAA,GAEAjQ,EAAA,EAAqBA,EAAAqkJ,EAAAnkJ,OAAwBF,IAAA,CAC7C,IAAAkL,EAAAm5I,EAAArkJ,GAEAyC,KAAA8nJ,WAAAr/I,EAAAgiJ,GAAA,EAAA79G,GAIA,OAAA69G,EAAA5jJ,KAMA6F,SAAA,WACA,OAAA1M,KAAAimJ,QAMAt5I,UAAA,WACA,OAAA3M,KAAAkmJ,SAEAK,SAAA,SAAAoE,GACA,IAAA5jJ,EAAA/G,KAAAwlJ,MACArhD,EAAA,mBAAAwmD,GACAC,EAAA,+BAAAD,GACAE,EAAA,6BAAAF,GACAG,EAAA,iCAAAH,GAEA,SAAA5jJ,EAAAo9F,IAAA,SAAAp9F,EAAAo9F,GACA,OAAAx3E,WAAA5lB,EAAAo9F,IAGA,IAAAnxB,EAAAhzE,KAAAgzE,KAEA+3E,EAAArrJ,SAAAsrJ,YAAAC,iBAAAj4E,GACA,OAAAA,EAAA43E,IAAAvF,EAAA0F,EAAA5mD,KAAAkhD,EAAAryE,EAAAjjE,MAAAo0F,MAAAkhD,EAAA0F,EAAAF,KAAA,IAAAxF,EAAA0F,EAAAD,KAAA,MAEA//D,YAAA,SAAA9rE,EAAAnS,GACAA,KAAA9M,KAAA8M,IACA,IAAA0C,EAAA9P,SAAAC,cAAA,UACAkiC,EAAAryB,EAAA5O,WAAA,MACAme,EAAAE,EAAAE,kBACApP,EAAAkP,EAAAlP,MACAm7I,EAAAn7I,EAAAkvE,WAAAnyE,EACAqyE,EAAApvE,EAAAovE,cAAAryE,EACAsyE,EAAArvE,EAAAqvE,cAAAtyE,EACA+S,EAAA9P,EAAAgyB,YAAAhyB,EAAA8P,UAAA,EACAsrI,EAAAx8I,KAAAG,IAAA+Q,EAAA,GAAAs/D,EAAA+rE,GACAE,EAAAz8I,KAAAG,IAAA+Q,EAAA,EAAAs/D,EAAA+rE,GACAG,EAAA18I,KAAAG,IAAA+Q,EAAA,GAAAu/D,EAAA8rE,GACAI,EAAA38I,KAAAG,IAAA+Q,EAAA,EAAAu/D,EAAA8rE,GACAzjJ,EAAAsX,EAAAtX,MAAA0jJ,EAAAC,EACA1jJ,EAAAqX,EAAArX,OAAA2jJ,EAAAC,EACA97I,EAAA/H,QAAAqF,EACA0C,EAAA9H,SAAAoF,EACA+0B,EAAAlF,MAAA7vB,KACA+0B,EAAAwmH,UAAA,IAAA5gJ,EAAAC,GACAm6B,EAAA/0B,MACA,IAAAy+I,EAAA,CACA3rI,SAAAX,EAAAW,SACAsL,SAAAjM,EAAAiM,SACAyR,MAAA1d,EAAA0d,OAEA1d,EAAAW,SAAA,CAAAurI,EAAApsI,EAAA/O,EAAAq7I,EAAAtsI,EAAA9O,GACAgP,EAAAiM,SAAA,EACAjM,EAAA0d,MAAA,MACA1d,EAAA9M,kBAEA8M,GACAA,EAAA2iB,MAAAC,GAGA,IACA2pH,EAAA,IADA17I,EACA,CACAC,MAAA,CACAC,EAAA,EACAC,EAAA,EACAC,MAAAV,KAgBA,OAZA,MAAA+7I,EAAA3rI,WACA4rI,EAAA5rI,SAAAX,EAAAW,SAAA2rI,EAAA3rI,UAGA,MAAA2rI,EAAArgI,WACAsgI,EAAAtgI,SAAAjM,EAAAiM,SAAAqgI,EAAArgI,UAGA,MAAAqgI,EAAA5uH,QACA6uH,EAAA7uH,MAAA1d,EAAA0d,MAAA4uH,EAAA5uH,OAGA6uH,IAGA,IAAApqH,EAAA8nD,EACA/wD,EAAA93B,QAAA+gC,mBC3+BA,IAAAw5F,EAAWl3H,EAAQ,KAInB8D,EAFc9D,EAAQ,KAEtB8D,iBAEAw2E,EAAYt6E,EAAQ,KAEpB4wH,EAAc5wH,EAAQ,KAOtB,SAAA+nJ,IACA,SAYA,SAAAC,EAAAzkJ,EAAA4F,EAAAC,GACA,IAAA6+I,EAAA/wB,EAAAj8H,eACA8I,EAAAoF,EAAAH,WACAhF,EAAAmF,EAAAF,YACAi/I,EAAAD,EAAA57I,MAcA,OAZA67I,IAEAA,EAAAhsI,SAAA,WACAgsI,EAAA58I,KAAA,EACA48I,EAAA18I,IAAA,EACA08I,EAAAnkJ,QAAA,KACAmkJ,EAAAlkJ,SAAA,KACAikJ,EAAAvyI,aAAA,iBAAAnS,IAGA0kJ,EAAAlkJ,QAAAqF,EACA6+I,EAAAjkJ,SAAAoF,EACA6+I,EAYA,IAAAvG,EAAA,SAAAn+I,EAAA4F,EAAAC,GACA,IAAAjG,EACAiG,KAAAtF,EAEA,kBAAAP,EACAJ,EAAA6kJ,EAAAzkJ,EAAA4F,EAAAC,GAEA8tH,EAAAz8H,SAAA8I,KAEAA,GADAJ,EAAAI,GACAA,IAGAjH,KAAAiH,KACAjH,KAAA6G,MACA,IAAAglJ,EAAAhlJ,EAAAkJ,MAEA87I,IAEAhlJ,EAAAilJ,cAAAL,EAEAI,EAAA,8BACAA,EAAA,sBACAA,EAAA,gCACAA,EAAA,+CACAA,EAAA,UACAA,EAAA,SACAA,EAAA,mBAGA7rJ,KAAA+rJ,QAAA,KACA/rJ,KAAAgsJ,QAAA,KACAhsJ,KAAA6M,UACA7M,KAAAwqF,OAAA,KAQAxqF,KAAAqnJ,WAAA,EAOArnJ,KAAAisJ,YAAA,EAOAjsJ,KAAAksJ,eAAA,GAMAlsJ,KAAA8M,OAGAs4I,EAAAlpJ,UAAA,CACAyB,YAAAynJ,EACA7iH,SAAA,EACAwnH,QAAA,EACApB,YAAA,EACAD,aAAA,EACAI,WAAA,EACArqE,aAAA,EACAwrE,gBAAA,WACA,OAAAjqJ,KAAA8oJ,WAAA9oJ,KAAA0oJ,cAEArC,YAAA,WACArmJ,KAAA6hC,IAAA7hC,KAAA6G,IAAAjG,WAAA,MACAZ,KAAA6hC,IAAA/0B,IAAA9M,KAAA8M,KAEAq/I,iBAAA,WACA,IAAAr/I,EAAA9M,KAAA8M,IACA9M,KAAA+rJ,QAAAL,EAAA,QAAA1rJ,KAAAiH,GAAAjH,KAAA6M,QAAAC,GACA9M,KAAAgsJ,QAAAhsJ,KAAA+rJ,QAAAnrJ,WAAA,MAEA,GAAAkM,GACA9M,KAAAgsJ,QAAArvH,MAAA7vB,MAQArD,OAAA,SAAAhC,EAAAC,GACA,IAAAoF,EAAA9M,KAAA8M,IACAjG,EAAA7G,KAAA6G,IACAglJ,EAAAhlJ,EAAAkJ,MACAg8I,EAAA/rJ,KAAA+rJ,QAEAF,IACAA,EAAApkJ,QAAA,KACAokJ,EAAAnkJ,SAAA,MAGAb,EAAAY,QAAAqF,EACAjG,EAAAa,SAAAoF,EAEAi/I,IACAA,EAAAtkJ,QAAAqF,EACAi/I,EAAArkJ,SAAAoF,EAEA,GAAAA,GACA9M,KAAAgsJ,QAAArvH,MAAA7vB,OAUAoM,MAAA,SAAAkzI,EAAA/E,GACA,IAqBAgF,EArBAxlJ,EAAA7G,KAAA6G,IACAg7B,EAAA7hC,KAAA6hC,IACAp6B,EAAAZ,EAAAY,MACAC,EAAAb,EAAAa,OAEA4kJ,GADAjF,KAAArnJ,KAAAqnJ,WACArnJ,KAAAisJ,aAAAG,GACAF,EAAAlsJ,KAAAksJ,eACAp/I,EAAA9M,KAAA8M,KAEAw/I,IACAtsJ,KAAA+rJ,SACA/rJ,KAAAmsJ,mBAGAnsJ,KAAAgsJ,QAAA/3B,yBAAA,OACAj0H,KAAAgsJ,QAAAjuE,UAAAl3E,EAAA,IAAAY,EAAAqF,EAAApF,EAAAoF,IAGA+0B,EAAAwmH,UAAA,IAAA5gJ,EAAAC,GAEA2/I,GAAA,gBAAAA,KAGAA,EAAAnlH,YAEAmqH,EAAAhF,EAAAkF,kBAAAvuE,EAAAv7C,YAAAZ,EAAAwlH,EAAA,CACAr3I,EAAA,EACAC,EAAA,EACAxI,QACAC,WAEA2/I,EAAAkF,iBAAAF,GAEAhF,EAAAn3I,QACAm8I,EAAA/3B,EAAAp4H,UAAAslC,iBAAAnkC,KAAAgqJ,EAAAxlH,IAGAA,EAAAinD,OACAjnD,EAAAc,UAAA0pH,GAAAhF,EACAxlH,EAAA2qH,SAAA,IAAA/kJ,EAAAC,GACAm6B,EAAA0mC,WAGA,GAAA+jF,EAAA,CACA,IAAAP,EAAA/rJ,KAAA+rJ,QACAlqH,EAAAinD,OACAjnD,EAAAmyF,YAAAk4B,EACArqH,EAAAk8C,UAAAguE,EAAA,IAAAtkJ,EAAAC,GACAm6B,EAAA0mC,aAIA,IAAAnnC,EAAAgkH,EACAjtH,EAAA93B,QAAA+gC,mBCzOA,IAAAw5F,EAAWl3H,EAAQ,KAInBwyD,EAFaxyD,EAAQ,KAErBwyD,WAEAu+D,EAA4B/wH,EAAQ,KAEpCytH,EAAeztH,EAAQ,KAyCvBylF,EAAA,SAAAxjC,GACAA,KAAA,GACA3lD,KAAA4pF,MAAAjkC,EAAAikC,OAAA,GAEA5pF,KAAAgxH,QAAArrE,EAAAqrE,SAAA,aAGAhxH,KAAAysJ,OAAA,GACAzsJ,KAAA0sJ,UAAA,EACA1sJ,KAAA2sJ,MACA3sJ,KAAA4iJ,YACA5iJ,KAAA4sJ,YACA5sJ,KAAA6xH,SAAA,EACA37D,EAAA74D,KAAA2C,OAGAmpF,EAAAjtF,UAAA,CACAyB,YAAAwrF,EAMAipC,QAAA,SAAAxB,GACA5wH,KAAAysJ,OAAAhrJ,KAAAmvH,IAOA/C,YAAA,SAAAuB,GACAA,EAAAzlH,UAAA3J,KAGA,IAFA,IAAA6sJ,EAAAz9B,EAAAsD,WAEAn1H,EAAA,EAAmBA,EAAAsvJ,EAAApvJ,OAAkBF,IACrCyC,KAAAoyH,QAAAy6B,EAAAtvJ,KAQAi1H,WAAA,SAAA5B,GACA,IAAA3iG,EAAA2sG,EAAA/5H,QAAAb,KAAAysJ,OAAA77B,GAEA3iG,GAAA,GACAjuB,KAAAysJ,OAAAz2I,OAAAiY,EAAA,IAQA6/F,eAAA,SAAAsB,GAGA,IAFA,IAAAy9B,EAAAz9B,EAAAsD,WAEAn1H,EAAA,EAAmBA,EAAAsvJ,EAAApvJ,OAAkBF,IACrCyC,KAAAwyH,WAAAq6B,EAAAtvJ,IAGA6xH,EAAAzlH,UAAA,MAEAuhE,QAAA,WASA,IARA,IAAAx6B,GAAA,IAAAnlC,MAAA07D,UAAAjnE,KAAA4iJ,YAEAjtF,EAAAjlB,EAAA1wC,KAAA2sJ,MACAE,EAAA7sJ,KAAAysJ,OACAjvJ,EAAAqvJ,EAAApvJ,OACAqvJ,EAAA,GACAC,EAAA,GAEAxvJ,EAAA,EAAmBA,EAAAC,EAASD,IAAA,CAC5B,IAAAqzH,EAAAi8B,EAAAtvJ,GACAmb,EAAAk4G,EAAAlsE,KAAAhU,EAAAilB,GAGAj9C,IACAo0I,EAAArrJ,KAAAiX,GACAq0I,EAAAtrJ,KAAAmvH,IAKA,IAAArzH,EAAA,EAAmBA,EAAAC,GACnBqvJ,EAAAtvJ,GAAA6lJ,cACAyJ,EAAAtvJ,GAAAsvJ,EAAArvJ,EAAA,GACAqvJ,EAAAv4I,MACA9W,KAEAD,IAIAC,EAAAsvJ,EAAArvJ,OAEA,IAAAF,EAAA,EAAmBA,EAAAC,EAASD,IAC5BwvJ,EAAAxvJ,GAAA2lJ,KAAA4J,EAAAvvJ,IAGAyC,KAAA2sJ,MAAAj8G,EACA1wC,KAAAgxH,QAAAr7D,GAIA31D,KAAA+J,QAAA,QAAA4rD,GAEA31D,KAAA4pF,MAAA1+E,QACAlL,KAAA4pF,MAAA1+E,UAGA8hJ,WAAA,WACA,IAAAl/I,EAAA9N,KACAA,KAAA0sJ,UAAA,EASAj4B,EAPA,SAAA/vE,IACA52C,EAAA4+I,WACAj4B,EAAA/vE,IACA52C,EAAA+jH,SAAA/jH,EAAAo9D,cAUAj1B,MAAA,WACAj2C,KAAA2sJ,OAAA,IAAAphJ,MAAA07D,UACAjnE,KAAA4iJ,YAAA,EAEA5iJ,KAAAgtJ,cAMA/1F,KAAA,WACAj3D,KAAA0sJ,UAAA,GAMA96B,MAAA,WACA5xH,KAAA6xH,UACA7xH,KAAA4sJ,aAAA,IAAArhJ,MAAA07D,UACAjnE,KAAA6xH,SAAA,IAOAC,OAAA,WACA9xH,KAAA6xH,UACA7xH,KAAA4iJ,cAAA,IAAAr3I,MAAA07D,UAAAjnE,KAAA4sJ,YACA5sJ,KAAA6xH,SAAA,IAOA34G,MAAA,WACAlZ,KAAAysJ,OAAA,IAMAziJ,WAAA,WACA,OAAAhK,KAAAysJ,OAAAhvJ,QAcAknC,QAAA,SAAA1mC,EAAA0nD,GAEA,IAAAypE,EAAA,IAAA+B,EAAAlzH,GADA0nD,KAAA,IACAjhB,KAAAihB,EAAA6wB,OAAA7wB,EAAA8wB,QAEA,OADAz2E,KAAA6tH,YAAAuB,GACAA,IAGAwL,EAAAt5H,MAAA6nF,EAAAjzB,GACA,IAAA90B,EAAA+nD,EACAhxD,EAAA93B,QAAA+gC,mBCvPA,IAAA6rH,EAAavpJ,EAAQ,KAErB0yD,EAAA62F,EAAA72F,iBACA4B,EAAAi1F,EAAAj1F,oBACAV,EAAA21F,EAAA31F,eAEAzzD,EAAaH,EAAQ,KAErBO,EAAeP,EAAQ,KAEvBK,EAAUL,EAAQ,KAElBwpJ,EAAiBxpJ,EAAQ,KAGzBypJ,EAAA,6FACAC,EAAA,sCACAC,EAAA,CACAC,YAAA,EACAC,UAAA,EACAC,YAAA,EACAC,WAAA,GAEAC,EAAA7pJ,EAAAhH,IAAAswJ,EAAA,SAAA5sJ,GACA,IAAAotJ,EAAAptJ,EAAA0C,QAAA,mBACA,OAAAoqJ,EAAAM,KAAAptJ,IAGA,SAAAqtJ,EAAArtJ,GACA,qBAAAA,GAAAwD,EAAAiU,QAAAytB,QAAA,iBAAAllC,EAGA,SAAAstJ,EAAA7O,EAAAjqI,EAAA60E,GACA,IAAAkkE,EAAA9O,EAAA+O,YACA,UAAAnkE,GAAAkkE,EAAA50I,QACA,IAAA80I,EAAAF,EAAAG,UAAAl5I,EAAAiqI,EAAAv4I,QAAAwkF,UAAAl2E,EAAA4hD,IAAA5hD,EAAA6hD,IAAA,MAAA34D,OAAA+gJ,EAAAn4I,KAGA,GAFA,QAAA+iF,GAAAkkE,EAAA50I,QAEA80I,EAAA,CACA,IAAAzuJ,EAAAyuJ,EAAAzuJ,KACAwV,EAAA+sF,aAAAviG,EACAy/I,EAAAv4I,QAAAo5I,kBAAA,CACA5hJ,OAAA+vJ,EAAA/vJ,QACKsB,EAAAyuJ,EAAAj5I,QAwBL,SAAAm5I,EAAA/5H,GACAA,EAAAg6H,WAAA,EACA/mF,aAAAjzC,EAAAi6H,aACAj6H,EAAAi6H,YAAA/mF,WAAA,WACAlzC,EAAAg6H,WAAA,GACG,KAGH,IAAAE,EAAA,CAMA5tD,UAAA,SAAA1rF,GACAA,EAAAuiD,EAAAt3D,KAAA6G,IAAAkO,GACA/U,KAAA+J,QAAA,YAAAgL,IAQA+qI,SAAA,SAAA/qI,GAEA,IAAAy3G,GADAz3G,EAAAuiD,EAAAt3D,KAAA6G,IAAAkO,IACAirI,WAAAjrI,EAAAkrI,cAEA,GAAAzzB,GAAAxsH,KAAA6G,IACA,KAAA2lH,GAAA,GAAAA,EAAAhtH,UAAA,CAEA,GAAAgtH,IAAAxsH,KAAA6G,IACA,OAGA2lH,IAAA55C,WAIA5yE,KAAA+J,QAAA,WAAAgL,IAQAu5I,WAAA,SAAAv5I,IAGAA,EAAAuiD,EAAAt3D,KAAA6G,IAAAkO,IAGAuN,WAAA,EACAtiB,KAAAm/I,iBAAA,IAAA5zI,KACAsiJ,EAAA7tJ,KAAA+U,EAAA,SAGAs5I,EAAA5tD,UAAApjG,KAAA2C,KAAA+U,GACAs5I,EAAA9tD,UAAAljG,KAAA2C,KAAA+U,GACAm5I,EAAAluJ,OAQAuuJ,UAAA,SAAAx5I,IACAA,EAAAuiD,EAAAt3D,KAAA6G,IAAAkO,IAGAuN,WAAA,EACAurI,EAAA7tJ,KAAA+U,EAAA,UAIAs5I,EAAA5tD,UAAApjG,KAAA2C,KAAA+U,GACAm5I,EAAAluJ,OAQAwuJ,SAAA,SAAAz5I,IACAA,EAAAuiD,EAAAt3D,KAAA6G,IAAAkO,IAGAuN,WAAA,EACAurI,EAAA7tJ,KAAA+U,EAAA,OACAs5I,EAAA1tD,QAAAtjG,KAAA2C,KAAA+U,IAUA,IAAAxJ,KAAAvL,KAAAm/I,iBA3JA,KA4JAkP,EAAAI,MAAApxJ,KAAA2C,KAAA+U,GAGAm5I,EAAAluJ,OAEAstJ,YAAA,SAAAv4I,GACAs5I,EAAA9tD,UAAAljG,KAAA2C,KAAA+U,IAIAy4I,YAAA,SAAAz4I,GAMA25I,EAAA35I,IACAs5I,EAAA5tD,UAAApjG,KAAA2C,KAAA+U,IAGAw4I,UAAA,SAAAx4I,GACAs5I,EAAA1tD,QAAAtjG,KAAA2C,KAAA+U,IAEA04I,WAAA,SAAA14I,GAMA25I,EAAA35I,IACAs5I,EAAAvO,SAAAziJ,KAAA2C,KAAA+U,KAKA,SAAA25I,EAAA35I,GACA,IAAA45I,EAAA55I,EAAA45I,YACA,cAAAA,GAAA,UAAAA,EA0CA,SAAAC,EAAA/nJ,GAtBA,IAAAstB,EAiFA,SAAA06H,EAAA9P,EAAA5qH,GACAtwB,EAAAjF,KAAAmgJ,EAAA,SAAAx+I,GACA61D,EAAAvvD,EAAA+mJ,EAAArtJ,GAAA4zB,EAAAulF,UAAAn5G,KACK4zB,GA7DLlwB,EAAA5G,KAAA2C,MACAA,KAAA6G,MAMA7G,KAAAmuJ,WAAA,EAMAnuJ,KAAAouJ,YAMApuJ,KAAA+tJ,YAAA,IAAAb,EACAltJ,KAAA05G,UAAA,GA3CAvlF,EA4CAn0B,KA3CA6D,EAAAjF,KAAAwuJ,EAAA,SAAA7sJ,GACA4zB,EAAAulF,UAAAn5G,GAAAsD,EAAA7E,KAAAqvJ,EAAA9tJ,GAAA4zB,KAEAtwB,EAAAjF,KAAA8uJ,EAAA,SAAAntJ,GACA4zB,EAAAulF,UAAAn5G,GAAAsD,EAAA7E,KAAAqvJ,EAAA9tJ,GAAA4zB,KAEAtwB,EAAAjF,KAAAuuJ,EAAA,SAAA5sJ,GACA4zB,EAAAulF,UAAAn5G,GAGA,SAAAC,EAAA2zB,GACA,kBACA,IAAAA,EAAAg6H,UAIA,OAAA3tJ,EAAApB,MAAA+0B,EAAAh1B,YATA2vJ,CAAAT,EAAA9tJ,GAAA4zB,KAsCApwB,EAAA8hC,uBAQAgpH,EAAAnB,EAAA1tJ,OAcA+D,EAAAshC,sBACAwpH,EAAAzB,EAAAptJ,MASA6uJ,EAAA1B,EAAAntJ,OA3FA6D,EAAAjF,KAAA,+EAAA2B,GACA8tJ,EAAA9tJ,GAAA,SAAAwU,GACAA,EAAAuiD,EAAAt3D,KAAA6G,IAAAkO,GACA/U,KAAA+J,QAAAxJ,EAAAwU,MAkGA,IAAAg6I,EAAAH,EAAA1yJ,UAEA6yJ,EAAAj5I,QAAA,WAGA,IAFA,IAAAipI,EAAAoO,EAAA9tJ,OAAA+tJ,GAEA7vJ,EAAA,EAAiBA,EAAAwhJ,EAAAthJ,OAAyBF,IAAA,CAC1C,IAAAgD,EAAAw+I,EAAAxhJ,GACAy6D,EAAAh4D,KAAA6G,IAAA+mJ,EAAArtJ,GAAAP,KAAA05G,UAAAn5G,MAIAwuJ,EAAAnP,UAAA,SAAAn+D,GACAzhF,KAAA6G,IAAAkJ,QAAA/P,KAAA6G,IAAAkJ,MAAAyuE,OAAAiD,GAAA,YAGA59E,EAAAvC,MAAAstJ,EAAA3qJ,GACA,IAAAm9B,EAAAwtH,EACAz2H,EAAA93B,QAAA+gC,mBC5UA,IAAA4tH,EAAgBtrJ,EAAQ,KAMxBwpJ,EAAA,WAKAltJ,KAAAo5G,OAAA,IAkDA,SAAAh9E,EAAA6yH,GACA,IAAAx0H,EAAAw0H,EAAA,MAAAA,EAAA,MACAv0H,EAAAu0H,EAAA,MAAAA,EAAA,MACA,OAAAtgJ,KAAAmtB,KAAArB,IAAAC,KAlDAwyH,EAAAhxJ,UAAA,CACAyB,YAAAuvJ,EACAe,UAAA,SAAAl5I,EAAA9W,EAAA+0E,GAGA,OAFAhzE,KAAAkvJ,SAAAn6I,EAAA9W,EAAA+0E,GAEAhzE,KAAAmvJ,WAAAp6I,IAEAmE,MAAA,WAEA,OADAlZ,KAAAo5G,OAAA37G,OAAA,EACAuC,MAEAkvJ,SAAA,SAAAn6I,EAAA9W,EAAA+0E,GACA,IAAAo8E,EAAAr6I,EAAAq6I,QAEA,GAAAA,EAAA,CAWA,IAPA,IAAAC,EAAA,CACAjkI,OAAA,GACAgkI,QAAA,GACAnxJ,SACA8W,SAGAxX,EAAA,EAAAC,EAAA4xJ,EAAA3xJ,OAAyCF,EAAAC,EAASD,IAAA,CAClD,IAAAg6D,EAAA63F,EAAA7xJ,GACAowE,EAAAqhF,EAAA14F,cAAA0c,EAAAzb,EAAA,IACA83F,EAAAjkI,OAAA3pB,KAAA,CAAAksE,EAAAhX,IAAAgX,EAAA/W,MACAy4F,EAAAD,QAAA3tJ,KAAA81D,GAGAv3D,KAAAo5G,OAAA33G,KAAA4tJ,KAEAF,WAAA,SAAAp6I,GACA,QAAAvO,KAAA8oJ,EACA,GAAAA,EAAAvxJ,eAAAyI,GAAA,CACA,IAAAwnJ,EAAAsB,EAAA9oJ,GAAAxG,KAAAo5G,OAAArkG,GAEA,GAAAi5I,EACA,OAAAA,KAiBA,IAAAsB,EAAA,CACAvuD,MAAA,SAAAya,EAAAzmG,GACA,IAAA66G,EAAApU,EAAA/9G,OAEA,GAAAmyH,EAAA,CAIA,IAZAq/B,EAYAM,GAAA/zC,EAAAoU,EAAA,QAA6CxkG,OAC7CokI,GAAAh0C,EAAAoU,EAAA,QAA6CxkG,QAAAmkI,EAE7C,GAAAC,KAAA/xJ,OAAA,GAAA8xJ,KAAA9xJ,OAAA,GACA,IAAA0kG,EAAA/lE,EAAAmzH,GAAAnzH,EAAAozH,IACA1hI,SAAAq0E,OAAA,GACAptF,EAAAotF,aACA,IAAAstD,EAlBA,GADAR,EAmBAM,GAlBA,MAAAN,EAAA,UAAAA,EAAA,MAAAA,EAAA,UAqBA,OAFAl6I,EAAAqtF,OAAAqtD,EAAA,GACA16I,EAAAstF,OAAAotD,EAAA,GACA,CACAlwJ,KAAA,QACAtB,OAAAu9G,EAAA,GAAAv9G,OACA8W,aAMAqsB,EAAA8rH,EACA/0H,EAAA93B,QAAA+gC,mBCnGA,IAqBAsuH,EArBsBhsJ,EAAQ,IAqB9BisJ,CAAA,2HAEAvuH,EAAA,CACAisC,aAAA,SAAAkL,GACA,IAAAxoE,EAAA2/I,EAAA1vJ,KAAAu4E,GAEA11C,EAAA7iC,KAAA4vJ,YAAA7/I,EAAA8P,WAEA,OADAgjB,IAAA9yB,EAAA8yB,YACA9yB,GAEA6/I,YAAA,SAAA/vI,GACA,MAAAA,IACAA,EAAA,GAGA,IAAAgwI,EAAA7vJ,KAAAG,IAAA,QACA2vJ,EAAAnhJ,KAAAG,IAAA+Q,EAAA,GACAkwI,EAAA,EAAAlwI,EACA,gBAAAgwI,GAAA,MAAAA,EAAA,gBAAAA,EAAA,CAAAE,KAAA,CAAAD,OAGA33H,EAAA93B,QAAA+gC,mBC1CA,IAqBA4uH,EArBsBtsJ,EAAQ,IAqB9BisJ,CAAA,mGAEAvuH,EAAA,CACAwiE,aAAA,SAAArrB,EAAAC,GACA,OAAAw3E,EAAAhwJ,KAAAu4E,EAAAC,KAGArgD,EAAA93B,QAAA+gC,mBC5BA,IAAAlE,EAAkBx5B,EAAQ,KAE1BwoI,EAAkBxoI,EAAQ,KAqB1BusJ,EAAA,sBACA7uH,EAAA,CAMA6tC,aAAA,SAAAlsD,GACA,IAAAtY,EAAAzK,KAAAyK,QACA,OAAAzK,KAAAojB,WAAA,YAAAL,GAAAtY,IAAAtK,IAAA8vJ,GAAA,OAOAzmI,QAAA,WACA,OAAA0iH,EAAA1iH,QAAA,CACA/E,UAAAzkB,KAAAojB,WAAA,aACAsB,WAAA1kB,KAAAojB,WAAA,cACAuB,SAAA3kB,KAAAojB,WAAA,YACAwB,WAAA5kB,KAAAojB,WAAA,eACKpjB,KAAAyK,UAEL2zB,YAAA,SAAAhV,GACA,OAAA8T,EAAA/d,gBAAAiK,EAAAppB,KAAAwpB,UAAAxpB,KAAAojB,WAAA,SAAApjB,KAAAojB,WAAA,kBAAApjB,KAAAojB,WAAA,YAAApjB,KAAAojB,WAAA,WAAApjB,KAAAojB,WAAA,QAAApjB,KAAAojB,WAAA,mBAGA+U,EAAA93B,QAAA+gC,mBCnDA,IAAA5jB,EAAW9Z,EAAQ,KAEnB49B,EAAgB59B,EAAQ,KAExBwsJ,EAAoBxsJ,EAAQ,KAG5BysJ,EAAA,kFACApyF,EAAApvD,KAAAmtB,KACAi9C,EAAApqE,KAAA2gC,IACAwpC,EAAAnqE,KAAA6gC,IACAjsB,EAAA5U,KAAA4U,GAEA6sI,EAAA,SAAA9/H,GACA,OAAA3hB,KAAAmtB,KAAAxL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAGA+/H,EAAA,SAAAC,EAAAhgI,GACA,OAAAggI,EAAA,GAAAhgI,EAAA,GAAAggI,EAAA,GAAAhgI,EAAA,KAAA8/H,EAAAE,GAAAF,EAAA9/H,KAGAigI,EAAA,SAAAD,EAAAhgI,GACA,OAAAggI,EAAA,GAAAhgI,EAAA,GAAAggI,EAAA,GAAAhgI,EAAA,SAAA3hB,KAAAoxD,KAAAswF,EAAAC,EAAAhgI,KAGA,SAAAkgI,EAAA/oI,EAAAE,EAAAD,EAAAE,EAAA6oI,EAAAr0E,EAAAP,EAAAC,EAAA40E,EAAA11E,EAAA/7D,GACA,IAAAk9D,EAAAu0E,GAAAntI,EAAA,KACAotI,EAAA73E,EAAAqD,IAAA10D,EAAAC,GAAA,EAAAqxD,EAAAoD,IAAAx0D,EAAAC,GAAA,EACAgpI,GAAA,EAAA73E,EAAAoD,IAAA10D,EAAAC,GAAA,EAAAoxD,EAAAqD,IAAAx0D,EAAAC,GAAA,EACAipI,EAAAF,KAAA90E,KAAA+0E,KAAA90E,KAEA+0E,EAAA,IACAh1E,GAAA9d,EAAA8yF,GACA/0E,GAAA/d,EAAA8yF,IAGA,IAAAhhI,GAAA4gI,IAAAr0E,GAAA,KAAAre,GAAA8d,KAAAC,KAAAD,KAAA+0E,KAAA90E,KAAA60E,OAAA90E,KAAA+0E,KAAA90E,KAAA60E,QAAA,EACAG,EAAAjhI,EAAAgsD,EAAA+0E,EAAA90E,EACAi1E,EAAAlhI,GAAAisD,EAAA60E,EAAA90E,EACAx+B,GAAA51B,EAAAC,GAAA,EAAAoxD,EAAAqD,GAAA20E,EAAA/3E,EAAAoD,GAAA40E,EACAzzG,GAAA31B,EAAAC,GAAA,EAAAmxD,EAAAoD,GAAA20E,EAAAh4E,EAAAqD,GAAA40E,EACAjxF,EAAAywF,EAAA,QAAAI,EAAAG,GAAAj1E,GAAA+0E,EAAAG,GAAAj1E,IACAw0E,EAAA,EAAAK,EAAAG,GAAAj1E,GAAA+0E,EAAAG,GAAAj1E,GACAxrD,EAAA,KAAAqgI,EAAAG,GAAAj1E,IAAA,EAAA+0E,EAAAG,GAAAj1E,GACAI,EAAAq0E,EAAAD,EAAAhgI,GAEA+/H,EAAAC,EAAAhgI,KAAA,IACA4rD,EAAA34D,GAGA8sI,EAAAC,EAAAhgI,IAAA,IACA4rD,EAAA,GAGA,IAAAE,GAAAF,EAAA,IACAA,GAAA,EAAA34D,GAGA,IAAA64D,GAAAF,EAAA,IACAA,GAAA,EAAA34D,GAGAtE,EAAA86D,QAAAiB,EAAA39B,EAAAC,EAAAu+B,EAAAC,EAAAhc,EAAAoc,EAAAC,EAAAC,GA+PA,SAAA40E,EAAAhuJ,EAAA+D,GACA,IAAAkqJ,EA7PA,SAAAzvJ,GACA,IAAAA,EACA,SAIA,IACA69D,EADA6xF,EAAA1vJ,EAAAyB,QAAA,WAAAA,QAAA,WAAAA,QAAA,UAAAA,QAAA,WAGA,IAAAo8D,EAAA,EAAaA,EAAA8wF,EAAA1yJ,OAAe4hE,IAC5B6xF,IAAAjuJ,QAAA,IAAAkuJ,OAAAhB,EAAA9wF,GAAA,SAAA8wF,EAAA9wF,IAIA,IAMA+xF,EANAnkI,EAAAikI,EAAA98I,MAAA,KAEAi9I,EAAA,EACAC,EAAA,EACAryI,EAAA,IAAAqiB,EACAq3C,EAAAr3C,EAAAq3C,IAGA,IAAAtZ,EAAA,EAAaA,EAAApyC,EAAAxvB,OAAgB4hE,IAAA,CAC7B,IAIA2b,EAJAh4E,EAAAiqB,EAAAoyC,GACAzhC,EAAA56B,EAAAy7B,OAAA,GACAt0B,EAAA,EACAipD,EAAApwD,EAAArG,MAAA,GAAAsG,QAAA,aAAAmR,MAAA,KAGAg/C,EAAA31D,OAAA,QAAA21D,EAAA,IACAA,EAAAj+C,QAGA,QAAA5X,EAAA,EAAmBA,EAAA61D,EAAA31D,OAAcF,IACjC61D,EAAA71D,GAAAovB,WAAAymC,EAAA71D,IAGA,KAAA4M,EAAAipD,EAAA31D,SAAA2vB,MAAAgmC,EAAAjpD,MACAijB,MAAAgmC,EAAA,KADA,CAKA,IAAAm+F,EACAC,EACA31E,EACAC,EACAK,EACAs0E,EACAr0E,EACA30D,EAAA4pI,EACA1pI,EAAA2pI,EAEA,OAAA1zH,GACA,QACAyzH,GAAAj+F,EAAAjpD,KACAmnJ,GAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAA/iB,EACA32C,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA,MAEA,QACAD,EAAAj+F,EAAAjpD,KACAmnJ,EAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAA/iB,EACA32C,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA,MAEA,QACAD,GAAAj+F,EAAAjpD,KACAmnJ,GAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAAl5C,EACAxgB,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA1zH,EAAA,IACA,MAEA,QACAyzH,EAAAj+F,EAAAjpD,KACAmnJ,EAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAAl5C,EACAxgB,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA1zH,EAAA,IACA,MAEA,QACAyzH,GAAAj+F,EAAAjpD,KACA6wE,EAAArC,EAAA/iB,EACA32C,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA,MAEA,QACAD,EAAAj+F,EAAAjpD,KACA6wE,EAAArC,EAAA/iB,EACA32C,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA,MAEA,QACAA,GAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAA/iB,EACA32C,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA,MAEA,QACAA,EAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAA/iB,EACA32C,EAAA86D,QAAAiB,EAAAq2E,EAAAC,GACA,MAEA,QACAt2E,EAAArC,EAAAvZ,EACAngD,EAAA86D,QAAAiB,EAAA5nB,EAAAjpD,KAAAipD,EAAAjpD,KAAAipD,EAAAjpD,KAAAipD,EAAAjpD,KAAAipD,EAAAjpD,KAAAipD,EAAAjpD,MACAknJ,EAAAj+F,EAAAjpD,EAAA,GACAmnJ,EAAAl+F,EAAAjpD,EAAA,GACA,MAEA,QACA6wE,EAAArC,EAAAvZ,EACAngD,EAAA86D,QAAAiB,EAAA5nB,EAAAjpD,KAAAknJ,EAAAj+F,EAAAjpD,KAAAmnJ,EAAAl+F,EAAAjpD,KAAAknJ,EAAAj+F,EAAAjpD,KAAAmnJ,EAAAl+F,EAAAjpD,KAAAknJ,EAAAj+F,EAAAjpD,KAAAmnJ,GACAD,GAAAj+F,EAAAjpD,EAAA,GACAmnJ,GAAAl+F,EAAAjpD,EAAA,GACA,MAEA,QACAonJ,EAAAF,EACAG,EAAAF,EACA,IAAA9zJ,EAAAyhB,EAAAzhB,MACAshB,EAAAG,EAAAzd,KAEA4vJ,IAAAz4E,EAAAvZ,IACAmyF,GAAAF,EAAAvyI,EAAAthB,EAAA,GACAg0J,GAAAF,EAAAxyI,EAAAthB,EAAA,IAGAw9E,EAAArC,EAAAvZ,EACA33C,EAAA2rC,EAAAjpD,KACAwd,EAAAyrC,EAAAjpD,KACAknJ,EAAAj+F,EAAAjpD,KACAmnJ,EAAAl+F,EAAAjpD,KACA8U,EAAA86D,QAAAiB,EAAAu2E,EAAAC,EAAA/pI,EAAAE,EAAA0pI,EAAAC,GACA,MAEA,QACAC,EAAAF,EACAG,EAAAF,EACA9zJ,EAAAyhB,EAAAzhB,MACAshB,EAAAG,EAAAzd,KAEA4vJ,IAAAz4E,EAAAvZ,IACAmyF,GAAAF,EAAAvyI,EAAAthB,EAAA,GACAg0J,GAAAF,EAAAxyI,EAAAthB,EAAA,IAGAw9E,EAAArC,EAAAvZ,EACA33C,EAAA4pI,EAAAj+F,EAAAjpD,KACAwd,EAAA2pI,EAAAl+F,EAAAjpD,KACAknJ,GAAAj+F,EAAAjpD,KACAmnJ,GAAAl+F,EAAAjpD,KACA8U,EAAA86D,QAAAiB,EAAAu2E,EAAAC,EAAA/pI,EAAAE,EAAA0pI,EAAAC,GACA,MAEA,QACA7pI,EAAA2rC,EAAAjpD,KACAwd,EAAAyrC,EAAAjpD,KACAknJ,EAAAj+F,EAAAjpD,KACAmnJ,EAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAAC,EACA35D,EAAA86D,QAAAiB,EAAAvzD,EAAAE,EAAA0pI,EAAAC,GACA,MAEA,QACA7pI,EAAA2rC,EAAAjpD,KAAAknJ,EACA1pI,EAAAyrC,EAAAjpD,KAAAmnJ,EACAD,GAAAj+F,EAAAjpD,KACAmnJ,GAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAAC,EACA35D,EAAA86D,QAAAiB,EAAAvzD,EAAAE,EAAA0pI,EAAAC,GACA,MAEA,QACAC,EAAAF,EACAG,EAAAF,EACA9zJ,EAAAyhB,EAAAzhB,MACAshB,EAAAG,EAAAzd,KAEA4vJ,IAAAz4E,EAAAC,IACA24E,GAAAF,EAAAvyI,EAAAthB,EAAA,GACAg0J,GAAAF,EAAAxyI,EAAAthB,EAAA,IAGA6zJ,EAAAj+F,EAAAjpD,KACAmnJ,EAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAAC,EACA35D,EAAA86D,QAAAiB,EAAAu2E,EAAAC,EAAAH,EAAAC,GACA,MAEA,QACAC,EAAAF,EACAG,EAAAF,EACA9zJ,EAAAyhB,EAAAzhB,MACAshB,EAAAG,EAAAzd,KAEA4vJ,IAAAz4E,EAAAC,IACA24E,GAAAF,EAAAvyI,EAAAthB,EAAA,GACAg0J,GAAAF,EAAAxyI,EAAAthB,EAAA,IAGA6zJ,GAAAj+F,EAAAjpD,KACAmnJ,GAAAl+F,EAAAjpD,KACA6wE,EAAArC,EAAAC,EACA35D,EAAA86D,QAAAiB,EAAAu2E,EAAAC,EAAAH,EAAAC,GACA,MAEA,QACAz1E,EAAAzoB,EAAAjpD,KACA2xE,EAAA1oB,EAAAjpD,KACAgyE,EAAA/oB,EAAAjpD,KACAsmJ,EAAAr9F,EAAAjpD,KACAiyE,EAAAhpB,EAAAjpD,KAKAqmJ,EAJA/oI,EAAA4pI,EAAA1pI,EAAA2pI,EACAD,EAAAj+F,EAAAjpD,KACAmnJ,EAAAl+F,EAAAjpD,KAEAsmJ,EAAAr0E,EAAAP,EAAAC,EAAAK,EADAnB,EAAArC,EAAAxZ,EACAlgD,GACA,MAEA,QACA48D,EAAAzoB,EAAAjpD,KACA2xE,EAAA1oB,EAAAjpD,KACAgyE,EAAA/oB,EAAAjpD,KACAsmJ,EAAAr9F,EAAAjpD,KACAiyE,EAAAhpB,EAAAjpD,KAKAqmJ,EAJA/oI,EAAA4pI,EAAA1pI,EAAA2pI,EACAD,GAAAj+F,EAAAjpD,KACAmnJ,GAAAl+F,EAAAjpD,KAEAsmJ,EAAAr0E,EAAAP,EAAAC,EAAAK,EADAnB,EAAArC,EAAAxZ,EACAlgD,IAKA,MAAA2e,GAAA,MAAAA,IACAo9C,EAAArC,EAAAE,EACA55D,EAAA86D,QAAAiB,IAGAo2E,EAAAp2E,EAIA,OADA/7D,EAAA07D,WACA17D,EAKAwyI,CAAAzuJ,GAuBA,OAtBA+D,KAAA,IAEAs8B,UAAA,SAAApkB,GACA,GAAAA,EAAA4rB,QAAA,CACA5rB,EAAA4rB,QAAAomH,EAAAzvJ,OAEAqgC,EAAA5iB,EAAAre,eAGAqe,EAAAqkB,YAAAzB,OAEK,CACL,IAAAA,EAAA5iB,EACAgyI,EAAA3tH,YAAAzB,KAIA96B,EAAAyY,eAAA,SAAAC,GACAywI,EAAAe,EAAAxxI,GACAzf,KAAAqW,OAAA,IAGAtP,EAiEA1G,EAAA6e,iBAxDA,SAAAlc,EAAA+D,GACA,WAAAyW,EAAAwzI,EAAAhuJ,EAAA+D,KAwDA1G,EAAA6mB,iBA/CA,SAAAlkB,EAAA+D,GACA,OAAAyW,EAAA7c,OAAAqwJ,EAAAhuJ,EAAA+D,KA+CA1G,EAAAkf,UArCA,SAAAmyI,EAAA3qJ,GAIA,IAHA,IAAA4qJ,EAAA,GACAn0J,EAAAk0J,EAAAj0J,OAEAF,EAAA,EAAiBA,EAAAC,EAASD,IAAA,CAC1B,IAAAq0J,EAAAF,EAAAn0J,GAEAq0J,EAAA3yI,MACA2yI,EAAAjuH,kBAGAiuH,EAAAlwH,aACAkwH,EAAAvuH,UAAAuuH,EAAA3yI,KAAA2yI,EAAApqI,OAAA,GAGAmqI,EAAAlwJ,KAAAmwJ,EAAA3yI,MAGA,IAAA4yI,EAAA,IAAAr0I,EAAAzW,GAcA,OAZA8qJ,EAAAluH,kBAEAkuH,EAAAxuH,UAAA,SAAApkB,GACAA,EAAA47D,WAAA82E,GAEA,IAAA9vH,EAAA5iB,EAAAre,aAEAihC,GACA5iB,EAAAqkB,YAAAzB,IAIAgwH,oBCnZA,IAAAvwH,EAAgB59B,EAAQ,KAExB4zB,EAAW5zB,EAAQ,KAEnBouJ,EAAYpuJ,EAAQ,KAEpBquJ,EAAgBruJ,EAAQ,KAExBy6C,EAAUz6C,EAAQ,KAIlB60H,EAFY70H,EAAQ,KAEpB60H,gBAEA9/C,EAAY/0E,EAAQ,KAEpBq6H,EAAkBr6H,EAAQ,KAE1Bi1E,EAAAr3C,EAAAq3C,IACAgxB,EAAA,EAAAh7F,KAAA4U,GACAy6C,EAAA,KAOA,IAAAkB,EAAA,WACAkB,EAAA,QAEA,SAAA4xF,IACA,IAAA/xF,EAAAG,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAH,EAGA,SAAAgyF,EAAApxF,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,EAAAhxD,EAAAC,GAEA,GAAAA,EAAA6wD,GAAA7wD,EAAA0X,GAAA1X,EAAA2X,GAAA3X,EAAA+wD,GAAA/wD,EAAA6wD,GAAA7wD,EAAA0X,GAAA1X,EAAA2X,GAAA3X,EAAA+wD,EACA,SAGA,IAAAkxF,EAAAz5E,EAAAxZ,YAAA6B,EAAAn5C,EAAAC,EAAAo5C,EAAA/wD,EAAAivD,GAEA,OAAAgzF,EACA,SAMA,IAJA,IAEAC,EAAAC,EAFApuH,EAAA,EACAquH,GAAA,EAGA90J,EAAA,EAAmBA,EAAA20J,EAAY30J,IAAA,CAC/B,IAAA0/B,EAAAiiC,EAAA3hE,GAEA+0J,EAAA,IAAAr1H,GAAA,IAAAA,EAAA,KACAw7C,EAAAha,QAAAoC,EAAAp5C,EAAAC,EAAAq5C,EAAA9jC,GAEAjtB,IAKAqiJ,EAAA,IACAA,EAAA55E,EAAAtY,aAAAW,EAAAn5C,EAAAC,EAAAo5C,EAAAZ,GAEAA,EAAA,GAAAA,EAAA,IAAAiyF,EAAA,GACAL,IAGAG,EAAA15E,EAAAha,QAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAAZ,EAAA,IAEAiyF,EAAA,IACAD,EAAA35E,EAAAha,QAAAqC,EAAAn5C,EAAAC,EAAAo5C,EAAAZ,EAAA,MAIA,GAAAiyF,EAEAp1H,EAAAmjC,EAAA,GACAp8B,GAAAmuH,EAAArxF,EAAAwxF,KACSr1H,EAAAmjC,EAAA,GACTp8B,GAAAouH,EAAAD,EAAAG,KAEAtuH,GAAAg9B,EAAAoxF,EAAAE,KAIAr1H,EAAAmjC,EAAA,GACAp8B,GAAAmuH,EAAArxF,EAAAwxF,KAEAtuH,GAAAg9B,EAAAmxF,EAAAG,MAKA,OAAAtuH,EAIA,SAAAuuH,EAAA1xF,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAA5X,EAAAC,GAEA,GAAAA,EAAA6wD,GAAA7wD,EAAA0X,GAAA1X,EAAA2X,GAAA3X,EAAA6wD,GAAA7wD,EAAA0X,GAAA1X,EAAA2X,EACA,SAGA,IAAAsqI,EAAAz5E,EAAAlX,gBAAAT,EAAAn5C,EAAAC,EAAA3X,EAAAivD,GAEA,OAAAgzF,EACA,SAEA,IAAAj1H,EAAAw7C,EAAAjX,kBAAAV,EAAAn5C,EAAAC,GAEA,GAAAqV,GAAA,GAAAA,GAAA,GAIA,IAHA,IAAA+G,EAAA,EACAwuH,EAAA/5E,EAAA1Z,YAAA+B,EAAAn5C,EAAAC,EAAAqV,GAEA1/B,EAAA,EAAqBA,EAAA20J,EAAY30J,IAAA,CAEjC,IAAA+0J,EAAA,IAAApzF,EAAA3hE,IAAA,IAAA2hE,EAAA3hE,GAAA,KACAk7E,EAAA1Z,YAAA8B,EAAAp5C,EAAAC,EAAAw3C,EAAA3hE,IAEAyS,IAKAkvD,EAAA3hE,GAAA0/B,EACA+G,GAAAwuH,EAAA1xF,EAAAwxF,KAEAtuH,GAAApc,EAAA4qI,EAAAF,MAIA,OAAAtuH,EAGAsuH,EAAA,IAAApzF,EAAA,QAAAA,EAAA,QAGA,OAFAuZ,EAAA1Z,YAAA8B,EAAAp5C,EAAAC,EAAAw3C,EAAA,IAEAlvD,EAEA,EAGA4X,EAAAk5C,EAAAwxF,KAOA,SAAAG,EAAAp1G,EAAAC,EAAAM,EAAA08B,EAAAC,EAAAC,EAAAxqE,EAAAC,GAGA,IAFAA,GAAAqtC,GAEAM,GAAA3tC,GAAA2tC,EACA,SAGA,IAAAqiB,EAAAtxD,KAAAmtB,KAAA8hB,IAAA3tC,KACAivD,EAAA,IAAAe,EACAf,EAAA,GAAAe,EACA,IAAAtmB,EAAAhrC,KAAAyb,IAAAkwD,EAAAC,GAEA,GAAA5gC,EAAA,KACA,SAGA,GAAAA,EAAAgwD,EAAA,MAEArvB,EAAA,EACAC,EAAAovB,EACA,IAAA6uB,EAAAh+C,EAAA,KAEA,OAAAxqE,GAAAkvD,EAAA,GAAA7hB,GAAArtC,GAAAkvD,EAAA,GAAA7hB,EACAm7E,EAEA,EAIA,GAAAh+C,EAAA,CACAva,EAAAqa,EACAA,EAAAi+C,EAAAh+C,GACAA,EAAAg+C,EAAAt4D,QAEAqa,EAAAi+C,EAAAj+C,GACAC,EAAAg+C,EAAAh+C,GAGAD,EAAAC,IACAA,GAAAovB,GAKA,IAFA,IAAA3lE,EAAA,EAEAzmC,EAAA,EAAiBA,EAAA,EAAOA,IAAA,CACxB,IAAAk7H,EAAAv5D,EAAA3hE,GAEA,GAAAk7H,EAAAp7E,EAAArtC,EAAA,CACA,IAAA6tC,EAAAlvC,KAAAw3F,MAAAl2F,EAAAwoH,GACAD,EAAAh+C,EAAA,KAEA38B,EAAA,IACAA,EAAA8rD,EAAA9rD,IAGAA,GAAAy8B,GAAAz8B,GAAA08B,GAAA18B,EAAA8rD,GAAArvB,GAAAz8B,EAAA8rD,GAAApvB,KACA18B,EAAAlvC,KAAA4U,GAAA,GAAAs6B,EAAA,IAAAlvC,KAAA4U,KACAi1G,MAGAx0F,GAAAw0F,IAKA,OAAAx0F,EAGA,SAAA0uH,EAAAlxJ,EAAAqe,EAAA8yI,EAAA3iJ,EAAAC,GAOA,IANA,IAtMA5M,EAAAC,EAsMA0gC,EAAA,EACAw3C,EAAA,EACAC,EAAA,EACA5a,EAAA,EACAC,EAAA,EAEAvjE,EAAA,EAAiBA,EAAAiE,EAAA/D,QAAiB,CAClC,IAAAu9E,EAAAx5E,EAAAjE,KAwBA,OAtBAy9E,IAAArC,EAAAl5C,GAAAliC,EAAA,IAEAo1J,IACA3uH,GAAA+5F,EAAAviD,EAAAC,EAAA5a,EAAAC,EAAA9wD,EAAAC,KAQA,GAAA1S,IAOAsjE,EAFA2a,EAAAh6E,EAAAjE,GAGAujE,EAFA2a,EAAAj6E,EAAAjE,EAAA,IAKAy9E,GACA,KAAArC,EAAAl5C,EAKA+7C,EAFA3a,EAAAr/D,EAAAjE,KAGAk+E,EAFA3a,EAAAt/D,EAAAjE,KAGA,MAEA,KAAAo7E,EAAA/iB,EACA,GAAA+8F,GACA,GAAAr7H,EAAA+M,cAAAm3C,EAAAC,EAAAj6E,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAsiB,EAAA7P,EAAAC,GACA,cAIA+zB,GAAA+5F,EAAAviD,EAAAC,EAAAj6E,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAyS,EAAAC,IAAA,EAGAurE,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA,MAEA,KAAAo7E,EAAAvZ,EACA,GAAAuzF,GACA,GAAAb,EAAAztH,cAAAm3C,EAAAC,EAAAj6E,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAsiB,EAAA7P,EAAAC,GACA,cAGA+zB,GAAAiuH,EAAAz2E,EAAAC,EAAAj6E,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAyS,EAAAC,IAAA,EAGAurE,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA,MAEA,KAAAo7E,EAAAC,EACA,GAAA+5E,GACA,GAAAZ,EAAA1tH,cAAAm3C,EAAAC,EAAAj6E,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAsiB,EAAA7P,EAAAC,GACA,cAGA+zB,GAAAuuH,EAAA/2E,EAAAC,EAAAj6E,EAAAjE,KAAAiE,EAAAjE,KAAAiE,EAAAjE,GAAAiE,EAAAjE,EAAA,GAAAyS,EAAAC,IAAA,EAGAurE,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA,MAEA,KAAAo7E,EAAAxZ,EAEA,IAAA9hB,EAAA77C,EAAAjE,KACA+/C,EAAA97C,EAAAjE,KACAs+E,EAAAr6E,EAAAjE,KACAu+E,EAAAt6E,EAAAjE,KACAuiE,EAAAt+D,EAAAjE,KACA2+E,EAAA16E,EAAAjE,KAGAi9E,GADAh5E,EAAAjE,KACA,EAAAiE,EAAAjE,MACAkqB,EAAA9Y,KAAA6gC,IAAAswB,GAAA+b,EAAAx+B,EACA11B,EAAAhZ,KAAA2gC,IAAAwwB,GAAAgc,EAAAx+B,EAEA//C,EAAA,EACAymC,GAAA+5F,EAAAviD,EAAAC,EAAAh0D,EAAAE,EAAA3X,EAAAC,IAGA4wD,EAAAp5C,EACAq5C,EAAAn5C,GAIA,IAAAg6E,GAAA3xF,EAAAqtC,GAAAy+B,EAAAD,EAAAx+B,EAEA,GAAAs1G,GACA,GAAAx0G,EAAA9Z,cAAAgZ,EAAAC,EAAAw+B,EAAAhc,IAAAoc,EAAA1B,EAAA36D,EAAA8hF,EAAA1xF,GACA,cAGA+zB,GAAAyuH,EAAAp1G,EAAAC,EAAAw+B,EAAAhc,IAAAoc,EAAA1B,EAAAmnB,EAAA1xF,GAGAurE,EAAA7sE,KAAA6gC,IAAAswB,EAAAoc,GAAAL,EAAAx+B,EACAo+B,EAAA9sE,KAAA2gC,IAAAwwB,EAAAoc,GAAAJ,EAAAx+B,EACA,MAEA,KAAAq7B,EAAArjB,EACAuL,EAAA2a,EAAAh6E,EAAAjE,KACAujE,EAAA2a,EAAAj6E,EAAAjE,KAGAkqB,EAAAo5C,EAFAr/D,EAAAjE,KAGAoqB,EAAAm5C,EAFAt/D,EAAAjE,KAIA,GAAAo1J,GACA,GAAAr7H,EAAA+M,cAAAw8B,EAAAC,EAAAr5C,EAAAq5C,EAAAjhD,EAAA7P,EAAAC,IAAAqnB,EAAA+M,cAAA5c,EAAAq5C,EAAAr5C,EAAAE,EAAA9H,EAAA7P,EAAAC,IAAAqnB,EAAA+M,cAAA5c,EAAAE,EAAAk5C,EAAAl5C,EAAA9H,EAAA7P,EAAAC,IAAAqnB,EAAA+M,cAAAw8B,EAAAl5C,EAAAk5C,EAAAC,EAAAjhD,EAAA7P,EAAAC,GACA,cAIA+zB,GAAA+5F,EAAAt2G,EAAAq5C,EAAAr5C,EAAAE,EAAA3X,EAAAC,GACA+zB,GAAA+5F,EAAAl9D,EAAAl5C,EAAAk5C,EAAAC,EAAA9wD,EAAAC,GAGA,MAEA,KAAA0oE,EAAAE,EACA,GAAA85E,GACA,GAAAr7H,EAAA+M,cAAAm3C,EAAAC,EAAA5a,EAAAC,EAAAjhD,EAAA7P,EAAAC,GACA,cAIA+zB,GAAA+5F,EAAAviD,EAAAC,EAAA5a,EAAAC,EAAA9wD,EAAAC,GAOAurE,EAAA3a,EACA4a,EAAA3a,GASA,OAJA6xF,IApWAtvJ,EAoWAo4E,EApWAn4E,EAoWAw9D,EAnWAnyD,KAAAyb,IAAA/mB,EAAAC,GAAA06D,KAoWAh6B,GAAA+5F,EAAAviD,EAAAC,EAAA5a,EAAAC,EAAA9wD,EAAAC,IAAA,GAGA,IAAA+zB,EAWA3jC,EAAA6gC,QARA,SAAApiB,EAAA9O,EAAAC,GACA,OAAAyiJ,EAAA5zI,EAAA,KAAA9O,EAAAC,IAQA5P,EAAAgkC,cALA,SAAAvlB,EAAAe,EAAA7P,EAAAC,GACA,OAAAyiJ,EAAA5zI,EAAAe,GAAA,EAAA7P,EAAAC,qBCtYA,IAAAwoE,EAAY/0E,EAAQ,KAiCpBrD,EAAAgkC,cAfA,SAAAw8B,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,EAAAnhD,EAAA7P,EAAAC,GACA,OAAA4P,EACA,SAGA,IAAAw4G,EAAAx4G,EAEA,QAAA5P,EAAA6wD,EAAAu3D,GAAApoH,EAAA0X,EAAA0wG,GAAApoH,EAAA2X,EAAAywG,GAAApoH,EAAA+wD,EAAAq3D,GAAApoH,EAAA6wD,EAAAu3D,GAAApoH,EAAA0X,EAAA0wG,GAAApoH,EAAA2X,EAAAywG,GAAApoH,EAAA+wD,EAAAq3D,GAAAroH,EAAA6wD,EAAAw3D,GAAAroH,EAAAyX,EAAA4wG,GAAAroH,EAAA0X,EAAA2wG,GAAAroH,EAAA+wD,EAAAs3D,GAAAroH,EAAA6wD,EAAAw3D,GAAAroH,EAAAyX,EAAA4wG,GAAAroH,EAAA0X,EAAA2wG,GAAAroH,EAAA+wD,EAAAs3D,IAIA5/C,EAAA7X,kBAAAC,EAAAC,EAAAr5C,EAAAE,EAAAD,EAAAE,EAAAm5C,EAAAC,EAAAhxD,EAAAC,EAAA,OACAooH,EAAA,oBC9BA,IAEAE,EAFY70H,EAAQ,KAEpB60H,gBACA5uB,EAAA,EAAAh7F,KAAA4U,GAwDAljB,EAAAgkC,cAzCA,SAAAgZ,EAAAC,EAAAM,EAAA08B,EAAAC,EAAAC,EAAA36D,EAAA7P,EAAAC,GACA,OAAA4P,EACA,SAGA,IAAAw4G,EAAAx4G,EACA7P,GAAAqtC,EACAptC,GAAAqtC,EACA,IAAAxgB,EAAAnuB,KAAAmtB,KAAA9rB,IAAAC,KAEA,GAAA6sB,EAAAu7F,EAAAz6E,GAAA9gB,EAAAu7F,EAAAz6E,EACA,SAGA,GAAAjvC,KAAAyb,IAAAkwD,EAAAC,GAAAovB,EAAA,KAEA,SAGA,GAAAnvB,EAAA,CACA,IAAAva,EAAAqa,EACAA,EAAAi+C,EAAAh+C,GACAA,EAAAg+C,EAAAt4D,QAEAqa,EAAAi+C,EAAAj+C,GACAC,EAAAg+C,EAAAh+C,GAGAD,EAAAC,IACAA,GAAAovB,GAGA,IAAA9rD,EAAAlvC,KAAAw3F,MAAAl2F,EAAAD,GAMA,OAJA6tC,EAAA,IACAA,GAAA8rD,GAGA9rD,GAAAy8B,GAAAz8B,GAAA08B,GAAA18B,EAAA8rD,GAAArvB,GAAAz8B,EAAA8rD,GAAApvB,oBCxDA,IAAAj5C,EAAgB59B,EAAQ,KAIxBm8B,EAFcn8B,EAAQ,KAEtB8b,eACAm5D,EAAAr3C,EAAAq3C,IACAvtD,EAAA,WACA2yC,EAAApvD,KAAAmtB,KACA82H,EAAAjkJ,KAAAw3F,MA2FAhuE,EAAA93B,QAzFA,SAAA4e,EAAAQ,GACA,IACAu7D,EACA63E,EACAt1J,EACAo1B,EACAsM,EALAz9B,EAAAyd,EAAAzd,KAOAi+B,EAAAk5C,EAAAl5C,EACA2/B,EAAAuZ,EAAAvZ,EACAxJ,EAAA+iB,EAAA/iB,EACAN,EAAAqjB,EAAArjB,EACA6J,EAAAwZ,EAAAxZ,EACAyZ,EAAAD,EAAAC,EAEA,IAAAr7E,EAAA,EAAAo1B,EAAA,EAAoBp1B,EAAAiE,EAAA/D,QAAiB,CAKrC,OAJAu9E,EAAAx5E,EAAAjE,KACAo1B,EAAAp1B,EACAs1J,EAAA,EAEA73E,GACA,KAAAv7C,EAIA,KAAAm2B,EACAi9F,EAAA,EACA,MAEA,KAAAzzF,EACAyzF,EAAA,EACA,MAEA,KAAAj6E,EACAi6E,EAAA,EACA,MAEA,KAAA1zF,EACA,IAAAnvD,EAAAyP,EAAA,GACAxP,EAAAwP,EAAA,GACA6gB,EAAAy9B,EAAAt+C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA8gB,EAAAw9B,EAAAt+C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAo+B,EAAA+0G,GAAAnzI,EAAA,GAAA8gB,EAAA9gB,EAAA,GAAA6gB,GAEA9+B,EAAAjE,IAAA+iC,EACA9+B,EAAAjE,MAAAyS,EAEAxO,EAAAjE,IAAAgjC,EACA/+B,EAAAjE,MAAA0S,EAGAzO,EAAAjE,MAAA+iC,EACA9+B,EAAAjE,MAAAgjC,EAEA/+B,EAAAjE,MAAAsgD,EAEAr8C,EAAAjE,MAAAsgD,EAGAlrB,EADAp1B,GAAA,EAEA,MAEA,KAAA+3D,EAEAlC,EAAA,GAAA5xD,EAAAjE,KACA61D,EAAA,GAAA5xD,EAAAjE,KACAsiC,EAAAuzB,IAAA3zC,GACAje,EAAAmxB,KAAAygC,EAAA,GACA5xD,EAAAmxB,KAAAygC,EAAA,GAEAA,EAAA,IAAA5xD,EAAAjE,KACA61D,EAAA,IAAA5xD,EAAAjE,KACAsiC,EAAAuzB,IAAA3zC,GACAje,EAAAmxB,KAAAygC,EAAA,GACA5xD,EAAAmxB,KAAAygC,EAAA,GAGA,IAAAn0B,EAAA,EAAeA,EAAA4zH,EAAY5zH,IAAA,CAC3B,IAAAm0B,KAAAhoC,EAAA6T,IACA,GAAAz9B,EAAAjE,KACA61D,EAAA,GAAA5xD,EAAAjE,KACAsiC,EAAAuzB,IAAA3zC,GAEAje,EAAAmxB,KAAAygC,EAAA,GACA5xD,EAAAmxB,KAAAygC,EAAA,uBC9FA,IAOAhyB,EAPW19B,EAAQ,KAOnB/C,OAAA,CACApB,KAAA,SACAioB,MAAA,CACA61B,GAAA,EACAC,GAAA,EACAM,EAAA,GAEAva,UAAA,SAAAxB,EAAAra,EAAAkc,GAGAA,GACA7B,EAAA0b,OAAA/1B,EAAA61B,GAAA71B,EAAAo2B,EAAAp2B,EAAA81B,IAUAzb,EAAAsc,IAAA32B,EAAA61B,GAAA71B,EAAA81B,GAAA91B,EAAAo2B,EAAA,IAAAjvC,KAAA4U,IAAA,MAIA4U,EAAA93B,QAAA+gC,mBChCA,IAAA5jB,EAAW9Z,EAAQ,KAEnBk7H,EAAwBl7H,EAAQ,KAOhC09B,EAAA5jB,EAAA7c,OAAA,CACApB,KAAA,SACAioB,MAAA,CACA61B,GAAA,EACAC,GAAA,EACA+mD,GAAA,EACAzmD,EAAA,EACA08B,WAAA,EACAC,SAAA,EAAA5rE,KAAA4U,GACA+gF,WAAA,GAEA1iE,MAAAg9F,EAAAphH,EAAAthB,UAAA0lC,OACAyB,UAAA,SAAAxB,EAAAra,GACA,IAAAxX,EAAAwX,EAAA61B,GACAptC,EAAAuX,EAAA81B,GACA+mD,EAAA11F,KAAAG,IAAA0Y,EAAA68E,IAAA,KACAzmD,EAAAjvC,KAAAG,IAAA0Y,EAAAo2B,EAAA,GACA08B,EAAA9yD,EAAA8yD,WACAC,EAAA/yD,EAAA+yD,SACA+pB,EAAA98E,EAAA88E,UACAwuD,EAAAnkJ,KAAA6gC,IAAA8qC,GACAy4E,EAAApkJ,KAAA2gC,IAAAgrC,GACAz4C,EAAA0b,OAAAu1G,EAAAzuD,EAAAr0F,EAAA+iJ,EAAA1uD,EAAAp0F,GACA4xB,EAAA2b,OAAAs1G,EAAAl1G,EAAA5tC,EAAA+iJ,EAAAn1G,EAAA3tC,GACA4xB,EAAAsc,IAAAnuC,EAAAC,EAAA2tC,EAAA08B,EAAAC,GAAA+pB,GACAziE,EAAA2b,OAAA7uC,KAAA6gC,IAAA+qC,GAAA8pB,EAAAr0F,EAAArB,KAAA2gC,IAAAirC,GAAA8pB,EAAAp0F,GAEA,IAAAo0F,GACAxiE,EAAAsc,IAAAnuC,EAAAC,EAAAo0F,EAAA9pB,EAAAD,EAAAgqB,GAGAziE,EAAA4b,eAIAtlB,EAAA93B,QAAA+gC,mBC5CA,IAOAA,EAPW19B,EAAQ,KAOnB/C,OAAA,CACApB,KAAA,OACAioB,MAAA,CACA61B,GAAA,EACAC,GAAA,EACAM,EAAA,EACAymD,GAAA,GAEAhhE,UAAA,SAAAxB,EAAAra,GACA,IAAAxX,EAAAwX,EAAA61B,GACAptC,EAAAuX,EAAA81B,GACAqsD,EAAA,EAAAh7F,KAAA4U,GACAse,EAAA0b,OAAAvtC,EAAAwX,EAAAo2B,EAAA3tC,GACA4xB,EAAAsc,IAAAnuC,EAAAC,EAAAuX,EAAAo2B,EAAA,EAAA+rD,GAAA,GACA9nE,EAAA0b,OAAAvtC,EAAAwX,EAAA68E,GAAAp0F,GACA4xB,EAAAsc,IAAAnuC,EAAAC,EAAAuX,EAAA68E,GAAA,EAAAsF,GAAA,MAIAxxE,EAAA93B,QAAA+gC,mBC1BA,IAAA5jB,EAAW9Z,EAAQ,KAEnBsvJ,EAAiBtvJ,EAAQ,KAOzB09B,EAAA5jB,EAAA7c,OAAA,CACApB,KAAA,UACAioB,MAAA,CACA4D,OAAA,KACAmM,QAAA,EACA0hG,iBAAA,MAEA51F,UAAA,SAAAxB,EAAAra,GACAwrI,EAAA3vH,UAAAxB,EAAAra,GAAA,MAIA2Q,EAAA93B,QAAA+gC,mBCrBA,IAEA6xH,EAFcvvJ,EAAQ,KAEtBu4B,SAaA,SAAAi3H,EAAAx0F,EAAAC,EAAAC,EAAAC,EAAA5hC,EAAAwiC,EAAAS,GACA,IAAA8uD,EAAA,IAAApwD,EAAAF,GACAxiC,EAAA,IAAA2iC,EAAAF,GACA,UAAAA,EAAAC,GAAAowD,EAAA9yF,GAAAgkC,IAAA,GAAAvB,EAAAC,GAAA,EAAAowD,EAAA9yF,GAAAujC,EAAAuvD,EAAA/xF,EAAA0hC,EAiDAxmC,EAAA93B,QAvCA,SAAA+qB,EAAA+nI,GAKA,IAJA,IAAA31J,EAAA4tB,EAAA3tB,OACA46D,EAAA,GACAp8B,EAAA,EAEA1+B,EAAA,EAAiBA,EAAAC,EAASD,IAC1B0+B,GAAAg3H,EAAA7nI,EAAA7tB,EAAA,GAAA6tB,EAAA7tB,IAGA,IAAA61J,EAAAn3H,EAAA,EAGA,IAFAm3H,IAAA51J,IAAA41J,EAEA71J,EAAA,EAAiBA,EAAA61J,EAAU71J,IAAA,CAC3B,IAGAmhE,EAEAE,EACAC,EANA8O,EAAApwE,GAAA61J,EAAA,IAAAD,EAAA31J,IAAA,GACAywB,EAAAtf,KAAAod,MAAA4hD,GACA3pC,EAAA2pC,EAAA1/C,EAEA0wC,EAAAvzC,EAAA6C,EAAAzwB,GAIA21J,GAKAz0F,EAAAtzC,GAAA6C,EAAA,EAAAzwB,MACAohE,EAAAxzC,GAAA6C,EAAA,GAAAzwB,GACAqhE,EAAAzzC,GAAA6C,EAAA,GAAAzwB,KANAkhE,EAAAtzC,EAAA,IAAA6C,MAAA,GACA2wC,EAAAxzC,EAAA6C,EAAAzwB,EAAA,EAAAA,EAAA,EAAAywB,EAAA,GACA4wC,EAAAzzC,EAAA6C,EAAAzwB,EAAA,EAAAA,EAAA,EAAAywB,EAAA,IAOA,IAAAolI,EAAArvH,IACAsvH,EAAAtvH,EAAAqvH,EACAh7F,EAAA52D,KAAA,CAAAyxJ,EAAAx0F,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA76B,EAAAqvH,EAAAC,GAAAJ,EAAAx0F,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA76B,EAAAqvH,EAAAC,KAGA,OAAAj7F,oBChEA,IAAAsF,EAAcj6D,EAAQ,KAEtB6vJ,EAAA51F,EAAA/uD,IACA4kJ,EAAA71F,EAAA7uD,IACA2kJ,EAAA91F,EAAAhhC,MACAs2H,EAAAt1F,EAAA1hC,SACAy3H,EAAA/1F,EAAAxtD,IACAwjJ,EAAAh2F,EAAA1gE,MACA22J,EAAAj2F,EAAA1oD,IA+FAkjB,EAAA93B,QA1EA,SAAA+qB,EAAAmM,EAAA47H,EAAAU,GACA,IAIAC,EACAC,EACAnlJ,EAAAE,EANAklJ,EAAA,GACA1jI,EAAA,GACA4L,EAAA,GACAC,EAAA,GAKA,GAAA03H,EAAA,CACAjlJ,EAAA,CAAAK,SACAH,EAAA,YAEA,QAAAvR,EAAA,EAAAC,EAAA4tB,EAAA3tB,OAAwCF,EAAAC,EAASD,IACjDg2J,EAAA3kJ,IAAAwc,EAAA7tB,IACAi2J,EAAA1kJ,IAAAsc,EAAA7tB,IAIAg2J,EAAA3kJ,IAAAilJ,EAAA,IACAL,EAAA1kJ,IAAA+kJ,EAAA,IAGA,IAAAt2J,EAAA,EAAAC,EAAA4tB,EAAA3tB,OAAsCF,EAAAC,EAASD,IAAA,CAC/C,IAAA8tB,EAAAD,EAAA7tB,GAEA,GAAA41J,EACAW,EAAA1oI,EAAA7tB,IAAA,EAAAC,EAAA,GACAu2J,EAAA3oI,GAAA7tB,EAAA,GAAAC,OACK,CACL,OAAAD,OAAAC,EAAA,GACAw2J,EAAAvyJ,KAAAkyJ,EAAAvoI,EAAA7tB,KACA,SAEAu2J,EAAA1oI,EAAA7tB,EAAA,GACAw2J,EAAA3oI,EAAA7tB,EAAA,GAIAq2J,EAAAtjI,EAAAyjI,EAAAD,GAEAL,EAAAnjI,IAAAiH,GACA,IAAA08H,EAAAhB,EAAA5nI,EAAAyoI,GACA3yF,EAAA8xF,EAAA5nI,EAAA0oI,GACA7lI,EAAA+lI,EAAA9yF,EAEA,IAAAjzC,IACA+lI,GAAA/lI,EACAizC,GAAAjzC,GAGAulI,EAAAv3H,EAAA5L,GAAA2jI,GACAR,EAAAt3H,EAAA7L,EAAA6wC,GACA,IAAA29D,EAAA40B,EAAA,GAAAroI,EAAA6Q,GACA85E,EAAA09C,EAAA,GAAAroI,EAAA8Q,GAEA03H,IACAL,EAAA10B,IAAAlwH,GACA2kJ,EAAAz0B,IAAAhwH,GACA0kJ,EAAAx9C,IAAApnG,GACA2kJ,EAAAv9C,IAAAlnG,IAGAklJ,EAAAvyJ,KAAAq9H,GACAk1B,EAAAvyJ,KAAAu0G,GAOA,OAJAm9C,GACAa,EAAAvyJ,KAAAuyJ,EAAA7+I,SAGA6+I,oBCpGA,IAAAx2I,EAAW9Z,EAAQ,KAEnBsvJ,EAAiBtvJ,EAAQ,KAMzB09B,EAAA5jB,EAAA7c,OAAA,CACApB,KAAA,WACAioB,MAAA,CACA4D,OAAA,KACAmM,QAAA,EACA0hG,iBAAA,MAEAlpH,MAAA,CACAwQ,OAAA,OACAC,KAAA,MAEA6iB,UAAA,SAAAxB,EAAAra,GACAwrI,EAAA3vH,UAAAxB,EAAAra,GAAA,MAIA2Q,EAAA93B,QAAA+gC,mBCxBA,IAAA5jB,EAAW9Z,EAAQ,KAEnBwoF,EAAsBxoF,EAAQ,KAO9B09B,EAAA5jB,EAAA7c,OAAA,CACApB,KAAA,OACAioB,MAAA,CAMAo2B,EAAA,EACA5tC,EAAA,EACAC,EAAA,EACAxI,MAAA,EACAC,OAAA,GAEA27B,UAAA,SAAAxB,EAAAra,GACA,IAAAxX,EAAAwX,EAAAxX,EACAC,EAAAuX,EAAAvX,EACAxI,EAAA+f,EAAA/f,MACAC,EAAA8f,EAAA9f,OAEA8f,EAAAo2B,EAGAsuC,EAAA7oD,UAAAxB,EAAAra,GAFAqa,EAAA9iB,KAAA/O,EAAAC,EAAAxI,EAAAC,GAKAm6B,EAAA4b,eAKAtlB,EAAA93B,QAAA+gC,mBCxCA,IAOAA,EAPW19B,EAAQ,KAOnB/C,OAAA,CACApB,KAAA,OACAioB,MAAA,CAEAC,GAAA,EACAE,GAAA,EAEAD,GAAA,EACAE,GAAA,EACA4E,QAAA,GAEAzc,MAAA,CACAwQ,OAAA,OACAC,KAAA,MAEA6iB,UAAA,SAAAxB,EAAAra,GACA,IAAAC,EAAAD,EAAAC,GACAE,EAAAH,EAAAG,GACAD,EAAAF,EAAAE,GACAE,EAAAJ,EAAAI,GACA4E,EAAAhF,EAAAgF,QAEA,IAAAA,IAIAqV,EAAA0b,OAAA91B,EAAAE,GAEA6E,EAAA,IACA9E,EAAAD,GAAA,EAAA+E,GAAA9E,EAAA8E,EACA5E,EAAAD,GAAA,EAAA6E,GAAA5E,EAAA4E,GAGAqV,EAAA2b,OAAA91B,EAAAE,KAQA8uF,QAAA,SAAAtjD,GACA,IAAA5rC,EAAAxnB,KAAAwnB,MACA,OAAAA,EAAAC,IAAA,EAAA2rC,GAAA5rC,EAAAE,GAAA0rC,EAAA5rC,EAAAG,IAAA,EAAAyrC,GAAA5rC,EAAAI,GAAAwrC,MAIAj7B,EAAA93B,QAAA+gC,mBCtDA,IAAA5jB,EAAW9Z,EAAQ,KAEnBk8B,EAAWl8B,EAAQ,KAEnBwwJ,EAAaxwJ,EAAQ,KAErBg+D,EAAAwyF,EAAAxyF,mBACArB,EAAA6zF,EAAA7zF,eACAtB,EAAAm1F,EAAAn1F,YACAN,EAAAy1F,EAAAz1F,QACA6C,EAAA4yF,EAAA5yF,sBACAtC,EAAAk1F,EAAAl1F,kBAMAziC,EAAA,GAEA,SAAA43H,EAAA3sI,EAAAyV,EAAAm3H,GACA,IAAAC,EAAA7sI,EAAA6sI,KACAC,EAAA9sI,EAAA8sI,KAEA,cAAAD,GAAA,OAAAC,EACA,EAAAF,EAAAp1F,EAAAP,GAAAj3C,EAAAC,GAAAD,EAAAyuF,KAAAzuF,EAAA6sI,KAAA7sI,EAAAE,GAAAuV,IAAAm3H,EAAAp1F,EAAAP,GAAAj3C,EAAAG,GAAAH,EAAA0uF,KAAA1uF,EAAA8sI,KAAA9sI,EAAAI,GAAAqV,IAEA,EAAAm3H,EAAA9yF,EAAAvC,GAAAv3C,EAAAC,GAAAD,EAAAyuF,KAAAzuF,EAAAE,GAAAuV,IAAAm3H,EAAA9yF,EAAAvC,GAAAv3C,EAAAG,GAAAH,EAAA0uF,KAAA1uF,EAAAI,GAAAqV,IAIA,IAAAmE,EAAA5jB,EAAA7c,OAAA,CACApB,KAAA,eACAioB,MAAA,CACAC,GAAA,EACAE,GAAA,EACAD,GAAA,EACAE,GAAA,EACAquF,KAAA,EACAC,KAAA,EAIA1pF,QAAA,GAEAzc,MAAA,CACAwQ,OAAA,OACAC,KAAA,MAEA6iB,UAAA,SAAAxB,EAAAra,GACA,IAAAC,EAAAD,EAAAC,GACAE,EAAAH,EAAAG,GACAD,EAAAF,EAAAE,GACAE,EAAAJ,EAAAI,GACAquF,EAAAzuF,EAAAyuF,KACAC,EAAA1uF,EAAA0uF,KACAm+C,EAAA7sI,EAAA6sI,KACAC,EAAA9sI,EAAA8sI,KACA9nI,EAAAhF,EAAAgF,QAEA,IAAAA,IAIAqV,EAAA0b,OAAA91B,EAAAE,GAEA,MAAA0sI,GAAA,MAAAC,GACA9nI,EAAA,IACAk1C,EAAAj6C,EAAAwuF,EAAAvuF,EAAA8E,EAAA+P,GACA05E,EAAA15E,EAAA,GACA7U,EAAA6U,EAAA,GACAmlC,EAAA/5C,EAAAuuF,EAAAtuF,EAAA4E,EAAA+P,GACA25E,EAAA35E,EAAA,GACA3U,EAAA2U,EAAA,IAGAsF,EAAAu4C,iBAAA67B,EAAAC,EAAAxuF,EAAAE,KAEA4E,EAAA,IACA6zC,EAAA54C,EAAAwuF,EAAAo+C,EAAA3sI,EAAA8E,EAAA+P,GACA05E,EAAA15E,EAAA,GACA83H,EAAA93H,EAAA,GACA7U,EAAA6U,EAAA,GACA8jC,EAAA14C,EAAAuuF,EAAAo+C,EAAA1sI,EAAA4E,EAAA+P,GACA25E,EAAA35E,EAAA,GACA+3H,EAAA/3H,EAAA,GACA3U,EAAA2U,EAAA,IAGAsF,EAAAuc,cAAA63D,EAAAC,EAAAm+C,EAAAC,EAAA5sI,EAAAE,MASA8uF,QAAA,SAAAz5E,GACA,OAAAk3H,EAAAn0J,KAAAwnB,MAAAyV,GAAA,IAQA45E,UAAA,SAAA55E,GACA,IAAAm2B,EAAA+gG,EAAAn0J,KAAAwnB,MAAAyV,GAAA,GACA,OAAA2C,EAAA/C,UAAAu2B,QAIAj7B,EAAA93B,QAAA+gC,mBChHA,IAOAA,EAPW19B,EAAQ,KAOnB/C,OAAA,CACApB,KAAA,MACAioB,MAAA,CACA61B,GAAA,EACAC,GAAA,EACAM,EAAA,EACA08B,WAAA,EACAC,SAAA,EAAA5rE,KAAA4U,GACA+gF,WAAA,GAEAv0F,MAAA,CACAwQ,OAAA,OACAC,KAAA,MAEA6iB,UAAA,SAAAxB,EAAAra,GACA,IAAAxX,EAAAwX,EAAA61B,GACAptC,EAAAuX,EAAA81B,GACAM,EAAAjvC,KAAAG,IAAA0Y,EAAAo2B,EAAA,GACA08B,EAAA9yD,EAAA8yD,WACAC,EAAA/yD,EAAA+yD,SACA+pB,EAAA98E,EAAA88E,UACAwuD,EAAAnkJ,KAAA6gC,IAAA8qC,GACAy4E,EAAApkJ,KAAA2gC,IAAAgrC,GACAz4C,EAAA0b,OAAAu1G,EAAAl1G,EAAA5tC,EAAA+iJ,EAAAn1G,EAAA3tC,GACA4xB,EAAAsc,IAAAnuC,EAAAC,EAAA2tC,EAAA08B,EAAAC,GAAA+pB,MAIAnsE,EAAA93B,QAAA+gC,mBCnCA,IAAA5jB,EAAW9Z,EAAQ,KAGnB09B,EAAA5jB,EAAA7c,OAAA,CACApB,KAAA,WACAioB,MAAA,CACAg+G,MAAA,MAEA+uB,iBAAA,WAIA,IAHA,IAAAjwH,EAAAtkC,KAAA0hC,YACA8jG,EAAAxlI,KAAAwnB,MAAAg+G,MAEAjoI,EAAA,EAAmBA,EAAAioI,EAAA/nI,OAAkBF,IAErC+mC,KAAAkhG,EAAAjoI,GAAAmkC,YAGA1hC,KAAA0hC,YAAA4C,EACAtkC,KAAAuiC,QAAAviC,KAAAuiC,SAAA+B,GAEA6a,YAAA,WACAn/C,KAAAu0J,mBAKA,IAHA,IAAA/uB,EAAAxlI,KAAAwnB,MAAAg+G,OAAA,GACA7oG,EAAA38B,KAAAijC,iBAEA1lC,EAAA,EAAmBA,EAAAioI,EAAA/nI,OAAkBF,IACrCioI,EAAAjoI,GAAA0hB,MACAumH,EAAAjoI,GAAAomC,kBAGA6hG,EAAAjoI,GAAA0hB,KAAAikB,SAAAvG,EAAA,GAAAA,EAAA,KAGA0G,UAAA,SAAAxB,EAAAra,GAGA,IAFA,IAAAg+G,EAAAh+G,EAAAg+G,OAAA,GAEAjoI,EAAA,EAAmBA,EAAAioI,EAAA/nI,OAAkBF,IACrCioI,EAAAjoI,GAAA8lC,UAAAxB,EAAA2jG,EAAAjoI,GAAAiqB,OAAA,IAGAm3D,WAAA,WAGA,IAFA,IAAA6mD,EAAAxlI,KAAAwnB,MAAAg+G,OAAA,GAEAjoI,EAAA,EAAmBA,EAAAioI,EAAA/nI,OAAkBF,IACrCioI,EAAAjoI,GAAAmkC,aAAA,GAGAviB,gBAAA,WAGA,OAFAnf,KAAAu0J,mBAEA/2I,EAAAthB,UAAAijB,gBAAA9hB,KAAA2C,SAIAm4B,EAAA93B,QAAA+gC,mBCvDA,IAAAv9B,EAAaH,EAAQ,KAErBmrF,EAAenrF,EAAQ,KAWvB8a,EAAA,SAAAxO,EAAAC,EAAA2tC,EAAA1b,EAAAi3F,GAIAn5H,KAAAgQ,EAAA,MAAAA,EAAA,GAAAA,EACAhQ,KAAAiQ,EAAA,MAAAA,EAAA,GAAAA,EACAjQ,KAAA49C,EAAA,MAAAA,EAAA,GAAAA,EAEA59C,KAAAT,KAAA,SAEAS,KAAAwzB,OAAA2lG,IAAA,EACAtqC,EAAAxxF,KAAA2C,KAAAkiC,IAGA1jB,EAAAtiB,UAAA,CACAyB,YAAA6gB,GAEA3a,EAAA9C,SAAAyd,EAAAqwE,GACA,IAAAztD,EAAA5iB,EACA2Z,EAAA93B,QAAA+gC,mBChCA,IAqBAozH,EArBsB9wJ,EAAQ,IAqB9BisJ,CAAA,uLAEAvuH,EAAA,CACA+/C,aAAA,SAAA5I,EAAAC,GACA,IAAAzoE,EAAAykJ,EAAAx0J,KAAAu4E,EAAAC,GAEA31C,EAAA7iC,KAAAy0J,oBAEA,OADA5xH,IAAA9yB,EAAA8yB,YACA9yB,GAEA0kJ,kBAAA,WACA,IAAA5E,EAAA7vJ,KAAAG,IAAA,cACA,gBAAA0vJ,GAAA,MAAAA,EAAA,gBAAAA,EAAA,cAGA13H,EAAA93B,QAAA+gC,iBCNAjJ,EAAA93B,QAZA,CACAo+F,mBAAA,WACA,OACAzvF,KAAAhP,KAAAG,IAAA,QACA+O,IAAAlP,KAAAG,IAAA,OACAgP,MAAAnP,KAAAG,IAAA,SACAiP,OAAApP,KAAAG,IAAA,UACAsH,MAAAzH,KAAAG,IAAA,SACAuH,OAAA1H,KAAAG,IAAA,4BCRA,IAAAu0J,EAAA,GAEA,qBAAAnvH,YACAmvH,EAAAnvH,UAAAmvH,UAAA,IAGA,IAAAtzH,EAAA,CAQAjhB,MAAA,gHACAw0I,cAAA,gCAGA/xI,UAAA,CAIAgC,WAAA8vI,EAAAhoI,MAAA,uCAEA/H,SAAA,GACAF,UAAA,SACAC,WAAA,UAKAlO,UAAA,KACA7M,UAAA,OACAirJ,kBAAA,IACAltE,wBAAA,IACAnhE,gBAAA,iBACAsuI,sBAAA,WACAjzC,mBAAA,IAEAkzC,qBAAA,IACAp4E,YAAA,IAMAq4E,oBAAA,IAEAC,QAAA,GAEA78H,EAAA93B,QAAA+gC,mBCpEA,IAAAv9B,EAAaH,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAExBc,EAAqBd,EAAQ,KA2B7B9E,EAAAiF,EAAAjF,KACA3B,EAAA4G,EAAA5G,MACAJ,EAAAgH,EAAAhH,IACAmB,EAAA6F,EAAA7F,MACAi3J,EAAA,mBAyDA,SAAA5wJ,EAAA8D,GAKAnI,KAAAoI,KAAAD,EAMAnI,KAAAk1J,iBAAA,GAMAl1J,KAAAm1J,WAAA,GAMAn1J,KAAAo1J,cAQAp1J,KAAAq1J,qBAAA,GAMAr1J,KAAAs1J,cAMAt1J,KAAAu1J,eAoNA,SAAAC,EAAAjiJ,EAAAkiJ,EAAAC,GACA,IAAAC,EAAA,CACAluJ,MAAAguJ,EACA/tJ,OAAAguJ,EACAE,YAAAH,EAAAC,GAGAG,GAAA,EAeA,OAdAhyJ,EAAAjF,KAAA2U,EAAA,SAAAjU,EAAAqnB,GACA,IAAAmvI,EAAAnvI,EAAA+F,MAAAuoI,GAEA,GAAAa,KAAA,IAAAA,EAAA,IAIA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAAApvJ,eASA,SAAAuvJ,EAAAC,EAAAH,GACA,cAAAA,EACAE,GAAAC,EACG,QAAAH,EACHE,GAAAC,EAGAD,IAAAC,GAdAxvD,CAAAivD,EAAAK,GAAA12J,EAAAy2J,KACAF,GAAA,MAGAA,EA/NAxxJ,EAAAnI,UAAA,CACAyB,YAAA0G,EASA0H,UAAA,SAAA64E,EAAAx4E,GACAw4E,GAEA/gF,EAAAjF,KAAAiG,EAAA4O,iBAAAmxE,EAAAzrE,QAAA,SAAAA,GACAA,KAAA3X,MAAAqC,EAAA9B,aAAAoX,EAAA3X,OAAAqC,EAAAX,eAAAiW,EAAA3X,QAOAojF,EAAA3nF,EAAA2nF,GAAA,GAGA,IAgPAuxE,EAAAp7H,EAhPAq7H,EAAAp2J,KAAAs1J,cACAe,EA6GA,SAAAzxE,EAAAx4E,EAAAkqJ,GACA,IAEAC,EACAlhC,EAHAmhC,EAAA,GACAC,EAAA,GAIAC,EAAA9xE,EAAA1tD,SAEA0tD,EAAAywC,aACAA,EAAAzwC,EAAAywC,aAIAqhC,GAAA9xE,EAAAj/B,WACA0vE,KAAA,GACAmhC,GAAA5xE,EAAAj/B,SAAA,IAAAhpD,SAIA,GAAAioF,EAAA+xE,MAAA,CACAthC,KAAA,GACA,IAAAshC,EAAA/xE,EAAA+xE,MACA/3J,EAAA+3J,EAAA,SAAAC,GACAA,KAAA5qJ,SACA4qJ,EAAArjJ,MACAkjJ,EAAAh1J,KAAAm1J,GACSL,IAETA,EAAAK,MAOAvhC,IACAA,EAAAzwC,GAKAywC,EAAAn+F,WACAm+F,EAAAn+F,SAAAw/H,GAWA,OAPA93J,EAAA,CAAAy2H,GAAAh2H,OAAAm3J,GAAAn3J,OAAAwE,EAAAhH,IAAA45J,EAAA,SAAAE,GACA,OAAAA,EAAA3qJ,UACG,SAAAA,GACHpN,EAAAwN,EAAA,SAAAyqJ,GACAA,EAAA7qJ,EAAAsqJ,OAGA,CACAjhC,aACAmhC,kBACAD,eACAE,cAtKAp5J,KAAA2C,KAAA4kF,EAAAx4E,GAAAgqJ,GACAp2J,KAAAu1J,eAAAc,EAAAhhC,WAEA+gC,GA4OAD,EA1OAC,EAAA/gC,WA0OAt6F,EA1OAs7H,EAAAhhC,WA4OAz2H,EADAm8B,KAAA,GACA,SAAA+7H,EAAAhuJ,GACA,SAAAguJ,EAAA,CAIA,IAAAC,EAAAZ,EAAArtJ,GAEA,GAAAtE,EAAA8lC,SAAAxhC,GAEK,CACLguJ,EAAAjyJ,EAAA4O,iBAAAqjJ,GACAC,EAAAlyJ,EAAA4O,iBAAAsjJ,GACA,IAAAtlI,EAAA5sB,EAAAusB,gBAAA2lI,EAAAD,GACAX,EAAArtJ,GAAAjM,EAAA40B,EAAA,SAAA7hB,GACA,OAAAA,EAAA5D,QAAA4D,EAAA2hB,MAAAvzB,EAAA4R,EAAA2hB,MAAA3hB,EAAA5D,QAAA,GAAA4D,EAAA2hB,OAAA3hB,EAAA5D,cANAmqJ,EAAArtJ,GAAA9K,EAAA+4J,EAAAD,GAAA,MAhPAT,EAAAG,gBAAA/4J,SACA24J,EAAAI,gBAAAH,EAAAG,iBAGAH,EAAAI,UAAAh5J,SACA24J,EAAAK,UAAAJ,EAAAI,WAGAJ,EAAAE,eACAH,EAAAG,aAAAF,EAAAE,eAGAv2J,KAAAs1J,cAAAe,GAQA/gC,YAAA,SAAA0hC,GACA,IAAAC,EAAAj3J,KAAAs1J,cAOA,OAJAt1J,KAAAk1J,iBAAAr4J,EAAAo6J,EAAAT,gBAAAv5J,GACA+C,KAAAm1J,WAAAt4J,EAAAo6J,EAAAR,UAAAx5J,GACA+C,KAAAo1J,cAAAn4J,EAAAg6J,EAAAV,cACAv2J,KAAAq1J,qBAAA,GACAp4J,EAAA+5J,EAKAC,EAAA5hC,WAAAr1H,KAAAu1J,iBAOAz/B,kBAAA,SAAArrH,GACA,IAAAuB,EACAwqJ,EAAAx2J,KAAAk1J,iBAEA,GAAAsB,EAAA/4J,OAAA,CAGA,IAAAy5J,EAAAzsJ,EAAA5B,aAAA,YAEAquJ,IACAlrJ,EAAA/O,EAAAu5J,EAAAU,EAAAC,oBAAA,IAIA,OAAAnrJ,GAOAgqH,eAAA,SAAAvrH,GACA,IA6IA2sJ,EAAAC,EA7IA5B,EAAAz1J,KAAAoI,KAAAsE,WAEAgpJ,EAAA11J,KAAAoI,KAAAuE,YAEA8pJ,EAAAz2J,KAAAm1J,WACAoB,EAAAv2J,KAAAo1J,cACA19G,EAAA,GACAv6C,EAAA,GAEA,IAAAs5J,EAAAh5J,SAAA84J,EACA,OAAAp5J,EAIA,QAAAI,EAAA,EAAAC,EAAAi5J,EAAAh5J,OAA2CF,EAAAC,EAASD,IACpDi4J,EAAAiB,EAAAl5J,GAAAgW,MAAAkiJ,EAAAC,IACAh+G,EAAAj2C,KAAAlE,GAkBA,OAZAm6C,EAAAj6C,QAAA84J,IACA7+G,EAAA,MAGAA,EAAAj6C,SAmHA25J,EAnHA1/G,EAmHA2/G,EAnHAr3J,KAAAq1J,qBAqHA+B,EAAA1tI,KAAA,OAAA2tI,EAAA3tI,KAAA,QApHAvsB,EAAAN,EAAA66C,EAAA,SAAA3uC,GACA,OAAA9L,GAAA,IAAA8L,EAAAwtJ,EAAAvqJ,OAAAyqJ,EAAA1tJ,GAAAiD,WAKAhM,KAAAq1J,qBAAA39G,EACAv6C,IA4JA,IAAAikC,EAAA/8B,EACA8zB,EAAA93B,QAAA+gC,mBCjbA,IAAA0jB,EAAYphD,EAAQ,KAEpB9E,EAAAkmD,EAAAlmD,KACAN,EAAAwmD,EAAAxmD,QACAH,EAAA2mD,EAAA3mD,SAEAm5J,EAAkB5zJ,EAAQ,KAI1B+P,EAFa/P,EAAQ,KAErB+P,iBAwDA,SAAA8jJ,EAAAvrJ,GACApN,EAAA44J,EAAA,SAAAp2J,GACAA,EAAA,KAAA4K,KAAA5K,EAAA,KAAA4K,KACAA,EAAA5K,EAAA,IAAA4K,EAAA5K,EAAA,OAKA,IAAAo2J,EAAA,0DACAC,EAAA,uFA8CAt/H,EAAA93B,QA5CA,SAAA2L,EAAA0rJ,GACAJ,EAAAtrJ,EAAA0rJ,GAEA1rJ,EAAAmN,OAAA1F,EAAAzH,EAAAmN,QACAva,EAAAoN,EAAAmN,OAAA,SAAAw+I,GACA,GAAAx5J,EAAAw5J,GAAA,CAIA,IAAAnsF,EAAAmsF,EAAAp4J,KAQA,GANA,QAAAisE,GAAA,UAAAA,GACA,MAAAmsF,EAAAC,YACAD,EAAArzD,UAAAqzD,EAAAC,WAIA,UAAApsF,EAAA,CACA,IAAAqsF,EAhEA,SAAA9/I,EAAAkH,GACAA,IAAA7K,MAAA,KAGA,IAFA,IAAAvV,EAAAkZ,EAEAxa,EAAA,EAAiBA,EAAA0hB,EAAAxhB,QAGjB,OAFAoB,OAAAogB,EAAA1hB,KADkCA,KAQlC,OAAAsB,EAoDAsB,CAAAw3J,EAAA,iBACA,MAAAE,GAlDA,SAAA9/I,EAAAkH,EAAAvc,EAAAxE,GACA+gB,IAAA7K,MAAA,KAIA,IAHA,IACAtW,EADAe,EAAAkZ,EAGAxa,EAAA,EAAiBA,EAAA0hB,EAAAxhB,OAAA,EAAqBF,IAGtC,MAAAsB,EAFAf,EAAAmhB,EAAA1hB,MAGAsB,EAAAf,GAAA,IAGAe,IAAAf,IAGAI,GAAA,MAAAW,EAAAogB,EAAA1hB,OACAsB,EAAAogB,EAAA1hB,IAAAmF,GAkCAxC,CAAAy3J,EAAA,yBAAAE,GAGAN,EAAAI,MAGA3rJ,EAAA8rJ,YACA9rJ,EAAA2pB,UAAA3pB,EAAA8rJ,WAGAl5J,EAAA64J,EAAA,SAAAM,GACA,IAAApyG,EAAA35C,EAAA+rJ,GAEApyG,IACArnD,EAAAqnD,KACAA,EAAA,CAAAA,IAGA/mD,EAAA+mD,EAAA,SAAA35C,GACAurJ,EAAAvrJ,0BCnHA,IAAAnI,EAAaH,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAqBxB9E,EAAAiF,EAAAjF,KACAT,EAAA0F,EAAA1F,SACA65J,EAAA,mFAEA,SAAAC,EAAAlgJ,GACA,IAAAmgJ,EAAAngJ,KAAA0f,UAEA,GAAAygI,EAIA,QAAA36J,EAAA,EAAAC,EAAAw6J,EAAAv6J,OAA+CF,EAAAC,EAASD,IAAA,CACxD,IAAA2qD,EAAA8vG,EAAAz6J,GACA46J,EAAAD,EAAAniI,OACAqiI,EAAAF,EAAApnI,SAEAqnI,KAAAjwG,KACAnwC,EAAAmwC,GAAAnwC,EAAAmwC,IAAA,GAEAnwC,EAAAmwC,GAAAnyB,OAGAlyB,EAAA7F,MAAA+Z,EAAAmwC,GAAAnyB,OAAAoiI,EAAAjwG,IAFAnwC,EAAAmwC,GAAAnyB,OAAAoiI,EAAAjwG,GAKAiwG,EAAAjwG,GAAA,MAGAkwG,KAAAlwG,KACAnwC,EAAAmwC,GAAAnwC,EAAAmwC,IAAA,GAEAnwC,EAAAmwC,GAAAp3B,SAGAjtB,EAAA7F,MAAA+Z,EAAAmwC,GAAAp3B,SAAAsnI,EAAAlwG,IAFAnwC,EAAAmwC,GAAAp3B,SAAAsnI,EAAAlwG,GAKAkwG,EAAAlwG,GAAA,OAKA,SAAAmwG,EAAAtgJ,EAAAugJ,EAAAC,GACA,GAAAxgJ,KAAAugJ,KAAAvgJ,EAAAugJ,GAAAviI,QAAAhe,EAAAugJ,GAAAxnI,UAAA,CACA,IAAA0nI,EAAAzgJ,EAAAugJ,GAAAviI,OACA0iI,EAAA1gJ,EAAAugJ,GAAAxnI,SAEA0nI,IAEAD,GACAxgJ,EAAAugJ,GAAAviI,OAAAhe,EAAAugJ,GAAAxnI,SAAA,KACAjtB,EAAArF,SAAAuZ,EAAAugJ,GAAAE,IAEAzgJ,EAAAugJ,GAAAE,GAIAC,IACA1gJ,EAAA+Y,SAAA/Y,EAAA+Y,UAAA,GACA/Y,EAAA+Y,SAAAwnI,GAAAG,IAKA,SAAAC,EAAA3gJ,GACAsgJ,EAAAtgJ,EAAA,aACAsgJ,EAAAtgJ,EAAA,aACAsgJ,EAAAtgJ,EAAA,aACAsgJ,EAAAtgJ,EAAA,SACAsgJ,EAAAtgJ,EAAA,aAEAsgJ,EAAAtgJ,EAAA,cAEAsgJ,EAAAtgJ,EAAA,aAGA,SAAA4gJ,EAAA5gJ,EAAAw5B,GAEA,IAAAqnH,EAAAz6J,EAAA4Z,MAAAw5B,GACA3uB,EAAAzkB,EAAAy6J,MAAAh2I,UAEA,GAAAA,EACA,QAAArlB,EAAA,EAAAC,EAAAqH,EAAAmsB,mBAAAvzB,OAA8DF,EAAAC,EAASD,IAAA,CACvEg0C,EAAA1sC,EAAAmsB,mBAAAzzB,GAEAqlB,EAAA7kB,eAAAwzC,KACAqnH,EAAArnH,GAAA3uB,EAAA2uB,KAMA,SAAAsnH,EAAA9gJ,GACAA,IACA2gJ,EAAA3gJ,GACA4gJ,EAAA5gJ,EAAA,SACAA,EAAA+Y,UAAA6nI,EAAA5gJ,EAAA+Y,SAAA,UAgHA,SAAAgoI,EAAAx/F,GACA,OAAAz1D,EAAAvF,QAAAg7D,OAAA,CAAAA,GAAA,GAGA,SAAAy/F,EAAAz/F,GACA,OAAAz1D,EAAAvF,QAAAg7D,KAAA,GAAAA,IAAA,GA+DAnhC,EAAA93B,QA5DA,SAAA2L,EAAA0rJ,GACA94J,EAAAk6J,EAAA9sJ,EAAAmN,QAAA,SAAAw+I,GACAx5J,EAAAw5J,IAtHA,SAAAA,GACA,GAAAx5J,EAAAw5J,GAAA,CAIAM,EAAAN,GACAe,EAAAf,GACAgB,EAAAhB,EAAA,SAEAgB,EAAAhB,EAAA,cAEAgB,EAAAhB,EAAA,aAEAA,EAAA7mI,WACA6nI,EAAAhB,EAAA7mI,SAAA,SAEA6nI,EAAAhB,EAAA7mI,SAAA,cAEA6nI,EAAAhB,EAAA7mI,SAAA,eAGAkoI,EAAArB,EAAAqB,aAGAf,EAAAe,GACAH,EAAAG,KAGAC,EAAAtB,EAAAsB,YAGAhB,EAAAgB,GACAJ,EAAAI,IAGA,IAAAC,EAAAvB,EAAAuB,SAEAA,GACAL,EAAAK,GAGA,IAyBAF,EAWAC,EApCAz3J,EAAAm2J,EAAAn2J,KAGA,aAAAm2J,EAAAp4J,KAAA,CACAiC,KAAAm2J,EAAApkD,MACA,IAAAq3B,EAAA+sB,EAAAwB,OAAAxB,EAAAztB,MAEA,GAAAU,IAAA/mI,EAAA9B,aAAA6oI,GACA,QAAArtI,EAAA,EAAqBA,EAAAqtI,EAAAntI,OAAqBF,IAC1Cs7J,EAAAjuB,EAAArtI,IAIAsG,EAAAjF,KAAA+4J,EAAA5jH,WAAA,SAAAh8B,GACA2gJ,EAAA3gJ,KAIA,GAAAvW,IAAAqC,EAAA9B,aAAAP,GACA,IAAAjE,EAAA,EAAmBA,EAAAiE,EAAA/D,OAAiBF,IACpCs7J,EAAAr3J,EAAAjE,IAOA,IAFAy7J,EAAArB,EAAAqB,YAEAA,EAAAx3J,KACA,KAAA43J,EAAAJ,EAAAx3J,KAEA,IAAAjE,EAAA,EAAmBA,EAAA67J,EAAA37J,OAAmBF,IACtCs7J,EAAAO,EAAA77J,IAOA,IAFA07J,EAAAtB,EAAAsB,WAEAA,EAAAz3J,KACA,KAAA63J,EAAAJ,EAAAz3J,KAEA,IAAAjE,EAAA,EAAmBA,EAAA87J,EAAA57J,OAAmBF,IACtCsG,EAAAvF,QAAA+6J,EAAA97J,KACAs7J,EAAAQ,EAAA97J,GAAA,IACAs7J,EAAAQ,EAAA97J,GAAA,KAEAs7J,EAAAQ,EAAA97J,IAMA,UAAAo6J,EAAAp4J,MACAo5J,EAAAhB,EAAA,aACAgB,EAAAhB,EAAA,SACAgB,EAAAhB,EAAA,WACG,YAAAA,EAAAp4J,MACH84J,EAAAV,EAAA2B,WAAA,aACAz1J,EAAAjF,KAAA+4J,EAAA/jD,OAAA,SAAA77F,GACA2gJ,EAAA3gJ,MAEG,SAAA4/I,EAAAp4J,MACHm5J,EAAAf,EAAA9jD,SAeA0lD,CAAA5B,KAEA,IAAA6B,EAAA,+EACA9B,GAAA8B,EAAA/3J,KAAA,iDACA7C,EAAA46J,EAAA,SAAArpF,GACAvxE,EAAAk6J,EAAA9sJ,EAAAmkE,IAAA,SAAAspF,GACAA,IACAd,EAAAc,EAAA,aACAd,EAAAc,EAAAvjI,YAAA,cAIAt3B,EAAAk6J,EAAA9sJ,EAAAi9D,UAAA,SAAAywF,GACA,IAAAC,EAAAD,KAAAC,oBACAhB,EAAAgB,EAAA,aACAhB,EAAAgB,KAAAzjI,YAAA,WAEAt3B,EAAAk6J,EAAA9sJ,EAAA4tJ,UAAA,SAAAC,GACAxB,EAAAwB,EAAA,aACAlB,EAAAkB,EAAA,YACAlB,EAAAkB,EAAA,cACAlB,EAAAkB,EAAA,eAGAj7J,EAAAk6J,EAAA9sJ,EAAA48D,OAAA,SAAAkxF,GACAnB,EAAAmB,EAAA,UAEAl7J,EAAAk6J,EAAA9sJ,EAAA8yF,KAAA,SAAAi7D,GACA57J,EAAA47J,KACAlB,EAAAkB,GACAn7J,EAAAk6J,EAAAiB,EAAA10B,SAAA,SAAA20B,GACAnB,EAAAmB,QAIAp7J,EAAAk6J,EAAA9sJ,EAAAkrB,UAAA,SAAAw/H,GACAmC,EAAAnC,GACA2B,EAAA3B,EAAA,SACA2B,EAAA3B,EAAA,aACA2B,EAAA3B,EAAA,mBACA,IAAAl1J,EAAAk1J,EAAAl1J,KACAqC,EAAAvF,QAAAkD,IAAAqC,EAAAjF,KAAA4C,EAAA,SAAAoO,GACA/L,EAAA1F,SAAAyR,KACAyoJ,EAAAzoJ,EAAA,SACAyoJ,EAAAzoJ,EAAA,kBAIAhR,EAAAk6J,EAAA9sJ,EAAA6pB,SAAA,SAAAokI,GACA5B,EAAA4B,EAAA,aACAr7J,EAAAq7J,EAAAC,QAAA,SAAAC,GACA9B,EAAA8B,EAAA,iBAGAxB,EAAAI,EAAA/sJ,EAAAkqB,aAAA,SACAyiI,EAAAI,EAAA/sJ,EAAAiqB,SAAAC,YAAA,2BCxSA,IAAA4uB,EAAYphD,EAAQ,KAEpBP,EAAA2hD,EAAA3hD,cACAvE,EAAAkmD,EAAAlmD,KAuDA,SAAAw7J,EAAAC,GACAz7J,EAAAy7J,EAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,CAAA7tI,SACAwoB,EAAA,CAAAklH,EAAA19F,qBAAA09F,EAAAz9F,sBACA69F,EAAAJ,EAAA94J,KACAg8D,EAAA88F,EAAA98F,iBAGAoI,EAAA80F,EAAA79J,IAAAu4C,EAAA,SAAA45E,EAAA9yF,EAAA/qB,GACA,IAOAwpJ,EACAC,EARA1sI,EAAAwsI,EAAAv6J,IAAAm6J,EAAAh9F,iBAAAnsD,GAGA,GAAAic,MAAAc,GACA,OAAAusI,EAMAj9F,EACAo9F,EAAAF,EAAA5iH,YAAA3mC,GAEAwpJ,EAAAD,EAAAv6J,IAAAm6J,EAAA/8F,mBAAApsD,GAMA,IAFA,IAAA0pJ,EAAAjuI,IAEA+F,EAAA4nI,EAAA,EAAkC5nI,GAAA,EAAQA,IAAA,CAC1C,IAAAmoI,EAAAT,EAAA1nI,GAMA,GAJA6qC,IACAo9F,EAAAE,EAAAt5J,KAAA03C,WAAA4hH,EAAAv9F,mBAAAo9F,IAGAC,GAAA,GACA,IAAAl4J,EAAAo4J,EAAAt5J,KAAAu2C,cAAA+iH,EAAAl+F,qBAAAg+F,GAEA,GAAA1sI,GAAA,GAAAxrB,EAAA,GACAwrB,GAAA,GAAAxrB,EAAA,EACA,CACAwrB,GAAAxrB,EACAm4J,EAAAn4J,EACA,QAOA,OAFA83J,EAAA,GAAAtsI,EACAssI,EAAA,GAAAK,EACAL,IAEAE,EAAAhpH,UAAA7G,QAAA+6B,GAEA00F,EAAA94J,KAAAokE,IAIAztC,EAAA93B,QAzFA,SAAAoK,GACA,IAAAswJ,EAAA53J,IACAsH,EAAA+H,WAAA,SAAAzB,GACA,IAAAs3D,EAAAt3D,EAAA5Q,IAAA,SAEA,GAAAkoE,EAAA,CACA,IAAAgyF,EAAAU,EAAA56J,IAAAkoE,IAAA0yF,EAAA76J,IAAAmoE,EAAA,IACA7mE,EAAAuP,EAAAC,UACA8pJ,EAAA,CAEAl+F,qBAAAp7D,EAAAo3C,mBAAA,wBACAikB,qBAAAr7D,EAAAo3C,mBAAA,wBACA0kB,iBAAA97D,EAAAo3C,mBAAA,oBACA2kB,mBAAA/7D,EAAAo3C,mBAAA,sBACA4kB,iBAAAh8D,EAAAo3C,mBAAA,oBACAp3C,OACAuP,eAGA,IAAA+pJ,EAAAx9F,mBAAAw9F,EAAAt9F,mBAAAs9F,EAAAv9F,mBACA,OAGA88F,EAAA58J,QAAA+D,EAAAq3C,mBAAA,kBAAAwhH,IAAA58J,OAAA,GAAAsT,aACAspJ,EAAA54J,KAAAq5J,MAGAC,EAAAn8J,KAAAw7J,qBCvDA,IAAAvrE,EAAenrF,EAAQ,KAqBvB09B,EAAA,CACAi4G,mBAAA,EACA1tE,kBAAA,EACA5hC,MAAA,SAAAh5B,EAAAtG,GACA,IAAAjJ,EAAAuP,EAAAC,UACAgqJ,GAAAjqJ,EAAA64B,uBAAA,mBAAAx1B,MAAA,KACA+L,EAAApP,EAAA5Q,IAAA66J,IACAjqJ,EAAA47B,oBACA57B,EAAAxQ,KAAA,KAAAkK,EAAAmtH,kBAKA,GAFAp2H,EAAA06C,UAAA,QAAA/7B,IAEA1V,EAAAohE,iBAAA96D,GAAA,CACA,oBAAAoP,gBAAA0uE,GACArtF,EAAA5C,KAAA,SAAAqvB,GACAzsB,EAAAi7C,cAAAxuB,EAAA,QAAA9N,EAAApP,EAAA6H,cAAAqV,OAcA,OACA89C,SAAAvqE,EAAAszC,cAVA,SAAAtzC,EAAAysB,GACA,IACA9N,EADA3e,EAAAs6C,aAAA7tB,GACA9tB,IAAA66J,GAAA,GAEA,MAAA76I,GACA3e,EAAAi7C,cAAAxuB,EAAA,QAAA9N,IAKA,SAKAgY,EAAA93B,QAAA+gC,mBCzDA,IAAAv9B,EAAaH,EAAQ,KAErBskE,EAAWtkE,EAAQ,KAInBgmC,EAFoBhmC,EAAQ,KAE5BgmC,iBAkJAvR,EAAA93B,QA9HA,SAAAwG,EAAA4D,GACA,IAAAwwJ,EAAAxwJ,EAAA+B,SAAA,QAEA,GAAAyuJ,EAAA96J,IAAA,QAEG,GAAA86J,EAAA96J,IAAA,eACH0G,EAAAuS,aAAA,aAAA6hJ,EAAA96J,IAAA,oBADG,CAKH,IAAA+6J,EAAA,EACAzwJ,EAAA+H,WAAA,SAAAzB,EAAAkd,KACAitI,GACGl7J,MACH,IAGAm7J,EAHAC,EAAAH,EAAA96J,IAAA,qBACAk7J,EAAAJ,EAAA96J,IAAA,uBACAm7J,EAAA3sJ,KAAAC,IAAAssJ,EAAAG,GAGA,KAAAH,EAAA,IAIA,IAAAxlI,EAwFA,WACA,IAAAA,EAAAjrB,EAAA+B,SAAA,SAAAR,OAMA,OAJA0pB,KAAAj4B,SACAi4B,IAAA,IAGAA,KAAAtM,KA/FAmyI,GAGAJ,EADAzlI,EACAzyB,EAAAu4J,EAAA,sBACA9lI,UAGA8lI,EAAA,wBAGA,IAAAC,EAAA,GAEAN,GAAAl4J,EAAAu4J,EADAN,EAAA,mDACA,CACAQ,YAAAR,IAEAzwJ,EAAA+H,WAAA,SAAAzB,EAAAkd,GACA,GAAAA,EAAAqtI,EAAA,CACA,IAAAK,EACAlvH,EAAA17B,EAAA5Q,IAAA,QACAy7J,EAAA,WAAAV,EAAA,2BAEAS,EAAA14J,EADA04J,EAAAH,EAAA/uH,EAAAmvH,EAAA,WAAAA,EAAA,eACA,CACAppI,SAAAzhB,EAAAqH,YACAq0B,WAAA17B,EAAA5Q,IAAA,QACAqrE,YA0EAjsE,EA1EAwR,EAAAuC,QA2EA00D,EAAA7uD,OAAAsvD,UAAAlpE,IAAA,8BAzEA,IAAAiC,EAAAuP,EAAAC,UACAjE,OAAAvL,OAEAA,EAAA6rB,QAAA+tI,EAEAO,GAAA14J,EAAAu4J,EAAA,qBACAK,WAAAT,IAGAO,GAAAH,EAAA,gBAKA,IAFA,IAAAM,EAAA,GAEAv+J,EAAA,EAAuBA,EAAAiE,EAAA6rB,QAAkB9vB,IACzC,GAAAA,EAAA69J,EAAA,CACA,IAAA76J,EAAAiB,EAAAgrC,QAAAjvC,GACA+B,EAAAoqC,EAAAloC,EAAAjE,GACAu+J,EAAAr6J,KAAAwB,EAAAu4J,EAAAj7J,EAAA,qCACAA,OACAjB,WAKAq8J,GAAAG,EAAApyI,KAAA8xI,EAAA,0BAAAA,EAAA,sBACAC,EAAAh6J,KAAAk6J,GA8CA,IAAAp8J,IA3CA47J,GAAAM,EAAA/xI,KAAA8xI,EAAA,qCAAAA,EAAA,iCACA30J,EAAAuS,aAAA,aAAA+hJ,IAGA,SAAAl4J,EAAAD,EAAA+4J,GACA,qBAAA/4J,EACA,OAAAA,EAGA,IAAA7F,EAAA6F,EAIA,OAHAa,EAAAjF,KAAAm9J,EAAA,SAAAz8J,EAAAxB,GACAX,IAAA8F,QAAA,IAAAkuJ,OAAA,UAA6CrzJ,EAAA,UAAsB,KAAAwB,KAEnEnC,EAGA,SAAAq+J,EAAAv8I,GACA,IAAA+8I,EAAAf,EAAA96J,IAAA8e,GAEA,SAAA+8I,EAAA,CAIA,IAHA,IAAAzzH,EAAAtpB,EAAA7K,MAAA,KACAjX,EAAA6qE,EAAAhjE,KAEAzH,EAAA,EAAqBA,EAAAgrC,EAAA9qC,SAAoBF,EACzCJ,IAAAorC,EAAAhrC,IAGA,OAAAJ,EAEA,OAAA6+J,qBCrIA,IAAAn4J,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAqBtB6f,EAAA5U,KAAA4U,GAwFA4U,EAAA93B,QA9EA,SAAA8H,EAAApB,GACAA,KAAA,GACAlD,EAAArF,SAAAuI,EAAA,CACAqiB,KAAA,UACAjJ,MAAA,UACA6uD,UAAA,OACAitF,UAAA,2BACAzjJ,OAAA,IAEA,IAAA0jJ,EAAA,IAAAt3J,EAAAsZ,KAAA,CACAnO,MAAA,CACAyQ,KAAAzZ,EAAAk1J,WAEAzjJ,OAAAzR,EAAAyR,OACAD,EAAA,MAEA4lC,EAAA,IAAAv5C,EAAAyZ,IAAA,CACAmJ,MAAA,CACA8yD,YAAA/2D,EAAA,EACAg3D,UAAAh3D,EAAA,KACAq6B,EAAA,IAEA7tC,MAAA,CACAwQ,OAAAxZ,EAAAoZ,MACAitD,QAAA,QACAvtD,UAAA,GAEArH,OAAAzR,EAAAyR,OACAD,EAAA,QAEA4jJ,EAAA,IAAAv3J,EAAAsZ,KAAA,CACAnO,MAAA,CACAyQ,KAAA,OACA4I,KAAAriB,EAAAqiB,KACAjG,aAAA,QACAM,aAAA,GACAtC,SAAApa,EAAAioE,WAEAx2D,OAAAzR,EAAAyR,OACAD,EAAA,QAEA4lC,EAAA1Z,cAAA,GAAAgtF,KAAA,KACAl3C,SAAA,EAAAh3D,EAAA,IACG0yB,MAAA,iBACHkI,EAAA1Z,cAAA,GAAAgtF,KAAA,KACAn3C,WAAA,EAAA/2D,EAAA,IACGmjD,MAAA,KAAAzwB,MAAA,iBACH,IAAA/uC,EAAA,IAAAtC,EAAA+Y,MA4BA,OA3BAzW,EAAAiJ,IAAAguC,GACAj3C,EAAAiJ,IAAAgsJ,GACAj1J,EAAAiJ,IAAA+rJ,GAEAh1J,EAAAuC,OAAA,WACA,IAAA4zC,EAAAl1C,EAAAuE,WAAA,EACA4wC,EAAAn1C,EAAAwE,YAAA,EACAwxC,EAAAtZ,SAAA,CACAwY,KACAC,OAEA,IAAAM,EAAAO,EAAA32B,MAAAo2B,EACAu+G,EAAAt3H,SAAA,CACA70B,EAAAqtC,EAAAO,EACA3tC,EAAAqtC,EAAAM,EACAn2C,MAAA,EAAAm2C,EACAl2C,OAAA,EAAAk2C,IAEAs+G,EAAAr3H,SAAA,CACA70B,EAAA,EACAC,EAAA,EACAxI,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,eAIAzF,EAAAuC,SACAvC,oBC5GA,IAAA49C,EAAYphD,EAAQ,KAEpB9E,EAAAkmD,EAAAlmD,KACA/B,EAAAioD,EAAAjoD,IAEAgF,GADAijD,EAAAxmD,QACAwmD,EAAAjjD,YACAsB,EAAA2hD,EAAA3hD,cACAM,EAAAqhD,EAAArhD,KAIA4lC,EAFY3lC,EAAQ,KAEpB2lC,WAIA1C,EAFiBjjC,EAAQ,KAEzBijC,OAEAziC,EAAkBR,EAAQ,KAE1BS,EAAmBT,EAAQ,KAI3B+P,EAFa/P,EAAQ,KAErB+P,iBA4BA,SAAAvO,EAAAmD,EAAAF,EAAAi0J,EAAAjoF,GACAn0E,KAAAqI,aACArI,KAAAmI,MACAnI,KAAAiK,WAKAmyJ,EAAAp8J,KAAAq8J,uBAAAD,EAAAz/J,QACAw3E,EAAAn0E,KAAAs8J,gBAAAnoF,EAAAx3E,QACAqD,KAAAu8J,aAAAH,EAAA/8J,OAAA80E,GAaAn0E,KAAAw8J,cAAAr5J,IAGA,IAAAw1D,EAAAzzD,EAAAhJ,UAmJA,SAAAugK,EAAA3xJ,EAAA4xJ,EAAAjyJ,EAAAgH,EAAAsG,GAEA,IAAA9N,EA6CA,SAAA0yJ,EAAA5kJ,EAAA2yB,GACA,OAAA3yB,EAAApF,YAAAoF,EAAAnF,UAAAmF,EAAAnF,SAAAzS,IAAAuqC,EAAAshE,WAAA/kG,KA/CA8Q,KAAA,GAEAnZ,EAAA89J,EAAA,SAAAhiJ,EAAAuT,GACA,IAAAlW,EAAAlH,YAAAkH,EAAAlH,aAAA6J,EAAA7J,WAAA,CAIA,IAAA+rJ,EAAA9xJ,EAAA0xJ,cAAAr8J,IAAAua,EAAAhI,KAEAmqJ,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,YAEA,GAAAA,EAAA,CACA,IAAAC,EACA3uH,EAAA0uH,EAAA1uH,aACAA,EAAAxvC,KAAA,SAAAo+J,GACAL,EAAA5kJ,EAAAilJ,KACAA,EAAA3mJ,QACA0mJ,GAAA,KAGAA,GAAAD,EAAAzmJ,QACAD,EAAA0mJ,EAAArrJ,GACA,IAAAk6F,EAAA7gG,EAAAyL,eAAAumJ,EAAA/kJ,EAAA8wC,OAKAza,EAAAxvC,KAAA,SAAAo+J,GACAA,EAAA1mJ,QAAAq1F,KAEA1hG,GAAA6yJ,EAAAxmJ,QAAAq1F,QACKkxD,GACLA,EAAAj+J,KAAA,SAAA8rC,EAAAuyH,GACAN,EAAA5kJ,EAAA2yB,IACAA,EAAAr0B,QAGA,IAAAs1F,EAAA7gG,EAAAyL,eAAAm0B,EAAA3yB,EAAA8wC,OACA8iD,EAAAI,MAAArxF,EAAAixD,kBAAAlhE,EAAAohE,iBAAAnhC,EAAA3rC,QAAA0R,OACA2F,EAAAs0B,EAAAj5B,GACAxH,GAAAygC,EAAAp0B,QAAAq1F,QASA7gG,EAAAb,cAhMA0uD,EAAAjnD,YAAA,SAAAjH,EAAAgH,GAiBAhH,EAAAiH,YAAAD,GAQAzR,KAAAw8J,cAAA59J,KAAA,SAAAs+J,GACA,IAAAJ,EAAAI,EAAAJ,YACAA,KAAAzmJ,WAKAsiD,EAAApiD,eAAA,SAAAm0B,EAAAtmB,GAEA,GAAAsmB,EAAAshE,WAAA,CAIA,IAAA/9D,EAAAjuC,KAAAm9J,aAAAh9J,IAAAuqC,EAAAshE,WAAA/kG,IAEAm2J,EAAAnvH,EAAAlvC,QAEA2lD,GADAtgC,GAAA6pB,EAAAovH,sBAAAD,KAAAziG,oBAAAjwB,EAAA4yH,gBAAArvH,EAAAsvH,WACAtvH,EAAAyW,KAAA,KACA6nD,EAAA6wD,KAAA7wD,aAEA,OACA7nD,OACA4nD,MAHA,MAAAC,EAAA59F,KAAAg2C,KAAA4nD,EAAA7nD,GAAA,KAIA6nD,kBAIA5zC,EAAAzqB,YAAA,SAAA+uH,GACA,OAAAj9J,KAAAm9J,aAAAh9J,IAAA88J,IAWAtkG,EAAAjtD,kBAAA,SAAAqF,EAAA7C,GACA,IAAA+/B,EAAAjuC,KAAAm9J,aAAAh9J,IAAA4Q,EAAA2B,KAGA8qJ,EADAzsJ,EAAAC,UACAqc,QAMAstC,EAAA1sB,EAAAovH,oBAAAnvJ,EAAAmsD,0BAAAmjG,GAAAvvH,EAAAwvH,UACAjhF,EAAAzrE,EAAA5Q,IAAA,UAAAq9J,GAAAzsJ,EAAA5Q,IAAA,kBAGAosG,EAAA,QAAAx7F,EAAA5Q,IAAA,wBAAAq9J,EAAA,KACAzsJ,EAAAu8B,gBAAAW,EAAAlvC,QAAA,CACA47D,oBACA4xC,eACA/vB,UAIA7jB,EAAA1lD,iBAAA,SAAAxI,GACA,IAAAK,EAAA9K,KACA09J,EAAA5yJ,EAAAqyJ,aAAAh6J,IACAsH,EAAA+H,WAAA,SAAAzB,GACA,IAAA2rE,EAAA3rE,EAAAi8B,iBACAiwH,EAAAlsJ,EAAA2B,IACAgrJ,EAAAx9J,IAAA+8J,EAAA,CACAh2J,GAAAg2J,EACArqC,KAAA,KACAnX,KAAA,KACAgiD,UAAA1sJ,EAAAk8B,0BACAowH,mBAAA3gF,KAAA3rE,EAAAs8B,oBAAAt8B,EAAAs8B,sBACAkwH,YAAA,EACA74G,KAAA/1C,KAAAgQ,MAAA+9D,GAAA,KACArvD,MAAA,IAEAqgF,EAAA5iG,EAAAiG,IAAA84B,aAIA8uB,EAAAzlD,kBAAA,WACA,IAAAyqJ,EAAA39J,KAAAw8J,cACA/xJ,EAAAzK,KAAAqI,WAAAmE,WACArE,EAAAnI,KAAAmI,IACAvJ,EAAAoB,KAAAu8J,aAAA,SAAA91J,GACA,IAAAupI,EAAA2tB,EAAAx9J,IAAAsG,EAAAiM,MAAAirJ,EAAAz9J,IAAAuG,EAAAiM,IAAA,IACAjM,EAAAsjC,OAgHA,SAAAj/B,EAAA4P,EAAAkiJ,EAAAnyJ,EAAAtC,GACA,IAAA00J,EAAAD,EAAAC,gBAAAD,EAAAC,cAAA15J,KACAqoE,EAAA9wD,EAAA8wD,WACA4xB,EAAA1iF,EAAA0iF,gBAIA1iF,EAAA2+H,kBACA5uI,EAAAqtH,cAAAnmH,GACG65D,EACH/gE,EAAAstH,oBAAAvsD,EAAA75D,GACGyrF,GACHA,EAAA3yF,EAAAtC,GAAAvJ,KAAA+S,GAGA,SAAAA,EAAAZ,GACA,IAAAksJ,EAAAlsJ,EAAA2B,IAGAg4B,EAAAmyH,EAAA18J,IAAA88J,IAAAJ,EAAA38J,IAAA+8J,EAAA5zH,EAAA,CACAj2B,KAAAwqJ,EACA7zH,MAAA8zH,EACAxwI,MAAAywI,KAEApzH,EAAA3rC,QAAA,CACA0R,MAAAM,EACAtG,UACAtC,MACA41J,eAAArjJ,EAAAsjJ,WAAAtjJ,EAAAujJ,SACA7qJ,KAAAsH,EAAAtH,KACA22B,MAAArvB,EAAAqvB,MACAj/B,aAEA4iG,EAAA5iG,EAAAiG,EAAA25B,GAIA,IAAAgzH,EAAA5yJ,EAAAqyJ,aACAN,EAAAj+J,KAAA,SAAA8rC,EAAAuyH,GACAS,EAAAv9J,IAAA88J,KACAvyH,EAAA50B,UACA+mJ,EAAAz8J,UAAA68J,MAzJAiB,CAAAl+J,KAAAyG,EAAAupI,EAAAvlI,EAAAtC,GACA1B,EAAA4xI,cA6JA,SAAAvtI,EAAA4P,EAAAkiJ,EAAAnyJ,EAAAtC,GACA,IAAA20J,EAAAF,EAAAE,YAAAF,EAAAE,aACAzzH,EAAA,CACAU,MAAAo0H,IAEArB,EAAA/9J,QAAA,CACA0L,UACAtC,MACAkwI,aAAA39H,EAAA29H,aACAvtI,aAGA,IAAAsjC,EAAA0uH,EAAA1uH,aAAA0uH,EAAA1uH,cAAAjrC,IACAqoE,EAAA9wD,EAAA8wD,WACA4xB,EAAA1iF,EAAA0iF,gBACAghE,GAAA,EACAtzH,EAAApwB,EAAAowB,gBAKA0gC,EACA/gE,EAAAstH,oBAAAvsD,EAAA6yF,GACGjhE,EACHA,EAAA3yF,EAAAtC,GAAAvJ,KAAAy/J,IAMAD,GAAA,EACAx/J,EAAA6L,EAAAktH,YAAA0mC,IAGA,SAAAA,EAAAttJ,GACA,IAAAksJ,EAAAlsJ,EAAA2B,IACAsqJ,EAAA5uH,EAAAjuC,IAAA88J,GAEAD,IACAA,EAAA5uH,EAAAluC,IAAA+8J,EAAA5zH,EAAA,CACAU,MAAAu0H,EACA9yD,QAAA+yD,KAIAzB,EAAAzmJ,SAGA2mJ,EAAAj+J,QAAA,CACA0R,MAAAM,EACAqtJ,kBACAtzH,mBAEAkyH,EAAAwB,MAAA1B,EACAE,EAAAyB,QAAAL,EACA1wD,EAAA5iG,EAAAiG,EAAAisJ,GAIA,IAAAU,EAAA5yJ,EAAAqyJ,aACA/uH,EAAAxvC,KAAA,SAAAo+J,EAAAC,GACAS,EAAAv9J,IAAA88J,KACAD,EAAAlnJ,UAGAgnJ,EAAAzmJ,QACA+3B,EAAAhuC,UAAA68J,MA/NAyB,CAAA1+J,KAAAyG,EAAAupI,EAAAvlI,EAAAtC,IACGnI,OAGH24D,EAAAxlD,YAAA,SAAAjF,EAAAuC,EAAAhG,EAAAtC,GACA,IAAA0N,EAAA3H,EAAA2H,WACA9W,EAAA8W,EAAA9W,QACAA,EAAA0R,QACA1R,EAAA0L,UACA1L,EAAAoJ,MACA0N,EAAA4oJ,SAAAvwJ,EAAAmsD,yBACAqzC,EAAA1tG,KAAAyQ,EAAAoF,IAGA8iD,EAAAltD,0BAAA,SAAAhB,EAAAgH,GAEAgrJ,EAAAz8J,UAAAq8J,uBAAA5xJ,EAAAgH,EAAA,CACAo3C,OAAA,KAOA8P,EAAAhtD,mBAAA,SAAAlB,EAAAgH,EAAAsG,GACA0kJ,EAAAz8J,UAAAs8J,gBAAA7xJ,EAAAgH,EAAAsG,IAyDA4gD,EAAAntD,mBAAA,SAAAf,GACA,IAAAR,EACAQ,EAAA+H,WAAA,SAAAzB,GAEA9G,GAAA8G,EAAA84B,SAAAvzB,YAEAtW,KAAAiK,eAGA0uD,EAAAvlD,KAAA,WAEApT,KAAAm9J,aAAAv+J,KAAA,SAAAqvC,GACA,IAAAvD,EAAAuD,EAAAwtE,KAEA,GACA,GAAA/wE,EAAA+zH,QAAA,CACAxwH,EAAAsvH,WAAA7yH,EAAA4yH,gBACA,MAGA5yH,IAAAkjE,oBACKljE,MAIL,IAAAt0B,EAAAuiD,EAAAviD,cAAA,SAAAs0B,EAAAj5B,GACA,WAAAA,IAAAi5B,EAAA3rC,QAAA0S,YAwHA,SAAA0sJ,EAAAp/J,GACAA,EAAAs5I,aAAAt5I,EAAA0L,QAAA1L,EAAAoJ,IAAApJ,EAAA0S,SAGA,SAAA6sJ,EAAAv/J,EAAA4/J,GACA,OAAA5/J,EAAAq/J,iBAAAQ,EAGA,SAAAA,IACA5+J,KAAAw+J,MAAAnoJ,QACArW,KAAA6tG,gBAAAx3F,QAGA,SAAAkoJ,IACAv+J,KAAAw+J,OAAAx+J,KAAAw+J,MAAAnoJ,QAGA,SAAAunJ,EAAA7+J,GACA,OAAAA,EAAAqU,MAAArU,EAAAqU,KAAArU,EAAA0R,MAAA1R,EAAA0L,QAAA1L,EAAAoJ,IAAApJ,EAAA0S,SAGA,SAAAosJ,EAAA9+J,GACAA,EAAAg/J,gBACAh/J,EAAAyC,KAAAk7C,iBAGA,IAAA48F,EAAAv6I,EAAAu6I,aAAA7lI,EAAA1U,EAAAgrC,MAAAhrC,EAAA0R,MAAA1R,EAAA0L,QAAA1L,EAAAoJ,IAAApJ,EAAA0S,UACA,OAAA6nI,EAAA77I,OAAA,EAAAZ,EAAAy8I,EAAA,SAAAhpH,EAAArC,GACA,OAAA4wI,EAAA5wI,KACG6wI,EAGH,IAAAA,EAAAD,EAAA,GAEA,SAAAA,EAAAE,GACA,gBAAA5mJ,EAAApZ,GACA,IAAAyC,EAAAzC,EAAAyC,KACAw9J,EAAAjgK,EAAAu6I,aAAAylB,GAEA,GAAAC,KAAAjzF,SACA,QAAAxuE,EAAA4a,EAAA89B,MAAgC14C,EAAA4a,EAAA01B,IAAgBtwC,IAChDyhK,EAAAjzF,SAAAvqE,EAAAjE,QAEKyhK,KAAAnkG,UACLmkG,EAAAnkG,SAAA1iD,EAAA3W,IAKA,SAAAs8J,EAAA/+J,GACA,OAAAA,EAAAyC,KAAA6rB,QAGA,SAAAqgF,EAAA5iG,EAAAiG,EAAA25B,GACA,IAAAuyH,EAAAlsJ,EAAA2B,IAEAu7B,EAAAnjC,EAAAqyJ,aAAAh9J,IAAA88J,IAEAhvH,EAAA2kF,OAAA3kF,EAAA2kF,KAAAloF,GACAuD,EAAAwtE,MAAAxtE,EAAAwtE,KAAA/N,KAAAhjE,GACAuD,EAAAwtE,KAAA/wE,EACAA,EAAA4yH,gBAAArvH,EAAA5gB,QACAqd,EAAAshE,WAAA/9D,EAwBA,SAAAgxH,EAAAC,GACA1zF,EAAA,KAEA,IAEA0zF,EAAAC,EAAAC,GACG,MAAA1mJ,IAEH,OAAA8yD,EA7BAtmE,EAAAyV,iBAAA,SAAAD,EAAA7J,GAUA,OATAhP,EAAA6Y,KACAA,EAAA,CACA29H,aAAA39H,EACA8wD,WAAAyzF,EAAAvkJ,KAIAA,EAAAhI,IAAAi0B,EAAA,gBACA91B,IAAA6J,EAAA7J,cACA6J,GAsBA,IAEA8wD,EAFA2zF,EAAA,GACAC,EAAA,GAeA,SAAAC,EAAAphK,EAAA46D,GACA,QAAAt4D,KAAAs4D,EAAA38D,UAEA+B,EAAAsC,GAAAkD,EAhBA47J,EAAAF,EAAAj7J,GACAm7J,EAAAD,EAAAj7J,GAEAg7J,EAAA3qE,iBAAA2qE,EAAApnC,oBAAA,SAAAx4H,GACAisE,EAAAjsE,GAGA4/J,EAAAnxJ,cAAA,SAAAsxJ,GACA,WAAAA,EAAAx2J,UAAAw2J,EAAAhsJ,UACAk4D,EAAA8zF,EAAAhsJ,UAWA,IAAA8tB,EAAAl8B,EACAizB,EAAA93B,QAAA+gC,iBC/gBA,IAAAm+H,EAAA,oIACAn+H,EAAA,CACAjhB,MAAAo/I,EACA7pC,WAAA,2LAAA6pC,IAEApnI,EAAA93B,QAAA+gC,iBCLA,IAiCA3L,EAAA,gHACA3uB,EAAA,CACAqZ,MAAAsV,EACAtoB,gBAAA,OACA8oB,QAAA,CACAC,YAAA,CACAC,UAAA,CACAhW,MAxCA,QA0CAiW,WAAA,CACAjW,MA3CA,UA+CAq/I,OAAA,CACA58I,UAAA,CACAzC,MAjDA,SAoDAyC,UAAA,CACAzC,MArDA,QAuDAuV,MAAA,CACA9S,UAAA,CACAzC,MAzDA,SA4DA0V,QAAA,CACAC,UAAA,CACAC,OAAA,CACAC,YA/DA,UAmEAM,SAAA,CACA1T,UAAA,CACAzC,MArEA,SAwEAwV,UAAA,CACA/S,UAAA,CACAzC,MA1EA,SA6EA+W,SAAA,CACAf,UAAA,CACAhW,MA/EA,QAiFAsX,UAAA,CACA1B,OAAA,CACA5V,MAAAsV,EAAA,KAGAmC,MAAA,CACA7B,OAAA,CACAnT,UAAA,CACAzC,MAzFA,UA6FAgX,aAAA,CACApB,OAAA,CACA5V,MA/FA,OAgGA6V,YAhGA,UAoGAkrG,SAjGA,CACAtqG,SAAA,CACAT,UAAA,CACAhW,MANA,SASA6X,SAAA,CACA7B,UAAA,CACAhW,MAXA,SAcA8gH,UAAA,CACAr+G,UAAA,CACAzC,MAhBA,SAmBA0W,UAAA,CACAV,UAAA,CACA52B,KAAA,SACA4gB,MAAA,SAGA4W,UAAA,CACAE,UAAA,CACA9W,MA3BA,UAqGAghH,QAlGA,CACAvqG,SAAA,CACAT,UAAA,CACAhW,MANA,SASA6X,SAAA,CACA7B,UAAA,CACAhW,MAXA,SAcA8gH,UAAA,CACAr+G,UAAA,CACAzC,MAhBA,SAmBA0W,UAAA,CACAV,UAAA,CACA52B,KAAA,SACA4gB,MAAA,SAGA4W,UAAA,CACAE,UAAA,CACA9W,MA3BA,UAsGA2W,UAnGA,CACAF,SAAA,CACAT,UAAA,CACAhW,MANA,SASA6X,SAAA,CACA7B,UAAA,CACAhW,MAXA,SAcA8gH,UAAA,CACAr+G,UAAA,CACAzC,MAhBA,SAmBA0W,UAAA,CACAV,UAAA,CACA52B,KAAA,SACA4gB,MAAA,SAGA4W,UAAA,CACAE,UAAA,CACA9W,MA3BA,UAuGAwW,aApGA,CACAC,SAAA,CACAT,UAAA,CACAhW,MANA,SASA6X,SAAA,CACA7B,UAAA,CACAhW,MAXA,SAcA8gH,UAAA,CACAr+G,UAAA,CACAzC,MAhBA,SAmBA0W,UAAA,CACAV,UAAA,CACA52B,KAAA,SACA4gB,MAAA,SAGA4W,UAAA,CACAE,UAAA,CACA9W,MA3BA,UAwGAmX,KAAA,CACAF,OAAA,UAEAU,MAAA,CACA3X,MAAAsV,GAEAsC,MAAA,CACArC,MAAA,CACA9S,UAAA,CACAzC,MAjHA,UAqHAqX,YAAA,CACAC,UAAA,CACA1B,OAAA,CACA5V,MAAA,UACAuX,OAAA,UACA1B,YAAA,UACAypI,aAAA,cAKA34J,EAAA6vB,aAAAE,UAAAG,MAAA,EACA,IAAAoK,EAAAt6B,EACAqxB,EAAA93B,QAAA+gC,mBCpJA,IAAAv9B,EAAaH,EAAQ,KAErBk+H,EAA0Bl+H,EAAQ,KAElC++F,EAAiB/+F,EAAQ,KAEzB48H,EAA2B58H,EAAQ,KAEnCsiC,EAAYtiC,EAAQ,KAEpB0lC,EAAc1lC,EAAQ,KAEtB0lC,EAAA3P,cACAp5B,EAAAo5B,cAAA2P,EAAA3P,cAEA,IAAAimI,EAAuBh8J,EAAQ,KAE/By3D,EAAAukG,EAAAvkG,gBACAqB,EAAAkjG,EAAAljG,mBACAiB,EAAAiiG,EAAAjiG,oBAEAkiG,EAA0Bj8J,EAAQ,KAElCrD,EAAAs8E,mBAAAgjF,EAEA,IAAAC,EAAwBl8J,EAAQ,KAEhCrD,EAAA06D,iBAAA6kG,EAEA,IAAAC,EAAcn8J,EAAQ,KAEtBrD,EAAAq/C,aAAAmgH,EAAAngH,aAoCA,IAAAn7C,EAAA,CACAi4D,qBACArB,kBACAsC,uBAkDAp9D,EAAAy/J,WA9DA,SAAA/uJ,GACA,OAAA6wH,EAAA7wH,EAAA04B,YAAA14B,IA8DA1Q,EAAAkE,YACAlE,EAAA0/J,YAjCA,SAAAryI,EAAA1hB,GACA,IAAAk4C,EAAAl4C,EAEAg6B,EAAAwP,WAAAxpC,KACAk4C,EAAA,IAAAle,EAAAh6B,GACAnI,EAAAvC,MAAA4iD,EAAAo8E,IAGA,IAAA3jG,EAAA8lE,EAAA3+C,mBAAAI,GAGA,OAFAvnB,EAAA8mB,UAAA/1B,EAAA,GAAAA,EAAA,IACA+0E,EAAAl/C,gBAAA5mB,EAAAunB,GACAvnB,GAuBAt8B,EAAA2/J,4BAPA,SAAAh6H,GACAniC,EAAAvC,MAAA0kC,EAAAs6F,qBCrHA,IAAAz8H,EAAaH,EAAQ,KAErB28C,EAAY38C,EAAQ,KAEpBi2F,EAAkBj2F,EAAQ,KA6B1Bu8J,EAAA5/G,EAAAnkD,UACAikD,EAAAE,EAAA1/C,OAAA,CACApB,KAAA,UAKA+H,KAAA,SAAAwsC,EAAA6E,GAGA7E,IAAAjwC,EAAAvF,QAAAw1C,KACAA,EAAA,IAAA6lD,EAAA,CACA5lD,WAAAD,KAIA9zC,KAAAkgK,aAAApsH,EACA9zC,KAAAkzC,QAAAyF,GAAA,GAAA7E,EAAAC,WAAAt2C,OAAA,IAEAuU,MAAA,SAAAtP,GACA,wBAAAA,EAAA1C,KAAAkgK,aAAA5jC,WAAA55H,GACAiM,KAAAgQ,MAAAjc,IAEAw+B,QAAA,SAAAi/H,GAEA,OADAA,EAAAngK,KAAAgS,MAAAmuJ,GACAF,EAAA/+H,QAAA7jC,KAAA2C,KAAAmgK,IAAA,MAAAngK,KAAAkgK,aAAAnsH,WAAAosH,IAQAtjI,UAAA,SAAAn6B,GACA,OAAAu9J,EAAApjI,UAAAx/B,KAAA2C,UAAAgS,MAAAtP,KAEAi6B,MAAA,SAAAj6B,GACA,OAAAiM,KAAAgQ,MAAAshJ,EAAAtjI,MAAAt/B,KAAA2C,KAAA0C,KAMA8hD,SAAA,WAKA,IAJA,IAAAye,EAAA,GACAtqB,EAAA34C,KAAAkzC,QACAitH,EAAAxnH,EAAA,GAEAwnH,GAAAxnH,EAAA,IACAsqB,EAAAxhE,KAAA0+J,GACAA,IAGA,OAAAl9F,GAQAngB,SAAA,SAAAuc,GACA,IAAAr/D,KAAAmkD,UAEA,OAAAnkD,KAAAkgK,aAAAnsH,WAAAsrB,IAOAhyC,MAAA,WACA,OAAArtB,KAAAkzC,QAAA,GAAAlzC,KAAAkzC,QAAA,MAMAmgD,oBAAA,SAAA7xF,EAAAwqC,GACAhsC,KAAAozF,YAAA5xF,EAAAi3C,qBAAAzM,KAEAuV,eAAA,WACA,OAAAvhD,KAAAkgK,cAEApsE,UAAAjwF,EAAAJ,KACAigD,WAAA7/C,EAAAJ,OAMA08C,EAAAxuC,OAAA,WACA,WAAAwuC,GAGA,IAAA/e,EAAA+e,EACAhoB,EAAA93B,QAAA+gC,mBCjIA,IAAAv9B,EAAaH,EAAQ,KAErBy5B,EAAiBz5B,EAAQ,KAEzB00B,EAAiB10B,EAAQ,KAEzB08J,EAAkB18J,EAAQ,KAE1B08C,EAAoB18C,EAAQ,KA8B5B28J,EAAAjgH,EAAAlkD,UACAokK,EAAA3xJ,KAAAg2C,KACA47G,EAAA5xJ,KAAAod,MAyBAy0I,EAAApgH,EAAAz/C,OAAA,CACApB,KAAA,OAKAujD,SAAA,SAAApgD,GACA,IAAA+9J,EAAAzgK,KAAA0gK,SACAnhI,EAAA,IAAAh0B,KAAA7I,GACA,OAAA01B,EAAAiH,WAAAohI,EAAA,GAAAlhI,EAAAv/B,KAAAmzF,WAAA,YAMAzvC,WAAA,SAAA3rC,GACA,IAAA4gC,EAAA34C,KAAAkzC,QASA,GAPAyF,EAAA,KAAAA,EAAA,KAEAA,EAAA,IAzCAgoH,MA0CAhoH,EAAA,IA1CAgoH,OA8CAhoH,EAAA,MAAA1pC,KAAA0pC,EAAA,KAAA1pC,IAAA,CACA,IAAA6tB,EAAA,IAAAvxB,KACAotC,EAAA,QAAAptC,KAAAuxB,EAAA8jI,cAAA9jI,EAAA+jI,WAAA/jI,EAAAgkI,WACAnoH,EAAA,GAAAA,EAAA,GAjDAgoH,MAoDA3gK,KAAA8zF,UAAA/7E,EAAAkgB,YAAAlgB,EAAA4rC,YAAA5rC,EAAA6rC,aAEA,IAAA3zB,EAAAjwB,KAAAkzF,UAEAn7E,EAAAkpC,SACAtI,EAAA,GAAAxb,EAAAxe,MAAA4hJ,EAAA5nH,EAAA,GAAA1oB,OAGAlY,EAAAmpC,SACAvI,EAAA,GAAAxb,EAAAxe,MAAA2hJ,EAAA3nH,EAAA,GAAA1oB,QAOA6jE,UAAA,SAAAitE,EAAAp9G,EAAAC,GACAm9G,KAAA,GACA,IAAApoH,EAAA34C,KAAAkzC,QACA2N,EAAAlI,EAAA,GAAAA,EAAA,GACAqoH,EAAAngH,EAAAkgH,EAEA,MAAAp9G,GAAAq9G,EAAAr9G,IACAq9G,EAAAr9G,GAGA,MAAAC,GAAAo9G,EAAAp9G,IACAo9G,EAAAp9G,GAGA,IAAAq9G,EAAAC,EAAAzjK,OACAwwB,EAjFA,SAAA5qB,EAAA2M,EAAAw2F,EAAAC,GACA,KAAAD,EAAAC,GAAA,CACA,IAAArtD,EAAAotD,EAAAC,IAAA,EAEApjG,EAAA+1C,GAAA,GAAAppC,EACAw2F,EAAAptD,EAAA,EAEAqtD,EAAArtD,EAIA,OAAAotD,EAsEA26D,CAAAD,EAAAF,EAAA,EAAAC,GACA/rG,EAAAgsG,EAAAvyJ,KAAAC,IAAAqf,EAAAgzI,EAAA,IACAhxI,EAAAilC,EAAA,GAEA,YAAAA,EAAA,IACA,IAAAksG,EAAAvgH,EAAA5wB,EAIAA,GADAkN,EAAAzN,KAAA0xI,EAAAL,GAAA,GAIA,IAAAM,EAAArhK,KAAAmzF,WAAA,mBAAA5nF,MAAAotC,EAAA,KAAAA,EAAA,IAAA2oH,oBAAA,IACA59G,EAAA,CAAA/0C,KAAAgQ,MAAA2hJ,GAAA3nH,EAAA,GAAA0oH,GAAApxI,KAAAoxI,GAAA1yJ,KAAAgQ,MAAA4hJ,GAAA5nH,EAAA,GAAA0oH,GAAApxI,KAAAoxI,IACAjB,EAAA7jC,UAAA74E,EAAA/K,GACA34C,KAAA0gK,SAAAxrG,EAEAl1D,KAAAkzF,UAAAjjE,EACAjwB,KAAA2zF,YAAAjwC,GAEA1xC,MAAA,SAAAtP,GAEA,OAAAy6B,EAAA/N,UAAA1sB,MAGAmB,EAAAjF,KAAA,iCAAA2L,GACAi2J,EAAAtkK,UAAAqO,GAAA,SAAA7H,GACA,OAAA29J,EAAA91J,GAAAlN,KAAA2C,UAAAgS,MAAAtP,OAIA,IAAAw+J,EAAA,CACA,YAtHA,KAuHA,YAAAK,KACA,YAAAA,KACA,YAAAA,MACA,YAAAA,KACA,gBA1HAA,KA2HA,gBAAAC,KACA,gBAAAA,KACA,gBAAAA,KACA,gBAAAA,MACA,gBA9HAA,MA+HA,gBAAAb,MACA,gBAAAA,OACA,gBAAAA,OACA,eAjIAA,OAkIA,eAAAc,QACA,eAAAA,QACA,eAAAA,QACA,eAAAA,OACA,eAAAA,QACA,QAAAA,QACA,eAAAA,OACA,QAAAA,SACA,QAAAA,SACA,SAAAA,SACA,QAAAA,SACA,SAAAA,SACA,QAAAA,SACA,WAAAA,QACA,SAAAA,UACA,SAAAA,SACA,aAAAA,SACA,SAAAA,UACA,SAAAA,SACA,QAAAA,UAOAjB,EAAA7uJ,OAAA,SAAAlB,GACA,WAAA+vJ,EAAA,CACAxL,OAAAvkJ,EAAAhG,QAAAtK,IAAA,aAIA,IAAAihC,EAAAo/H,EACAroI,EAAA93B,QAAA+gC,mBC/MA,IAAAv9B,EAAaH,EAAQ,KAErB28C,EAAY38C,EAAQ,KAEpBy5B,EAAiBz5B,EAAQ,KAEzB08C,EAAoB18C,EAAQ,KA2B5Bu8J,EAAA5/G,EAAAnkD,UACAmkK,EAAAjgH,EAAAlkD,UACAoxB,EAAA6P,EAAA7P,iBACAo0I,EAAAvkI,EAAAxe,MACA4hJ,EAAA5xJ,KAAAod,MACAu0I,EAAA3xJ,KAAAg2C,KACAmZ,EAAAnvD,KAAA0f,IACAszI,EAAAhzJ,KAAApC,IACAq1J,EAAAvhH,EAAA1/C,OAAA,CACApB,KAAA,MACAikD,KAAA,GACA/c,aAAA,WACA4Z,EAAAjhD,MAAAY,KAAAb,WACAa,KAAA6hK,eAAA,IAAAzhH,GAMAoE,SAAA,WACA,IAAAs9G,EAAA9hK,KAAA6hK,eACAlpH,EAAA34C,KAAAkzC,QACAiO,EAAA2gH,EAAA1gH,YACA,OAAAv9C,EAAAhH,IAAAwjK,EAAA77G,SAAAnnD,KAAA2C,MAAA,SAAA0C,GACA,IAAAq/J,EAAA5kI,EAAAxe,MAAAm/C,EAAA99D,KAAAwjD,KAAA9gD,IAIA,OAFAq/J,EAAAr/J,IAAAi2C,EAAA,IAAAmpH,EAAAE,SAAAC,EAAAF,EAAA5gH,EAAA,IAAA4gH,EACAA,EAAAr/J,IAAAi2C,EAAA,IAAAmpH,EAAAI,SAAAD,EAAAF,EAAA5gH,EAAA,IAAA4gH,GAEK/hK,OAOL8iD,SAAAu9G,EAAAv9G,SAMAnmB,MAAA,SAAAj6B,GAEA,OADAA,EAAAu9J,EAAAtjI,MAAAt/B,KAAA2C,KAAA0C,GACAo7D,EAAA99D,KAAAwjD,KAAA9gD,IAOA+gD,UAAA,SAAAxN,EAAApI,GACA,IAAA2V,EAAAxjD,KAAAwjD,KACAvN,EAAA0rH,EAAA1rH,GAAA0rH,EAAAn+G,GACA3V,EAAA8zH,EAAA9zH,GAAA8zH,EAAAn+G,GACA68G,EAAA58G,UAAApmD,KAAA2C,KAAAi2C,EAAApI,IAMAuT,UAAA,WACA,IAAAoC,EAAAxjD,KAAAwjD,KACA7K,EAAAsnH,EAAA7+G,UAAA/jD,KAAA2C,MACA24C,EAAA,GAAAmlB,EAAAta,EAAA7K,EAAA,IACAA,EAAA,GAAAmlB,EAAAta,EAAA7K,EAAA,IAEA,IAAAmpH,EAAA9hK,KAAA6hK,eACA1gH,EAAA2gH,EAAA1gH,YAGA,OAFA0gH,EAAAE,WAAArpH,EAAA,GAAAspH,EAAAtpH,EAAA,GAAAwI,EAAA,KACA2gH,EAAAI,WAAAvpH,EAAA,GAAAspH,EAAAtpH,EAAA,GAAAwI,EAAA,KACAxI,GAMAy6C,YAAA,SAAAz6C,GACA34C,KAAA6hK,eAAAzuE,YAAAz6C,GAEA,IAAA6K,EAAAxjD,KAAAwjD,KACA7K,EAAA,GAAAgpH,EAAAhpH,EAAA,IAAAgpH,EAAAn+G,GACA7K,EAAA,GAAAgpH,EAAAhpH,EAAA,IAAAgpH,EAAAn+G,GACAy8G,EAAA7sE,YAAA/1F,KAAA2C,KAAA24C,IAMA06C,oBAAA,SAAA7xF,EAAAwqC,GAGAhsC,KAAAozF,YAAA5xF,EAAAi3C,qBAAAzM,KAOA8nD,UAAA,SAAAitE,GACAA,KAAA,GACA,IAAApoH,EAAA34C,KAAAkzC,QACA2N,EAAAlI,EAAA,GAAAA,EAAA,GAEA,KAAAkI,IAAA5xC,KAAA4xC,GAAA,IAIA,IAAA5wB,EAAAkN,EAAA1N,SAAAoxB,GAQA,IAPAkgH,EAAAlgH,EAAA5wB,GAEA,KACAA,GAAA,KAIA7C,MAAA6C,IAAAthB,KAAAyb,IAAA6F,GAAA,GAAAthB,KAAAyb,IAAA6F,GAAA,GACAA,GAAA,GAGA,IAAAyzB,EAAA,CAAAvmB,EAAAxe,MAAA2hJ,EAAA3nH,EAAA,GAAA1oB,MAAAkN,EAAAxe,MAAA4hJ,EAAA5nH,EAAA,GAAA1oB,OACAjwB,KAAAkzF,UAAAjjE,EACAjwB,KAAA2zF,YAAAjwC,IAOAA,WAAA,SAAA3rC,GACAsoJ,EAAA38G,WAAArmD,KAAA2C,KAAA+X,GACA,IAAA+pJ,EAAA9hK,KAAA6hK,eACAC,EAAAE,SAAAjqJ,EAAAkpC,OACA6gH,EAAAI,SAAAnqJ,EAAAmpC,UAcA,SAAA+gH,EAAAv/J,EAAAy/J,GACA,OAAAT,EAAAh/J,EAAA4qB,EAAA60I,IAZAt+J,EAAAjF,KAAA,iCAAA2L,GACAq3J,EAAA1lK,UAAAqO,GAAA,SAAA7H,GAEA,OADAA,EAAAi/J,EAAAj/J,GAAAi/J,EAAA3hK,KAAAwjD,MACAy8G,EAAA11J,GAAAlN,KAAA2C,KAAA0C,MAIAk/J,EAAAjwJ,OAAA,WACA,WAAAiwJ,GAOA,IAAAxgI,EAAAwgI,EACAzpI,EAAA93B,QAAA+gC,mBCzLA,IAAAv9B,EAAaH,EAAQ,KAErBw5B,EAAkBx5B,EAAQ,KAI1BsvB,EAFatvB,EAAQ,KAErBsvB,UAIAuvB,EAFkB7+C,EAAQ,KAE1B6+C,mBAoBAlc,EAAArT,IA2CA,SAAAovI,EAAAzgH,EAAAr4B,GACA,IAQAo6C,EACA2+F,EATAC,EAAAC,EAAA5gH,EAAA,UACA6gH,EAAAC,EAAAn5I,GACAnsB,EAAAulK,EAAAJ,EAAAE,GAEA,OAAArlK,IAOA0G,EAAAhC,WAAA2gK,GACA9+F,EAAAi/F,EAAAhhH,EAAA6gH,IAEAH,EAAA,SAAAG,EAyFA,SAAA7gH,GACA,IAAAxkD,EAAAkpC,EAAAsb,GAAAihH,aACA,aAAAzlK,IAAAkpC,EAAAsb,GAAAihH,aAAAjhH,EAAAugB,4BA3FA2gG,CAAAlhH,GAAA6gH,EACA9+F,EAAAo/F,EAAAnhH,EAAA0gH,IAIAU,EAAAT,EAAAE,EAAA,CACA9+F,SACAs/F,sBAAAX,KA6DA,SAAAE,EAAA5gH,EAAAvgD,GAEA,OAAAilC,EAAAsb,GAAAvgD,KAAAilC,EAAAsb,GAAAvgD,GAAA,IAGA,SAAAshK,EAAAO,EAAAnlK,GACA,QAAAP,EAAA,EAAiBA,EAAA0lK,EAAAxlK,OAAkBF,IACnC,GAAA0lK,EAAA1lK,GAAAO,QACA,OAAAmlK,EAAA1lK,GAAA+B,MAKA,SAAAyjK,EAAAE,EAAAnlK,EAAAwB,GAKA,OAJA2jK,EAAAxhK,KAAA,CACA3D,MACAwB,UAEAA,EA6FA,SAAAwjK,EAAAnhH,EAAAuhH,EAAAC,GACA,IAAA3gH,EAAAD,EAAAZ,GACAyhH,EAAAzhH,EAAAhlB,MACA0mI,EAAAD,EAAAhiH,YACA93B,EAAAq4B,EAAAc,gBACAtlD,EAAA,GAEAunD,EAAA/1C,KAAAG,KAAAo0J,GAAA,QACAI,EAAAD,EAAA,GACAh/G,EAAA++G,EAAA/1I,QAKA,IAAAi2I,GAAA5+G,EAAA,GAAAL,EAAAK,EAAA,IACA4+G,EAAA30J,KAAAgQ,MAAAhQ,KAAAg2C,KAAA2+G,EAAA5+G,OAQA,IAAA6+G,EACAj6I,EAAAnpB,IAAA,gBADAojK,EAEAj6I,EAAAnpB,IAAA,gBAGAojK,GAAAD,IAAAD,EAAA,IACAG,EAAAH,EAAA,IAMA,IAFA,IAAA1gH,EAAA2gH,EAEQ3gH,GAAA0gH,EAAA,GAA+B1gH,GAAA+B,EACvC8+G,EAAA7gH,GAOA,SAAA6gH,EAAAC,GACAtmK,EAAAsE,KAAA0hK,EAAAM,EAAA,CACA50F,eAAArsB,EAAAihH,GACA30F,SAAAs0F,EAAAtgH,SAAA2gH,GACA9gH,UAAA8gH,IAIA,OAZAF,GAAA5gH,IAAA0gH,EAAA,IACAG,EAAAH,EAAA,IAWAlmK,EAKA,SAAAwlK,EAAAhhH,EAAAuhH,EAAAC,GACA,IAAAC,EAAAzhH,EAAAhlB,MACA6lB,EAAAD,EAAAZ,GACAxkD,EAAA,GAYA,OAXA0G,EAAAjF,KAAAwkK,EAAA5+G,WAAA,SAAA7B,GACA,IAAAmsB,EAAAs0F,EAAAtgH,SAAAH,GAEAugH,EAAAvgH,EAAAmsB,IACA3xE,EAAAsE,KAAA0hK,EAAAxgH,EAAA,CACAksB,eAAArsB,EAAAG,GACAmsB,WACAnsB,gBAIAxlD,EAIA,SAAAslK,EAAAhyJ,GACA,IAAAwf,EAAAxf,EAAAtQ,IAAA,YACA,aAAA8vB,EAAA,OAAAA,EAGA5vB,EAAA2hE,iBAhTA,SAAArgB,GAEA,mBAAAA,EAAApiD,KAmBA,SAAAoiD,GACA,IAAAr4B,EAAAq4B,EAAAc,gBACAtlD,EAAAilK,EAAAzgH,EAAAr4B,GACA,OAAAA,EAAAnpB,IAAA,SAAAwhD,EAAAhlB,MAAAwnB,UAAA,CACAuf,OAAA,GACAs/F,sBAAA7lK,EAAA6lK,uBACG7lK,EAzBHumK,CAAA/hH,GA8FA,SAAAA,GACA,IAAAshB,EAAAthB,EAAAhlB,MAAA6nB,WACAhC,EAAAD,EAAAZ,GACA,OACA+hB,OAAA7/D,EAAAhH,IAAAomE,EAAA,SAAAtgB,EAAA10B,GACA,OACA4gD,eAAArsB,EAAAG,EAAA10B,GACA6gD,SAAAntB,EAAAhlB,MAAAmmB,SAAAH,GACAA,gBAtGAghH,CAAAhiH,IA+SAthD,EAAA0hE,gBAnSA,SAAApgB,EAAAohB,GAEA,mBAAAphB,EAAApiD,KAwCA,SAAAoiD,EAAAohB,GACA,IAQAE,EACAG,EATAwgG,EAAArB,EAAA5gH,EAAA,SACAkiH,EAAApB,EAAA1/F,GACA5lE,EAAAulK,EAAAkB,EAAAC,GAEA,GAAA1mK,EACA,OAAAA,EAWA,GAJA4lE,EAAA5iE,IAAA,UAAAwhD,EAAAhlB,MAAAwnB,YACA8e,EAAA,IAGAp/D,EAAAhC,WAAAgiK,GACA5gG,EAAA0/F,EAAAhhH,EAAAkiH,GAAA,QAIA,YAAAA,EAAA,CACA,IAAAC,EAAA1B,EAAAzgH,IAAAc,iBACA2gB,EAAA0gG,EAAAd,sBACA//F,EAAAp/D,EAAAhH,IAAAinK,EAAApgG,OAAA,SAAAkL,GACA,OAAAA,EAAAjsB,iBAIAsgB,EAAA6/F,EAAAnhH,EADAyhB,EAAAygG,GACA,GAIA,OAAAd,EAAAa,EAAAC,EAAA,CACA5gG,QACAG,yBA5EA2gG,CAAApiH,EAAAohB,GAAA,CACAE,MAAAthB,EAAAhlB,MAAA6nB,aAiSAnkD,EAAA6hE,0BAjKA,SAAAvgB,GACA,IAAAxpC,EAqEA,SAAAwpC,GACA,IAAAr4B,EAAAq4B,EAAAc,gBACA,OACAuhH,WAAAriH,EAAAkiB,UAAAliB,EAAAkiB,YAAAliB,EAAAiiB,eAAAjiB,EAAAiiB,eAAA,KACAtgD,YAAAgG,EAAAnpB,IAAA,aACAilD,KAAA97B,EAAAE,WA1EAy6I,CAAAtiH,GACAa,EAAAD,EAAAZ,GACAz2B,GAAA/S,EAAA6rJ,WAAA7rJ,EAAAmL,aAAA,IAAA3U,KAAA4U,GACA6/I,EAAAzhH,EAAAhlB,MACA0mI,EAAAD,EAAAhiH,YAIAiD,EAAA++G,EAAA/1I,QAEA,GAAAg2I,EAAA,GAAAA,EAAA,KACA,SAGA,IAAA3+G,EAAA,EAEAL,EAAA,KACAK,EAAA/1C,KAAAG,IAAA,EAAAH,KAAAod,MAAAs4B,EAAA,MAWA,IARA,IAAA1B,EAAA0gH,EAAA,GACAa,EAAAviH,EAAAghB,YAAAhgB,EAAA,GAAAhB,EAAAghB,YAAAhgB,GACAwhH,EAAAx1J,KAAAyb,IAAA85I,EAAAv1J,KAAA6gC,IAAAtkB,IACAk5I,EAAAz1J,KAAAyb,IAAA85I,EAAAv1J,KAAA2gC,IAAApkB,IACAm5I,EAAA,EACAC,EAAA,EAGQ3hH,GAAA0gH,EAAA,GAA+B1gH,GAAA+B,EAAA,CACvC,IAAAj9C,EACAC,EAIAqX,EAAAme,EAAA/d,gBAAAqjC,EAAAG,GAAAxqC,EAAAitC,KAAA,gBAEA39C,EAAA,IAAAsX,EAAAtX,MACAC,EAAA,IAAAqX,EAAArX,OAEA28J,EAAA11J,KAAAG,IAAAu1J,EAAA58J,EAAA,GACA68J,EAAA31J,KAAAG,IAAAw1J,EAAA58J,EAAA,GAGA,IAAAkiH,EAAAy6C,EAAAF,EACAt6C,EAAAy6C,EAAAF,EAEAh3I,MAAAw8F,OAAA36G,KACAme,MAAAy8F,OAAA56G,KACA,IAAAghB,EAAAthB,KAAAG,IAAA,EAAAH,KAAAod,MAAApd,KAAAC,IAAAg7G,EAAAC,KACAo5C,EAAA58H,EAAAsb,EAAAlxC,OACA8zJ,EAAAtB,EAAAsB,iBACAC,EAAAvB,EAAAuB,cAeA,OAXA,MAAAD,GAAA,MAAAC,GAAA71J,KAAAyb,IAAAm6I,EAAAt0I,IAAA,GAAAthB,KAAAyb,IAAAo6I,EAAAngH,IAAA,GAEAkgH,EAAAt0I,EACAA,EAAAs0I,GAIAtB,EAAAuB,cAAAngH,EACA4+G,EAAAsB,iBAAAt0I,GAGAA,oBC/PA,IAAAqF,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAER,IAAA+gK,EAAmB/gK,EAAQ,KAE3BghK,EAAmBhhK,EAAQ,KAE3BihK,EAAiBjhK,EAAQ,KAEzBA,EAAQ,KAsBR4xB,EAAAhb,eAAAmqJ,EAAA,yBACAnvI,EAAAlZ,eAAAsoJ,EAAA,SAEApvI,EAAAtb,kBAAAsb,EAAA7vB,SAAAC,UAAAE,UAAA++J,EAAA,0BCrCcjhK,EAAQ,KAEtBC,QAFA,IAIAi+H,EAA0Bl+H,EAAQ,KAuBlC09B,EArBkB19B,EAAQ,KAqB1B/C,OAAA,CACApB,KAAA,cACAyb,aAAA,iBACAivB,eAAA,SAAAj+B,EAAAvB,GACA,OAAAm3H,EAAA5hI,KAAAypC,YAAAzpC,OAEAsmC,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA7H,iBAAA,cACAqxH,iBAAA,EACAxgD,gBAAA,EAMAqjF,cAAA,EAEAhtI,MAAA,CACAhY,SAAA,OAIAuW,UAAA,CACA1uB,MAAA,EACAlI,KAAA,SAUAmlD,MAAA,EAEAntB,QAAA,EACA8nG,eAAA,KACAjoG,OAAA,cACAC,WAAA,EACAgqD,aAAA,KACAwjF,YAAA,EAKAC,cAAA,OAEAxlC,cAAA,EAEAylC,SAAA,OACAx+I,gBAAA,SAEAm2D,YAAA,EACAq4E,oBAAA9lJ,OAIAkpB,EAAA93B,QAAA+gC,mBCvFc19B,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErBg9E,EAAiBh9E,EAAQ,KAEzBu7C,EAAgBv7C,EAAQ,KAExBshK,EAAwBthK,EAAQ,KAEhCkB,EAAclB,EAAQ,KAEtBmB,EAAgBnB,EAAQ,KAExBuhK,EAAYvhK,EAAQ,KAEpBua,EAAAgnJ,EAAAhnJ,SACAD,EAAAinJ,EAAAjnJ,QAEArZ,EAAgBjB,EAAQ,KAIxBib,EAFcjb,EAAQ,KAEtBib,MAEAumJ,EAAcxhK,EAAQ,KAEtBu6H,EAAAinC,EAAAjnC,qBACAQ,EAAAymC,EAAAzmC,kBAqBA,SAAA0mC,EAAAC,EAAAC,GACA,GAAAD,EAAA3nK,SAAA4nK,EAAA5nK,OAAA,CAIA,QAAAF,EAAA,EAAiBA,EAAA6nK,EAAA3nK,OAAoBF,IAAA,CACrC,IAAAohE,EAAAymG,EAAA7nK,GACAqhE,EAAAymG,EAAA9nK,GAEA,GAAAohE,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,GACA,OAIA,UAGA,SAAA0mG,EAAA/tI,GACA,wBAAAA,MAAA,KAGA,SAAAguI,EAAA5jH,GACA,IAAAhJ,EAAAgJ,EAAAq1C,kBAEA,GAAAr1C,EAAA2gB,OAAA,CAEA,IAAAkjG,EAAA7jH,EAAAgiB,eAAA,IACA60D,EAAA7/E,EAAA,GAAAA,EAAA,QACAA,EAAA,IAAA6/E,EAAAgtC,EACA7sH,EAAA,IAAA6/E,EAAAgtC,EAGA,OAAA7sH,EAgHA,SAAA8sH,EAAA76J,EAAA86J,EAAAC,EAAA50J,GACA,gBAAAnG,EAAArL,KAtCA,SAAAykH,EAAA0hD,EAAAC,EAAA50J,GACA,IAAAkzG,EAAAD,EAAAE,eAEA0hD,EADA5hD,EAAAI,gBACAhjE,YAAAzkD,QACAipK,EAAA,GAAAA,EAAA,IAAAA,EAAA/yF,UACA,IAAAgzF,EAAA5hD,EAAA7iE,YACA0kH,EAAAn3J,KAAA4U,GAAA,IAEAoiJ,IACAC,EAAA,OACAA,EAAA,QAGA,IAAA5nD,EAAA,IAAAp5G,EAAAkZ,OAAA,CACA0J,MAAA,CACA61B,GAAA1+B,EAAAqlG,EAAA3mE,GAAA,GACAC,GAAA3+B,EAAAqlG,EAAA1mE,GAAA,GACA+mD,GAAA1lF,EAAAinJ,EAAA,MACAhoH,EAAAj/B,EAAAinJ,EAAA,MACAtrF,YAAAurF,EAAA,GAAAC,EACAvrF,UAAAsrF,EAAA,GAAAC,EACAxhE,UAAA2f,EAAA5hD,WAaA,OATAqjG,IACA1nD,EAAAx2F,MAAA+yD,UAAAsrF,EAAA,GAAAC,EACAlhK,EAAA+kB,UAAAq0F,EAAA,CACAx2F,MAAA,CACA+yD,UAAAsrF,EAAA,GAAAC,IAEK/0J,IAGLitG,EAIA+nD,CAAAn7J,EAAA86J,EAAAC,EAAA50J,GAzFA,SAAAolF,EAAAuvE,EAAAC,EAAA50J,GACA,IAAAi1J,EAAAT,EAAApvE,EAAA8G,QAAA,MACAgpE,EAAAV,EAAApvE,EAAA8G,QAAA,MACAr5B,EAAAuyB,EAAAlrD,cAAA24B,eACA5zD,EAAArB,KAAAC,IAAAo3J,EAAA,GAAAA,EAAA,IACA/1J,EAAAtB,KAAAC,IAAAq3J,EAAA,GAAAA,EAAA,IACAx+J,EAAAkH,KAAAG,IAAAk3J,EAAA,GAAAA,EAAA,IAAAh2J,EACAtI,EAAAiH,KAAAG,IAAAm3J,EAAA,GAAAA,EAAA,IAAAh2J,EAGA,GAAA01J,EACA31J,GAAA,GACAvI,GAAA,GACAwI,GAAA,GACAvI,GAAA,OACG,CACH,IAAAmY,EAAA9O,EAAA5Q,IAAA,sBAEA+zF,EAAAnjF,EAAA5Q,IAAA,gBAAA0f,EAAA,EAAAlR,KAAAG,IAAArH,EAAAC,GAEAk8D,GACA3zD,GAAAikF,EACAxsF,GAAA,EAAAwsF,IAEAlkF,GAAAkkF,EACAzsF,GAAA,EAAAysF,GAIA,IAAA8pB,EAAA,IAAAp5G,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,IACAC,IACAxI,QACAC,YAcA,OAVAg+J,IACA1nD,EAAAx2F,MAAAo8C,EAAA,oBACAh/D,EAAA+kB,UAAAq0F,EAAA,CACAx2F,MAAA,CACA/f,QACAC,WAEKqJ,IAGLitG,EAyCAkoD,CAAAt7J,EAAA86J,EAAAC,EAAA50J,GAGA,SAAAo1J,EAAA/6I,EAAAxgB,EAAAw7J,GAKA,IAJA,IAAAvxE,EAAAjqF,EAAAqgC,cACAo7H,EAAA,MAAAxxE,EAAA7oD,KAAA,WAAA6oD,EAAA7oD,IAAA,IACAs6H,EAAA,GAEA/oK,EAAA,EAAiBA,EAAA6tB,EAAA3tB,OAAA,EAAuBF,IAAA,CACxC,IAAAgpK,EAAAn7I,EAAA7tB,EAAA,GACAs3G,EAAAzpF,EAAA7tB,GACA+oK,EAAA7kK,KAAAozG,GACA,IAAA2xD,EAAA,GAEA,OAAAJ,GACA,UACAI,EAAAH,GAAAE,EAAAF,GACAG,EAAA,EAAAH,GAAAxxD,EAAA,EAAAwxD,GAEAC,EAAA7kK,KAAA+kK,GACA,MAEA,aAEA,IAAAx8F,GAAA6qC,EAAAwxD,GAAAE,EAAAF,IAAA,EACAI,EAAA,GACAD,EAAAH,GAAAI,EAAAJ,GAAAr8F,EACAw8F,EAAA,EAAAH,GAAAxxD,EAAA,EAAAwxD,GACAI,EAAA,EAAAJ,GAAAE,EAAA,EAAAF,GACAC,EAAA7kK,KAAA+kK,GACAF,EAAA7kK,KAAAglK,GACA,MAEA,QACAD,EAAAH,GAAAxxD,EAAAwxD,GACAG,EAAA,EAAAH,GAAAE,EAAA,EAAAF,GAEAC,EAAA7kK,KAAA+kK,IAMA,OADAp7I,EAAA7tB,IAAA+oK,EAAA7kK,KAAA2pB,EAAA7tB,IACA+oK,EAwFA,SAAAI,EAAA31J,EAAAvP,EAAAoJ,GACA,IAAAk6J,EAAA/zJ,EAAA5Q,IAAA,iBACAwmK,EAAA,SAAA7B,EAEA,IAAAA,GAAA6B,EAAA,CAIA,IAAAhwI,EAAA/rB,EAAAg8J,eAAA,cAEA,GAAAjwI,KAOAgwI,IAgBA,SAAAhwI,EAAAn1B,GAKA,IAAAsgD,EAAAnrB,EAAAyqB,YACAylH,EAAAl4J,KAAAyb,IAAA03B,EAAA,GAAAA,EAAA,IAAAnrB,EAAAgG,MAAAtP,QACAD,MAAAy5I,OAAA,GAMA,IAHA,IAAArJ,EAAAh8J,EAAA6rB,QACAq3B,EAAA/1C,KAAAG,IAAA,EAAAH,KAAAgQ,MAAA6+I,EAAA,IAEArsJ,EAAA,EAAyBA,EAAAqsJ,EAAqBrsJ,GAAAuzC,EAC9C,GAEA,IAFAzF,EAAA84C,cAAAv2F,EAAA2P,GACAwlB,EAAAitC,eAAA,KACAijG,EACA,SAIA,SApCAC,CAAAnwI,EAAAn1B,IADA,CAMA,IAAAulK,EAAAvlK,EAAA8pC,aAAA3U,EAAAqV,KACAg7H,EAAA,GAIA,OAHAnjK,EAAAjF,KAAA+3B,EAAA8sC,gBAAA,SAAAmL,GACAo4F,EAAAp4F,EAAAjsB,WAAA,IAEA,SAAAxxC,GACA,OAAA61J,EAAAjpK,eAAAyD,EAAArB,IAAA4mK,EAAA51J,OA4BA,IAAAiwB,EAAAz8B,EAAAhE,OAAA,CACApB,KAAA,OACA+H,KAAA,WACA,IAAA2/J,EAAA,IAAAriK,EAAA+Y,MACAupJ,EAAA,IAAAxmF,EACA1gF,KAAAkH,MAAAiJ,IAAA+2J,EAAAhgK,OACAlH,KAAAmnK,YAAAD,EACAlnK,KAAAonK,WAAAH,GAEAp1J,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAAyC,EAAAmG,EAAAL,iBACAxJ,EAAAlH,KAAAkH,MACA1F,EAAAuP,EAAAC,UACA+8D,EAAAh9D,EAAAvE,SAAA,aACA66J,EAAAt2J,EAAAvE,SAAA,aACA4e,EAAA5pB,EAAAo5C,SAAAp5C,EAAA66C,eACAirH,EAAA,UAAA18J,EAAArL,KACAgoK,EAAAvnK,KAAAwnK,UACAN,EAAAlnK,KAAAmnK,YACAM,EAAAznK,KAAA0nK,UACA9/F,EAAA5nE,KAAA2nK,SACAV,EAAAjnK,KAAAonK,WACA1B,EAAA30J,EAAA5Q,IAAA,aACAynK,GAAAP,EAAAx+H,UACAq1F,EAAAmpC,EAAAlnK,IAAA,UAEA+/H,EA7TA,SAAAt1H,EAAApJ,EAAAk9H,GACA,IAAAA,EAAAroC,SACA,SAKA,IAFA,IAAAjrE,EAAA,GAEA6C,EAAA,EAAAzwB,EAAAgE,EAAA6rB,QAAuCY,EAAAzwB,EAAWywB,IAClD7C,EAAA3pB,KAAAg9H,EAAAC,EAAA9zH,EAAApJ,EAAAysB,IAGA,OAAA7C,EAkTAy8I,CAAAj9J,EAAApJ,EADAy8H,EAAArzH,EAAApJ,EAAA08H,IAEA2mC,EAAA9zJ,EAAA5Q,IAAA,cACA2nK,EAAAjD,IAAAyC,GAAAZ,EAAA31J,EAAAvP,EAAAoJ,GAEA+2E,EAAA3hF,KAAA2kE,MACAgd,KAAA7kC,kBAAA,SAAAr0C,EAAAwlB,GACAxlB,EAAAs/J,SACA7gK,EAAA6O,OAAAtN,GACAk5E,EAAA/kC,iBAAA3uB,EAAA,SAIA42I,GACAqC,EAAAnxJ,SAGA7O,EAAAiJ,IAAA82J,GAEA,IAAAviH,GAAA4iH,GAAAv2J,EAAA5Q,IAAA,QAEAsnK,GAAAF,EAAAhoK,OAAAqL,EAAArL,MAAAmlD,IAAA1kD,KAAAgoK,OAoBAJ,IAAAhgG,EAEAA,EAAA5nE,KAAAioK,YAAA78I,EAAA80G,EAAAt1H,EAAA86J,GACO99F,IAAAggG,IAEPX,EAAAlxJ,OAAA6xD,GACAA,EAAA5nE,KAAA2nK,SAAA,MAIAV,EAAAv5C,YAAA+3C,EAAA76J,GAAA,KAAAmG,IAGA8zJ,GAAAqC,EAAAxlF,WAAAlgF,EAAA,CACAu/E,SAAA+mF,EACA9mF,UAAAykF,EAAA76J,GAAA,KAAAmG,KAIAvP,EAAAs7C,kBAAA,SAAAr0C,GACAA,EAAAgF,eAAA,KAIA03J,EAAAnlK,KAAAkoK,iBAAAhoC,IAAAilC,EAAAnlK,KAAAmoK,QAAA/8I,KACAs6I,EACA1lK,KAAAooK,iBAAA5mK,EAAA0+H,EAAAt1H,EAAAzC,EAAAu8C,EAAAw5E,IAGAx5E,IAEAt5B,EAAA+6I,EAAA/6I,EAAAxgB,EAAA85C,GACAw7E,EAAAimC,EAAAjmC,EAAAt1H,EAAA85C,IAGA+iH,EAAA5iI,SAAA,CACAzZ,WAEAw8C,KAAA/iC,SAAA,CACAzZ,SACA80G,wBA3DA2kC,GAAAqC,EAAAxlF,WAAAlgF,EAAA,CACAu/E,SAAA+mF,EACA9mF,UAAAykF,EAAA76J,GAAA,KAAAmG,KAGA2zC,IAEAt5B,EAAA+6I,EAAA/6I,EAAAxgB,EAAA85C,GACAw7E,EAAAimC,EAAAjmC,EAAAt1H,EAAA85C,IAGA+iH,EAAAznK,KAAAqoK,aAAAj9I,EAAAxgB,EAAA86J,GAEAkC,IACAhgG,EAAA5nE,KAAAioK,YAAA78I,EAAA80G,EAAAt1H,EAAA86J,IAGAuB,EAAAv5C,YAAA+3C,EAAA76J,GAAA,KAAAmG,KAgDA,IAAAumG,EA9PA,SAAA91G,EAAAoJ,GACA,IAAA6uI,EAAAj4I,EAAAoP,UAAA,cAEA,GAAA6oI,KAAAh8I,QAAA+D,EAAA6rB,SAKA,gBAAAziB,EAAArL,KAAA,CAOA,IAHA,IAAAwtC,EACA2sG,EAEAn8I,EAAAk8I,EAAAh8I,OAAA,EAAyCF,GAAA,EAAQA,IAAA,CACjD,IAAAi2C,EAAAimG,EAAAl8I,GAAA29C,UACAqhB,EAAA/6D,EAAA2a,WAAAq3B,GACAvH,EAAAzqC,EAAAqqC,iBAAA0wB,GAGA,UAFAxvB,EAAAd,KAAAc,WAEA,MAAAA,EAAA,CACA2sG,EAAAD,EAAAl8I,GACA,OAIA,GAAAm8I,EAAA,CAUA,IAAA/3F,EAAA/2C,EAAAqyF,QAAAlwD,GAEA7K,EAAAr+B,EAAAhH,IAAA68I,EAAAE,MAAA,SAAA3iF,GACA,OACAwL,MAAA9gB,EAAAo1C,cAAAp1C,EAAAghB,YAAA1L,EAAA33D,QACA6gB,MAAA82C,EAAA92C,SAGAmoJ,EAAApmI,EAAAzkC,OACAo8I,EAAAH,EAAAG,YAAAl9I,QAEA2rK,GAAApmI,EAAA,GAAAugC,MAAAvgC,EAAAomI,EAAA,GAAA7lG,QACAvgC,EAAA2wC,UACAgnE,EAAAhnE,WAGA,IAEA01F,EAAArmI,EAAA,GAAAugC,MAFA,GAGA+lG,EAAAtmI,EAAAomI,EAAA,GAAA7lG,MAHA,GAIAgmG,EAAAD,EAAAD,EAEA,GAAAE,EAAA,KACA,oBAGA5kK,EAAAjF,KAAAsjC,EAAA,SAAA+0B,GACAA,EAAAzzD,QAAAyzD,EAAAwL,MAAA8lG,GAAAE,IAEAvmI,EAAAzgC,KAAA,CACA+B,OAAA8kK,EAAApmI,EAAAomI,EAAA,GAAA9kK,OAAA,GACA2c,MAAA05H,EAAA,oBAEA33G,EAAA6F,QAAA,CAEAvkC,OAAA8kK,EAAApmI,EAAA,GAAA1+B,OAAA,GACA2c,MAAA05H,EAAA,oBAMA,IAAA6uB,EAAA,IAAA9jK,EAAA2Z,eAAA,QAAA2jB,GAAA,GAGA,OAFAwmI,EAAA37H,GAAAw7H,EACAG,EAAA37H,EAAA,KAAAy7H,EACAE,IA4KAC,CAAAnnK,EAAAoJ,IAAApJ,EAAAoP,UAAA,SACA62J,EAAA3oF,SAAAj7E,EAAArF,SACAuvE,EAAAV,eAAA,CACA7sD,KAAA,OACAD,OAAA+2F,EACAwR,SAAA,WAEA,IAAAvxF,EAAAxmB,EAAA5Q,IAAA,UAQA,GAPAo3B,EAAA+tI,EAAAv0J,EAAA5Q,IAAA,WACAsnK,EAAA5iI,SAAA,CACAtN,SACA8nG,eAAAtuH,EAAA5Q,IAAA,kBACAm/H,aAAAvuH,EAAA5Q,IAAA,kBAGAynE,EAAA,CACA,IAAAghG,EAAApnK,EAAAo3C,mBAAA,mBACAunF,EAAA,EACAv4D,EAAAkX,SAAAj7E,EAAArF,SAAA6oK,EAAAzjE,eAAA,CACApjF,KAAA82F,EACAjhC,QAAA,GACAyyC,SAAA,WAGA8/C,IACAzoC,EAAAmlC,EAAAsD,EAAAzoK,IAAA,YAGAynE,EAAA/iC,SAAA,CACAtN,SACA4oG,kBACAd,eAAAtuH,EAAA5Q,IAAA,kBACAm/H,aAAAvuH,EAAA5Q,IAAA,kBAIAH,KAAA2kE,MAAAnjE,EAEAxB,KAAAwnK,UAAA58J,EACA5K,KAAAkoK,iBAAAhoC,EACAlgI,KAAAmoK,QAAA/8I,EACAprB,KAAAgoK,MAAAtjH,EACA1kD,KAAA6oK,aAAA3qC,GAEApoH,QAAA,aACAmkD,UAAA,SAAAlpD,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAjQ,EAAAuP,EAAAC,UACAG,EAAAtM,EAAAiuB,eAAAtxB,EAAAiQ,GAEA,KAAAN,aAAA9U,QAAA,MAAA8U,MAAA,GACA,IAAAimB,EAAA51B,EAAAq7C,iBAAA1rC,GAEA,IAAAimB,EAAA,CAEA,IAAAy9E,EAAArzG,EAAA66C,cAAAlrC,GAEA,IAAA0jG,EAEA,QAGAz9E,EAAA,IAAA6nB,EAAAz9C,EAAA2P,IACAyO,SAAAi1F,EACAz9E,EAAAohE,KAAAznF,EAAA5Q,IAAA,UAAA4Q,EAAA5Q,IAAA,MACAi3B,EAAAhpB,OAAAgf,MAAAynF,EAAA,KAAAznF,MAAAynF,EAAA,IACAz9E,EAAA2wI,QAAA,EACAvmK,EAAAo7C,iBAAAzrC,EAAAimB,GAEAA,EAAAihE,qBAAA,GACAr4F,KAAAkH,MAAAiJ,IAAAinB,GAGAA,EAAA6iC,iBAGAt1D,EAAAzI,UAAA+9D,UAAA58D,KAAA2C,KAAA+Q,EAAAtG,EAAAtC,EAAAsJ,IAGA0oD,SAAA,SAAAppD,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAjQ,EAAAuP,EAAAC,UACAG,EAAAtM,EAAAiuB,eAAAtxB,EAAAiQ,GAEA,SAAAN,MAAA,GACA,IAAAimB,EAAA51B,EAAAq7C,iBAAA1rC,GAEAimB,IACAA,EAAA2wI,QACAvmK,EAAAo7C,iBAAAzrC,EAAA,MACAnR,KAAAkH,MAAA6O,OAAAqhB,IAEAA,EAAA+iC,iBAOAx1D,EAAAzI,UAAAi+D,SAAA98D,KAAA2C,KAAA+Q,EAAAtG,EAAAtC,EAAAsJ,IASA42J,aAAA,SAAAj9I,GACA,IAAAq8I,EAAAznK,KAAA0nK,UAiBA,OAfAD,GACAznK,KAAAonK,WAAArxJ,OAAA0xJ,GAGAA,EAAA,IAAAxpJ,EAAA,CACAuJ,MAAA,CACA4D,UAEArgB,QAAA,EACA4W,GAAA,KAGA3hB,KAAAonK,WAAAj3J,IAAAs3J,GAEAznK,KAAA0nK,UAAAD,EACAA,GASAQ,YAAA,SAAA78I,EAAA80G,GACA,IAAAt4D,EAAA5nE,KAAA2nK,SAiBA,OAfA//F,GACA5nE,KAAAonK,WAAArxJ,OAAA6xD,GAGAA,EAAA,IAAA5pD,EAAA,CACAwJ,MAAA,CACA4D,SACA80G,mBAEAn1H,QAAA,IAGA/K,KAAAonK,WAAAj3J,IAAAy3D,GAEA5nE,KAAA2nK,SAAA//F,EACAA,GAOAwgG,iBAAA,SAAA5mK,EAAA0+H,EAAAt1H,EAAAzC,EAAAu8C,EAAAw5E,GACA,IAAAupC,EAAAznK,KAAA0nK,UACA9/F,EAAA5nE,KAAA2nK,SACA52J,EAAAvP,EAAAkwC,UACAiI,EAAAqrH,EAAAhlK,KAAA2kE,MAAAnjE,EAAAxB,KAAAkoK,iBAAAhoC,EAAAlgI,KAAAwnK,UAAA58J,EAAA5K,KAAA6oK,aAAA3qC,GACA3sD,EAAA53B,EAAA43B,QACAu3F,EAAAnvH,EAAAmvH,iBACA5nG,EAAAvnB,EAAAunB,KACA6nG,EAAApvH,EAAAovH,cAEArkH,IAEA6sB,EAAA40F,EAAAxsH,EAAA43B,QAAA3mE,EAAA85C,GACAokH,EAAA3C,EAAAxsH,EAAAmvH,iBAAAl+J,EAAA85C,GACAwc,EAAAilG,EAAAxsH,EAAAunB,KAAAt2D,EAAA85C,GACAqkH,EAAA5C,EAAAxsH,EAAAovH,cAAAn+J,EAAA85C,IAMA+iH,EAAAjgJ,MAAAwhJ,SAAArvH,EAAA43B,QACAk2F,EAAAjgJ,MAAA4D,OAAAmmD,EACA3sE,EAAAgiB,YAAA6gJ,EAAA,CACAjgJ,MAAA,CACA4D,OAAA81C,IAEKnwD,GAEL62D,IACAA,EAAA/iC,SAAA,CACAzZ,OAAAmmD,EACA2uD,gBAAA4oC,IAEAlkK,EAAAgiB,YAAAghD,EAAA,CACApgD,MAAA,CACA4D,OAAA81C,EACAg/D,gBAAA6oC,IAEOh4J,IAMP,IAHA,IAAAk4J,EAAA,GACAC,EAAAvvH,EAAAt+B,OAEA9d,EAAA,EAAmBA,EAAA2rK,EAAAzrK,OAAuBF,IAAA,CAG1C,SAFA2rK,EAAA3rK,GAAAy9E,IAEA,CACA,IAAAvyE,EAAAjH,EAAAq7C,iBAAAqsH,EAAA3rK,GAAA4rK,MAEA1gK,GACAwgK,EAAAxnK,KAAA,CACAgH,KACA2gK,MAAA7rK,KAOAkqK,EAAA75C,WAAA65C,EAAA75C,UAAAnwH,QACAgqK,EAAA75C,UAAA,GAAA+D,OAAA,WACA,QAAAp0H,EAAA,EAAuBA,EAAA0rK,EAAAxrK,OAA4BF,IAAA,CACnD0rK,EAAA1rK,GAAAkL,GACAke,KAAA,WAAA8gJ,EAAAjgJ,MAAAwhJ,SAAAC,EAAA1rK,GAAA6rK,YAKArzJ,OAAA,SAAAtL,GACA,IAAAvD,EAAAlH,KAAAkH,MACAy6E,EAAA3hF,KAAA2kE,MAEA3kE,KAAAonK,WAAAhtG,YAEAp6D,KAAAmnK,YAAApxJ,QAAA,GAGA4rE,KAAA7kC,kBAAA,SAAAr0C,EAAAwlB,GACAxlB,EAAAs/J,SACA7gK,EAAA6O,OAAAtN,GACAk5E,EAAA/kC,iBAAA3uB,EAAA,SAGAjuB,KAAA0nK,UAAA1nK,KAAA2nK,SAAA3nK,KAAAwnK,UAAAxnK,KAAAmoK,QAAAnoK,KAAAkoK,iBAAAloK,KAAA2kE,MAAA,QAIAxsC,EAAA93B,QAAA+gC,mBCvuBA,IAAA8jI,EAAcxhK,EAAQ,KAEtBu6H,EAAAinC,EAAAjnC,qBACAQ,EAAAymC,EAAAzmC,kBAuKAtmG,EAAA93B,QArGA,SAAAshF,EAAA/b,EAAAyjG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAkBA,IAjBA,IAAA/vH,EAvBA,SAAAgoC,EAAA/b,GACA,IAAA+jG,EAAA,GAkBA,OAjBA/jG,EAAAjsB,KAAAgoC,GAAAxxE,IAAA,SAAA8d,GACA07I,EAAAloK,KAAA,CACAu5E,IAAA,IACA/sD,UAEG/iB,OAAA,SAAA42E,EAAAE,GACH2nF,EAAAloK,KAAA,CACAu5E,IAAA,IACA/sD,IAAA+zD,EACAmnF,KAAArnF,MAEG/rE,OAAA,SAAAkY,GACH07I,EAAAloK,KAAA,CACAu5E,IAAA,IACA/sD,UAEGm9C,UACHu+F,EAIAC,CAAAjoF,EAAA/b,GAMAikG,EAAA,GACAC,EAAA,GAEAC,EAAA,GACAC,EAAA,GACA3uJ,EAAA,GACA4uJ,EAAA,GACAC,EAAA,GACAC,EAAAlsC,EAAAsrC,EAAA3jG,EAAA6jG,GACAW,EAAAnsC,EAAAurC,EAAA7nF,EAAA+nF,GAEAnsK,EAAA,EAAiBA,EAAAo8C,EAAAl8C,OAAiBF,IAAA,CAClC,IAAA8sK,EAAA1wH,EAAAp8C,GACA+sK,GAAA,EAGA,OAAAD,EAAArvF,KACA,QACA,IAAAuvF,EAAA5oF,EAAAtlC,cAAAguH,EAAAp8I,KACAs4I,EAAA3gG,EAAAvpB,cAAAguH,EAAAlB,OAEA/7I,MAAAm9I,EAAA,KAAAn9I,MAAAm9I,EAAA,OACAA,EAAAhE,EAAA5pK,SAGAktK,EAAApoK,KAAA8oK,GACAT,EAAAroK,KAAA8kK,GACAwD,EAAAtoK,KAAA4nK,EAAAgB,EAAAp8I,MACA+7I,EAAAvoK,KAAA6nK,EAAAe,EAAAlB,OACAe,EAAAzoK,KAAAmkE,EAAA9tB,YAAAuyH,EAAAlB,OACA,MAEA,QACA,IAAAl7I,EAAAo8I,EAAAp8I,IACA47I,EAAApoK,KAAA8nK,EAAAzmF,YAAA,CAAAld,EAAAzlE,IAAAgqK,EAAA3rC,iBAAA,GAAAvwG,GAAA23C,EAAAzlE,IAAAgqK,EAAA3rC,iBAAA,GAAAvwG,MACA67I,EAAAroK,KAAAmkE,EAAAvpB,cAAApuB,GAAAtxB,SACAotK,EAAAtoK,KAAAg9H,EAAA0rC,EAAAZ,EAAA3jG,EAAA33C,IACA+7I,EAAAvoK,KAAA6nK,EAAAr7I,IACAi8I,EAAAzoK,KAAAmkE,EAAA9tB,YAAA7pB,IACA,MAEA,QACAA,EAAAo8I,EAAAp8I,IAAA,IACAwlB,EAAAkuC,EAAA7pC,YAAA7pB,GAGAwlB,IAAAxlB,GACA47I,EAAApoK,KAAAkgF,EAAAtlC,cAAApuB,IACA67I,EAAAroK,KAAA+nK,EAAA1mF,YAAA,CAAAnB,EAAAxhF,IAAAiqK,EAAA5rC,iBAAA,GAAAvwG,GAAA0zD,EAAAxhF,IAAAiqK,EAAA5rC,iBAAA,GAAAvwG,MACA87I,EAAAtoK,KAAA4nK,EAAAp7I,IACA+7I,EAAAvoK,KAAAg9H,EAAA2rC,EAAAZ,EAAA7nF,EAAA1zD,IACAi8I,EAAAzoK,KAAAgyC,IAEA62H,GAAA,EAMAA,IACAjvJ,EAAA5Z,KAAA4oK,GACAJ,EAAAxoK,KAAAwoK,EAAAxsK,SAMAwsK,EAAA/8I,KAAA,SAAA7pB,EAAAC,GACA,OAAA4mK,EAAA7mK,GAAA6mK,EAAA5mK,KAEA,IAAAknK,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEA,IAAArtK,EAAA,EAAiBA,EAAA0sK,EAAAxsK,OAA0BF,IAC3C0wB,EAAAg8I,EAAA1sK,GACAitK,EAAAjtK,GAAAssK,EAAA57I,GACAw8I,EAAAltK,GAAAusK,EAAA77I,GACAy8I,EAAAntK,GAAAwsK,EAAA97I,GACA08I,EAAAptK,GAAAysK,EAAA/7I,GACA28I,EAAArtK,GAAA8d,EAAA4S,GAGA,OACAsjD,QAAAi5F,EACAtpG,KAAAupG,EACA3B,iBAAA4B,EACA3B,cAAA4B,EACAtvJ,OAAAuvJ,mBCpJA,IAAAC,EAAA,CACArjD,QAAA,SAAAyJ,GAIA,IAHA,IAAA/iG,EAAA,EACAb,EAAA,EAEA9vB,EAAA,EAAmBA,EAAA0zH,EAAAxzH,OAAkBF,IACrC6vB,MAAA6jG,EAAA1zH,MACA2wB,GAAA+iG,EAAA1zH,GACA8vB,KAKA,WAAAA,EAAAT,IAAAsB,EAAAb,GAEAa,IAAA,SAAA+iG,GAGA,IAFA,IAAA/iG,EAAA,EAEA3wB,EAAA,EAAmBA,EAAA0zH,EAAAxzH,OAAkBF,IAErC2wB,GAAA+iG,EAAA1zH,IAAA,EAGA,OAAA2wB,GAEApf,IAAA,SAAAmiH,GAGA,IAFA,IAAAniH,GAAAG,IAEA1R,EAAA,EAAmBA,EAAA0zH,EAAAxzH,OAAkBF,IACrC0zH,EAAA1zH,GAAAuR,MAAAmiH,EAAA1zH,IAIA,OAAAuwB,SAAAhf,KAAA8d,KAEAhe,IAAA,SAAAqiH,GAGA,IAFA,IAAAriH,EAAAK,IAEA1R,EAAA,EAAmBA,EAAA0zH,EAAAxzH,OAAkBF,IACrC0zH,EAAA1zH,GAAAqR,MAAAqiH,EAAA1zH,IAIA,OAAAuwB,SAAAlf,KAAAge,KAIAk+I,QAAA,SAAA75C,GACA,OAAAA,EAAA,KAIA85C,EAAA,SAAA95C,EAAA3xH,GACA,OAAAqP,KAAAgQ,MAAAsyG,EAAAxzH,OAAA,IAuCA06B,EAAA93B,QApCA,SAAAmrE,GACA,OACAA,aACA1gC,iBAAA,EACAf,MAAA,SAAAh5B,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACA+zJ,EAAAh0J,EAAA5Q,IAAA,YACAyK,EAAAmG,EAAAL,iBAEA,mBAAA9F,EAAArL,MAAAwlK,EAAA,CACA,IAQAiG,EARAn2E,EAAAjqF,EAAAqgC,cACAnU,EAAAlsB,EAAAwrF,aAAAvB,GACAl8C,EAAAk8C,EAAAzzC,YAEArC,EAAApG,EAAA,GAAAA,EAAA,GACAwC,EAAAxsC,KAAAgQ,MAAAnd,EAAA6rB,QAAA0xB,GAEA5D,EAAA,IAGA,kBAAA4pH,EACAiG,EAAAH,EAAA9F,GACW,oBAAAA,IACXiG,EAAAjG,GAGAiG,GAEAj6J,EAAA85B,QAAArpC,EAAAy5C,WAAAz5C,EAAA8pC,aAAAxU,EAAAkV,KAAA,EAAAmP,EAAA6vH,EAAAD,0BCtGA,IAAAlnK,EAAaH,EAAQ,KAErBunK,EAAgBvnK,EAAQ,KAqBxB,SAAAuqG,EAAA1tG,GACA0qK,EAAA5tK,KAAA2C,KAAAO,GAGA0tG,EAAA/xG,UAAA,CACAyB,YAAAswG,EACA1uG,KAAA,cAMA4c,WAAA,UAOA8uB,YAAA,WACA,OAAAjrC,KAAA4mK,eAAA,eAAA5mK,KAAA4mK,eAAA,YAAA5mK,KAAAi9F,QAAA,MAQAtsF,aAAA,SAAA0a,GACA,IAAA6/I,EAAAlrK,KAAAi9F,QAAA,KACAkuE,EAAAnrK,KAAAi9F,QAAA,KACA,OAAAiuE,EAAAhqI,QAAAgqI,EAAAz7D,aAAApkF,EAAA,MAAA8/I,EAAAjqI,QAAAiqI,EAAA17D,aAAApkF,EAAA,MAQAq3C,YAAA,SAAAlhE,GACA,OAAAxB,KAAAi9F,QAAA,KAAAv6B,YAAAlhE,EAAA,KAAAxB,KAAAi9F,QAAA,KAAAv6B,YAAAlhE,EAAA,KAQAshF,YAAA,SAAAthF,EAAA4pK,EAAA7uI,GACA,IAAA0mD,EAAAjjF,KAAAi9F,QAAA,KACA/Z,EAAAljF,KAAAi9F,QAAA,KAIA,OAHA1gE,KAAA,IACA,GAAA0mD,EAAA8T,cAAA9T,EAAAtgB,YAAAnhE,EAAA,KACA+6B,EAAA,GAAA2mD,EAAA6T,cAAA7T,EAAAvgB,YAAAnhE,EAAA,KACA+6B,GAQAulG,UAAA,SAAAtgI,EAAA+6B,GACA,IAAA8uI,EAAArrK,KAAAi9F,QAAA,KAAAtgE,MACA2uI,EAAAtrK,KAAAi9F,QAAA,KAAAtgE,MACA4uI,EAAAF,EAAAjqH,YACAoqH,EAAAF,EAAAlqH,YACApxC,EAAAq7J,EAAAr5J,MAAAxQ,EAAA,IACAyO,EAAAq7J,EAAAt5J,MAAAxQ,EAAA,IAIA,OAHA+6B,KAAA,IACA,GAAA5tB,KAAAC,IAAAD,KAAAG,IAAAH,KAAAC,IAAA28J,EAAA,GAAAA,EAAA,IAAAv7J,GAAArB,KAAAG,IAAAy8J,EAAA,GAAAA,EAAA,KACAhvI,EAAA,GAAA5tB,KAAAC,IAAAD,KAAAG,IAAAH,KAAAC,IAAA48J,EAAA,GAAAA,EAAA,IAAAv7J,GAAAtB,KAAAG,IAAA08J,EAAA,GAAAA,EAAA,KACAjvI,GAQAsmC,YAAA,SAAAx3C,EAAAkR,GACA,IAAA0mD,EAAAjjF,KAAAi9F,QAAA,KACA/Z,EAAAljF,KAAAi9F,QAAA,KAIA,OAHA1gE,KAAA,IACA,GAAA0mD,EAAArgB,YAAAqgB,EAAAwsB,aAAApkF,EAAA,KACAkR,EAAA,GAAA2mD,EAAAtgB,YAAAsgB,EAAAusB,aAAApkF,EAAA,KACAkR,GAOA65D,aAAA,SAAAz0C,GACA,OAAA3hD,KAAAi9F,QAAA,MAAAt7C,EAAA3V,IAAA,WAGAnoC,EAAA9C,SAAAktG,EAAAg9D,GACA,IAAA7pI,EAAA6sE,EACA91E,EAAA93B,QAAA+gC,mBC1HA,IAAAv9B,EAAaH,EAAQ,KA2BrB,SAAA+nK,EAAAz/H,GACA,OAAAhsC,KAAA0rK,MAAA1/H,GAQA,IAAAi/H,EAAA,SAAA1qK,GACAP,KAAA0rK,MAAA,GACA1rK,KAAA2rK,SAAA,GAKA3rK,KAAAO,QAAA,IAGA0qK,EAAA/uK,UAAA,CACAyB,YAAAstK,EACA1rK,KAAA,YAOA09F,QAAA,SAAAjxD,GACA,OAAAhsC,KAAA0rK,MAAA1/H,IAOAovD,QAAA,WACA,OAAAv3F,EAAAhH,IAAAmD,KAAA2rK,SAAAF,EAAAzrK,OAMA4mK,eAAA,SAAA9lH,GAEA,OADAA,IAAAp6C,cACA7C,EAAApH,OAAAuD,KAAAo7F,UAAA,SAAAz5C,GACA,OAAAA,EAAAhlB,MAAAp9B,OAAAuhD,KAQA0vD,QAAA,SAAA7uD,GACA,IAAA3V,EAAA2V,EAAA3V,IACAhsC,KAAA0rK,MAAA1/H,GAAA2V,EAEA3hD,KAAA2rK,SAAAlqK,KAAAuqC,IAQA22B,YAAA,SAAAjgE,GACA,OAAA1C,KAAA4rK,kBAAAlpK,EAAA,gBAQAkgE,YAAA,SAAAlgE,GACA,OAAA1C,KAAA4rK,kBAAAlpK,EAAA,gBAEAkpK,kBAAA,SAAAC,EAAAtlK,GAIA,IAHA,IAAAulK,EAAA9rK,KAAA2rK,SACAI,EAAAF,aAAAxvK,MAAA,MAEAkB,EAAA,EAAmBA,EAAAuuK,EAAAruK,OAAoBF,IAAA,CACvC,IAAAyuC,EAAA8/H,EAAAvuK,GACAokD,EAAA3hD,KAAA0rK,MAAA1/H,GACA+/H,EAAA//H,GAAA2V,EAAAp7C,GAAAslK,EAAA7/H,IAGA,OAAA+/H,IAGA,IAAA3qI,EAAA6pI,EACA9yI,EAAA93B,QAAA+gC,mBCvHA,IAAAv9B,EAAaH,EAAQ,KAErB0+D,EAAW1+D,EAAQ,KAgCnBwqG,EAAA,SAAAliE,EAAArP,EAAAqvI,EAAAjoH,EAAAnkC,GACAwiD,EAAA/kE,KAAA2C,KAAAgsC,EAAArP,EAAAqvI,GAUAhsK,KAAAT,KAAAwkD,GAAA,QASA/jD,KAAA4f,YAAA,UAGAsuF,EAAAhyG,UAAA,CACAyB,YAAAuwG,EAKAnlG,MAAA,EAQA+tF,gBAAA,KAMArmF,MAAA,KACAmzD,aAAA,WACA,IAAAhkD,EAAA5f,KAAA4f,SACA,cAAAA,GAAA,WAAAA,GAWAo3E,gBAAA,SAAAhqE,GACA,IAAAqrC,EAAAr4D,KAAAohD,YAIA,OAHAiX,EAAA,GAAAr4D,KAAA+2F,cAAA1+B,EAAA,IACAA,EAAA,GAAAr4D,KAAA+2F,cAAA1+B,EAAA,IACArrC,GAAAqrC,EAAA,GAAAA,EAAA,IAAAA,EAAAwa,UACAxa,GAEA+9B,aAAA,WACAp2F,KAAA02B,KAAA0/D,gBAMAvzB,YAAA,SAAAx3C,EAAAe,GACA,OAAApsB,KAAA4iE,YAAA5iE,KAAAyvG,aAAApkF,EAAA,MAAArrB,KAAAgsC,IAAA,MAAA5f,IASAqjF,aAAA,KAQA1Y,cAAA,MAEAlzF,EAAA9C,SAAAmtG,EAAA9rC,GACA,IAAAhhC,EAAA8sE,EACA/1E,EAAA93B,QAAA+gC,mBC/HA19B,EAAQ,KAER,IAuBA09B,EAvBqB19B,EAAQ,KAuB7B/C,OAAA,CACApB,KAAA,OACAyb,aAAA,kBACAwrB,WAAA,MAKA91B,iBAAA,KACA41B,cAAA,CACAtP,MAAA,EACAxe,OAAA,EACAD,EAAA,EACAvJ,KAAA,MACAE,IAAA,GACAC,MAAA,MACAC,OAAA,GAEA68J,cAAA,EAGA9+J,gBAAA,gBACA+kI,YAAA,EACAl8G,YAAA,UAIAmC,EAAA93B,QAAA+gC,mBCpDA19B,EAAQ,KAERA,EAAQ,sBCFR,IAAAG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtB6oE,EAAkB7oE,EAAQ,KAE1BkuE,EAAeluE,EAAQ,KAEvButI,EAA0BvtI,EAAQ,KAqBlCwoK,EAAA,wCACAC,EAAA,0BAQAC,EAAAx6F,EAAAjxE,OAAA,CACApB,KAAA,gBACAuyE,iBAAA,uBAKAjgE,OAAA,SAAAqyC,EAAAz5C,EAAAtC,EAAAsJ,GACAzR,KAAAkH,MAAAkzD,YACA,IAAAiyG,EAAArsK,KAAAssK,WAIA,GAHAtsK,KAAAssK,WAAA,IAAA1nK,EAAA+Y,MACA3d,KAAAkH,MAAAiJ,IAAAnQ,KAAAssK,YAEApoH,EAAA/jD,IAAA,SAIA,IAAA4iF,EAAA7+B,EAAAm5B,mBACAr+D,EAAAiyH,EAAAjyH,OAAA+jE,EAAA7+B,GACA4pB,EAAA,IAAAvB,EAAAroB,EAAAllC,GACAnb,EAAAjF,KAAAstK,EAAAp+F,EAAA39D,IAAA29D,GAEA9tE,KAAAssK,WAAAn8J,IAAA29D,EAAAb,YAEAppE,EAAAjF,KAAAutK,EAAA,SAAA5rK,GACA2jD,EAAA/jD,IAAAI,EAAA,UACAP,KAAA,IAAAO,GAAA2jD,EAAA6+B,IAEK/iF,MACL4E,EAAA2lB,gBAAA8hJ,EAAArsK,KAAAssK,WAAApoH,GACAkoH,EAAA7zG,UAAAv4D,KAAA,SAAAkkD,EAAAz5C,EAAAtC,EAAAsJ,KAEAsE,OAAA,WACA/V,KAAAusK,iBAAA,MAQAC,WAAA,SAAAtoH,EAAA6+B,GACA,IAAAphC,EAAAuC,EAAAvC,KAEA,IAAAA,EAAAhlB,MAAAwnB,UAAA,CAIA,IAAAsoH,EAAAvoH,EAAA13C,SAAA,aACAuhE,EAAA0+F,EAAAjgK,SAAA,aACAkgK,EAAA3+F,EAAA5tE,IAAA,SACAusK,EAAA7oK,EAAAvF,QAAAouK,KAAA,CAAAA,GAaA,IAZA,IAAAt9D,EAAArsB,EAAAryE,iBAAAsyE,UACApf,EAAAjiB,EAAAiiB,eACA+oG,EAAA,EACAzpG,EAAAvhB,EAAAmhB,eAAA,CACAC,UAAA0pG,IAEA9tG,EAAA,GACAC,EAAA,GAGAzoC,EAAA43C,EAAAV,eAEA9vE,EAAA,EAAmBA,EAAA2lE,EAAAzlE,OAAwBF,IAAA,CAC3C,IAAA0wE,EAAAtsB,EAAAo1C,cAAA7zB,EAAA3lE,GAAAklE,OAEAmB,GACAjF,EAAA,GAAAsP,EACAtP,EAAA,GAAAywC,EAAAn/F,EACA2uD,EAAA,GAAAqP,EACArP,EAAA,GAAAwwC,EAAAn/F,EAAAm/F,EAAA1nG,SAEAi3D,EAAA,GAAAywC,EAAAp/F,EACA2uD,EAAA,GAAAsP,EACArP,EAAA,GAAAwwC,EAAAp/F,EAAAo/F,EAAA3nG,MACAm3D,EAAA,GAAAqP,GAGA,IAAA2+F,EAAAD,IAAAD,EAAAjvK,OACAklD,EAAAugB,EAAA3lE,GAAAolD,UAEA3iD,KAAAssK,WAAAn8J,IAAA,IAAAvL,EAAAuZ,KAAAvZ,EAAA0iB,qBAAA,CACAuD,KAAA,MAAA83B,EAAA,QAAAugB,EAAA3lE,GAAAolD,UAAA,KACAn7B,MAAA,CACAC,GAAAk3C,EAAA,GACAh3C,GAAAg3C,EAAA,GACAj3C,GAAAk3C,EAAA,GACAh3C,GAAAg3C,EAAA,IAEA7uD,MAAAlM,EAAArF,SAAA,CACA+hB,OAAAmsJ,EAAAE,IACSz2I,GACTprB,QAAA,SAUA8hK,WAAA,SAAA3oH,EAAA6+B,GACA,IAAAphC,EAAAuC,EAAAvC,KAEA,IAAAA,EAAAhlB,MAAAwnB,UAAA,CAIA,IAAA2oH,EAAA5oH,EAAA13C,SAAA,aACA66J,EAAAyF,EAAAtgK,SAAA,aACAugK,EAAA1F,EAAAlnK,IAAA,SACAivG,EAAArsB,EAAAryE,iBAAAsyE,UACA9f,EAAAvhB,EAAAmhB,eAAA,CACAC,UAAA+pG,EACA1gJ,OAAA,IAGA,GAAA82C,EAAAzlE,OAAA,CAMA,IAAAuvK,EAAAD,EAAAtvK,OACAwvK,EAAAjtK,KAAAusK,iBACAW,EAAArpK,EAAAV,gBACAypK,EAAA,EAEA,GAAAK,EACA,QAAA1vK,EAAA,EAAqBA,EAAA2lE,EAAAzlE,OAAwBF,IAAA,CAC7C,IAAA4vK,EAAAF,EAAA9sK,IAAA+iE,EAAA3lE,GAAAolD,WAEA,SAAAwqH,EAAA,CACAP,GAAAO,GAAAH,EAAA,GAAAzvK,GAAAyvK,EACA,OAKA,IAAA/rG,EAAAtf,EAAAo1C,cAAA7zB,EAAA,GAAAT,OACAxrC,EAAAowI,EAAAzjE,eACAmpE,EAAAlpK,EAAAvF,QAAAyuK,KAAA,CAAAA,GAEA,IAAAxvK,EAAA,EAAmBA,EAAA2lE,EAAAzlE,OAAwBF,IAAA,CAC3C,IACAyS,EACAC,EACAxI,EACAC,EAJAumE,EAAAtsB,EAAAo1C,cAAA7zB,EAAA3lE,GAAAklE,OAMA9gB,EAAAiiB,gBACA5zD,EAAAixD,EACAhxD,EAAAm/F,EAAAn/F,EACAxI,EAAAwmE,EAAAj+D,EACAtI,EAAA0nG,EAAA1nG,OACAu5D,EAAAjxD,EAAAvI,IAEAuI,EAAAo/F,EAAAp/F,EACAC,EAAAgxD,EACAx5D,EAAA2nG,EAAA3nG,MAEAw5D,EAAAhxD,GADAvI,EAAAumE,EAAAh+D,IAIA,IAAA0yC,EAAAugB,EAAA3lE,EAAA,GAAAolD,UACA,MAAAA,GAAAuqH,EAAAhtK,IAAAyiD,EAAAiqH,GAEA5sK,KAAAssK,WAAAn8J,IAAA,IAAAvL,EAAAsZ,KAAA,CACA2M,KAAA,MAAA83B,EAAA,QAAAA,EAAA,KACAn7B,MAAA,CACAxX,IACAC,IACAxI,QACAC,UAEAqI,MAAAlM,EAAArF,SAAA,CACAgiB,KAAAusJ,EAAAH,IACS31I,GACTlsB,QAAA,KAGA6hK,KAAA,GAAAI,EAGAhtK,KAAAusK,iBAAAW,OAGAd,EAAAzrK,OAAA,CACApB,KAAA,UAEA6sK,EAAAzrK,OAAA,CACApB,KAAA,2BCvOA,IAAA+1B,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErB48C,EAAe58C,EAAQ,KAEvBsb,EAAAshC,EAAAthC,OACAk3E,EAAA51C,EAAA41C,YAEAxyF,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAsBR4xB,EAAAlZ,eAAAvY,EAAAjC,MAAAod,EAAA,QAEAsW,EAAAlZ,eAAA85E,GACA5gE,EAAAhb,eAAA,CACAkxD,WAAA,MACAzhC,MAAA,SAAAh5B,GAEAA,EAAAC,UAAAkrC,UAAA,gDC5CA,IAqBA9a,EArBoB19B,EAAQ,KAqB5B/C,OAAA,CACApB,KAAA,aACAyb,aAAA,iBACAoyJ,cAAA,OAKApgI,eAAA,WAEA,QAAAhtC,KAAAG,IAAA,UAAAH,KAAAG,IAAA,gBAMA8sC,wBAAA,WAEA,IAAA6nH,EAAA90J,KAAAG,IAAA,wBACA8hI,EAAAjiI,KAAAG,IAAA,kBAMA,OAJA8hI,EAAA6yB,IACAA,EAAA7yB,GAGA6yB,KAIA38H,EAAA93B,QAAA+gC,mBClDc19B,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAItB2+H,EAFc3+H,EAAQ,KAEtB2+H,SAEAr8F,EAAYtiC,EAAQ,KAEpB2pK,EAAmB3pK,EAAQ,KAE3B8Z,EAAW9Z,EAAQ,KAqBnB4pK,EAAA,+BAGAzpK,EAAAlD,OAAAqlC,EAAA9pC,UAAAmxK,GAEA,IAAAjsI,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,MACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACAnI,KAAAutK,gBAAAx8J,GAEA,IAAAy8J,EAAAz8J,EAAA5Q,IAAA,oBAMA,MAJA,gBAAAqtK,GAAA,UAAAA,IACAxtK,KAAAytK,aAAAztK,KAAA0tK,aAAA38J,EAAAtG,EAAAtC,GAAAnI,KAAA2tK,cAAA58J,EAAAtG,EAAAtC,IAGAnI,KAAAkH,OAEAmzD,yBAAA,SAAAtpD,EAAAtG,EAAAtC,GACAnI,KAAA4tK,SAEA5tK,KAAAutK,gBAAAx8J,IAEAupD,kBAAA,SAAAniD,EAAApH,EAAAtG,EAAAtC,GAEAnI,KAAA6tK,wBAAA11J,EAAApH,IAEAw8J,gBAAA,SAAAx8J,GACA,IAAA+8J,EAAA/8J,EAAAu8B,gBAAAkvC,OAEA,MAAAx8E,KAAAytK,cAAAK,EAAA9tK,KAAAytK,gBACAztK,KAAAytK,aAAAK,EAEA9tK,KAAA4tK,WAGAD,cAAA,SAAA58J,EAAAtG,EAAAtC,GACA,IAKA4lK,EALA7mK,EAAAlH,KAAAkH,MACA1F,EAAAuP,EAAAC,UACA2wE,EAAA3hF,KAAA2kE,MACAlC,EAAA1xD,EAAAL,iBACAmkF,EAAApyB,EAAAx3B,cAGA,gBAAAw3B,EAAAljE,KACAwuK,EAAAl5E,EAAAjxB,eACK,UAAAnB,EAAAljE,OACLwuK,EAAA,UAAAl5E,EAAA7oD,KAGA,IAAA00E,EAAA3vG,EAAAqV,qBAAArV,EAAA,KACAvP,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAAgB,GACA,GAAA3P,EAAAi6B,SAAAtqB,GAAA,CAIA,IAAA86D,EAAAzqE,EAAAs6C,aAAA3qC,GACA6N,EAAAo9B,EAAAqmB,EAAAljE,MAAAiC,EAAA2P,EAAA86D,GACAxjE,EAAAulK,EAAAvrG,EAAAljE,MAAAiC,EAAA2P,EAAA86D,EAAAjtD,EAAA+uJ,EAAArtD,GACAl/G,EAAAo7C,iBAAAzrC,EAAA1I,GACAvB,EAAAiJ,IAAA1H,GACAwlK,EAAAxlK,EAAAjH,EAAA2P,EAAA86D,EAAAjtD,EAAAjO,EAAAg9J,EAAA,UAAAtrG,EAAAljE,SACK2L,OAAA,SAAA00G,EAAAD,GACL,IAAAl3G,EAAAk5E,EAAA9kC,iBAAA8iE,GAEA,GAAAn+G,EAAAi6B,SAAAmkF,GAAA,CAKA,IAAA3zC,EAAAzqE,EAAAs6C,aAAA8jE,GACA5gG,EAAAo9B,EAAAqmB,EAAAljE,MAAAiC,EAAAo+G,EAAA3zC,GAEAxjE,EACA7D,EAAAgiB,YAAAne,EAAA,CACA+e,MAAAxI,GACS0hG,EAAAd,GAETn3G,EAAAulK,EAAAvrG,EAAAljE,MAAAiC,EAAAo+G,EAAA3zC,EAAAjtD,EAAA+uJ,EAAArtD,GAAA,GAGAl/G,EAAAo7C,iBAAAgjE,EAAAn3G,GAEAvB,EAAAiJ,IAAA1H,GACAwlK,EAAAxlK,EAAAjH,EAAAo+G,EAAA3zC,EAAAjtD,EAAAjO,EAAAg9J,EAAA,UAAAtrG,EAAAljE,WAlBA2H,EAAA6O,OAAAtN,KAmBKsN,OAAA,SAAA5E,GACL,IAAA1I,EAAAk5E,EAAA9kC,iBAAA1rC,GAEA,gBAAAsxD,EAAAljE,KACAkJ,GAAAylK,EAAA/8J,EAAAuvG,EAAAj4G,GAEAA,GAAA0lK,EAAAh9J,EAAAuvG,EAAAj4G,KAEK2iE,UACLprE,KAAA2kE,MAAAnjE,GAEAksK,aAAA,SAAA38J,EAAAtG,EAAAtC,GACAnI,KAAA4tK,SAEAQ,EAAAr9J,EAAA/Q,KAAAkH,QAEA2mK,wBAAA,SAAA11J,EAAApH,GACAq9J,EAAAr9J,EAAA/Q,KAAAkH,OAAA,IAEA4O,QAAAjS,EAAAJ,KACAsS,OAAA,SAAAtL,GACAzK,KAAA4tK,OAAAnjK,IAEAmjK,OAAA,SAAAnjK,GACA,IAAAvD,EAAAlH,KAAAkH,MACA1F,EAAAxB,KAAA2kE,MAEAl6D,KAAAtK,IAAA,cAAAqB,IAAAxB,KAAAytK,aACAjsK,EAAAs7C,kBAAA,SAAAr0C,GACA,WAAAA,EAAAlJ,KACA4uK,EAAA1lK,EAAA0I,UAAA1G,EAAAhC,GAEAylK,EAAAzlK,EAAA0I,UAAA1G,EAAAhC,KAIAvB,EAAAkzD,YAGAp6D,KAAA2kE,MAAA,QAIAqpG,EAAA,CACAp0C,YAAA,SAAAp4H,EAAA2P,EAAA86D,EAAAjtD,EAAA4kD,EAAA88C,EAAAz6F,GACA,IAAAlH,EAAA,IAAAna,EAAAsZ,KAAA,CACAsJ,MAAA3jB,EAAAlD,OAAA,GAA6Bqe,KAG7B,GAAA0hG,EAAA,CACA,IACA2tD,EAAAzqG,EAAA,iBACA0qG,EAAA,GAFAvvJ,EAAAyI,MAGA6mJ,GAAA,EACAC,EAAAD,GAAArvJ,EAAAqvJ,GACAzpK,EAAAqhB,EAAA,2BAAAlH,EAAA,CACAyI,MAAA8mJ,GACO5tD,EAAAvvG,GAGP,OAAA4N,GAEAilG,MAAA,SAAAxiH,EAAA2P,EAAA86D,EAAAjtD,EAAAuvJ,EAAA7tD,EAAAz6F,GAKA,IAAAq+E,EAAAtlF,EAAAs7D,WAAAt7D,EAAAu7D,SACAi0F,EAAA,IAAA5pK,EAAAkZ,OAAA,CACA0J,MAAA3jB,EAAArF,SAAA,CACA8lG,aACOtlF,KAGP,GAAA0hG,EAAA,CACA,IACA2tD,EAAAE,EAAA,eACAD,EAAA,GAFAE,EAAAhnJ,MAGA6mJ,GAAAE,EAAA,EAAAvvJ,EAAAs7D,WACAg0F,EAAAD,GAAArvJ,EAAAqvJ,GACAzpK,EAAAqhB,EAAA,2BAAAuoJ,EAAA,CACAhnJ,MAAA8mJ,GACO5tD,EAAAvvG,GAGP,OAAAq9J,IAIA,SAAAN,EAAA/8J,EAAAuvG,EAAAj4G,GAEAA,EAAAsH,MAAAqZ,KAAA,KACAxkB,EAAAgiB,YAAAne,EAAA,CACA+e,MAAA,CACA/f,MAAA,IAEGi5G,EAAAvvG,EAAA,WACH1I,EAAAO,QAAAP,EAAAO,OAAA+M,OAAAtN,KAIA,SAAA0lK,EAAAh9J,EAAAuvG,EAAAj4G,GAEAA,EAAAsH,MAAAqZ,KAAA,KACAxkB,EAAAgiB,YAAAne,EAAA,CACA+e,MAAA,CACAo2B,EAAAn1C,EAAA+e,MAAA68E,KAEGqc,EAAAvvG,EAAA,WACH1I,EAAAO,QAAAP,EAAAO,OAAA+M,OAAAtN,KAIA,IAAA2zC,EAAA,CACAw9E,YAAA,SAAAp4H,EAAA2P,EAAA86D,GACA,IAAAjtD,EAAAxd,EAAA66C,cAAAlrC,GACAs9J,EAkDA,SAAAxiG,EAAAyiG,GACA,IAAA7uJ,EAAAosD,EAAA9rE,IAAAmtK,IAAA,EACA,OAAA3+J,KAAAC,IAAAiR,EAAAlR,KAAAyb,IAAAskJ,EAAAjnK,OAAAkH,KAAAyb,IAAAskJ,EAAAhnK,SApDAinK,CAAA1iG,EAAAjtD,GAEA4vJ,EAAA5vJ,EAAAvX,MAAA,OACAonK,EAAA7vJ,EAAAtX,OAAA,OACA,OACAsI,EAAAgP,EAAAhP,EAAA4+J,EAAAH,EAAA,EACAx+J,EAAA+O,EAAA/O,EAAA4+J,EAAAJ,EAAA,EACAhnK,MAAAuX,EAAAvX,MAAAmnK,EAAAH,EACA/mK,OAAAsX,EAAAtX,OAAAmnK,EAAAJ,IAGAzqD,MAAA,SAAAxiH,EAAA2P,EAAA86D,GACA,IAAAjtD,EAAAxd,EAAA66C,cAAAlrC,GACA,OACAksC,GAAAr+B,EAAAq+B,GACAC,GAAAt+B,EAAAs+B,GACA+mD,GAAArlF,EAAAqlF,GACAzmD,EAAA5+B,EAAA4+B,EACA08B,WAAAt7D,EAAAs7D,WACAC,SAAAv7D,EAAAu7D,YAKA,SAAA0zF,EAAAxlK,EAAAjH,EAAA2P,EAAA86D,EAAAjtD,EAAAjO,EAAA6yD,EAAAkrG,GACA,IAAA3uJ,EAAA3e,EAAA4P,cAAAD,EAAA,SACAklE,EAAA70E,EAAA4P,cAAAD,EAAA,WACAs0H,EAAAx5D,EAAAz/D,SAAA,aACAiU,EAAAwrD,EAAAz/D,SAAA,sBAAAuiK,kBAEAD,GACArmK,EAAAo8B,SAAA,IAAA4gG,EAAAtlI,IAAA,uBAGAsI,EAAAq2E,SAAAj7E,EAAArF,SAAA,CACAgiB,KAAAL,EACAk2D,WACGovD,EAAAspC,oBACH,IAAAttF,EAAAxV,EAAA7oD,WAAA,UACAq+D,GAAAh5E,EAAAke,KAAA,SAAA86D,GACA,IAAA2gD,EAAAx+D,EAAA5kD,EAAAtX,OAAA,iBAAAsX,EAAAvX,MAAA,iBAEAqnK,GACAzsC,EAAA55H,EAAAsH,MAAA0Q,EAAAwrD,EAAA9rD,EAAApP,EAAAI,EAAAixH,GAGAx9H,EAAAsjB,cAAAzf,EAAAgY,GASA,IAAAuuJ,EAAAxxJ,EAAA7c,OAAA,CACApB,KAAA,WACAioB,MAAA,CACA4D,OAAA,IAEAiY,UAAA,SAAAxB,EAAAra,GAOA,IAJA,IAAA4D,EAAA5D,EAAA4D,OACA6jJ,EAAAjvK,KAAAkvK,aACAC,EAAAnvK,KAAAovK,WAEA7xK,EAAA,EAAmBA,EAAA6tB,EAAA3tB,OAAmBF,GAAA,EACtC0xK,EAAAjvK,KAAAovK,YAAAhkJ,EAAA7tB,EAAA4xK,GACAttI,EAAA0b,OAAA0xH,EAAA,GAAAA,EAAA,IACAptI,EAAA2b,OAAApyB,EAAA7tB,GAAA6tB,EAAA7tB,EAAA,OAKA,SAAA6wK,EAAAr9J,EAAA7J,EAAAu3E,GAEA,IAAAj9E,EAAAuP,EAAAC,UACAi+J,EAAA,GACAE,EAAA3tK,EAAA46C,UAAA,2BACA6yH,EAAA,EAAAE,GAAA3tK,EAAA46C,UAAA,kBACA,IAAA3zC,EAAA,IAAAumK,EAAA,CACAxnJ,MAAA,CACA4D,OAAA5pB,EAAA46C,UAAA,gBAEAqiC,gBACAywF,aAAAD,EACAG,WAAAD,IAEAjoK,EAAAiJ,IAAA1H,GAIA,SAAAA,EAAAsI,EAAAvP,GACA,IAAAw0B,EAAAx0B,EAAAoP,UAAA,gBAAApP,EAAAoP,UAAA,SACA6mB,EAAA1mB,EAAAvE,SAAA,aAAA20E,aAAA,yBACA14E,EAAAq2E,SAAArnD,GACAhvB,EAAAsH,MAAAyQ,KAAA,KACA/X,EAAAsH,MAAAwQ,OAAAyV,EACAvtB,EAAAsH,MAAA8P,UAAAre,EAAA46C,UAAA,YATAizH,CAAA5mK,EAAAsI,EAAAvP,GAYA22B,EAAA93B,QAAA+gC,mBCtVA,IAqBAkuI,EArBsB5rK,EAAQ,IAqB9BisJ,CAAA,uEACA,4IAEAvuH,EAAA,CACA2tI,gBAAA,SAAAx2F,GACA,IAAAxoE,EAAAu/J,EAAAtvK,KAAAu4E,GAEA,GAAAv4E,KAAAy0J,kBAAA,CACA,IAAA5xH,EAAA7iC,KAAAy0J,oBACA5xH,IAAA9yB,EAAA8yB,YAGA,OAAA9yB,IAGAooB,EAAA93B,QAAA+gC,mBCpCA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBA,EAAQ,KAERA,EAAQ,KAER,IAAA6rK,EAA6B7rK,EAAQ,KAErC8rK,EAAgB9rK,EAAQ,KAExB+rK,EAAgB/rK,EAAQ,KAExBqkH,EAAiBrkH,EAAQ,KAqBzB6rK,EAAA,QACAhwK,KAAA,kBACAwV,MAAA,mBACAxO,OAAA,kBACC,CACDhH,KAAA,YACAwV,MAAA,cACAxO,OAAA,UACC,CACDhH,KAAA,cACAwV,MAAA,gBACAxO,OAAA,cAEA+uB,EAAAhb,eAAAk1J,EAAA,QACAl6I,EAAAlZ,eAAAvY,EAAAjC,MAAA6tK,EAAA,QACAn6I,EAAAtb,kBAAA+tG,EAAA,yBClDA,IAAAzyF,EAAc5xB,EAAQ,KAEtB2pI,EAAuB3pI,EAAQ,KAE/BG,EAAaH,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAIxBqqB,EAFcrqB,EAAQ,KAEtBqqB,wBAEA2hJ,EAA0BhsK,EAAQ,KAIlC4iE,EAFoB5iE,EAAQ,KAE5B4iE,gBAoBAqpG,EAAAr6I,EAAA9Y,kBAAA,CACAjd,KAAA,aAEA+H,KAAA,SAAA0E,GACA2jK,EAAAn3G,WAAAx4D,KAAA,OAAAb,WAGAa,KAAA2pC,mBAAA,WACA,OAAA3pC,KAAAyqC,cAGAzqC,KAAA8wG,kBAAA9wG,KAAA4vK,yBAEA5vK,KAAA6vK,kBAAA7jK,IAGAi7B,YAAA,SAAAlM,GACA40I,EAAAp3G,UAAAv4D,KAAA,cAAA+6B,GACA/6B,KAAA8wG,kBAAA9wG,KAAA4vK,0BAEA3lI,eAAA,SAAAj+B,EAAAvB,GACA,OAAA4iI,EAAArtI,KAAA,YAEA4vK,sBAAA,WAKA,IAJA,IAAApuK,EAAAxB,KAAAyqC,aACA4rD,EAAA70F,EAAA8pC,aAAA,SACA9wB,EAAA,GAEAjd,EAAA,EAAAC,EAAAgE,EAAA6rB,QAAuC9vB,EAAAC,EAASD,IAChDid,EAAA/Y,KAAA,CACAlB,KAAAiB,EAAAgrC,QAAAjvC,GACA+B,MAAAkC,EAAArB,IAAAk2F,EAAA94F,GACA4zG,SAAA7qC,EAAA9kE,EAAAjE,EAAA,cAIA,OAAAid,GAGA5B,cAAA,SAAAzH,GACA,IAAA3P,EAAAxB,KAAAgR,UACAmH,EAAAw3J,EAAAp3G,UAAAv4D,KAAA,gBAAAmR,GAEA6c,EAAA,GAMA,OALAxsB,EAAA5C,KAAA4C,EAAA8pC,aAAA,kBAAAhsC,GACA0uB,EAAAvsB,KAAAnC,KAEA6Y,EAAAqU,QAAAuB,EAAAC,EAAA7c,EAAA3P,EAAAkwC,UAAAvxC,IAAA,qBACAgY,EAAA4mB,MAAAt9B,KAAA,WACA0W,GAEA03J,kBAAA,SAAA7jK,GAEAnH,EAAA+rB,gBAAA5kB,EAAA,sBACA,IAAA8jK,EAAA9jK,EAAA+jK,UACAC,EAAAhkK,EAAA8kB,SAAAi/I,UAEAD,EAAA94I,KAAA84I,EAAA94I,MAAAhrB,EAAA4rB,MAAAZ,KACAg5I,EAAAh5I,KAAAg5I,EAAAh5I,MAAAhrB,EAAA8kB,SAAA8G,MAAAZ,MAEAsP,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACAwpH,iBAAA,EACAxgD,gBAAA,EAEA8K,OAAA,cACA3R,OAAA,UAEA4pB,WAAA,EACAhqB,WAAA,GAEA21F,SAAA,EAEAC,eAAA,GAEAC,YAAA,GAEAC,mBAAA,EAKAC,iBAAA,EAEAC,kBAAA,EAEA14I,MAAA,CAEAiX,QAAA,EACA7X,MAAA,EAEApX,SAAA,SAMAmwJ,UAAA,CACA/4I,MAAA,EAEAv5B,OAAA,GAEAoqG,QAAA,GACAtwE,QAAA,EACApB,UAAA,CAEA1uB,MAAA,EACAlI,KAAA,UAGAk4B,UAAA,CACAy6G,YAAA,GAGAq+B,cAAA,YACAhqJ,gBAAA,cAGA1iB,EAAAvC,MAAAquK,EAAAD,GACA,IAAAtuI,EAAAuuI,EACAx3I,EAAA93B,QAAA+gC,mBC7JA,IAAAv9B,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBiB,EAAgBjB,EAAQ,KA2BxB,SAAA8sK,EAAA99J,EAAA3B,EAAA20J,EAAAv9J,GACA,IAAA3G,EAAAuP,EAAAC,UACAG,EAAAnR,KAAAmR,UACA5Q,EAAAiB,EAAAgrC,QAAAr7B,GACA++J,EAAAn/J,EAAA5Q,IAAA,kBACAgI,EAAA2P,eAAA,CACAvY,KAAA,kBACA3B,KAAA8U,EACAnS,OACAiyB,SAAAzhB,EAAA9J,KAEAzF,EAAA5C,KAAA,SAAAqvB,GACAwiJ,EAAAjvK,EAAAq7C,iBAAA5uB,GAAAzsB,EAAA66C,cAAApuB,GAAAld,EAAAsyE,WAAA7hF,EAAAgrC,QAAAve,IAAAiiJ,EAAAxK,KAaA,SAAA+K,EAAAhoK,EAAAuW,EAAAqkE,EAAA6sF,EAAAxK,GACA,IAAAgL,GAAA1xJ,EAAAs7D,WAAAt7D,EAAAu7D,UAAA,EAGA/2E,EAAA6/E,EAAA6sF,EAAA,EACAtwJ,EAAA,CAHAjR,KAAA6gC,IAAAkhI,GAGAltK,EAFAmL,KAAA2gC,IAAAohI,GAEAltK,GACAkiK,EACAj9J,EAAAk8B,UAAA8sF,KAAA,KACA7xG,aACGq2B,MAAA,aAAAxtC,EAAAke,KAAA,WAAA/G,GASH,SAAA+wJ,EAAAnvK,EAAAysB,GACArpB,EAAA+Y,MAAAtgB,KAAA2C,MACA,IAAAwuK,EAAA,IAAA5pK,EAAAkZ,OAAA,CACA6D,GAAA,IAEA8lJ,EAAA,IAAA7iK,EAAAqZ,SACAmL,EAAA,IAAAxkB,EAAAgZ,KAMA,SAAA07E,IACAmuE,EAAAr5J,OAAAq5J,EAAAmJ,YACAxnJ,EAAAhb,OAAAgb,EAAAwnJ,YAGA,SAAAp3E,IACAiuE,EAAAr5J,OAAAq5J,EAAAoJ,aACAznJ,EAAAhb,OAAAgb,EAAAynJ,aAZA7wK,KAAAmQ,IAAAq+J,GACAxuK,KAAAmQ,IAAAs3J,GACAznK,KAAAmQ,IAAAiZ,GACAppB,KAAA0hF,WAAAlgF,EAAAysB,GAAA,GAYAjuB,KAAA4J,GAAA,WAAA0vF,GAAA1vF,GAAA,SAAA4vF,GAAA5vF,GAAA,YAAA0vF,GAAA1vF,GAAA,WAAA4vF,GAGA,IAAAs3E,EAAAH,EAAAz0K,UAEA40K,EAAApvF,WAAA,SAAAlgF,EAAAysB,EAAA8iJ,GACA,IAAAvC,EAAAxuK,KAAAi5B,QAAA,GACAloB,EAAAvP,EAAAkwC,UACAu6B,EAAAzqE,EAAAs6C,aAAA7tB,GACAjP,EAAAxd,EAAA66C,cAAApuB,GACA+iJ,EAAAntK,EAAAlD,OAAA,GAAoCqe,IACpCgyJ,EAAAp5I,MAAA,KAEAm5I,IACAvC,EAAA3pI,SAAAmsI,GAGA,UAFAjgK,EAAAqS,WAAA,kBAGAorJ,EAAAhnJ,MAAAo2B,EAAA5+B,EAAAqlF,GACAz/F,EAAA+kB,UAAA6kJ,EAAA,CACAhnJ,MAAA,CACAo2B,EAAA5+B,EAAA4+B,IAEO7sC,EAAAkd,KAGPugJ,EAAAhnJ,MAAA+yD,SAAAv7D,EAAAs7D,WACA11E,EAAAgiB,YAAA4nJ,EAAA,CACAhnJ,MAAA,CACA+yD,SAAAv7D,EAAAu7D,WAESxpE,EAAAkd,KAGTrpB,EAAAgiB,YAAA4nJ,EAAA,CACAhnJ,MAAAwpJ,GACKjgK,EAAAkd,GAIL,IAAAqpF,EAAA91G,EAAA4P,cAAA6c,EAAA,SACAugJ,EAAA1vF,SAAAj7E,EAAArF,SAAA,CACAsqH,SAAA,QACAtoG,KAAA82F,GACGrrC,EAAAz/D,SAAA,aAAA20E,iBACHqtF,EAAA/tJ,WAAAwrD,EAAAz/D,SAAA,sBAAA20E,eACA,IAAAM,EAAAxV,EAAA7oD,WAAA,UAKA,SAAAk2E,IAGAk1E,EAAA/gK,eAAA,GACA+gK,EAAA9nJ,UAAA,CACAc,MAAA,CACAo2B,EAAA5+B,EAAA4+B,EAAA7sC,EAAA5Q,IAAA,iBAEK,kBAGL,SAAAq5F,IACAg1E,EAAA/gK,eAAA,GACA+gK,EAAA9nJ,UAAA,CACAc,MAAA,CACAo2B,EAAA5+B,EAAA4+B,IAEK,kBArBL6jC,GAAA+sF,EAAA7nJ,KAAA,SAAA86D,GAEAgvF,EAAAzwK,KAAAwB,EAAA66C,cAAApuB,GAAAld,EAAAsyE,WAAA,KAAAp1D,GAAAld,EAAA5Q,IAAA,kBAAA4Q,EAAA5Q,IAAA,cAsBAquK,EAAArkK,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UAEA8hE,EAAA9rE,IAAA,mBAAA4Q,EAAAqV,sBACAooJ,EAAA5kK,GAAA,YAAA0vF,GAAA1vF,GAAA,WAAA4vF,GAAA5vF,GAAA,WAAA0vF,GAAA1vF,GAAA,SAAA4vF,GAGAx5F,KAAAixK,aAAAzvK,EAAAysB,GAEArpB,EAAAsjB,cAAAloB,OAGA8wK,EAAAG,aAAA,SAAAzvK,EAAAysB,GACA,IAAA8hJ,EAAA/vK,KAAAi5B,QAAA,GACAi4I,EAAAlxK,KAAAi5B,QAAA,GACAloB,EAAAvP,EAAAkwC,UACAu6B,EAAAzqE,EAAAs6C,aAAA7tB,GAEAugD,EADAhtE,EAAA66C,cAAApuB,GACA2J,MACA0/E,EAAA91G,EAAA4P,cAAA6c,EAAA,SACArpB,EAAAgiB,YAAAmpJ,EAAA,CACAvoJ,MAAA,CACA4D,OAAAojD,EAAA6oC,YAAA,EAAA7oC,EAAAx+D,EAAAw+D,EAAAv+D,GAAA,CAAAu+D,EAAAx+D,EAAAw+D,EAAAv+D,GAAA,CAAAu+D,EAAAx+D,EAAAw+D,EAAAv+D,MAEGc,EAAAkd,GACHrpB,EAAAgiB,YAAAsqJ,EAAA,CACAnhK,MAAA,CACAC,EAAAw+D,EAAAx+D,EACAC,EAAAu+D,EAAAv+D,IAEGc,EAAAkd,GACHijJ,EAAAvqJ,KAAA,CACAuE,SAAAsjD,EAAAtjD,SACAgyD,OAAA,CAAA1O,EAAAx+D,EAAAw+D,EAAAv+D,GACA0R,GAAA,KAEA,IAAA2H,EAAA2iD,EAAAz/D,SAAA,SACA2kK,EAAAllG,EAAAz/D,SAAA,kBACA4kK,EAAAnlG,EAAAz/D,SAAA,aACA6kK,EAAAplG,EAAAz/D,SAAA,sBACA8qG,EAAA91G,EAAA4P,cAAA6c,EAAA,SACArpB,EAAAwjB,cAAA8oJ,EAAAnhK,MAAAmhK,EAAAzwJ,WAAA,GAAkE6I,EAAA6nJ,EAAA,CAClExoJ,aAAAnnB,EAAAkwC,UACA9oB,eAAAqF,EACAhF,YAAAznB,EAAAgrC,QAAAve,GACAvM,UAAA41F,EACAvxF,iBAAAyoD,EAAAwyD,QACG,CACHn8G,UAAA2pD,EAAA3pD,UACAC,kBAAA0pD,EAAAw0B,cACA3sB,QAAA70E,EAAA4P,cAAA6c,EAAA,aAEAijJ,EAAA9iK,OAAA8iK,EAAAL,cAAAvnJ,EAAAnpB,IAAA,QACA+wK,EAAAN,aAAAO,EAAAhxK,IAAA,QACA4vK,EAAA3hK,OAAA2hK,EAAAc,cAAAO,EAAAjxK,IAAA,QACA4vK,EAAAa,aAAAS,EAAAlxK,IAAA,QAEA4vK,EAAAn5J,SAAA,CACA2J,OAAA+2F,EACAjhC,QAAA70E,EAAA4P,cAAA6c,EAAA,aAEA8hJ,EAAAn5J,SAAAw6J,EAAA5kK,SAAA,aAAA6gE,gBACA0iG,EAAAtvJ,WAAA4wJ,EAAA7kK,SAAA,aAAA6gE,eACA,IAAA91C,EAAA65I,EAAAjxK,IAAA,UAEAo3B,IAAA,IAAAA,IACAA,EAAA,IAGAw4I,EAAAlrI,SAAA,CACAtN,YAIA1zB,EAAA9C,SAAA4vK,EAAA/rK,EAAA+Y,OAEA,IAyFAyjB,EAzFAz8B,EAAAhE,OAAA,CACApB,KAAA,MACA+H,KAAA,WACA,IAAAgqK,EAAA,IAAA1sK,EAAA+Y,MACA3d,KAAAuxK,aAAAD,GAEAz/J,OAAA,SAAAd,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAA,KAAA7T,OAAAoC,KAAA0S,IAAA,CAIA,IAAAlR,EAAAuP,EAAAC,UACA2wE,EAAA3hF,KAAA2kE,MACAz9D,EAAAlH,KAAAkH,MACAw+J,EAAAj7J,EAAAtK,IAAA,aACAqxK,GAAA7vF,EACA4uF,EAAAx/J,EAAA5Q,IAAA,iBACAsxK,EAAA5tK,EAAAjC,MAAA4uK,EAAAxwK,KAAA0S,IAAA3B,EAAA20J,EAAAv9J,GACAmqI,EAAAvhI,EAAA5Q,IAAA,gBAyBA,GAxBAqB,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA8d,GACA,IAAAyjJ,EAAA,IAAAf,EAAAnvK,EAAAysB,GAEAujJ,GAAA,UAAAjB,GACAmB,EAAA74I,UAAA,SAAA7W,GACAA,EAAAvU,eAAA,KAIA6kI,GAAAo/B,EAAA9nK,GAAA,QAAA6nK,GACAjwK,EAAAo7C,iBAAA3uB,EAAAyjJ,GACAxqK,EAAAiJ,IAAAuhK,KACKxmK,OAAA,SAAA42E,EAAAE,GACL,IAAA0vF,EAAA/vF,EAAA9kC,iBAAAmlC,GACA0vF,EAAAhwF,WAAAlgF,EAAAsgF,GACA4vF,EAAAvnK,IAAA,SACAmoI,GAAAo/B,EAAA9nK,GAAA,QAAA6nK,GACAvqK,EAAAiJ,IAAAuhK,GACAlwK,EAAAo7C,iBAAAklC,EAAA4vF,KACK37J,OAAA,SAAAkY,GACL,IAAAyjJ,EAAA/vF,EAAA9kC,iBAAA5uB,GACA/mB,EAAA6O,OAAA27J,KACKtmG,UAELs6F,GAAA8L,GAAAhwK,EAAA6rB,QAAA,GACA,UAAAkjJ,EAAA,CACA,IAAA/oJ,EAAAhmB,EAAA66C,cAAA,GACAuB,EAAAjvC,KAAAG,IAAA3G,EAAAuE,WAAAvE,EAAAwE,aAAA,EACAghH,EAAA9pH,EAAA7E,KAAAkI,EAAAymH,eAAAzmH,GACAA,EAAAwmH,YAAA1tH,KAAA2xK,gBAAAnqJ,EAAA61B,GAAA71B,EAAA81B,GAAAM,EAAAp2B,EAAA8yD,WAAA9yD,EAAA88E,UAAAqpB,EAAA58G,IAGA/Q,KAAA2kE,MAAAnjE,IAEAsU,QAAA,aACA67J,gBAAA,SAAAt0H,EAAAC,EAAAM,EAAA08B,EAAAgqB,EAAAxlG,EAAAiS,GACA,IAAAitG,EAAA,IAAAp5G,EAAAkZ,OAAA,CACA0J,MAAA,CACA61B,KACAC,KACA+mD,GAAA,EACAzmD,IACA08B,aACAC,SAAAD,EACAgqB,eAQA,OALA1/F,EAAA+kB,UAAAq0F,EAAA,CACAx2F,MAAA,CACA+yD,SAAAD,GAAAgqB,EAAA,MAAA31F,KAAA4U,GAAA,IAEKxS,EAAAjS,GACLk/G,GAMArtG,aAAA,SAAA0a,EAAAta,GACA,IACA+0H,EADA/0H,EAAAC,UACAqrC,cAAA,GAEA,GAAAypF,EAAA,CACA,IAAArrG,EAAApP,EAAA,GAAAy6G,EAAAzoF,GACA3iB,EAAArP,EAAA,GAAAy6G,EAAAxoF,GACAo9B,EAAA/rE,KAAAmtB,KAAArB,IAAAC,KACA,OAAAggD,GAAAorD,EAAAloF,GAAA88B,GAAAorD,EAAAzhC,OAKAlsE,EAAA93B,QAAA+gC,mBC5UA,IAAAwgC,EAAcl+D,EAAQ,KAEtB6oB,EAAAq1C,EAAAr1C,aACAN,EAAA21C,EAAA31C,UAEAuiD,EAAkB9qE,EAAQ,KAE1BG,EAAaH,EAAQ,KAqBrBimG,EAAA,EAAAh7F,KAAA4U,GACAuiJ,EAAAn3J,KAAA4U,GAAA,IA0HA4U,EAAA93B,QAxHA,SAAAmrE,EAAA/gE,EAAAtC,EAAAsJ,GACAhH,EAAA+pF,iBAAAhpB,EAAA,SAAAz6D,GACA,IAAAvP,EAAAuP,EAAAC,UACAqlF,EAAA70F,EAAA8pC,aAAA,SACA+gD,EAAAt7E,EAAA5Q,IAAA,UACAu6E,EAAA3pE,EAAA5Q,IAAA,UAEA0D,EAAAvF,QAAAo8E,KACAA,EAAA,GAAAA,IAGA72E,EAAAvF,QAAA+tF,KACAA,EAAA,CAAAA,MAGA,IAAA5kF,EAAAU,EAAAuE,WACAhF,EAAAS,EAAAwE,YACAoyC,EAAApwC,KAAAC,IAAAnH,EAAAC,GACA21C,EAAA9wB,EAAA8/D,EAAA,GAAA5kF,GACA61C,EAAA/wB,EAAA8/D,EAAA,GAAA3kF,GACA28F,EAAA93E,EAAAmuD,EAAA,GAAA37B,EAAA,GACAnB,EAAArxB,EAAAmuD,EAAA,GAAA37B,EAAA,GACAu7B,GAAAvpE,EAAA5Q,IAAA,cAAA2lK,EACAmK,EAAAl/J,EAAA5Q,IAAA,YAAA2lK,EACA8L,EAAA,EACApwK,EAAA5C,KAAAy3F,EAAA,SAAA/2F,IACA8tB,MAAA9tB,IAAAsyK,MAEA,IAAA1jJ,EAAA1sB,EAAAs3C,OAAAu9C,GAEAw7E,EAAAljK,KAAA4U,IAAA2K,GAAA0jJ,GAAA,EACAttE,EAAAvzF,EAAA5Q,IAAA,aACA2xK,EAAA/gK,EAAA5Q,IAAA,YACAmwK,EAAAv/J,EAAA5Q,IAAA,oBAEAw4C,EAAAn3C,EAAA42C,cAAAi+C,GACA19C,EAAA,KAEA,IAAAo5H,EAAApoE,EACAqoE,EAAA,EACAC,EAAA33F,EACAk+C,EAAAl0B,EAAA,KA+CA,GA9CA9iG,EAAA5C,KAAAy3F,EAAA,SAAA/2F,EAAA2uB,GACA,IAAA4vB,EAEA,GAAAzwB,MAAA9tB,GACAkC,EAAA86C,cAAAruB,EAAA,CACA4vB,MAAAjxB,IACA0tD,WAAA1tD,IACA2tD,SAAA3tD,IACA03E,YACAjnD,KACAC,KACA+mD,KACAzmD,EAAAk0H,EAAAllJ,IAAAgxB,QATA,EAgBAC,EADA,SAAAi0H,EACA,IAAA5jJ,GAAAoiJ,EAAAuB,EAAAvyK,EAAAuyK,EAEAloE,EAAAioE,GAGA3B,GACApyH,EAAAoyH,EACA8B,GAAA9B,GAEA+B,GAAA1yK,EAGA,IAAAi7E,EAAA03F,EAAAz5C,EAAA36E,EACAr8C,EAAA86C,cAAAruB,EAAA,CACA4vB,QACAy8B,WAAA23F,EACA13F,WACA+pB,YACAjnD,KACAC,KACA+mD,KACAzmD,EAAAk0H,EAAA7lJ,EAAA3sB,EAAAq5C,EAAA,CAAA0rD,EAAAzmD,QAEAq0H,EAAA13F,KAIAw3F,EAAApoE,GAAAioE,EAGA,GAAAG,GAAA,MACA,IAAAl0H,EAAA8rD,EAAAioE,EACApwK,EAAA5C,KAAAy3F,EAAA,SAAA/2F,EAAA2uB,GACA,IAAAb,MAAA9tB,GAAA,CACA,IAAA0f,EAAAxd,EAAA66C,cAAApuB,GACAjP,EAAA6+B,QACA7+B,EAAAs7D,aAAAk+C,EAAAvqG,EAAA4vB,EACA7+B,EAAAu7D,SAAAD,EAAAk+C,GAAAvqG,EAAA,GAAA4vB,UAIAg0H,EAAAE,EAAAC,EACAC,EAAA33F,EACA94E,EAAA5C,KAAAy3F,EAAA,SAAA/2F,EAAA2uB,GACA,IAAAb,MAAA9tB,GAAA,CACA,IAAA0f,EAAAxd,EAAA66C,cAAApuB,GACA4vB,EAAA7+B,EAAA6+B,QAAAoyH,IAAA3wK,EAAAuyK,EACA7yJ,EAAAs7D,WAAA23F,EACAjzJ,EAAAu7D,SAAA03F,EAAAz5C,EAAA36E,EACAo0H,GAAAz5C,EAAA36E,KAMA2wB,EAAAz9D,EAAA6sC,EAAAn2C,EAAAC,uBCnJA,IAAAw1B,EAAkBx5B,EAAQ,KAsB1B,SAAAwuK,EAAA5kK,EAAA+vC,EAAAC,EAAAM,EAAA46E,EAAAp6B,EAAAC,GAKA,SAAA8zE,EAAAl8H,EAAApI,EAAA8nB,EAAA6iE,GACA,QAAA7lG,EAAAsjB,EAAuBtjB,EAAAkb,EAASlb,IAGhC,GAFArlB,EAAAqlB,GAAA1iB,GAAA0lD,EAEAhjC,EAAAsjB,GAAAtjB,EAAA,EAAAkb,GAAAvgC,EAAAqlB,EAAA,GAAA1iB,EAAA3C,EAAAqlB,GAAA1iB,EAAA3C,EAAAqlB,GAAAjrB,OAEA,YADA0qK,EAAAz/I,EAAAgjC,EAAA,GAKAy8G,EAAAvkI,EAAA,EAAA8nB,EAAA,GAIA,SAAAy8G,EAAAvkI,EAAA8nB,GACA,QAAAhjC,EAAAkb,EAAqBlb,GAAA,IACrBrlB,EAAAqlB,GAAA1iB,GAAA0lD,IAEAhjC,EAAA,GAAArlB,EAAAqlB,GAAA1iB,EAAA3C,EAAAqlB,EAAA,GAAA1iB,EAAA3C,EAAAqlB,EAAA,GAAAjrB,SAH6BirB,MAS7B,SAAA0/I,EAAA/kK,EAAAglK,EAAAj1H,EAAAC,EAAAM,EAAA46E,GAQA,IAPA,IAAA+5C,EAAAD,EACA1jJ,OAAA6qB,UACA,EAKAl8C,EAAA,EAAA+nD,EAAAh4C,EAAA7P,OAAoCF,EAAA+nD,EAAO/nD,IAE3C,cAAA+P,EAAA/P,GAAAqiB,SAAA,CAIA,IAAA4yJ,EAAA7jK,KAAAyb,IAAA9c,EAAA/P,GAAA0S,EAAAqtC,GACA7/C,EAAA6P,EAAA/P,GAAAC,IACAqqG,EAAAv6F,EAAA/P,GAAAgxH,KACAkkD,EAAAD,EAAA50H,EAAAngD,EAAAkR,KAAAmtB,MAAA8hB,EAAAngD,EAAAoqG,IAAAjqD,EAAAngD,EAAAoqG,GAAA2qE,KAAA7jK,KAAAyb,IAAA9c,EAAA/P,GAAAyS,EAAAqtC,GAEAi1H,GAAAG,GAAAF,IAEAE,EAAAF,EAAA,KAGAD,GAAAG,GAAAF,IAEAE,EAAAF,EAAA,IAGAjlK,EAAA/P,GAAAyS,EAAAqtC,EAAAo1H,EAAAj6C,EACA+5C,EAAAE,GA1DAnlK,EAAA4f,KAAA,SAAA7pB,EAAAC,GACA,OAAAD,EAAA4M,EAAA3M,EAAA2M,IAmEA,IANA,IACA0lD,EADA+8G,EAAA,EAEAl1K,EAAA8P,EAAA7P,OACAk1K,EAAA,GACAC,EAAA,GAEAr1K,EAAA,EAAiBA,EAAAC,EAASD,KAC1Bo4D,EAAAroD,EAAA/P,GAAA0S,EAAAyiK,GAEA,GACAP,EAAA50K,EAAAC,GAAAm4D,GAGA+8G,EAAAplK,EAAA/P,GAAA0S,EAAA3C,EAAA/P,GAAAmK,OAGA22F,EAAAq0E,EAAA,GACAN,EAAA50K,EAAA,EAAAk1K,EAAAr0E,GAGA,IAAA9gG,EAAA,EAAiBA,EAAAC,EAASD,IAC1B+P,EAAA/P,GAAA0S,GAAAqtC,EACAs1H,EAAAnxK,KAAA6L,EAAA/P,IAEAo1K,EAAAlxK,KAAA6L,EAAA/P,IAIA80K,EAAAM,GAAA,EAAAt1H,EAAAC,EAAAM,EAAA46E,GACA65C,EAAAO,GAAA,EAAAv1H,EAAAC,EAAAM,EAAA46E,GAmHArgG,EAAA93B,QA/EA,SAAA0Q,EAAA6sC,EAAAwgD,EAAAC,GACA,IAEAhhD,EACAC,EAHA97C,EAAAuP,EAAAC,UACA6hK,EAAA,GAGAC,GAAA,EACAtxK,EAAA5C,KAAA,SAAAqvB,GACA,IAWAwgE,EACAC,EACA2oB,EACAxyF,EAdA7F,EAAAxd,EAAA66C,cAAApuB,GACAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GACA3E,EAAA2iD,EAAAz/D,SAAA,SAEAumK,EAAAzpJ,EAAAnpB,IAAA,aAAA8rE,EAAA9rE,IAAA,2BACAixK,EAAAnlG,EAAAz/D,SAAA,aACAwmK,EAAA5B,EAAAjxK,IAAA,UACA8yK,EAAA7B,EAAAjxK,IAAA,WACAuwK,GAAA1xJ,EAAAs7D,WAAAt7D,EAAAu7D,UAAA,EACA9/C,EAAA9rB,KAAA6gC,IAAAkhI,GACAh2I,EAAA/rB,KAAA2gC,IAAAohI,GAKArzH,EAAAr+B,EAAAq+B,GACAC,EAAAt+B,EAAAs+B,GACA,IAAA41H,EAAA,WAAAH,GAAA,UAAAA,EAEA,cAAAA,EACAtkF,EAAAzvE,EAAAq+B,GACAqxC,EAAA1vE,EAAAs+B,GACAz4B,EAAA,aACK,CACL,IAAA4C,GAAAyrJ,GAAAl0J,EAAA4+B,EAAA5+B,EAAAqlF,IAAA,EAAA5pE,EAAAzb,EAAA4+B,EAAAnjB,GAAA4iB,EACA11B,GAAAurJ,GAAAl0J,EAAA4+B,EAAA5+B,EAAAqlF,IAAA,EAAA3pE,EAAA1b,EAAA4+B,EAAAljB,GAAA4iB,EAIA,GAHAmxC,EAAAhnE,EAAA,EAAAgT,EACAi0D,EAAA/mE,EAAA,EAAA+S,GAEAw4I,EAAA,CAEA,IAAAxrJ,EAAAD,EAAAgT,GAAAu4I,EAAAp1H,EAAA5+B,EAAA4+B,GACAh2B,EAAAD,EAAA+S,GAAAs4I,EAAAp1H,EAAA5+B,EAAA4+B,GACAmjB,EAAAr5C,GAAA+S,EAAA,QAAAw4I,EAEAxkF,EAAA1tB,GAAAtmC,EAAA,QACAi0D,EAFA9mE,EAGAyvF,EAAA,EAAA5vF,EAAAE,GAAA,CAAAD,EAAAE,GAAA,CAAAm5C,EAHAn5C,IAMA/C,EAAAquJ,EAAA,SAAAz4I,EAAA,iBAGA,IAAA2qB,EAAA97B,EAAAE,UACAlG,EAAAgG,EAAAnpB,IAAA,UAAAs6B,EAAA,GAAAi2I,EAAA/hK,KAAA4U,IAAAmtJ,EAAA,EACAtnJ,EAAArY,EAAAiY,kBAAAiF,EAAA,WAAAzsB,EAAAgrC,QAAAve,GACA+0B,EAAA9lB,EAAA/d,gBAAAiK,EAAAg8B,EAAAvgC,EAAA,OACAiuJ,IAAAxvJ,EACAtE,EAAA4Y,MAAA,CACA5nB,EAAAy+E,EACAx+E,EAAAy+E,EACA9uE,SAAAmzJ,EACArrK,OAAAs7C,EAAAt7C,OACAlK,IAAAw1K,EACAzkD,KAAA0kD,EACA57D,aACAxyF,YACAm+E,cAAA,SACA93E,SAAA5H,EACA09G,OAAAkyC,GAGAA,GACAL,EAAApxK,KAAAud,EAAA4Y,UAIAk7I,GAAA/hK,EAAA5Q,IAAA,sBA3GA,SAAA0yK,EAAAx1H,EAAAC,EAAAM,EAAAwgD,EAAAC,GAIA,IAHA,IAAA80E,EAAA,GACAC,EAAA,GAEA71K,EAAA,EAAiBA,EAAAs1K,EAAAp1K,OAA4BF,IAC7Cs1K,EAAAt1K,GAAAyS,EAAAqtC,EACA81H,EAAA1xK,KAAAoxK,EAAAt1K,IAEA61K,EAAA3xK,KAAAoxK,EAAAt1K,IAOA,IAHA20K,EAAAkB,EAAA/1H,EAAAC,EAAAM,EAAA,EAAAwgD,EAAAC,GACA6zE,EAAAiB,EAAA91H,EAAAC,EAAAM,GAAA,EAAAwgD,EAAAC,GAEA9gG,EAAA,EAAiBA,EAAAs1K,EAAAp1K,OAA4BF,IAAA,CAC7C,IAAA85G,EAAAw7D,EAAAt1K,GAAA85G,WAEA,GAAAA,EAAA,CACA,IAAAj7E,EAAAi7E,EAAA,MAAAA,EAAA,MAEAw7D,EAAAt1K,GAAAyS,EAAAqtC,EACAg6D,EAAA,MAAAw7D,EAAAt1K,GAAAyS,EAAA,EAEAqnG,EAAA,MAAAw7D,EAAAt1K,GAAAyS,EAAA,EAGAqnG,EAAA,MAAAA,EAAA,MAAAw7D,EAAAt1K,GAAA0S,EACAonG,EAAA,MAAAA,EAAA,MAAAj7E,IAgFAi3I,CAAAR,EAAAx1H,EAAAC,EAAAM,EAAAwgD,EAAAC,qBCjOA,IAAA/oE,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAER,IAAA+gK,EAAmB/gK,EAAQ,KAE3BghK,EAAmBhhK,EAAQ,KAE3BA,EAAQ,KAuBR4xB,EAAAhb,eAAAmqJ,EAAA,qBACAnvI,EAAAlZ,eAAAsoJ,EAAA,6BClCA,IAAA9iC,EAA0Bl+H,EAAQ,KAuBlC09B,EArBkB19B,EAAQ,KAqB1B/C,OAAA,CACApB,KAAA,iBACAyb,aAAA,+CACAivB,eAAA,SAAAj+B,EAAAvB,GACA,OAAAm3H,EAAA5hI,KAAAypC,YAAAzpC,OAEAotK,cAAA,QACApgI,eAAA,WACA,IAAA0vC,EAAA18E,KAAAgM,OAAA0wE,YAEA,aAAAA,EAEA18E,KAAAgM,OAAAwwE,MAAA,IAAAx8E,KAAAG,IAAA,eAGAu8E,GAEAzvC,wBAAA,WACA,IAAA6nH,EAAA90J,KAAAgM,OAAA8oJ,qBAEA,aAAAA,EAEA90J,KAAAgM,OAAAwwE,MAAA,IAAAx8E,KAAAG,IAAA,wBAGA20J,GAEAxuH,cAAA,CACA51B,iBAAA,cACA8H,OAAA,EACAD,EAAA,EACAwpH,iBAAA,EACAxgD,gBAAA,EASAlqD,WAAA,GAGAmlD,OAAA,EAEAylD,eAAA,IAUAxqG,UAAA,CACA4+C,QAAA,OAOAl+C,EAAA93B,QAAA+gC,mBCvFA,IAAA9L,EAAc5xB,EAAQ,KAEtBg9E,EAAiBh9E,EAAQ,KAEzB4vK,EAAsB5vK,EAAQ,KAE9B6vK,EAAmB7vK,EAAQ,KAqB3B4xB,EAAA7Y,gBAAA,CACAld,KAAA,UACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UAEAhR,KAAAwzK,kBAAAhyK,EAAAuP,GAEA2wE,WAAAlgF,GACAxB,KAAAyzK,WAAA,GAEAp5G,yBAAA,SAAAtpD,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UAEAhR,KAAAwzK,kBAAAhyK,EAAAuP,GAEAoxE,yBAAA3gF,GACAxB,KAAAyzK,WAAA,GAEAn5G,kBAAA,SAAAgoB,EAAAvxE,EAAAtG,GACAzK,KAAAmnK,YAAA9kF,kBAAAC,EAAAvxE,EAAAC,WAEAhR,KAAAyzK,UAAAnxF,EAAAz0C,MAAA98B,EAAAC,UAAAqc,SAEAlb,gBAAA,SAAApB,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UAKA,GAFAhR,KAAAkH,MAAAmP,SAEArW,KAAAyzK,WAAAjyK,EAAA6rB,QAAA,MAAArtB,KAAAmnK,YAAAjlF,eACA,OACAh3E,QAAA,GAGA,IAAAgyC,EAAAq2H,IAAAxpI,MAAAh5B,GAEAmsC,EAAA2d,UACA3d,EAAA2d,SAAA,CACA5kB,MAAA,EACApI,IAAArsC,EAAA6rB,SACS7rB,GAGTxB,KAAAmnK,YAAAn0J,aAAAxR,IAGAgyK,kBAAA,SAAAhyK,EAAAuP,GACA,IAAAm2J,EAAAlnK,KAAAmnK,YAEA2G,EADA/8J,EAAAu8B,gBACAkvC,MAUA,OARA0qF,GAAA4G,IAAA9tK,KAAAytK,eACAvG,KAAAnxJ,SACAmxJ,EAAAlnK,KAAAmnK,YAAA2G,EAAA,IAAAwF,EAAA,IAAA5yF,EACA1gF,KAAAytK,aAAAK,EACA9tK,KAAAkH,MAAAkzD,aAGAp6D,KAAAkH,MAAAiJ,IAAA+2J,EAAAhgK,OACAggK,GAEAnxJ,OAAA,SAAAtL,EAAAtC,GACAnI,KAAAmnK,aAAAnnK,KAAAmnK,YAAApxJ,QAAA,GACA/V,KAAAmnK,YAAA,MAEArxJ,QAAA,gCC5FA,IAAAlR,EAAclB,EAAQ,KAItBg8C,EAFch8C,EAAQ,KAEtBg8C,aAEAhhC,EAA6Bhb,EAAQ,KAuBrCgwK,EAAA9uK,EAAAoiB,YAAA,CACAQ,MAAA,CACA4D,OAAA,MAEAuoJ,YAAA,KACAtwI,UAAA,SAAApkB,EAAAuI,GACA,IAAA4D,EAAA5D,EAAA4D,OACA2zB,EAAAv3B,EAAAu3B,KACA40H,EAAA3zK,KAAA2zK,YACAC,EAAAD,EAAAnsJ,MAIA,MAHAvI,EAAAre,WAAAqe,EAAAre,aAAAqe,IACA8/B,EAAA,GAZA,GAkBA,QAAAxhD,EAAA,EAAmBA,EAAA6tB,EAAA3tB,QAAmB,CACtC,IAAAuS,EAAAob,EAAA7tB,KACA0S,EAAAmb,EAAA7tB,KAEA6vB,MAAApd,IAAAod,MAAAnd,KAIA2jK,EAAA5jK,IAAA+uC,EAAA,KACA60H,EAAA3jK,IAAA8uC,EAAA,KACA60H,EAAAnsK,MAAAs3C,EAAA,GACA60H,EAAAlsK,OAAAq3C,EAAA,GACA40H,EAAAtwI,UAAApkB,EAAA20J,GAAA,MAGAj1F,WAAA,SAAA98C,GACA,IAAAra,EAAAxnB,KAAAwnB,MACA4D,EAAA5D,EAAA4D,OACA2zB,EAAAv3B,EAAAu3B,KAGA,GAFAA,EAAA,GArCA,EAuCA,CAIA/+C,KAAAsiC,aAAAT,GAEA,QAAAtkC,EAAA,EAAmBA,EAAA6tB,EAAA3tB,QAAmB,CACtC,IAAAuS,EAAAob,EAAA7tB,KACA0S,EAAAmb,EAAA7tB,KAEA6vB,MAAApd,IAAAod,MAAAnd,IAMA4xB,EAAA2qH,SAAAx8I,EAAA+uC,EAAA,KAAA9uC,EAAA8uC,EAAA,KAAAA,EAAA,GAAAA,EAAA,IAGA/+C,KAAAujC,iBAAA1B,KAEAgyI,cAAA,SAAA7jK,EAAAC,GAWA,IARA,IAAAuX,EAAAxnB,KAAAwnB,MACA4D,EAAA5D,EAAA4D,OACA2zB,EAAAv3B,EAAAu3B,KACA/a,EAAAr1B,KAAAG,IAAAiwC,EAAA,MACA3kB,EAAAzrB,KAAAG,IAAAiwC,EAAA,MAIA9wB,EAAA7C,EAAA3tB,OAAA,IAAyCwwB,GAAA,EAAUA,IAAA,CACnD,IAAA1wB,EAAA,EAAA0wB,EACA4yC,EAAAz1C,EAAA7tB,GAAAymC,EAAA,EACA88B,EAAA11C,EAAA7tB,EAAA,GAAA68B,EAAA,EAEA,GAAApqB,GAAA6wD,GAAA5wD,GAAA6wD,GAAA9wD,GAAA6wD,EAAA78B,GAAA/zB,GAAA6wD,EAAA1mC,EACA,OAAAnM,EAIA,YAIA,SAAAqlJ,IACAtzK,KAAAkH,MAAA,IAAAtC,EAAA+Y,MAGA,IAAAm2J,EAAAR,EAAAp3K,UAEA43K,EAAA5xF,aAAA,WACA,OAAAliF,KAAAw1G,cAQAs+D,EAAApyF,WAAA,SAAAlgF,GACAxB,KAAAkH,MAAAkzD,YACA,IAAA2nB,EAAA,IAAA2xF,EAAA,CACAhoJ,WAAA,EACA8yD,OAAA,YAEAuD,EAAAl9C,SAAA,CACAzZ,OAAA5pB,EAAA46C,UAAA,kBAGAp8C,KAAA+zK,WAAAhyF,EAAAvgF,GAEAxB,KAAAkH,MAAAiJ,IAAA4xE,GACA/hF,KAAAw1G,aAAA,MAGAs+D,EAAA9gK,aAAA,SAAAxR,GACA,IAAAxB,KAAAw1G,aAAA,CAIA,IAAApqF,EAAA5pB,EAAA46C,UAAA,gBACAp8C,KAAAkH,MAAA2xB,UAAA,SAAA7W,GACA,SAAAA,EAAAkjD,WAAA,CACA,IAAA1nE,EAAA,GAAAwkB,EAAAgyJ,SAAAhyJ,EAAAkjD,YACA+uG,EAAA,EAAAjyJ,EAAAkjD,WAAA,EACA95C,EAAA,IAAAyQ,aAAAzQ,EAAAysB,OAAAo8H,EAAAz2K,GAGAwkB,EAAA6iB,SAAA,SAAAzZ,OAIA0oJ,EAAA3xF,yBAAA,SAAA3gF,GACAxB,KAAAkH,MAAAkzD,YAEAp6D,KAAAu1G,oBAIA/zG,EAAA6rB,QAAA,KACArtB,KAAAw1G,eACAx1G,KAAAw1G,aAAA,IAAA92F,EAAA,CACA3T,QAAA,KAIA/K,KAAAkH,MAAAiJ,IAAAnQ,KAAAw1G,eAEAx1G,KAAAw1G,aAAA,MAIAs+D,EAAAzxF,kBAAA,SAAAC,EAAA9gF,GACA,IAAAugF,EAEA/hF,KAAAw1G,cACAzzB,EAAA,IAAA2xF,EAEA1zK,KAAAw1G,aAAA7K,eAAA5oB,GAAA,MAEAA,EAAA,IAAA2xF,EAAA,CACAhoJ,WAAA,EACA8yD,OAAA,UACAtZ,WAAAod,EAAArsC,MACA+9H,SAAA1xF,EAAAz0C,OAEA4wC,aAAA,EACAz+E,KAAAkH,MAAAiJ,IAAA4xE,IAGAA,EAAAl9C,SAAA,CACAzZ,OAAA5pB,EAAA46C,UAAA,kBAGAp8C,KAAA+zK,WAAAhyF,EAAAvgF,IAAAxB,KAAAw1G,eAGAs+D,EAAAC,WAAA,SAAAhyF,EAAAvgF,EAAA0yK,GACA,IAAAxiI,EAAAlwC,EAAAkwC,UAYAqN,EAAAv9C,EAAAoP,UAAA,cACAmxE,EAAAl9C,SAAA,OAAAka,aAAA1iD,MAAA0iD,EAAA,CAAAA,MAGAgjC,EAAA4xF,YAAAj0H,EAAAl+C,EAAAoP,UAAA,mBAEAmxE,EAAAliC,SAAAkiC,EAAA4xF,YAAA9zH,SACA,IAAAs0H,EAAApyF,EAAAv6D,MAAAu3B,KAAA,GAtMA,EAuMAgjC,EAAAjD,SACAptC,EAAAllC,SAAA,aAAA20E,aAAAgzF,EAAA,iDACA,IAAA78D,EAAA91G,EAAAoP,UAAA,SAEA0mG,GACAv1B,EAAAliC,SAAAy3D,GAGA48D,IAGAnyF,EAAA3pE,YAAAs5B,EAAAt5B,YACA2pE,EAAAn4E,GAAA,qBAAA8O,GACAqpE,EAAA5wE,UAAA,KACA,IAAAA,EAAA4wE,EAAA8xF,cAAAn7J,EAAAg+C,QAAAh+C,EAAAo+C,SAEA3lD,GAAA,IAEA4wE,EAAA5wE,aAAA4wE,EAAA7c,YAAA,QAMA4uG,EAAA/9J,OAAA,WACA/V,KAAAu1G,oBAEAv1G,KAAAw1G,aAAA,KACAx1G,KAAAkH,MAAAkzD,aAGA05G,EAAAv+D,kBAAA,WACA,IAAA92B,EAAAz+E,KAAAw1G,aAEA/2B,GACAA,EAAAisB,oBAIA,IAAAtpE,EAAAkyI,EACAn7I,EAAA93B,QAAA+gC,mBC3QA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAA8rK,EAAgB9rK,EAAQ,KAExB+gK,EAAmB/gK,EAAQ,KAE3B0wK,EAAkB1wK,EAAQ,KAE1BqkH,EAAiBrkH,EAAQ,KAEzBY,EAAqBZ,EAAQ,KAsB7B4xB,EAAAhb,eAAAk1J,EAAA,UACAl6I,EAAAhb,eAAAmqJ,EAAA,mBACAnvI,EAAAlZ,eAAAg4J,GACA9+I,EAAAtb,kBAAA+tG,EAAA,UACAzyF,EAAAxb,qBAAAxV,oBC1CAZ,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBCJR,IAAAG,EAAaH,EAAQ,KAErB2wK,EAAoB3wK,EAAQ,KAE5B08C,EAAoB18C,EAAQ,KAE5By5B,EAAiBz5B,EAAQ,KAEzBsqG,EAAkBtqG,EAAQ,KAE1Bg9C,EAAAstD,EAAAttD,eACA6C,EAAAyqD,EAAAzqD,gBAEAznC,EAAuBpY,EAAQ,KAsB/B,SAAA4wK,EAAAC,EAAA9pK,EAAAtC,GACAnI,KAAA4I,OAAA2rK,EAMAv0K,KAAAmc,WAAA,GACAnc,KAAAw0K,eAAA3wK,EAAAhH,IAAA03K,EAAAE,qBAAA,SAAAC,EAAAzmJ,GACA,IAAA+d,EAAA,aAAA/d,EACA0mJ,EAAA,IAAAN,EAAAroI,EAAA,IAAAoU,GAMA,OALAu0H,EAAAp0K,KAAAm0K,EAAAv0K,IAAA,QAEAw0K,EAAAlkK,MAAAikK,EACAA,EAAA/yH,KAAAgzH,EACA30K,KAAAmc,WAAA1a,KAAAuqC,GACA2oI,GACG30K,MACHA,KAAAyJ,OAAA8qK,EAAApsK,GAMAnI,KAAAq9C,GAMAr9C,KAAAs9C,GAMAt9C,KAAA49C,EAMA59C,KAAAs6E,WAGAg6F,EAAAp4K,UAAA04K,iBAAA,WACA,OAAA50K,KAAAw0K,gBAGAF,EAAAp4K,UAAA4mF,YAAA,SAAAxjF,EAAAu1K,GACA,IAAAF,EAAA30K,KAAAw0K,eAAAK,GACA,OAAA70K,KAAA80K,aAAAH,EAAAhyG,YAAArjE,GAAAu1K,IAGAP,EAAAp4K,UAAA44K,aAAA,SAAAryG,EAAAoyG,GACA,IACAh3H,EADA79C,KAAAw0K,eAAAK,GACAh3H,MAGA,OAFA79C,KAAAq9C,GAAAolB,EAAA9zD,KAAA6gC,IAAAqO,GACA79C,KAAAs9C,GAAAmlB,EAAA9zD,KAAA2gC,IAAAuO,KAIAy2H,EAAAp4K,UAAA2mE,YAAA,SAAAgyC,GACA,IAAAp6E,EAAAo6E,EAAA,GAAA70G,KAAAq9C,GACA3iB,EAAAm6E,EAAA,GAAA70G,KAAAs9C,GACAo9B,EAAA/rE,KAAAmtB,KAAArB,IAAAC,KACAD,GAAAigD,EACAhgD,GAAAggD,EAQA,IAPA,IAIAq6F,EAJA9lJ,EAAAtgB,KAAAw3F,OAAAzrE,EAAAD,GAGAu6I,EAAA/lK,IAEAgmK,GAAA,EAEA13K,EAAA,EAAiBA,EAAAyC,KAAAw0K,eAAA/2K,OAAgCF,IAAA,CACjD,IAAAo3K,EAAA30K,KAAAw0K,eAAAj3K,GACAo8C,EAAAhrC,KAAAyb,IAAA6E,EAAA0lJ,EAAA92H,OAEAlE,EAAAq7H,IACAD,EAAAJ,EACAM,EAAA13K,EACAy3K,EAAAr7H,GAIA,OAAAs7H,IAAAF,KAAAG,WAAAx6F,MAGA45F,EAAAp4K,UAAAuN,OAAA,SAAA8qK,EAAApsK,GACA,IAAAkkF,EAAAkoF,EAAAp0K,IAAA,UACAi+F,EAAAj2F,EAAAuE,WACA2xF,EAAAl2F,EAAAwE,YACAwoK,EAAAxmK,KAAAC,IAAAwvF,EAAAC,GAAA,EACAr+F,KAAAq9C,GAAAlgB,EAAA5Q,aAAA8/D,EAAA,GAAA+R,GACAp+F,KAAAs9C,GAAAngB,EAAA5Q,aAAA8/D,EAAA,GAAAgS,GACAr+F,KAAAs6E,WAAAi6F,EAAAp0K,IAAA,cAAAwO,KAAA4U,GAAA,IACAvjB,KAAA49C,EAAAzgB,EAAA5Q,aAAAgoJ,EAAAp0K,IAAA,UAAAg1K,GACAtxK,EAAAjF,KAAAoB,KAAAw0K,eAAA,SAAAG,EAAA1mJ,GACA0mJ,EAAAlxH,UAAA,EAAAzjD,KAAA49C,GACA,IAAAC,EAAA79C,KAAAs6E,WAAArsD,EAAAtf,KAAA4U,GAAA,EAAAvjB,KAAAw0K,eAAA/2K,OAEAogD,EAAAlvC,KAAAw3F,MAAAx3F,KAAA2gC,IAAAuO,GAAAlvC,KAAA6gC,IAAAqO,IACA82H,EAAA92H,SACG79C,OAGHs0K,EAAAp4K,UAAAgP,OAAA,SAAAT,EAAAtC,GACA,IAAAitK,EAAAp1K,KAAAw0K,eACAD,EAAAv0K,KAAA4I,OACA/E,EAAAjF,KAAAw2K,EAAA,SAAAT,GACAA,EAAAh4I,MAAA8mB,UAAAx0C,YAEAxE,EAAA+pF,iBAAA,iBAAA6gF,EAAApnJ,GACA,aAAAonJ,EAAAl1K,IAAA,qBAAAsK,EAAA5B,aAAA,QAAAwsK,EAAAl1K,IAAA,iBAAAo0K,EAAA,CAIA,IAAA/yK,EAAA6zK,EAAArkK,UACAnN,EAAAjF,KAAAw2K,EAAA,SAAAT,GACAA,EAAAh4I,MAAA02D,oBAAA7xF,IAAA8pC,aAAAqpI,EAAA3oI,UAEGhsC,MACH,IAAAi4B,EAAAs8I,EAAAp0K,IAAA,eAEA,SAAAm1K,EAAArlJ,GACA,IAAAL,EAAAjhB,KAAA0f,IAAA,GAAA1f,KAAAod,MAAApd,KAAApC,IAAA0jB,GAAAthB,KAAAqd,OAEA6D,EAAAI,EAAAL,EASA,OAPA,IAAAC,EACAA,EAAA,EAGAA,GAAA,EAGAA,EAAAD,EAIA/rB,EAAAjF,KAAAw2K,EAAA,SAAAT,EAAA1mJ,GACA,IAAAsoB,EAAAmK,EAAAi0H,EAAAh4I,MAAAg4I,EAAAlkK,OACA8yC,EAAAoxH,EAAAh4I,MAAAg4I,EAAAlkK,OACA,IAAAyzC,EAAAywH,EAAAlkK,MACAksB,EAAAg4I,EAAAh4I,MACA44I,EAAArxH,EAAAnD,SACAy0H,EAAAtxH,EAAAlD,SACA/wB,EAAA0M,EAAA+2D,cAEA,SAAA6hF,GAAA,MAAAC,EAEA74I,EAAA8mB,WAAA8xH,GAAAC,GACA74I,EAAAknB,aAAA2xH,EAAAD,GAAAt9I,QACK,SAAAs9I,EAAA,CACL,IAAAzmK,EAEA,GACAA,EAAAymK,EAAAtlJ,EAAAgI,EACA0E,EAAA8mB,WAAA8xH,EAAAzmK,GAGA6tB,EAAAknB,YAAA5zB,GACAA,EAAAqlJ,EAAArlJ,SACOnhB,EAAAynC,EAAA,IAAAzoB,SAAAhf,IAAAgf,SAAAyoB,EAAA,UACF,SAAAi/H,EAAA,CACL,IAAA5mK,EAEA,GACAA,EAAA4mK,EAAAvlJ,EAAAgI,EACA0E,EAAA8mB,UAAA70C,GAAA4mK,GACA74I,EAAAknB,YAAA5zB,GACAA,EAAAqlJ,EAAArlJ,SACOrhB,EAAA2nC,EAAA,IAAAzoB,SAAAlf,IAAAkf,SAAAyoB,EAAA,SACF,CACL5Z,EAAA6nB,WAAA/mD,OAAA,EAEAw6B,IACAhI,EAAAqlJ,EAAArlJ,IAIA,IAAAo8D,EAAA19E,KAAAgQ,OAAA43B,EAAA,GAAAA,EAAA,MAAAtmB,KACAwlJ,EAAA9mK,KAAAgQ,MAAAsZ,EAAA,GACA0E,EAAA8mB,UAAAtmB,EAAAxe,MAAA0tE,EAAAopF,EAAAxlJ,GAAAkN,EAAAxe,MAAA0tE,GAAAp0D,EAAAw9I,GAAAxlJ,IACA0M,EAAAknB,YAAA5zB,OAUAqkJ,EAAAn4J,WAAA,GAEAm4J,EAAA3iK,OAAA,SAAAlH,EAAAtC,GACA,IAAAutK,EAAA,GAYA,OAXAjrK,EAAAuD,cAAA,iBAAAumK,GACA,IAAA3rG,EAAA,IAAA0rG,EAAAC,EAAA9pK,EAAAtC,GACAutK,EAAAj0K,KAAAmnE,GACA2rG,EAAA7jK,iBAAAk4D,IAEAn+D,EAAA+pF,iBAAA,iBAAA6gF,GACA,UAAAA,EAAAl1K,IAAA,sBAEAk1K,EAAA3kK,iBAAAglK,EAAAL,EAAAl1K,IAAA,qBAGAu1K,GAGA55J,EAAAC,SAAA,QAAAu4J,GACA,IAAAlzI,EAAAkzI,EACAn8I,EAAA93B,QAAA+gC,mBC1PA,IAAAv9B,EAAaH,EAAQ,KAErB0+D,EAAW1+D,EAAQ,KAqBnB,SAAA2wK,EAAAroI,EAAArP,EAAAipI,GACAxjG,EAAA/kE,KAAA2C,KAAAgsC,EAAArP,EAAAipI,GAUA5lK,KAAAT,KAAA,QACAS,KAAA69C,MAAA,EAMA79C,KAAAO,KAAA,GAKAP,KAAAyQ,MAGA5M,EAAA9C,SAAAszK,EAAAjyG,GACA,IAAAhhC,EAAAizI,EACAl8I,EAAA93B,QAAA+gC,mBCnDA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBg2F,EAAkBh2F,EAAQ,KAE1BsiC,EAAYtiC,EAAQ,KAEpB48H,EAA2B58H,EAAQ,KAqBnCiyK,EAAAj8E,EAAA5iE,UAEA,SAAA8+I,EAAA79J,EAAAif,GACA,OAAAnzB,EAAArF,SAAA,CACAw4B,QACGjf,GAGH,IAmGAqpB,EAnGA9L,EAAAhZ,qBAAA,CACA/c,KAAA,QACA2nC,cAAA,WACA,IAAA0Z,EAAA5gD,KAAAG,IAAA,eACA83B,EAAAj4B,KAAAG,IAAA,eACAw8B,EAAA38B,KAAAG,IAAA,SACAy2B,EAAA52B,KAAAG,IAAA,YACA63B,EAAAh4B,KAAAG,IAAA,YACA8gI,EAAAjhI,KAAAG,IAAA,aACA2gI,EAAA9gI,KAAAG,IAAA,QACA01K,EAAA71K,KAAAG,IAAA,aACA21K,EAAA91K,KAAAG,IAAA,kBACA4gI,EAAA/gI,KAAAG,IAAA,WACAwuE,EAAA3uE,KAAAG,IAAA,gBACA41K,EAAAlyK,EAAAhH,IAAAmD,KAAAG,IAAA,0BAAA61K,GAEA,MAAAA,EAAAlnK,KAAAknK,EAAAlnK,IAAA,IAAAknK,EAAApnK,IACAonK,EAAApnK,IAAA,EACO,MAAAonK,EAAApnK,KAAAonK,EAAApnK,IAAA,IAAAonK,EAAAlnK,MACPknK,EAAAlnK,IAAA,GAGA,IAAAmnK,EAAAn1C,EA6BA,GA3BA,MAAAk1C,EAAA71J,QACA81J,EAAApyK,EAAArF,SAAA,CACA2hB,MAAA61J,EAAA71J,OACS2gH,IAITk1C,EAAAnyK,EAAA7F,MAAA6F,EAAA5G,MAAA+4K,GAAA,CACAp1H,cACA3oB,cACA0E,QACA/F,WACAoB,WACAipG,YAEA1gI,KAAAy1K,EAAA5sJ,KACAinD,aAAA,MACA0wD,UAEAD,cAAAm1C,EACAtnG,iBACO,GAEPknG,IACAG,EAAAz1K,KAAA,IAGA,kBAAAu1K,EAAA,CACA,IAAAI,EAAAF,EAAAz1K,KACAy1K,EAAAz1K,KAAAu1K,EAAA7yK,QAAA,UAA0D,MAAAizK,IAAA,QACnD,oBAAAJ,IACPE,EAAAz1K,KAAAu1K,EAAAE,EAAAz1K,KAAAy1K,IAGA,IAAAvlK,EAAA5M,EAAAlD,OAAA,IAAAqlC,EAAAgwI,EAAA,KAAAh2K,KAAAyK,SAAA61H,GAIA,OAFA7vH,EAAA3H,SAAA,QACA2H,EAAAmF,eAAA5V,KAAA4V,eACAnF,GACKzQ,MAELA,KAAAy0K,mBAAA,WACA,OAAAsB,IAGAzvI,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA8zE,OAAA,cACA3R,OAAA,MACAJ,WAAA,GACA/5E,KAAA,CACAy2B,MAAA,GAIA4pB,YAAA,MACA3oB,YAAA,EACA8oG,QAAA,GACApkG,OAAA,EAEAnV,MAAA,UACAoP,SAAA/yB,EAAA7F,MAAA,CACAm4B,UAAA,CACAhW,MAAA,SAEKw1J,EAAA/+I,UACLqqG,UAAA20C,EAAAD,EAAA10C,WAAA,GACAjpG,SAAA49I,EAAAD,EAAA39I,UAAA,GACAnB,UAAA++I,EAAAD,EAAA9+I,WAAA,GACAE,UAAA6+I,EAAAD,EAAA5+I,WAAA,GAEAo/I,UAAA,MAIAh+I,EAAA93B,QAAA+gC,mBCzIc19B,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErB6oE,EAAkB7oE,EAAQ,KAE1BkB,EAAclB,EAAQ,KAqBtBwoK,EAAA,wCAEA9qI,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,QACAsS,OAAA,SAAA0iK,EAAA9pK,EAAAtC,GACAnI,KAAAkH,MACAkzD,YAEAp6D,KAAAo2K,WAAA7B,GAEAv0K,KAAAq2K,uBAAA9B,IAEA6B,WAAA,SAAA7B,GACA,IAAA3rG,EAAA2rG,EAAA7jK,iBACA0kK,EAAAxsG,EAAAgsG,mBACA0B,EAAAzyK,EAAAhH,IAAAu4K,EAAA,SAAAT,GAQA,OAPA,IAAApoG,EAAAooG,EAAAlkK,MAAA,CACAmP,SAAA,CAAAgpD,EAAAvrB,GAAAurB,EAAAtrB,IACApyB,SAAAypJ,EAAA92H,MACA8uB,gBAAA,EACAD,eAAA,EACAD,cAAA,MAIA5oE,EAAAjF,KAAA03K,EAAA,SAAAxoG,GACAjqE,EAAAjF,KAAAstK,EAAAp+F,EAAA39D,IAAA29D,GACA9tE,KAAAkH,MAAAiJ,IAAA29D,EAAAb,aACKjtE,OAELq2K,uBAAA,SAAA9B,GACA,IAAA3rG,EAAA2rG,EAAA7jK,iBACA0kK,EAAAxsG,EAAAgsG,mBAEA,GAAAQ,EAAA33K,OAAA,CAIA,IAAA+pB,EAAA+sJ,EAAAp0K,IAAA,SACAssK,EAAA8H,EAAA/nK,SAAA,aACAsgK,EAAAyH,EAAA/nK,SAAA,aACAuhE,EAAA0+F,EAAAjgK,SAAA,aACA66J,EAAAyF,EAAAtgK,SAAA,aACA+pK,EAAA9J,EAAAtsK,IAAA,QACAq2K,EAAA1J,EAAA3sK,IAAA,QACAs2K,EAAA1oG,EAAA5tE,IAAA,SACAu2K,EAAArP,EAAAlnK,IAAA,SACAs2K,EAAA5yK,EAAAvF,QAAAm4K,KAAA,CAAAA,GACAC,EAAA7yK,EAAAvF,QAAAo4K,KAAA,CAAAA,GACA,IAAAC,EAAA,GACAC,EAAA,GAQA,cAAApvJ,EAKA,IAJA,IAAAqvJ,EAAAzB,EAAA,GAAAtyG,iBACAzlB,EAAAurB,EAAAvrB,GACAC,EAAAsrB,EAAAtrB,GAEA//C,EAAA,EAAqBA,EAAAs5K,EAAAp5K,OAAwBF,IAAA,CAC7C,GAAAg5K,EAEAI,EADAG,EAAAH,EAAAF,EAAAl5K,IACAkE,KAAA,IAAAmD,EAAAiZ,OAAA,CACA2J,MAAA,CACA61B,KACAC,KACAM,EAAAi5H,EAAAt5K,GAAAklE,UAKA,GAAA+zG,GAAAj5K,EAAAs5K,EAAAp5K,OAAA,EAEAm5K,EADAE,EAAAF,EAAAF,EAAAn5K,IACAkE,KAAA,IAAAmD,EAAAmZ,KAAA,CACAyJ,MAAA,CACA61B,KACAC,KACA+mD,GAAAwyE,EAAAt5K,GAAAklE,MACA7kB,EAAAi5H,EAAAt5K,EAAA,GAAAklE,cAOA,KAAAs0G,EACAC,EAAAnzK,EAAAhH,IAAAu4K,EAAA,SAAAT,EAAA1mJ,GACA,IAAAi1C,EAAAyxG,EAAA7xG,iBAEA,OADAi0G,EAAA,MAAAA,EAAA7zG,EAAAzlE,OAAA,EAAAkR,KAAAC,IAAAs0D,EAAAzlE,OAAA,EAAAs5K,GACAlzK,EAAAhH,IAAAqmE,EAAA,SAAA+K,GACA,OAAArF,EAAAksG,aAAA7mG,EAAAxL,MAAAx0C,OAGAgpJ,EAAA,GAEA,IAAA15K,EAAA,EAAuBA,GAAAw5K,EAAsBx5K,IAAA,CAG7C,IAFA,IAAA6tB,EAAA,GAEAuH,EAAA,EAAyBA,EAAAyiJ,EAAA33K,OAA0Bk1B,IACnDvH,EAAA3pB,KAAAu1K,EAAArkJ,GAAAp1B,IAQA,GAJA6tB,EAAA,IACAA,EAAA3pB,KAAA2pB,EAAA,GAAAzuB,SAGA45K,EAEAI,EADAG,EAAAH,EAAAF,EAAAl5K,IACAkE,KAAA,IAAAmD,EAAAqZ,SAAA,CACAuJ,MAAA,CACA4D,aAKA,GAAAorJ,GAAAS,EAEAL,EADAE,EAAAF,EAAAF,EAAAn5K,EAAA,IACAkE,KAAA,IAAAmD,EAAAoZ,QAAA,CACAwJ,MAAA,CACA4D,SAAA/rB,OAAA43K,OAKAA,EAAA7rJ,EAAAzuB,QAAAk2E,WAIA,IAAA18C,EAAA43C,EAAAV,eACAp2C,EAAAowI,EAAAzjE,eAEA//F,EAAAjF,KAAAg4K,EAAA,SAAAA,EAAA3oJ,GACAjuB,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAq3J,EAAA,CACA7mK,MAAAlM,EAAArF,SAAA,CACA+hB,OAAA,OACAC,KAAAk2J,EAAAzoJ,EAAAyoJ,EAAAj5K,SACSw5B,GACTlsB,QAAA,MAEK/K,MACL6D,EAAAjF,KAAA+3K,EAAA,SAAAA,EAAA1oJ,GACAjuB,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAo3J,EAAA,CACA5mK,MAAAlM,EAAArF,SAAA,CACAgiB,KAAA,OACAD,OAAAk2J,EAAAxoJ,EAAAwoJ,EAAAh5K,SACS04B,GACTprB,QAAA,MAEK/K,MArGL,SAAA82K,EAAAI,EAAAC,EAAAlpJ,GACA,IAAA2+I,EAAA3+I,EAAAkpJ,EAAA15K,OAEA,OADAy5K,EAAAtK,GAAAsK,EAAAtK,IAAA,GACAA,MAsGAz0I,EAAA93B,QAAA+gC,mBC5LA,IAAA38B,EAAkBf,EAAQ,KAE1B2pI,EAAuB3pI,EAAQ,KAE/BG,EAAaH,EAAQ,KAIrBi6B,EAFcj6B,EAAQ,KAEtBi6B,WAoBAy5I,EAAA3yK,EAAA9D,OAAA,CACApB,KAAA,eACAyb,aAAA,UAEA1T,KAAA,SAAA0E,GACAorK,EAAA5+G,WAAAx4D,KAAA,OAAAb,WAGAa,KAAA2pC,mBAAA,WACA,OAAA3pC,KAAAyqC,eAGAR,eAAA,SAAAj+B,EAAAvB,GACA,OAAA4iI,EAAArtI,KAAA,CACA+7D,cAAA,aACAkhB,mBAAAhuE,OAGAi8B,cAAA,SAAA/5B,GACA,IAAA3P,EAAAxB,KAAAgR,UAEAokK,EADAp1K,KAAA0Q,iBACAkkK,mBACAr0K,EAAAP,KAAAgR,UAAAw7B,QAAAr7B,GACA,OAAAwsB,EAAA,KAAAp9B,EAAAP,KAAAO,QAAA,QAAAsD,EAAAhH,IAAAu4K,EAAA,SAAAzzH,EAAA1zB,GACA,IAAAvrB,EAAAlB,EAAArB,IAAAqB,EAAA8pC,aAAAqW,EAAA3V,KAAA76B,GACA,OAAAwsB,EAAAgkB,EAAAphD,KAAA,MAAAmC,KACKgnB,KAAA,WAEL4c,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA7H,iBAAA,QACAqxH,iBAAA,EACAs1C,WAAA,EACAlhJ,UAAA,CACA1uB,MAAA,EACAlI,KAAA,SAEAq4B,MAAA,CACAhY,SAAA,OAKAwX,OAAA,cACAC,WAAA,KAIA+J,EAAAg2I,EACAj/I,EAAA93B,QAAA+gC,mBC9EA,IAAA9L,EAAc5xB,EAAQ,KAEtBkB,EAAclB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErB+xG,EAAiB/xG,EAAQ,KA6BzB,IAAA09B,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,QACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA67G,EAAAjzG,EAAAL,iBACAxJ,EAAAlH,KAAAkH,MACA1F,EAAAuP,EAAAC,UACA2wE,EAAA3hF,KAAA2kE,MAEA,SAAAjlB,EAAAl+C,EAAAysB,GACA,IAAAixB,EAAA19C,EAAA4P,cAAA6c,EAAA,oBACA9N,EAAA3e,EAAA4P,cAAA6c,EAAA,SAEA,YAAAixB,EAAA,CAIA,IAAA7nB,EAxBA,SAAAA,GAKA,OAJAxzB,EAAAvF,QAAA+4B,KACAA,EAAA,EAAAA,OAGAA,EAmBAigJ,CAAA91K,EAAA4P,cAAA6c,EAAA,eACA2xB,EAAA61D,EAAA/1D,aAAAR,GAAA,SAAA/+B,GAQA,OAPAy/B,EAAAj5B,KAAA,CACA5W,MAAA,CACA4b,eAAA,GAEAhK,GAAA,IACAgb,MAAA,CAAAtF,EAAA,KAAAA,EAAA,QAEAuoB,GAGA,SAAA23H,EAAAC,EAAAC,EAAAC,EAAAl2K,EAAAysB,EAAAmZ,GAEAswI,EAAAt9G,YAEA,QAAA78D,EAAA,EAAqBA,EAAAk6K,EAAAh6K,OAAA,EAA0BF,IAAA,CAC/C,IAAAqiD,EAAAF,EAAAl+C,EAAAysB,GAEA2xB,IACAA,EAAA+3H,SAAAp6K,EAEAi6K,EAAAj6K,IACAqiD,EAAAj5B,KAAA,WAAA6wJ,EAAAj6K,IACAqH,EAAAwiC,EAAA,2BAAAwY,EAAA,CACAhgC,SAAA63J,EAAAl6K,IACawT,EAAAkd,IAEb2xB,EAAAj5B,KAAA,WAAA8wJ,EAAAl6K,IAGAm6K,EAAAvnK,IAAAyvC,KAKA,SAAAg4H,EAAAxsJ,GACA,OAAAvnB,EAAAhH,IAAAuuB,EAAA,SAAAypF,GACA,OAAAmP,EAAA3mE,GAAA2mE,EAAA1mE,MAIA97C,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA8d,GACA,IAAA7C,EAAA5pB,EAAA66C,cAAApuB,GAEA,GAAA7C,EAAA,CAIA,IAAAw8C,EAAA,IAAAhjE,EAAAoZ,QACAypJ,EAAA,IAAA7iK,EAAAqZ,SACAhgB,EAAA,CACAupB,MAAA,CACA4D,WAGAw8C,EAAApgD,MAAA4D,OAAAwsJ,EAAAxsJ,GACAq8I,EAAAjgJ,MAAA4D,OAAAwsJ,EAAAxsJ,GACAxmB,EAAA+kB,UAAAi+C,EAAA3pE,EAAA8S,EAAAkd,GACArpB,EAAA+kB,UAAA89I,EAAAxpK,EAAA8S,EAAAkd,GACA,IAAA4lH,EAAA,IAAAjvI,EAAA+Y,MACA+5J,EAAA,IAAA9yK,EAAA+Y,MACAk2H,EAAA1jI,IAAAs3J,GACA5zB,EAAA1jI,IAAAy3D,GACAisE,EAAA1jI,IAAAunK,GACAH,EAAA9P,EAAAjgJ,MAAA4D,SAAAssJ,EAAAl2K,EAAAysB,GAAA,GACAzsB,EAAAo7C,iBAAA3uB,EAAA4lH,MACK3oI,OAAA,SAAA42E,EAAAE,GACL,IAAA6xD,EAAAlyD,EAAA9kC,iBAAAmlC,GACAylF,EAAA5zB,EAAA56G,QAAA,GACA2uC,EAAAisE,EAAA56G,QAAA,GACAy+I,EAAA7jC,EAAA56G,QAAA,GACAh7B,EAAA,CACAupB,MAAA,CACA4D,OAAA5pB,EAAA66C,cAAAylC,KAIA7jF,EAAAupB,MAAA4D,SAIAmsJ,EAAA9P,EAAAjgJ,MAAA4D,OAAAntB,EAAAupB,MAAA4D,OAAAssJ,EAAAl2K,EAAAsgF,GAAA,GACAl9E,EAAAgiB,YAAA6gJ,EAAAxpK,EAAA8S,GACAnM,EAAAgiB,YAAAghD,EAAA3pE,EAAA8S,GACAvP,EAAAo7C,iBAAAklC,EAAA+xD,MACK99H,OAAA,SAAAkY,GACL/mB,EAAA6O,OAAA4rE,EAAA9kC,iBAAA5uB,MACKm9C,UACL5pE,EAAAs7C,kBAAA,SAAA+2F,EAAA5lH,GACA,IAAAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GACAw5I,EAAA5zB,EAAA56G,QAAA,GACA2uC,EAAAisE,EAAA56G,QAAA,GACAy+I,EAAA7jC,EAAA56G,QAAA,GACA9Y,EAAA3e,EAAA4P,cAAA6c,EAAA,SACA/mB,EAAAiJ,IAAA0jI,GACA4zB,EAAA3oF,SAAAj7E,EAAArF,SAAAytE,EAAAz/D,SAAA,aAAA6gE,eAAA,CACA7sD,KAAA,OACAD,OAAAJ,KAEAsnJ,EAAAhnJ,WAAAwrD,EAAAz/D,SAAA,sBAAA6gE,eACA,IAAAg6F,EAAAp7F,EAAAz/D,SAAA,aACAqrK,EAAA5rG,EAAAz/D,SAAA,sBACAsrK,EAAAzQ,EAAAx+H,WAAAw+H,EAAAtjJ,YAAA8kB,UACAkvI,EAAAF,EAAAhvI,WAAAgvI,EAAA9zJ,YAAA8kB,UACAkvI,KAAAD,EACAlwG,EAAAx5D,OAAA0pK,EACAlwG,EAAAkX,SAAAj7E,EAAArF,SAAA6oK,EAAAzjE,eAAA,CACApjF,KAAAL,EACAk2D,QAAA,MAEAzO,EAAAnnD,WAAAo3J,EAAAj0E,eACA,IAAAnsE,EAAAw0C,EAAAz/D,SAAA,aAAA20E,aAAA,WACA62F,EAAA/rG,EAAAz/D,SAAA,sBAAA20E,eACA73D,EAAA2iD,EAAAz/D,SAAA,SACA2kK,EAAAllG,EAAAz/D,SAAA,kBAcA,SAAA8sF,IACA1xB,EAAAjhD,KAAA,SAAAoxJ,GAGA,SAAAv+E,IACA5xB,EAAAjhD,KAAA,SAAAmxJ,GAlBAJ,EAAA7+I,UAAA,SAAA+mB,GACAA,EAAAhpC,SAAA6gB,GACAmoB,EAAAn/B,WAAA5c,EAAA5G,MAAA+6K,GACApzK,EAAAwjB,cAAAw3B,EAAA7vC,MAAA6vC,EAAAn/B,WAAA6I,EAAA6nJ,EAAA,CACAxoJ,aAAAnnB,EAAAkwC,UACA9oB,eAAAqF,EACApF,cAAA+2B,EAAA+3H,SACA1uJ,YAAAznB,EAAArB,IAAAqB,EAAA2a,WAAAyjC,EAAA+3H,UAAA1pJ,GACAvM,UAAAvB,EACA+C,YAAA,MAYA2wH,EAAA1pI,IAAA,aAAAA,IAAA,YAAAA,IAAA,UAAAA,IAAA,YACA0pI,EAAAjqI,GAAA,WAAA0vF,GAAA1vF,GAAA,YAAA0vF,GAAA1vF,GAAA,SAAA4vF,GAAA5vF,GAAA,WAAA4vF,GACA50F,EAAAsjB,cAAA2rH,KAEA7zI,KAAA2kE,MAAAnjE,GAEAuU,OAAA,WACA/V,KAAAkH,MAAAkzD,YACAp6D,KAAA2kE,MAAA,MAEA7uD,QAAA,eAGAqiB,EAAA93B,QAAA+gC,iBC1JAjJ,EAAA93B,QA7BA,SAAAoK,GACAA,EAAA+pF,iBAAA,iBAAAzjF,GACA,IAAAvP,EAAAuP,EAAAC,UACAoa,EAAA,GACAxgB,EAAAmG,EAAAL,iBAEA,GAAA9F,EAAA,CAWA,IAFA,IAAA4uJ,EAAA5uJ,EAAAgqK,mBAEAr3K,EAAA,EAAmBA,EAAAi8J,EAAA/7J,OAAiBF,IACpCiE,EAAA5C,KAAA4C,EAAA8pC,aAAAkuH,EAAAj8J,GAAAyuC,KAAAisI,GAGAz2K,EAAA5C,KAAA,SAAAqvB,GAEA7C,EAAA6C,GAAA,IAAA7C,EAAA6C,GAAAxsB,KAAA2pB,EAAA6C,GAAA,GAAAtxB,SACA6E,EAAA86C,cAAAruB,EAAA7C,EAAA6C,MAdA,SAAAgqJ,EAAAv1K,EAAAurB,GACA7C,EAAA6C,GAAA7C,EAAA6C,IAAA,GACA7C,EAAA6C,GAAA1wB,GAAAqN,EAAAk4E,YAAApgF,EAAAnF,wBC9BA,IAAAsG,EAAaH,EAAQ,KA0DrBy0B,EAAA93B,QApCA,SAAA2L,GACA,IAAAksK,EAAAlsK,EAAAg4G,MAEA,GAAAk0D,EAAA,CACAr0K,EAAAvF,QAAA45K,KACAA,EAAA,CAAAA,IAGA,IAAAC,EAAA,GACAt0K,EAAAjF,KAAAs5K,EAAA,SAAAE,EAAAnqJ,GACAmqJ,EAAAjC,WACAiC,EAAA74K,OAAA64K,EAAA5wJ,QACA4wJ,EAAA5wJ,MAAA4wJ,EAAA74K,MAGAyM,EAAA48D,MAAA58D,EAAA48D,OAAA,GAEA/kE,EAAAvF,QAAA0N,EAAA48D,SACA58D,EAAA48D,MAAA,CAAA58D,EAAA48D,QAGA58D,EAAA48D,MAAAnnE,KAAA22K,IAEAD,EAAA12K,KAAA22K,KAGApsK,EAAAg4G,MAAAm0D,EAGAt0K,EAAAjF,KAAAoN,EAAAmN,OAAA,SAAAw+I,GACAA,GAAA,UAAAA,EAAAp4J,MAAAo4J,EAAA0gB,aACA1gB,EAAA0f,WAAA1f,EAAA0gB,gCCrDA,IAAA/iJ,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAA40K,EAAsB50K,EAAQ,KAE9B4zE,EAAgB5zE,EAAQ,KAExB60K,EAAuB70K,EAAQ,KAE/BY,EAAqBZ,EAAQ,KAE7B6rK,EAA6B7rK,EAAQ,KAqBrC4xB,EAAAlZ,eAAAk8J,GACAhjJ,EAAAhb,eAAAg9D,GACAhiD,EAAAtb,kBAAAsb,EAAA7vB,SAAAC,UAAAE,UAAA2yK,GACAjjJ,EAAAxb,qBAAAxV,GACAirK,EAAA,QACAhwK,KAAA,kBACAwV,MAAA,mBACAxO,OAAA,kBACC,CACDhH,KAAA,YACAwV,MAAA,cACAxO,OAAA,UACC,CACDhH,KAAA,cACAwV,MAAA,gBACAxO,OAAA,+BCtDA,IAAA1C,EAAaH,EAAQ,KAErB2pI,EAAuB3pI,EAAQ,KAE/Be,EAAkBf,EAAQ,KAE1BulC,EAAcvlC,EAAQ,KAEtBi6B,EAAAsL,EAAAtL,WACAU,EAAA4K,EAAA5K,UAEAqxI,EAA0BhsK,EAAQ,KAIlC4iE,EAFoB5iE,EAAQ,KAE5B4iE,gBAEA24B,EAAiBv7F,EAAQ,KAqBzB80K,EAAA/zK,EAAA9D,OAAA,CACApB,KAAA,aACAyb,aAAA,QACAwrB,WAAA,MAMAiyI,cAAA,EAMAxxC,YAAA,GACA3/H,KAAA,SAAA0E,GAGAwsK,EAAAhgH,WAAAx4D,KAAA,OAAAb,WACAa,KAAA8wG,kBAAA9wG,KAAA4vK,0BAEA3lI,eAAA,SAAAj+B,GACA,OAAAqhI,EAAArtI,KAAA,YAEAinC,YAAA,SAAAlM,GAEAy9I,EAAAhgH,WAAAx4D,KAAA,cAAAb,WACAa,KAAA8wG,kBAAA9wG,KAAA4vK,0BAEAA,sBAAA,WAKA,IAJA,IAAApuK,EAAAxB,KAAAyqC,aACA4rD,EAAA70F,EAAA8pC,aAAA,SACA9wB,EAAA,GAEAjd,EAAA,EAAAC,EAAAgE,EAAA6rB,QAAuC9vB,EAAAC,EAASD,IAChDid,EAAA/Y,KAAA,CACAlB,KAAAiB,EAAAgrC,QAAAjvC,GACA+B,MAAAkC,EAAArB,IAAAk2F,EAAA94F,GACA4zG,SAAA7qC,EAAA9kE,EAAAjE,EAAA,cAKA,OADAid,EAAAykF,EAAAY,iBAAArlF,EAAAxa,KAAAy/F,aAAAz/F,KAAAgM,OAAA6kF,UAQA0O,gBAAA,WACA,IAAAF,EAAAr/F,KAAAgM,OAAAqzF,SACA,aAAAA,EAAAr/F,KAAAumC,gBAAAu4D,IAAAO,GAAA,MAEAI,WAAA,WACA,OAAAz/F,KAAAu/F,mBAAAv/F,MAAAgM,OAAAnP,KAEA67K,YAAA,SAAA1sK,EAAA6Q,KAKA2uB,YAAA,SAAAr6B,GAGA,IAAA3P,EAAAxB,KAAAgR,UACA,OAAAxP,EAAArB,IAAAqB,EAAA8pC,aAAA,SAAAn6B,IAQAw0H,eAAA,SAAAgzC,GACA,IAAAn3K,EAAAxB,KAAAgR,UACA,OAAAxP,EAAAs6C,aAAAt6C,EAAAuxB,YAAA4lJ,KAQAztI,cAAA,SAAA/5B,GAQA,IANA,IAAA3P,EAAAxB,KAAAgR,UACA06B,EAAArN,EAAAr+B,KAAAwrC,YAAAr6B,IACA5Q,EAAAiB,EAAAgrC,QAAAr7B,GACA81H,EAAAjnI,KAAAinI,YACA2xC,EAAA,GAEAr7K,EAAA,EAAmBA,EAAA0pI,EAAAxpI,OAAwBF,IAAA,CAC3C,IAAAs7K,EAAA5xC,EAAA1pI,GAAAu7K,aAAA/lJ,YAAAxyB,GACA81F,EAAA70F,EAAA8pC,aAAA,SAEAle,MAAA65G,EAAA1pI,GAAAu7K,aAAA34K,IAAAk2F,EAAAwiF,KACAD,EAAAn3K,KAAAk8B,EAAAspG,EAAA1pI,GAAAgD,OAIA,OAAAq4K,EAAAlvJ,KAAA,eAAAiU,EAAAp9B,EAAA,MAAAmrC,IAMAyB,mBAAA,SAAAh8B,GACA,SAAAA,EAAA,CACA,IAAA5Q,EAAAP,KAAAgR,UAAAw7B,QAAAr7B,GACA2tF,EAAA9+F,KAAA0Q,iBACAgtH,EAAA5+B,EAAAi6E,UAAAx4K,GACA,OAAAm9H,GAAA5+B,EAAAhc,YAAA46C,EAAArxC,UAGAuS,QAAA,SAAA32B,GACAjoE,KAAAgM,OAAAi8D,QAEA02B,UAAA,SAAAtS,GACArsF,KAAAgM,OAAAqgF,UAEA/lD,cAAA,CAEA9tB,OAAA,EAEAD,EAAA,EACA7H,iBAAA,MAEA7T,IAAA,GAMAmS,KAAA,SAEAE,IAAA,SAOAovF,YAAA,IAYA06E,kBAAA,EAGAC,oBAAA,EAMAl7E,eAAA,KAEA1R,OAAA,KACApkB,KAAA,EACAixG,WAAA,KACAthJ,MAAA,CACAZ,MAAA,EACA7W,MAAA,QAGAsX,UAAA,CACAy6G,YAAA,GACAl8G,YAAA,OACA6B,UAAA,QAEA/G,SAAA,CACA8G,MAAA,CACAZ,MAAA,EACA7W,MAAA,gBAEAsX,UAAA,CACAI,UAAA,2BAKAh0B,EAAAvC,MAAAk3K,EAAA9I,GACA,IAAAtuI,EAAAo3I,EACArgJ,EAAA93B,QAAA+gC,mBCvOA,IAAAv9B,EAAaH,EAAQ,KAErB+a,EAAmB/a,EAAQ,KAE3Bg3H,EAAmBh3H,EAAQ,KAE3B8+H,EAAW9+H,EAAQ,KA8BnBy1K,EAAA,CA5BgBz1K,EAAQ,KAELA,EAAQ,KAETA,EAAQ,KAEJA,EAAQ,MAkC9B,SAAAk6F,EAAAr9F,EAAA1D,EAAAigB,EAAAC,EAAA8zE,GACA2xC,EAAAnlI,KAAA2C,KAAAO,GAMAP,KAAAnD,MACAmD,KAAAo5K,cAAAv1K,EAAAV,gBACAnD,KAAAq5K,YAAAv8J,EAAAC,EAAA8zE,GA2KA,SAAAgyC,EAAAt4H,EAAAE,EAAAD,EAAAlL,GACA,IAAAw+F,EAAAtzF,EAAAszF,SACA/sF,EAAAvG,EAAAuG,YACAnG,EAAAkzF,IAAAptF,iBAAAK,IAAAL,mBACAK,EAAAy2B,uBAAA,eAAwD92B,iBAAA,KACxD,OAAA9F,IAAA5K,KAAA4K,EAAAL,GAAAjL,GAAA,KA7KAs+F,EAAA1hG,UAAA,CACAyB,YAAAigG,EACAr+F,KAAA,MAMA4c,WAAA,cAOAm9J,aAAA,SAAA72G,GAGA,IAFA,IAAA4iE,EAAArlI,KAAAqlI,QAEA9nI,EAAA,EAAmBA,EAAA8nI,EAAA5nI,OAAoBF,IACvC,GAAA8nI,EAAA9nI,GAAA2jC,QAAAuhC,GACA,SAIA,UAUA42G,YAAA,SAAAv8J,EAAAC,EAAA8zE,GAEA,IACA7wF,KAAAqlI,QAAAvoH,EAAA49G,EAAA59G,GAAA,GACK,MAAApE,GACL,gCAAAA,EAAA7V,QAGAka,KAAA,GACA8zE,KAAA,GAIA,IAHA,IAAAw0C,EAAArlI,KAAAqlI,QACAk0C,EAAA11K,EAAAV,gBAEA5F,EAAA,EAAmBA,EAAA8nI,EAAA5nI,OAAoBF,IAAA,CACvC,IAAAo7K,EAAAtzC,EAAA9nI,GAAAgD,KAEAo4K,EAAA9nF,EAAA9yF,eAAA46K,GAAA9nF,EAAA8nF,KACAtzC,EAAA9nI,GAAAgD,KAAAo4K,EACAY,EAAAr5K,IAAAy4K,EAAAtzC,EAAA9nI,IAEAyC,KAAAg/F,YAAA25E,EAAAtzC,EAAA9nI,GAAA8uF,QAGA,IAAAmtF,EAAAz8J,EAAA47J,GAEAa,GACAn0C,EAAA9nI,GAAAugI,YAAA07C,EAAAxqK,KAAAwqK,EAAAtqK,IAAAsqK,EAAA/xK,MAAA+xK,EAAA9xK,QAIA1H,KAAAy5K,YAAAF,EACAv5K,KAAA4jC,MAAA,KACA//B,EAAAjF,KAAAu6K,EAAA,SAAAO,GACAA,EAAA15K,OACKA,OAGL89H,YAAA,SAAA9tH,EAAAC,EAAAxI,EAAAC,GACA,IAAAqX,EAAA/e,KAAAmf,mBACAJ,IAAA9hB,SAEAgT,GAAA8O,EAAA9O,EAAA8O,EAAArX,OACA,IAAAk8H,EAAA5jI,KAAA0iI,kBACAkB,EAAA/8G,UAAA9H,EAAAW,mBAAA,IAAAjB,EAAAzO,EAAAC,EAAAxI,EAAAC,IACAk8H,EAAAx0D,qBACA,IAAAzyC,EAAAinG,EAAAjnG,MACAA,EAAA,IAAAA,EAAA,GACAinG,EAAAzxH,kBAEAnS,KAAAgjI,oBAOA+1C,UAAA,SAAAx4K,GACA,OAAAP,KAAAy5K,YAAAt5K,IAAAI,IAEAo5K,iBAAA,SAAAl3G,GAGA,IAFA,IAAA4iE,EAAArlI,KAAAqlI,QAEA9nI,EAAA,EAAmBA,EAAA8nI,EAAA5nI,OAAoBF,IACvC,GAAA8nI,EAAA9nI,GAAA2jC,QAAAuhC,GACA,OAAA4iE,EAAA9nI,IAUAyhG,YAAA,SAAAz+F,EAAAw+F,GACA/+F,KAAAo5K,cAAAl5K,IAAAK,EAAAw+F,IAQA66E,YAAA,SAAAr5K,GACA,OAAAP,KAAAo5K,cAAAj5K,IAAAI,IAGA4e,gBAAA,WACA,GAAAnf,KAAA4jC,MACA,OAAA5jC,KAAA4jC,MAMA,IAHA,IAAA7kB,EACAsmH,EAAArlI,KAAAqlI,QAEA9nI,EAAA,EAAmBA,EAAA8nI,EAAA5nI,OAAoBF,IAAA,CACvC,IAAAs8K,EAAAx0C,EAAA9nI,GAAA4hB,mBACAJ,KAAA86J,EAAA58K,SACA6iC,MAAA+5I,GAIA,OAAA75K,KAAA4jC,MAAA7kB,GAAA,IAAAN,EAAA,UASAqkE,YAAA,SAAAthF,EAAAwiI,EAAAznG,GAMA,GALA,kBAAA/6B,IAEAA,EAAAxB,KAAA45K,YAAAp4K,IAGAA,EACA,OAAAghI,EAAAtmI,UAAA4mF,YAAAzlF,KAAA2C,KAAAwB,EAAAwiI,EAAAznG,IAOAlsB,eAAAxM,EAAAjC,MAAAihI,EAAA,eAKAvyH,iBAAAzM,EAAAjC,MAAAihI,EAAA,gBAEAh/H,EAAAvC,MAAAs8F,EAAA4kC,GAUA,IAAAphG,EAAAw8D,EACAzlE,EAAA93B,QAAA+gC,mBClNA,IA3BA,IAAAv9B,EAAaH,EAAQ,KAErB84H,EAAa94H,EAAQ,KAsBrBq7F,EAAA,SACA3zE,EAAA,qqBAEA7tB,EAAA,EAAeA,EAAA6tB,EAAA3tB,OAAmBF,IAClC,QAAA0hC,EAAA,EAAiBA,EAAA7T,EAAA7tB,GAAAE,OAAsBwhC,IACvC7T,EAAA7tB,GAAA0hC,GAAA,SACA7T,EAAA7tB,GAAA0hC,GAAA,QACA7T,EAAA7tB,GAAA0hC,GAAA,IAAA8/D,EAAA,GACA3zE,EAAA7tB,GAAA0hC,GAAA,IAAA8/D,EAAA,GAeA5mE,EAAA93B,QAXA,SAAAy+F,GACA,UAAAA,EAAAjiG,KACAiiG,EAAAumC,QAAA5jI,KAAA,IAAA+6H,EAAA,2BAAA34H,EAAAhH,IAAAuuB,EAAA,SAAAoyG,GACA,OACAj+H,KAAA,UACAi+H,cAEKz+B,sBC3CL,IAAAl7F,EAAaH,EAAQ,KAqBrBo2K,EAAA,CACAC,2BAAA,QAEAC,eAAA,QACAC,eAAA,OACAC,eAAA,SAEAC,eAAA,OAeAhiJ,EAAA93B,QAZA,SAAAy+F,GACAj7F,EAAAjF,KAAAkgG,EAAAumC,QAAA,SAAA3H,GACA,IAAA08C,EAAAN,EAAAp8C,EAAAn9H,MAEA,GAAA65K,EAAA,CACA,IAAApjE,EAAA0mB,EAAArxC,OACA2qB,EAAA,IAAAojE,EAAA,QACApjE,EAAA,KAAAojE,EAAA,2BCtCA,IAAAv2K,EAAaH,EAAQ,KAqBrB22K,EAAA,CACAC,OAAA,SACAC,gBAAA,SACAC,2BAAA,UAeAriJ,EAAA93B,QAZA,SAAAy+F,GACAj7F,EAAAjF,KAAAkgG,EAAAumC,QAAA,SAAA3H,GACA,IAAA3+B,EAAAs7E,EAAA38C,EAAAn9H,MAEA,GAAAw+F,EAAA,CACA,IAAAiY,EAAA0mB,EAAArxC,OACA2qB,EAAA,GAAAjY,EAAA,GACAiY,EAAA,GAAAjY,EAAA,sBCZA,IAAA3zE,EAAA,yMAeA+M,EAAA93B,QAbA,SAAAy+F,GACA,aAAAA,EAAAjiG,IACA,QAAAU,EAAA,EAAAC,EAAAshG,EAAAumC,QAAA5nI,OAA6CF,EAAAC,IAASD,EACtD,iBAAAuhG,EAAAumC,QAAA9nI,GAAAgD,MACAu+F,EAAAumC,QAAA9nI,GAAAggI,WAAA97H,KAAA,CACAlC,KAAA,UACAi+H,SAAApyG,EAAA,uBC9BA,IAAAkK,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtB6gI,EAAc7gI,EAAQ,KAqBtB09B,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,MACAsS,OAAA,SAAA4oK,EAAAhwK,EAAAtC,EAAAsJ,GAEA,IAAAA,GAAA,oBAAAA,EAAAlS,MAAAkS,EAAA7T,OAAAoC,KAAA0S,IAAA,CAIA,IAAAxL,EAAAlH,KAAAkH,MAGA,GAFAA,EAAAkzD,aAEAqgH,EAAAl7E,kBAAA,CAKA,GAAA9tF,GAAA,YAAAA,EAAAlS,MAAA,WAAAkS,EAAA1D,eAAA0D,EAAA+gB,WAAAioJ,EAAAxzK,IAYA++H,EAAAhmI,KAAA06K,WACAxzK,EAAAiJ,IAAA61H,EAAA9+H,YAZA,GAAAuzK,EAAAhC,aAAA,CACA,IAAAzyC,EAAAhmI,KAAA06K,UAAA,IAAAn2C,EAAAp8H,GAAA,GACAjB,EAAAiJ,IAAA61H,EAAA9+H,OACA8+H,EAAAnB,KAAA41C,EAAAhwK,EAAAtC,EAAAnI,KAAAyR,GACAzR,KAAA06K,SAAA10C,OAGAhmI,KAAA06K,UAAA16K,KAAA06K,SAAA3kK,SACA/V,KAAA06K,SAAA,KAOAD,EAAAt6K,IAAA,qBAAAsK,EAAA5B,aAAA,WAAA7I,KAAA26K,eAAAF,EAAAhwK,EAAAtC,MAEA4N,OAAA,WACA/V,KAAA06K,UAAA16K,KAAA06K,SAAA3kK,SACA/V,KAAA06K,SAAA,KACA16K,KAAAkH,MAAAkzD,aAEAtkD,QAAA,WACA9V,KAAA06K,UAAA16K,KAAA06K,SAAA3kK,SACA/V,KAAA06K,SAAA,MAEAC,eAAA,SAAAF,EAAAhwK,EAAAtC,GACA,IAAA2wK,EAAA2B,EAAA3B,aACA5xK,EAAAlH,KAAAkH,MACA4xK,EAAAl6K,KAAAk6K,EAAAxtI,aAAA,kBAAAhsC,EAAA2uB,GACA,IAAAb,MAAA9tB,GAAA,CAIA,IAAA0f,EAAA85J,EAAAz8H,cAAApuB,GAEA,GAAAjP,KAAAqM,MAAA,CAKA,IAAAA,EAAArM,EAAAqM,MACA7nB,EAAAwb,EAAAxb,OACAi7C,EAAA,IAAA75C,EAAAiZ,OAAA,CACA9N,MAAA,CAMAyQ,KAAAi6J,EAAAzpK,UAAAJ,UAAA,UAEA4W,MAAA,CACA61B,GAAAhyB,EAAA,KAAA7nB,EACA85C,GAAAjyB,EAAA,GACAuyB,EAAA,GAEA7yC,QAAA,EAEA4W,GAAAne,EAAA,OAGA,IAAAA,EAAA,CACA,IAAAo3K,EAAAH,EAAAI,WAAA7pK,UACAzQ,EAAAu4K,EAAAtsI,QAAAve,GACA6sJ,EAAAF,EAAA7nJ,YAAAxyB,GACA0rE,EAAA6sG,EAAAh9H,aAAA7tB,GACA3E,EAAA2iD,EAAAz/D,SAAA,SACAg1E,EAAAvV,EAAAz/D,SAAA,kBACAuuK,EAAAH,EAAA/9H,iBAAAi+H,GACAljE,EAAA/zG,EAAA1B,UAAAs4K,EAAAzxJ,kBAAAiF,EAAA,UAAA1tB,GACAs3G,EAAAh0G,EAAA1B,UAAAs4K,EAAAzxJ,kBAAAiF,EAAA,YAAA2pF,GAEAte,EAAA,WACA,IAAA74E,EAAA7b,EAAA+d,aAAA,GAAkD6+D,EAAA,CAClDp4D,KAAAo4D,EAAArhF,IAAA,QAAA03G,EAAA,MACW,CACX30F,YAAA,EACA6C,gBAAA,IACW,GACX04B,EAAA1uC,MAAAwR,WAAAd,GAEAg+B,EAAAu8H,gBAAAv8H,EAAA98B,GACA88B,EAAA98B,IAAA,GAGA63E,EAAA,WACA50F,EAAA+d,aAAA87B,EAAA1uC,MAAAuZ,EAAA,CACAF,KAAAE,EAAAnpB,IAAA,QAAAy3G,EAAA,KACAz0F,aAAAmG,EAAAlG,WAAA,uBACW,CACXF,YAAA,EACA6C,gBAAA,IAGA,MAAA04B,EAAAu8H,kBACAv8H,EAAA98B,GAAA88B,EAAAu8H,gBACAv8H,EAAAu8H,gBAAA,OAIAD,EAAAnxK,GAAA,YAAA0vF,GAAA1vF,GAAA,WAAA4vF,GAAA5vF,GAAA,WAAA0vF,GAAA1vF,GAAA,SAAA4vF,GACAA,IAGAtyF,EAAAiJ,IAAAsuC,UAKAtmB,EAAA93B,QAAA+gC,mBC1JA,IAAAv9B,EAAaH,EAAQ,KAoErBy0B,EAAA93B,QA/CA,SAAAoK,GACA,IAAAwwK,EAAA,GACAxwK,EAAA+pF,iBAAA,eAAAkL,GACA,IAAAF,EAAAE,EAAAD,aAEA,IAAAC,EAAAH,oBAAA07E,EAAAz7E,GAAA,CAIA,IAAA07E,EAAA,GACAr3K,EAAAjF,KAAA8gG,EAAAunC,YAAA,SAAAk0C,GACA,IAAAr8E,EAAAq8E,EAAAzqK,iBACAlP,EAAA25K,EAAArC,aAEAqC,EAAAh7K,IAAA,qBAAAsK,EAAA5B,aAAA,WACArH,EAAA5C,KAAA4C,EAAA8pC,aAAA,kBAAAhsC,EAAA2uB,GACA,IAAA1tB,EAAAiB,EAAAgrC,QAAAve,GACAyvG,EAAA5+B,EAAAi6E,UAAAx4K,GAIA,GAAAm9H,IAAAtwG,MAAA9tB,GAAA,CAIA,IAAAkE,EAAA03K,EAAA36K,IAAA,EACA8qB,EAAAyzE,EAAAhc,YAAA46C,EAAArxC,QACA6uF,EAAA36K,GAAAiD,EAAA,EACAhC,EAAA86C,cAAAruB,EAAA,CACA5C,QACA7nB,gBAMA,IAAAhC,EAAAk+F,EAAA1uF,UACAxP,EAAA5C,KAAA,SAAAqvB,GACA,IAAA1tB,EAAAiB,EAAAgrC,QAAAve,GACAjP,EAAAxd,EAAA66C,cAAApuB,IAAA,GACAjP,EAAAy4F,WAAAyjE,EAAA36K,GACAiB,EAAA86C,cAAAruB,EAAAjP,KAEAi8J,EAAAz7E,IAAA,qBCjCArnE,EAAA93B,QAbA,SAAAoK,GACAA,EAAA+pF,iBAAA,eAAAzjF,GACA,IAAAqqK,EAAArqK,EAAA5Q,IAAA,SACAslI,EAAA10H,EAAAvE,SAAA,aACAqrB,EAAA4tG,EAAAtlI,IAAA,aACAggB,EAAAslH,EAAAtlI,IAAA,UAAAi7K,EAAArqK,EAAAqH,YAAAgjK,EAAA39K,QACAsT,EAAAC,UAAAkrC,UAAA,CACArkB,YACA1X,8BC1BA,IAAAtc,EAAaH,EAAQ,KAgGrBy0B,EAAA93B,QA1BA,SAAAoK,GACA,IAAA4wK,EAAA,GACA5wK,EAAA+pF,iBAAA,eAAAzjF,GACA,IAAAuqK,EAAAvqK,EAAAwuF,kBACAzhG,EAAAw9K,EAAA,IAAAA,EAAAr0K,GAAA,IAAA8J,EAAA0uF,cACA47E,EAAAv9K,GAAAu9K,EAAAv9K,IAAA,IAAA2D,KAAAsP,KAEAlN,EAAAjF,KAAAy8K,EAAA,SAAAE,EAAAz9K,GAKA,IAJA,IAAA0D,EAlDA,SAAAgmI,EAAAg0C,GACA,IAAAx7E,EAAA,GAYA,OAXAn8F,EAAAjF,KAAA4oI,EAAA,SAAAhmI,GACAA,EAAA5C,KAAA4C,EAAA8pC,aAAA,kBAAAhsC,EAAA2uB,GAEA,IAAAwtJ,EAAA,MAAAj6K,EAAAgrC,QAAAve,GACA+xE,EAAAy7E,GAAAz7E,EAAAy7E,IAAA,GAEAruJ,MAAA9tB,IACA0gG,EAAAy7E,GAAAh6K,KAAAnC,OAIAkoI,EAAA,GAAA3qI,IAAA2qI,EAAA,GAAAl8F,aAAA,kBAAAhsC,EAAA2uB,GAOA,IANA,IAYA9wB,EAZAs+K,EAAA,MAAAj0C,EAAA,GAAAh7F,QAAAve,GACAC,EAAA,EACAtf,EAAAK,IACAH,GAAA,IACAtR,EAAAwiG,EAAAy7E,GAAAh+K,OAEAF,EAAA,EAAmBA,EAAAC,EAASD,IAC5BqR,EAAAD,KAAAC,MAAAoxF,EAAAy7E,GAAAl+K,IACAuR,EAAAH,KAAAG,MAAAkxF,EAAAy7E,GAAAl+K,IACA2wB,GAAA8xE,EAAAy7E,GAAAl+K,GAeA,OATAJ,EADA,QAAAq+K,EACA5sK,EACK,QAAA4sK,EACL1sK,EACK,YAAA0sK,EACLttJ,EAAA1wB,EAEA0wB,EAGA,IAAA1wB,EAAAovB,IAAAzvB,IAYAu+K,CAAA73K,EAAAhH,IAAA0+K,EAAA,SAAAxqK,GACA,OAAAA,EAAAC,YACKuqK,EAAA,GAAAp7K,IAAA,wBAEL5C,EAAA,EAAmBA,EAAAg+K,EAAA99K,OAAuBF,IAC1Cg+K,EAAAh+K,GAAAu7K,aAAAyC,EAAAh+K,GAAAyT,UAIA,IAAAzT,EAAA,EAAmBA,EAAAg+K,EAAA99K,OAAuBF,IAC1Cg+K,EAAAh+K,GAAA0pI,YAAAs0C,EACAA,EAAAh+K,GAAAk7K,aAAA,IAAAl7K,IAAAg+K,EAAAh+K,GAAAgiG,kBACAg8E,EAAAh+K,GAAAstC,QAAArpC,EAAAmsC,gBACA4tI,EAAAh+K,GAAAs9K,WAAAU,EAAA,uBC3FA,IAAA13K,EAAaH,EAAQ,KAkCrBy0B,EAAA93B,QAbA,SAAA2L,GAEA,IAAA0zF,EAAA,GACA77F,EAAAjF,KAAAoN,EAAAmN,OAAA,SAAAw+I,GACAA,GAAA,QAAAA,EAAAp4J,OACAmgG,EAAAj+F,KAAAk2J,GACAA,EAAA96J,IAAA86J,EAAA96J,KAAA86J,EAAAn4D,QAEA37F,EAAArF,SAAAm5J,IAAAgkB,kCC7BA,IAAArmJ,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAA+gK,EAAmB/gK,EAAQ,KAE3Bk4K,EAAiBl4K,EAAQ,KAqBzB4xB,EAAAhb,eAAAmqJ,EAAA,kBACAnvI,EAAAlZ,eAAAw/J,oBChCA,IAAAn3K,EAAkBf,EAAQ,KAE1BquG,EAAWruG,EAAQ,KAInBi6B,EAFcj6B,EAAQ,KAEtBi6B,WAwBAyD,EAAA38B,EAAA9D,OAAA,CACApB,KAAA,cACAikG,WAAA,KAGAh9D,WAAA,MAOAyD,eAAA,SAAAj+B,GAEA,IAAAgnE,EAAA,CACAzyE,KAAAyL,EAAAzL,KACAgrF,SAAAv/E,EAAAxK,MAEAqyG,EAAA7nG,EAAA6nG,QAAA,GACAgoE,EAAA,GACAA,EAAAhoE,SACA,IAAAhrC,EAAAkpC,EAAA0B,WAAAzgC,EAAAhzE,KAAA67K,GACAC,EAAA,EACAjzG,EAAA0pC,SAAA,oBAAAt7F,GACAA,EAAA46F,MAAAiqE,IACAA,EAAA7kK,EAAA46F,SAGA,IACAkqE,EADA/vK,EAAAgwK,mBACAhwK,EAAAiwK,kBAAA,EAAAjwK,EAAAiwK,iBAAAH,EAMA,OALAjzG,EAAAmK,KAAAu/B,SAAA,oBAAAt7F,GACA,IAAArH,EAAAqH,EAAA26F,SAAApwG,KAAAo4C,eAAA3iC,EAAA9F,WAEA8F,EAAAg8F,SAAArjG,GAAA,MAAAA,EAAAssK,WAAAtsK,EAAAssK,UAAAjlK,EAAA46F,OAAAkqE,IAEAlzG,EAAArnE,MAOA26K,UAAA,WACA,IAAA3jJ,EAAAx4B,KAAAG,IAAA,UAQA,MANA,eAAAq4B,EACAA,EAAA,KACK,aAAAA,IACLA,EAAA,MAGAA,GAOA0S,cAAA,SAAA/5B,GAOA,IANA,IAAA03D,EAAA7oE,KAAAgR,UAAA63D,KACAuzG,EAAAvzG,EAAAmK,KAAAuY,SAAA,GACAt0E,EAAA4xD,EAAAwqC,mBAAAliG,GACA7R,EAAA2X,EAAA67F,WACAvyG,EAAA0W,EAAA1W,KAEA0W,OAAAmlK,GACA77K,EAAA0W,EAAA27D,WAAAryE,KAAA,IAAAA,EACA0W,IAAA27D,WAGA,OAAAj1C,EAAAp9B,GAAA6sB,MAAA9tB,IAAA,MAAAA,EAAA,SAAAA,KAEAgnC,cAAA,CACA9tB,OAAA,EACAD,EAAA,EAEAvJ,KAAA,MACAE,IAAA,MACAC,MAAA,MACAC,OAAA,MAEA4P,OAAA,aAGAwZ,OAAA,KACApB,OAAA,cACAC,WAAA,EACA2kJ,mBAAA,EACAC,iBAAA,EACA9lJ,UAAA,CACAhW,MAAA,OACA1Y,MAAA,IACAsjI,UAAA,IAEAtzG,UAAA,CACAtX,MAAA,iBACA6V,YAAA,UACAk8G,YAAA,KAEAt6G,MAAA,CACAZ,MAAA,EACA7W,MAAA,QAEA0zF,OAAA,CACAj8E,MAAA,CACAZ,MAAA,IAGAzQ,gBAAA,SACAquI,kBAAA,IACAltE,wBAAA,OAIAvvD,EAAA93B,QAAA+gC,mBChJA,IAAAv9B,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBu7C,EAAgBv7C,EAAQ,KAIxBqmI,EAFoBrmI,EAAQ,KAE5BqmI,iBA2BA3oG,EAzBc19B,EAAQ,KAyBtB+Y,gBAAA,CACAld,KAAA,OAQA+H,KAAA,SAAAmD,EAAAtC,GAKAnI,KAAAq8K,SAMAr8K,KAAAs8K,WAAA,IAAA13K,EAAA+Y,MACA3d,KAAAkH,MAAAiJ,IAAAnQ,KAAAs8K,aAEAzqK,OAAA,SAAAd,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAjQ,EAAAuP,EAAAC,UACAwyF,EAAAzyF,EAAAyyF,WACAt8F,EAAAlH,KAAAs8K,WACAt9J,EAAAjO,EAAA5Q,IAAA,UAEA,WAAA6e,EACA9X,EAAAyf,KAAA,YAAA68E,EAAAxzF,EAAAwzF,EAAA/7F,MAAA,EAAA+7F,EAAAvzF,EAAAuzF,EAAA97F,OAAA,IAEAR,EAAAyf,KAAA,YAAA68E,EAAAxzF,EAAAwzF,EAAAvzF,IAGA,IAAA0xE,EAAA3hF,KAAA2kE,MACAkd,EAAA,CACAm6F,kBAAAjrK,EAAA5Q,IAAA,qBACA6e,SACAwZ,OAAAznB,EAAAorK,YACAI,UAAAxrK,EAAA5Q,IAAA,uBACAkhF,aAAAtwE,EAAA5Q,IAAA,gBACAmhF,aAAAvwE,EAAA5Q,IAAA,gBACAohF,eAAAxwE,EAAA5Q,IAAA,kBACAk5F,cAAA,EACAV,QAAA,GAEAn3F,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA2xE,GACAhB,EAAAt/E,EAAAsgF,IAEA06F,EAAAh7K,EAAAsgF,EAAA,KAAA56E,EAAA6J,EAAA8wE,KAEK32E,OAAA,SAAA42E,EAAAE,GACL,IAAAD,EAAAJ,EAAA9kC,iBAAAmlC,GAEAlB,EAAAt/E,EAAAsgF,GAMA06F,EAAAh7K,EAAAsgF,EAAAC,EAAA76E,EAAA6J,EAAA8wE,GALAE,GAAA06F,EAAA96F,EAAAK,EAAAD,EAAA76E,EAAA6J,EAAA8wE,KAMK9rE,OAAA,SAAAisE,GACL,IAAAD,EAAAJ,EAAA9kC,iBAAAmlC,GAMAD,GACA06F,EAAA96F,EAAAK,EAAAD,EAAA76E,EAAA6J,EAAA8wE,KAEKzW,WAEL,IAAAyW,EAAAm6F,mBACAx6K,EAAAs7C,kBAAA,SAAAr0C,EAAA0I,GACA1I,EAAA0B,IAAA,SAAAP,GAAA,mBACAzB,EAAA2P,eAAA,CACAvY,KAAA,wBACAizB,SAAAzhB,EAAA9J,GACAkK,kBAMAnR,KAAA2kE,MAAAnjE,GAEAsU,QAAA,aACAC,OAAA,WACA/V,KAAAs8K,WAAAliH,YAEAp6D,KAAA2kE,MAAA,QAIA,SAAAmc,EAAAt/E,EAAA2P,GACA,IAAA6N,EAAAxd,EAAA66C,cAAAlrC,GACA,OAAA6N,IAAAoO,MAAApO,EAAAhP,KAAAod,MAAApO,EAAA/O,IAAA,SAAAzO,EAAA4P,cAAAD,EAAA,UAGA,SAAAurK,EAAAzlK,EAAAg1D,EAAA4V,GAcA,OAbAA,EAAA5V,YACA4V,EAAApqD,UAAAw0C,EAAAz/D,SAAA,aAAA20E,eACAU,EAAAT,eAAAnV,EAAAz/D,SAAA,sBAAA20E,eACAU,EAAA1rD,UAAA81C,EAAAz/D,SAAA,aAAA6gE,eACAwU,EAAAv4D,WAAA2iD,EAAAz/D,SAAA,SACAq1E,EAAAL,gBAAAvV,EAAAz/D,SAAA,mBAEA,IAAAyK,EAAAg8F,UAAA,IAAAh8F,EAAAs0E,SAAA9tF,OACAokF,EAAAqX,iBAAArX,EAAApqD,UAAAjX,KAEAqhE,EAAAqX,iBAAA,OAGArX,EAGA,SAAA26F,EAAAh7K,EAAA2P,EAAA4wE,EAAA76E,EAAA6J,EAAA8wE,GACA,IAAAz6C,GAAA26C,EACA9qE,EAAAzV,EAAAqnE,KAAAwqC,mBAAAliG,GACA86D,EAAAh1D,EAAAzK,WAEAmwK,GADA96F,EAAA66F,EAAAzlK,EAAAg1D,EAAA4V,GACArgF,EAAAqnE,KAAAmK,MACA91E,EAAA+Z,EAAA27D,aAAA+pG,EAAA1lK,IAAA27D,YAAA37D,EACA2lK,EAAAp7K,EAAAq7C,iBAAA3/C,EAAAiU,WACA0rK,EAAA3/K,EAAAk/C,YACA0gI,EAAAF,EAAA,CACA5sK,EAAA4sK,EAAAh9J,SAAA,GACA3P,EAAA2sK,EAAAh9J,SAAA,GACAm9J,KAAAH,EAAAI,gBACAC,KAAAL,EAAAM,iBACGL,EACHM,EAAAlmK,EAAAmlC,YAEAhV,GACA26C,EAAA,IAAA9iC,EAAAz9C,EAAA2P,EAAA0wE,IACAl7D,KAAA,YAAAm2J,EAAA9sK,EAAA8sK,EAAA7sK,IAEA8xE,EAAAL,WAAAlgF,EAAA2P,EAAA0wE,GAGAE,EAAAi7F,gBAAAj7F,EAAAq7F,aACAr7F,EAAAm7F,gBAAAn7F,EAAAs7F,aACAt7F,EAAAq7F,aAAAD,EAAAJ,KACAh7F,EAAAs7F,aAAAF,EAAAF,KACA/1K,EAAAiJ,IAAA4xE,GACAvgF,EAAAo7C,iBAAAzrC,EAAA4wE,GACAn9E,EAAAgiB,YAAAm7D,EAAA,CACAniE,SAAA,CAAAu9J,EAAAntK,EAAAmtK,EAAAltK,IACGc,GACH,IAAA6uC,EAAAmiC,EAAAwW,gBAEA,cAAA1W,EAAA7iE,OAAA,CACA,IAGA8vB,EACAwuI,EAJAlB,EAAAO,EAAApxF,SAAA,GACAgyF,EAAAnB,EAAAhgI,YACA3+C,EAAA2+K,EAAA7wF,SAAA9tF,OAIA,GAAA0/K,EAAAntK,IAAAutK,EAAAvtK,IAAA,IAAAiH,EAAAg8F,SAAA,CACA,IAAA5mB,EAAA,GACAA,EAAAr8E,GAAAosK,EAAA7wF,SAAA,GAAAnvC,YAAApsC,EAAAosK,EAAA7wF,SAAA9tF,EAAA,GAAA2+C,YAAApsC,GAAA,EACAq8E,EAAAp8E,GAAAmsK,EAAA7wF,SAAA,GAAAnvC,YAAAnsC,EAAAmsK,EAAA7wF,SAAA9tF,EAAA,GAAA2+C,YAAAnsC,GAAA,GACA6+B,EAAAngC,KAAAw3F,MAAA9Z,EAAAp8E,EAAAstK,EAAAttK,EAAAo8E,EAAAr8E,EAAAutK,EAAAvtK,IAEA,IACA8+B,EAAA,EAAAngC,KAAA4U,GAAAurB,IAGAwuI,EAAAjxF,EAAAr8E,EAAAutK,EAAAvtK,KAGA8+B,GAAAngC,KAAA4U,SAGAurB,EAAAngC,KAAAw3F,MAAAg3E,EAAAltK,EAAAstK,EAAAttK,EAAAktK,EAAAntK,EAAAutK,EAAAvtK,IAEA,IACA8+B,EAAA,EAAAngC,KAAA4U,GAAAurB,GAGA,IAAA73B,EAAAs0E,SAAA9tF,QAAA,IAAAwZ,EAAAs0E,SAAA9tF,SAAA,IAAAwZ,EAAAg8F,UACAqqE,EAAAH,EAAAntK,EAAAutK,EAAAvtK,KAGA8+B,GAAAngC,KAAA4U,KAGA+5J,EAAAH,EAAAntK,EAAAutK,EAAAvtK,KAGA8+B,GAAAngC,KAAA4U,IAKA,IAAAJ,EAAAm6J,EAAA,eACA19H,EAAAhpC,SAAA,CACAuM,eACAK,cAAAsrB,EACA49C,WAAA,SACAsW,cAAA,WAIA,GAAA/rF,EAAA27D,YAAA37D,EAAA27D,aAAA+pG,EAAA,CACA,IAAAh3I,EAAAo8C,EAAAy7F,OAEA73I,IACAA,EAAAo8C,EAAAy7F,OAAA,IAAA54K,EAAAwZ,YAAA,CACAoJ,MAAAi2J,EAAA57F,EAAAi7F,KACA/sK,MAAAlM,EAAArF,SAAA,CACA63E,QAAA,GACSwL,EAAA1rD,cAITvxB,EAAAgiB,YAAA+e,EAAA,CACAne,MAAAi2J,EAAA57F,EAAAg7F,EAAAM,GACAptK,MAAA,CACAsmE,QAAA,IAEKtlE,GACL7J,EAAAiJ,IAAAw1B,IAIA,SAAA82I,EAAAj7K,EAAA2P,EAAA4wE,EAAA76E,EAAA6J,EAAA8wE,GAQA,IAPA,IAKAg7F,EALA5lK,EAAAzV,EAAAqnE,KAAAwqC,mBAAAliG,GACAwrK,EAAAn7K,EAAAqnE,KAAAmK,KACA/G,EAAAh1D,EAAAzK,WAEAtP,GADA2kF,EAAA66F,EAAAzlK,EAAAg1D,EAAA4V,GACA5qE,EAAA27D,aAAA+pG,EAAA1lK,IAAA27D,YAAA37D,GAGA,OAAA4lK,EAAA3/K,EAAAk/C,cACAl/C,IAAA01E,aAAA+pG,EAAAz/K,IAAA01E,YAAA11E,EAGA0H,EAAAgiB,YAAAm7D,EAAA,CACAniE,SAAA,CAAAi9J,EAAA7sK,EAAA,EAAA6sK,EAAA5sK,EAAA,IACGc,EAAA,WACH7J,EAAA6O,OAAAgsE,GACAvgF,EAAAo7C,iBAAAzrC,EAAA,QAEA4wE,EAAAE,QAAA,MACAwX,WAAA,IAEA,IAAA9zD,EAAAo8C,EAAAy7F,OAEA73I,GACA/gC,EAAAgiB,YAAA+e,EAAA,CACAne,MAAAi2J,EAAA57F,EAAAg7F,KACA9sK,MAAA,CACAsmE,QAAA,IAEKtlE,EAAA,WACL7J,EAAA6O,OAAA4vB,KAKA,SAAA83I,EAAA57F,EAAAg7F,EAAAM,GACA,IAAAlnE,EACAC,EACAm+C,EACAC,EACA97H,EAAAqpD,EAAArpD,OAEA,cAAAqpD,EAAA7iE,OAAA,CACA,IAAAyI,EAAAo1J,EAAAE,KACAp1J,EAAAk1J,EAAAI,KACAv1J,EAAAy1J,EAAAJ,KACAn1J,EAAAu1J,EAAAF,KACAS,EAAA3zC,EAAAtiH,EAAAE,GACAg2J,EAAA5zC,EAAAtiH,EAAAE,GAAAC,EAAAD,GAAAk6D,EAAA06F,WACAqB,EAAA7zC,EAAAriH,EAAAE,GAAAD,EAAAC,GAAAi6D,EAAA06F,WACAsB,EAAA9zC,EAAAriH,EAAAE,GACA,OACAH,GAAAi2J,EAAA1tK,EACA2X,GAAA+1J,EAAAztK,EACAyX,GAAAm2J,EAAA7tK,EACA4X,GAAAi2J,EAAA5tK,EACAgmG,KAAA0nE,EAAA3tK,EACAkmG,KAAAynE,EAAA1tK,EACAokJ,KAAAupB,EAAA5tK,EACAskJ,KAAAspB,EAAA3tK,GAGAwX,EAAAo1J,EAAA7sK,EACA2X,EAAAk1J,EAAA5sK,EACAyX,EAAAy1J,EAAAntK,EACA4X,EAAAu1J,EAAAltK,EAgBA,MAdA,OAAAuoB,GAAA,OAAAA,IACAy9E,EAAAxuF,GAAAC,EAAAD,GAAAo6D,EAAA06F,UACArmE,EAAAvuF,EACA0sI,EAAA3sI,GAAAD,EAAAC,GAAAm6D,EAAA06F,UACAjoB,EAAA1sI,GAGA,OAAA4Q,GAAA,OAAAA,IACAy9E,EAAAxuF,EACAyuF,EAAAvuF,GAAAC,EAAAD,GAAAk6D,EAAA06F,UACAloB,EAAA3sI,EACA4sI,EAAA1sI,GAAAD,EAAAC,GAAAi6D,EAAA06F,WAGA,CACA90J,KACAE,KACAD,KACAE,KACAquF,OACAC,OACAm+C,OACAC,QAKAn8H,EAAA93B,QAAA+gC,mBCrWc19B,EAAQ,KAqBtB0W,eAAA,CACA7a,KAAA,wBACAwV,MAAA,wBACA7J,OAAA,UACC,SAAAuG,EAAAhH,GACDA,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,OACAC,MAAA9B,GACG,SAAAV,GACH,IAAAI,EAAAM,EAAAN,UAEA8F,EADAlG,EAAAC,UAAA63D,KACAwqC,mBAAAliG,GACA8F,EAAAg8F,UAAAh8F,EAAAg8F,8BClCA,IAAA6qE,EAAuBp6K,EAAQ,KAE/Bq6K,EAAAD,EAAAC,UACAC,EAAAF,EAAAE,WAEAC,EAAoBv6K,EAAQ,KAE5B4D,EAAA22K,EAAA32K,KACAwhI,EAAAm1C,EAAAn1C,UACAe,EAAAo0C,EAAAp0C,WACAq0C,EAAAD,EAAAl1C,WACAgB,EAAAk0C,EAAAl0C,iBACAjG,EAAAm6C,EAAAn6C,YA4HA3rG,EAAA93B,QAxGA,SAAAoK,EAAAtC,GACAsC,EAAA+pF,iBAAA,gBAAAzjF,IAKA,SAAAA,EAAA5I,GACA,IAAAq7F,EAAAsgC,EAAA/yH,EAAA5I,GACA4I,EAAAyyF,aACA,IAAAxkF,EAAAjO,EAAA5Q,IAAA,UACAsH,EAAA,EACAC,EAAA,EACAqhI,EAAA,KAEA,WAAA/pH,GACAvX,EAAA,EAAAkH,KAAA4U,GACA7b,EAAAiH,KAAAC,IAAA40F,EAAA97F,OAAA87F,EAAA/7F,OAAA,EACAshI,EAAAm1C,EAAA,SAAAv1C,EAAAC,GACA,OAAAD,EAAA/1D,aAAAg2D,EAAAh2D,WAAA,KAAA+1D,EAAA92B,UAGApqG,EAAA+7F,EAAA/7F,MACAC,EAAA87F,EAAA97F,OACAqhI,EAAAm1C,KAGA,IAAAvB,EAAA5rK,EAAAC,UAAA63D,KAAAmK,KACAopG,EAAAO,EAAApxF,SAAA,GAEA,GAAA6wF,EAAA,CACA90K,EAAAq1K,GACAoB,EAAA3B,EAAAtzC,EAAAC,GACA4zC,EAAA50C,SAAAS,UAAA4zC,EAAAr0C,SAAAU,OACAu1C,EAAA5B,EAAAvyC,GACA,IAAA76H,EAAAotK,EACAjtK,EAAAitK,EACAhtK,EAAAgtK,EACA4B,EAAA5B,EAAA,SAAAnlK,GACA,IAAAjH,EAAAiH,EAAAmlC,YAAApsC,EAEAA,EAAAhB,EAAAotC,YAAApsC,IACAhB,EAAAiI,GAGAjH,EAAAb,EAAAitC,YAAApsC,IACAb,EAAA8H,GAGAA,EAAA46F,MAAAziG,EAAAyiG,QACAziG,EAAA6H,KAGA,IAAA0+C,EAAA3mD,IAAAG,EAAA,EAAA45H,EAAA/5H,EAAAG,GAAA,EACA66F,EAAAr0C,EAAA3mD,EAAAotC,YAAApsC,EACAmuK,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,cAAAt/J,EACAm/J,EAAA12K,GAAA0H,EAAAitC,YAAApsC,EAAA2lD,EAAAq0C,GAEAo0E,EAAA12K,GAAA0H,EAAAyiG,MAAA,MACAmsE,EAAA5B,EAAA,SAAAnlK,GACAonK,GAAApnK,EAAAmlC,YAAApsC,EAAAg6F,GAAAm0E,EACAG,GAAArnK,EAAA46F,MAAA,GAAAusE,EACA,IAAAG,EAAAx0C,EAAAs0C,EAAAC,GACArnK,EAAAklC,UAAA,CACAnsC,EAAAuuK,EAAAvuK,EACAC,EAAAsuK,EAAAtuK,EACA8sK,KAAAsB,EACApB,KAAAqB,IACS,SAEJ,CACL,IAAA9lJ,EAAAznB,EAAAorK,YAEA,OAAA3jJ,GAAA,OAAAA,GACA4lJ,EAAA12K,GAAAyH,EAAAitC,YAAApsC,EAAA2lD,EAAAq0C,GACAm0E,EAAA12K,GAAA2H,EAAAyiG,MAAA,MACAmsE,EAAA5B,EAAA,SAAAnlK,GACAqnK,GAAArnK,EAAAmlC,YAAApsC,EAAAg6F,GAAAo0E,EACAC,EAAA,OAAA7lJ,GAAAvhB,EAAA46F,MAAA,GAAAssE,EAAA12K,GAAAwP,EAAA46F,MAAA,GAAAssE,EACAlnK,EAAAklC,UAAA,CACAnsC,EAAAquK,EACApuK,EAAAquK,IACW,MAEJ,OAAA9lJ,GAAA,OAAAA,IACP2lJ,EAAA12K,GAAA0H,EAAAitC,YAAApsC,EAAA2lD,EAAAq0C,GACAo0E,EAAA12K,GAAA0H,EAAAyiG,MAAA,MACAmsE,EAAA5B,EAAA,SAAAnlK,GACAonK,GAAApnK,EAAAmlC,YAAApsC,EAAAg6F,GAAAm0E,EACAG,EAAA,OAAA9lJ,GAAAvhB,EAAA46F,MAAA,GAAAusE,EAAA12K,GAAAuP,EAAA46F,MAAA,GAAAusE,EACAnnK,EAAAklC,UAAA,CACAnsC,EAAAquK,EACApuK,EAAAquK,IACW,QA/FXE,CAAAztK,EAAA5I,qBC0CA9H,EAAA09K,UApDA,SAAA/qG,EAAAqE,EAAA0xD,GAKA,IAJA,IAEA9xH,EAFAs8F,EAAA,CAAAvgC,GACA9R,EAAA,GAGAjqD,EAAAs8F,EAAAj/F,OAIA,GAFA4sD,EAAAz/D,KAAAwV,GAEAA,EAAAg8F,SAAA,CACA,IAAA1nB,EAAAt0E,EAAAs0E,SAEA,GAAAA,EAAA9tF,OACA,QAAAF,EAAA,EAAuBA,EAAAguF,EAAA9tF,OAAqBF,IAC5Cg2G,EAAA9xG,KAAA8pF,EAAAhuF,IAMA,KAAA0Z,EAAAiqD,EAAA5sD,OAEA+iE,EAAApgE,EAAA8xH,IA+BA1oI,EAAA29K,WArBA,SAAAhrG,EAAAqE,GAIA,IAHA,IACApgE,EADAs8F,EAAA,CAAAvgC,GAGA/7D,EAAAs8F,EAAAj/F,OAIA,GAFA+iE,EAAApgE,GAEAA,EAAAg8F,SAAA,CACA,IAAA1nB,EAAAt0E,EAAAs0E,SAEA,GAAAA,EAAA9tF,OACA,QAAAF,EAAAguF,EAAA9tF,OAAA,EAAyCF,GAAA,EAAQA,IACjDg2G,EAAA9xG,KAAA8pF,EAAAhuF,uBCrEA,IAAA+3B,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAA+6K,EAAoB/6K,EAAQ,KAE5Bg7K,EAAoBh7K,EAAQ,KAqB5B4xB,EAAAhb,eAAAmkK,GACAnpJ,EAAAlZ,eAAAsiK,oBChCA,IAAA76K,EAAaH,EAAQ,KAErBe,EAAkBf,EAAQ,KAE1BquG,EAAWruG,EAAQ,KAEnBsiC,EAAYtiC,EAAQ,KAEpBulC,EAAcvlC,EAAQ,KAEtBi6B,EAAAsL,EAAAtL,WACAU,EAAA4K,EAAA5K,UAIAm1C,EAFkB9vE,EAAQ,KAE1B8vE,iBAoBApyC,EAAA38B,EAAA9D,OAAA,CACApB,KAAA,iBACAinC,WAAA,MACAxrB,aAAA,iBAKA2jK,UAAA,KACAr4I,cAAA,CAEAo2C,YAAA,EACAq4E,oBAAA9lJ,IAGAD,KAAA,SACAE,IAAA,SACAC,MAAA,KACAC,OAAA,KACA3H,MAAA,MACAC,OAAA,MACAwlB,MAAA,EAGA0xJ,WAAA,SAEAC,YAAA,MAAAlwK,KAAAmtB,KAAA,IAEAgjJ,UAAA,KAGAC,cAAA,SAGAC,gBAAA,MAGAC,MAAA,EAEAC,UAAA,aAKAv1K,WAAA,EACA+9E,wBAAA,IACAnhE,gBAAA,eACA+yI,WAAA,CACAtiI,MAAA,EACAtvB,OAAA,GACAsH,KAAA,SACAE,IAAA,SAGAiwK,eAAA,GAEA1nJ,UAAA,CACAtX,MAAA,kBAEA6V,YAAA,wBACAk8G,YAAA,EACAhzD,YAAA,sBACAD,WAAA,EACAE,cAAA,EACAC,cAAA,EACAx8D,UAAA,CACAzC,MAAA,SAGA2Q,SAAA,CACAlO,UAAA,KAGAgV,MAAA,CACAZ,MAAA,EAEAiF,SAAA,EACA2qB,QAAA,EACAhnC,SAAA,SAGAO,MAAA,OACAulC,UAAA,GAIA05H,WAAA,CAEApoJ,MAAA,EACApX,SAAA,UACAlY,OAAA,GAEAyY,MAAA,OACAulC,UAAA,EAEAs9C,cAAA,UAEAvrE,UAAA,CACAtX,MAAA,KAEAi2D,WAAA,KAEAF,gBAAA,KAEAg8D,YAAA,EACAmtC,SAAA,EACArpJ,YAAA,OACAspJ,sBAAA,MAKAxuJ,SAAA,CACAsuJ,WAAA,CACApoJ,MAAA,EACApX,SAAA,UACAO,MAAA,OACAulC,UAAA,EACAs9C,cAAA,WAGAu8E,gBAAA,EAEAC,UAAA,KACAC,UAAA,KACAt/J,MAAA,GAWAi2D,WAAA,KAEAF,gBAAA,KAEAwpG,eAAA,QAEAC,WAAA,GAGAC,mBAAA,KAMAhsE,OAAA,IAeA3pE,eAAA,SAAAj+B,EAAAvB,GAEA,IAAAuoE,EAAA,CACAzyE,KAAAyL,EAAAzL,KACAgrF,SAAAv/E,EAAAxK,OAuHA,SAAAq+K,EAAA5rE,GAIA,IAAA/lF,EAAA,EACArqB,EAAAjF,KAAAq1G,EAAA1oB,SAAA,SAAAvpE,GACA69J,EAAA79J,GACA,IAAA89J,EAAA99J,EAAA1iB,MACAuE,EAAAvF,QAAAwhL,SAAA,IACA5xJ,GAAA4xJ,IAEA,IAAAC,EAAA9rE,EAAA30G,MAEAuE,EAAAvF,QAAAyhL,KACAA,IAAA,KAGA,MAAAA,GAAA3yJ,MAAA2yJ,MACAA,EAAA7xJ,GAIA6xJ,EAAA,IACAA,EAAA,GAGAl8K,EAAAvF,QAAA21G,EAAA30G,OAAA20G,EAAA30G,MAAA,GAAAygL,EAAA9rE,EAAA30G,MAAAygL,EA/IAF,CAAA7sG,GACA,IAAA4gC,EAAA5nG,EAAA4nG,QAAA,GACAA,EAAA5nG,EAAA4nG,OAoJA,SAAAA,EAAAnpG,GACA,IAOAu1K,EAPAC,EAAAx1K,EAAAtK,IAAA,SAEA,IAAA8/K,EACA,OAcA,GAXArsE,KAAA,GAEA/vG,EAAAjF,KAAAg1G,EAAA,SAAAxB,GACA,IAAA3hG,EAAA,IAAAu1B,EAAAosE,GACA8tE,EAAAzvK,EAAAtQ,IAAA,UAEAsQ,EAAAtQ,IAAA,oBAAA+/K,GAAA,SAAAA,KACAF,GAAA,MAIAA,EAAA,CACA,IAAAG,EAAAvsE,EAAA,KAAAA,EAAA,OACAusE,EAAAhgK,MAAA8/J,EAAAtjL,QAGA,OAAAi3G,EA3KAwsE,CAAAxsE,EAAAnpG,GACA,IAAAoxK,EAAA,GAKA,OAJAA,EAAAjoE,SAIA7B,EAAA0B,WAAAzgC,EAAAhzE,KAAA67K,GAAAr6K,MAEA0lC,cAAA,WACAlnC,KAAAqgL,iBAQAn1I,cAAA,SAAA/5B,GACA,IAAA3P,EAAAxB,KAAAgR,UACA1R,EAAAU,KAAAwrC,YAAAr6B,GACAu6B,EAAA7nC,EAAAvF,QAAAgB,GAAA++B,EAAA/+B,EAAA,IAAA++B,EAAA/+B,GACAiB,EAAAiB,EAAAgrC,QAAAr7B,GACA,OAAAwsB,EAAAp9B,EAAA,KAAAmrC,IAUA9yB,cAAA,SAAAzH,GACA,IAAAgH,EAAA1T,EAAAvI,UAAA0c,cAAAxZ,MAAAY,KAAAb,WACA8X,EAAAjX,KAAAgR,UAAA63D,KAAAwqC,mBAAAliG,GAEA,OADAgH,EAAAs7D,aAAAD,EAAAv8D,EAAAjX,MACAmY,GAYAmoK,cAAA,SAAA98E,GAKAxjG,KAAAwjG,WAAAxjG,KAAAwjG,YAAA,GACA3/F,EAAAlD,OAAAX,KAAAwjG,eAOA+8E,aAAA,SAAAt5K,GAaA,IAAAu5K,EAAAxgL,KAAAygL,YAEAD,IACAA,EAAAxgL,KAAAygL,YAAA58K,EAAAV,gBAMAnD,KAAA0gL,iBAAA,GAGA,IAAA33K,EAAAy3K,EAAArgL,IAAA8G,GAMA,OAJA,MAAA8B,GACAy3K,EAAAtgL,IAAA+G,EAAA8B,EAAA/I,KAAA0gL,oBAGA33K,GAEA43K,YAAA,WACA,OAAA3gL,KAAA2+K,WAMA0B,cAAA,SAAA/sG,GACAA,EAAAtzE,KAAA2+K,UAAArrG,IAAAtzE,KAAA2+K,UACA,IAAA3rG,EAAAhzE,KAAAyqC,aAAAo+B,KAAAmK,KAEAM,QAAAN,KAAAE,SAAAI,MACAtzE,KAAA2+K,UAAA3rG,MAoEA76C,EAAA93B,QAAA+gC,mBC/XA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBksC,EAAiBlsC,EAAQ,KAEzB4gF,EAAa5gF,EAAQ,KAErBk9K,EAAiBl9K,EAAQ,KAEzBy8F,EAAqBz8F,EAAQ,KAE7B+a,EAAmB/a,EAAQ,KAE3B4Z,EAAa5Z,EAAQ,KAErBm9K,EAAoBn9K,EAAQ,KAE5BisJ,EAAsBjsJ,EAAQ,KAqB9B1E,EAAA6E,EAAA7E,KACA2e,EAAA/Y,EAAA+Y,MACAO,EAAAtZ,EAAAsZ,KACAtf,EAAAiF,EAAAjF,KAEAkiL,EAAA,UACAC,EAAA,qBACAC,EAAA,eACAC,EAAA,0BACAC,EAAA,GAEAC,EAAA,EACAC,EAAA,EACAC,EAAA1xB,EAAA,kBAEA,0HAEA2xB,EAAA,SAAA7wK,GAEA,IAAAgnB,EAAA4pJ,EAAA5wK,GAGA,OADAgnB,EAAAlX,OAAAkX,EAAAjX,KAAAiX,EAAA5X,UAAA,KACA4X,GAGA2J,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,UAKA+H,KAAA,SAAAgyD,EAAAnxD,GAKAnI,KAAAuhL,gBAMAvhL,KAAAqyC,SAkiBA,CACAmvI,UAAA,GACAC,WAAA,GACArwG,QAAA,IA/hBApxE,KAAAq8K,SAMAr8K,KAAA0hL,YAMA1hL,KAAAykI,YAMAzkI,KAAA2hL,OAAA,SAMA9vK,OAAA,SAAAd,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAjB,EAAA/F,EAAA24E,eAAA,CACAt6E,SAAA,SACAwK,QAAA,UACAC,MAAA9B,IAGA,KAAA5N,EAAAhD,QAAA2P,EAAAO,GAAA,IAIA/Q,KAAA+Q,cACA/Q,KAAAmI,MACAnI,KAAAyK,UACA,IACAqrI,EAAAxxD,EAAAxR,mBAAArhE,EADA,0CACAV,GACA+C,EAAArC,KAAAlS,KACAikG,EAAAzyF,EAAAyyF,WACAp8D,GAAApnC,KAAAq8K,SACAuF,EAAA5hL,KAAAqyC,SAEAwvI,EAAA,sBAAA/tK,GAAAgiI,GAAA8rC,EAAA,CACAE,cAAAF,EAAAJ,UAAA1rC,EAAA7+H,KAAA6gC,eACA5tB,UAAAzY,EAAAyY,WACK,KAEL63J,EAAA/hL,KAAAgiL,oBAAAx+E,GAEAy+E,EAAAjiL,KAAAkiL,UAAAH,EAAAhxK,EAAA8wK,GAEAz6I,GAAAtzB,GAAA,sBAAAA,GAAA,sBAAAA,EAAAmuK,EAAAE,gBAAAniL,KAAAoiL,aAAAL,EAAAE,EAAAlxK,EAAA8wK,GAEA7hL,KAAAqiL,iBAAAl6K,GAEAnI,KAAAsiL,kBAAAvxK,EAAA5I,EAAA2tI,KAMAksC,oBAAA,SAAAx+E,GACA,IAAAu+E,EAAA/hL,KAAAuhL,gBAaA,OAXAQ,IAGAA,EAAA/hL,KAAAuhL,gBAAA,IAAA5jK,EAEA3d,KAAAwJ,YAAAu4K,GAEA/hL,KAAAkH,MAAAiJ,IAAA4xK,IAGAA,EAAAp7J,KAAA,YAAA68E,EAAAxzF,EAAAwzF,EAAAvzF,IACA8xK,GAMAG,UAAA,SAAAH,EAAAhxK,EAAA8wK,GACA,IAAAU,EAAAxxK,EAAAC,UAAA63D,KACA25G,EAAAxiL,KAAAq8K,SAEAoG,EAocA,CACAjB,UAAA,GACAC,WAAA,GACArwG,QAAA,IAtcAwwG,EAmcA,CACAJ,UAAA,GACAC,WAAA,GACArwG,QAAA,IArcAsxG,EAAA1iL,KAAAqyC,SACAswI,EAAA,GACAC,EAAA/+K,EAAAjC,MAAAihL,EAAA9xK,EAAA6wK,EAAAc,EAAAb,EAAAY,EAAAE,IAgBA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAArxE,GAIAqxE,GACAF,EAAAD,EACAnkL,EAAAmkL,EAAA,SAAA/gK,EAAAjZ,IACAiZ,EAAAswF,aAAA6wE,EAAAp6K,QAKA,IAAA6mC,EAAAozI,EAAAD,EAAAtjE,KAAAtvG,IAAAgzK,GAAAj4K,OAAAi4K,GAAAptK,OAAAlS,EAAAjC,MAAAuhL,EAAA,OAAA/3G,UAGA,SAAAq0C,EAAAxoG,GAEA,OAAAA,EAAAi9B,QAGA,SAAAivI,EAAAvjE,EAAAD,GACA,IAAAyjE,EAAA,MAAAxjE,EAAAmjE,EAAAnjE,GAAA,KACAyjE,EAAA,MAAA1jE,EAAAqjE,EAAArjE,GAAA,KACAz4G,EAAA07K,EAAAQ,EAAAC,EAAAJ,EAAApxE,GACA3qG,GAAA47K,EAAAM,KAAAtxE,cAAA,GAAAuxE,KAAAvxE,cAAA,GAAA5qG,EAAAg8K,EAAArxE,EAAA,IAnCAixE,CAAAP,EAAAvvG,KAAA,CAAAuvG,EAAAvvG,MAAA,GAAAwvG,KAAAxvG,KAAA,CAAAwvG,EAAAxvG,MAAA,GAAA+uG,EAAAQ,IAAAC,MAAA,GAEA,IAAAc,EAqCA,SAAA/1K,GACA,IAAA+1K,EAmZA,CACA9B,UAAA,GACAC,WAAA,GACArwG,QAAA,IA/YA,OANA7jE,GAAA3O,EAAA2O,EAAA,SAAAq7E,EAAA26F,GACA,IAAAC,EAAAF,EAAAC,GACA3kL,EAAAgqF,EAAA,SAAAngF,GACAA,IAAA+6K,EAAA/hL,KAAAgH,KAAAg7K,eAAA,OAGAH,EA7CAI,CAAAhB,GAGA,OAFA1iL,KAAAq8K,SAAAkG,EACAviL,KAAAqyC,SAAAuvI,EACA,CACAa,oBACAa,gBACAnB,cA0CA,WACAvjL,EAAA0kL,EAAA,SAAAK,GACA/kL,EAAA+kL,EAAA,SAAAl7K,GACAA,EAAAO,QAAAP,EAAAO,OAAA+M,OAAAtN,OAGA7J,EAAA+jL,EAAA,SAAAl6K,GACAA,EAAA21E,WAAA,EAGA31E,EAAA4N,aAQA+rK,aAAA,SAAAL,EAAAE,EAAAlxK,EAAA8wK,GACA,GAAA9wK,EAAA5Q,IAAA,cAIA,IAAAmmB,EAAAvV,EAAA5Q,IAAA,2BACAkvH,EAAAt+G,EAAA5Q,IAAA,mBACAyjL,EAAA/C,EAAAgD,aAEAjlL,EAAAqjL,EAAAqB,cAAA,SAAA16F,EAAA26F,GACA3kL,EAAAgqF,EAAA,SAAAngF,EAAAgrC,GACA,IAAAhrC,EAAA21E,UAAA,CAIA,IAEAngF,EAFA+K,EAAAP,EAAAO,OAIA,GAAA64K,GAAA,cAAAA,EAAA33J,UACAjsB,EAAA+K,IAAA64K,EAAAC,cAGA,CACAt6J,MAAA,CACAxX,EAAA,EACAC,EAAA,EACAxI,MAAAuB,EAAA86K,cACAp8K,OAAAsB,EAAA+6K,gBAEAh0K,MAAA,CACAsmE,QAAA,IAGW,CACXtmE,MAAA,CACAsmE,QAAA,QAGS,CACT,IAAA2tG,EAAA,EACAC,EAAA,EAEAj7K,EAAAy6K,iBAIAO,EAAAh7K,EAAA86K,cAAA,EACAG,EAAAj7K,EAAA+6K,eAAA,GAGA9lL,EAAA,cAAAslL,EAAA,CACA3jK,SAAA,CAAAokK,EAAAC,GACAl0K,MAAA,CACAsmE,QAAA,IAEW,CACX7uD,MAAA,CACAxX,EAAAg0K,EACA/zK,EAAAg0K,EACAx8K,MAAA,EACAC,OAAA,GAEAqI,MAAA,CACAsmE,QAAA,IAKAp4E,GAAA2lL,EAAAzzK,IAAA1H,EAAAxK,EAAAqoB,EAAA+oG,QAIAzwH,EAAAoB,KAAAqyC,SAAA,SAAAu2C,EAAA26F,GACA3kL,EAAAgqF,EAAA,SAAAngF,EAAAgrC,GACA,IAAA6vB,EAAA2+G,EAAAQ,kBAAAc,GAAA9vI,GACAx1C,EAAA,GAEAqlE,IAIA,cAAAigH,EACAjgH,EAAA4gH,MACAjmL,EAAA2hB,SAAAnX,EAAAmX,SAAAjjB,QACA8L,EAAAke,KAAA,WAAA28C,EAAA4gH,OAGA5gH,EAAA4gH,MACAjmL,EAAAupB,MAAA3jB,EAAAlD,OAAA,GAA2C8H,EAAA+e,OAC3C/e,EAAAo8B,SAAAy+B,EAAA4gH,MAGA5gH,EAAA6gH,QACA17K,EAAAmO,SAAA,aACA3Y,EAAA8R,MAAA,CACAsmE,QAAA,IAIA,IAAA5tE,EAAAsH,MAAAsmE,UACAp4E,EAAA8R,MAAA,CACAsmE,QAAA,KAKAutG,EAAAzzK,IAAA1H,EAAAxK,EAAAqoB,EAAA+oG,OAEKrvH,MACLA,KAAA2hL,OAAA,YACAiC,EAAAnxD,KAAAzzH,EAAA,WACAgB,KAAA2hL,OAAA,QACAM,EAAAE,iBACKniL,OAAAi2C,UAMLosI,iBAAA,SAAAl6K,GACA,IAAA0xG,EAAA75G,KAAAykI,YAEA5qB,KACAA,EAAA75G,KAAAykI,YAAA,IAAAtkC,EAAAh4F,EAAA2D,UACAm1F,OAAAjhG,KAAA+Q,YAAA5Q,IAAA,SACA05G,EAAAjwG,GAAA,MAAA5K,EAAAgB,KAAAokL,OAAApkL,OACA65G,EAAAjwG,GAAA,OAAA5K,EAAAgB,KAAAqkL,QAAArkL,QAGA,IAAA+e,EAAA,IAAAN,EAAA,IAAAtW,EAAAuE,WAAAvE,EAAAwE,aACAktG,EAAA7Y,kBAAA,SAAAtoF,EAAA1I,EAAAC,GACA,OAAA8O,EAAAmiB,QAAAlxB,EAAAC,MAOAq0K,iBAAA,WACA,IAAAzqE,EAAA75G,KAAAykI,YAEA5qB,IACAA,EAAA/jG,UACA+jG,EAAA,OAOAuqE,OAAA,SAAA3pJ,EAAAC,GACA,iBAAA16B,KAAA2hL,SAAAhzK,KAAAyb,IAAAqQ,GAzWA,GAyWA9rB,KAAAyb,IAAAsQ,GAzWA,GAyWA,CAEA,IAAAs4C,EAAAhzE,KAAA+Q,YAAAC,UAAA63D,KAAAmK,KAEA,IAAAA,EACA,OAGA,IAAAuqG,EAAAvqG,EAAA52B,YAEA,IAAAmhI,EACA,OAGAv9K,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,cACA3B,KAAAoC,KAAA0S,IACA8f,SAAAxyB,KAAA+Q,YAAA9J,GACAs9K,SAAA,CACAv0K,EAAAutK,EAAAvtK,EAAAyqB,EACAxqB,EAAAstK,EAAAttK,EAAAyqB,EACAjzB,MAAA81K,EAAA91K,MACAC,OAAA61K,EAAA71K,YASA28K,QAAA,SAAA1nJ,EAAA0pG,EAAAC,GACA,iBAAAtmI,KAAA2hL,OAAA,CAEA,IAAA3uG,EAAAhzE,KAAA+Q,YAAAC,UAAA63D,KAAAmK,KAEA,IAAAA,EACA,OAGA,IAAAuqG,EAAAvqG,EAAA52B,YAEA,IAAAmhI,EACA,OAGA,IAAAx+J,EAAA,IAAAN,EAAA8+J,EAAAvtK,EAAAutK,EAAAttK,EAAAstK,EAAA91K,MAAA81K,EAAA71K,QACA87F,EAAAxjG,KAAA+Q,YAAAyyF,WAEA6iC,GAAA7iC,EAAAxzF,EACAs2H,GAAA9iC,EAAAvzF,EAEA,IAAAwP,EAAAnC,EAAA3L,SACA2L,EAAAkjB,UAAA/gB,IAAA,EAAA4mH,GAAAC,IACAhpH,EAAAqf,MAAAld,IAAA,CAAAkd,MACArf,EAAAkjB,UAAA/gB,IAAA,CAAA4mH,EAAAC,IACAvnH,EAAAS,eAAAC,GACAzf,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,gBACA3B,KAAAoC,KAAA0S,IACA8f,SAAAxyB,KAAA+Q,YAAA9J,GACAs9K,SAAA,CACAv0K,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAxI,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,YASA8B,YAAA,SAAAu4K,GACAA,EAAAn4K,GAAA,iBAAA8O,GACA,aAAA1Y,KAAA2hL,OAAA,CAIA,IAAAzC,EAAAl/K,KAAA+Q,YAAA5Q,IAAA,gBAEA,GAAA++K,EAAA,CAIA,IAAAppC,EAAA91I,KAAAwkL,WAAA9rK,EAAAg+C,QAAAh+C,EAAAo+C,SAEA,GAAAg/E,EAAA,CAIA,IAAA7+H,EAAA6+H,EAAA7+H,KAEA,GAAAA,EAAAmlC,YAAAqoI,WACAzkL,KAAA0kL,YAAA5uC,QAEA,kBAAAopC,EACAl/K,KAAA2kL,YAAA7uC,QACS,YAAAopC,EAAA,CACT,IAAAjzG,EAAAh1D,EAAA26F,SAAApwG,KAAAs6C,aAAA7kC,EAAA9F,WACAgzE,EAAAlY,EAAA9rE,IAAA,WACAykL,EAAA34G,EAAA9rE,IAAA,sBACAgkF,GAAAp3E,OAAA83K,KAAA1gG,EAAAygG,QAGK5kL,OAMLsiL,kBAAA,SAAAvxK,EAAA5I,EAAA2tI,GACAA,IACAA,EAAA,MAAA/kI,EAAA5Q,IAAA,iBACA8W,KAAAlG,EAAA4vK,eAIO3gL,KAAAwkL,WAAAr8K,EAAAuE,WAAA,EAAAvE,EAAAwE,YAAA,MAGPmpI,EAAA,CACA7+H,KAAAlG,EAAAC,UAAA63D,KAAAmK,QAKAhzE,KAAA0hL,cAAA1hL,KAAA0hL,YAAA,IAAAd,EAAA5gL,KAAAkH,SAAA2K,OAAAd,EAAA5I,EAAA2tI,EAAA7+H,KAAAjY,EAEA,SAAAiY,GACA,cAAAjX,KAAA2hL,SACAr9F,EAAAjR,cAAAtiE,EAAA4vK,cAAA1pK,GAAAjX,KAAA0kL,YAAA,CACAztK,SACSjX,KAAA2kL,YAAA,CACT1tK,WAPAjX,QAgBA+V,OAAA,WACA/V,KAAAskL,mBAEAtkL,KAAAuhL,iBAAAvhL,KAAAuhL,gBAAAnnH,YACAp6D,KAAAqyC,SA2EA,CACAmvI,UAAA,GACAC,WAAA,GACArwG,QAAA,IA7EApxE,KAAA2hL,OAAA,QACA3hL,KAAA0hL,aAAA1hL,KAAA0hL,YAAA3rK,UAEAD,QAAA,WACA9V,KAAAskL,oBAMAK,YAAA,SAAA7uC,GACA91I,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,oBACA3B,KAAAoC,KAAA0S,IACA8f,SAAAxyB,KAAA+Q,YAAA9J,GACAgsE,WAAA6iE,EAAA7+H,QAOAytK,YAAA,SAAA5uC,GACA91I,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,oBACA3B,KAAAoC,KAAA0S,IACA8f,SAAAxyB,KAAA+Q,YAAA9J,GACAgsE,WAAA6iE,EAAA7+H,QAaAutK,WAAA,SAAAx0K,EAAAC,GACA,IAAA6lI,EAwBA,OAvBA91I,KAAA+Q,YAAA4vK,cACApuE,SAAA,CACA5rF,KAAA,eACA6rF,MAAA,YACK,SAAAv7F,GACL,IAAA6tK,EAAA9kL,KAAAqyC,SAAAovI,WAAAxqK,EAAA6gC,eAGA,GAAAgtI,EAAA,CACA,IAAAz5J,EAAAy5J,EAAA1gJ,sBAAAp0B,EAAAC,GACAuX,EAAAs9J,EAAAt9J,MAEA,KAAAA,EAAAxX,GAAAqb,EAAA,IAAAA,EAAA,IAAA7D,EAAAxX,EAAAwX,EAAA/f,OAAA+f,EAAAvX,GAAAob,EAAA,IAAAA,EAAA,IAAA7D,EAAAvX,EAAAuX,EAAA9f,QAOA,SANAouI,EAAA,CACA7+H,OACAy/C,QAAArrC,EAAA,GACAyrC,QAAAzrC,EAAA,MAMKrrB,MACL81I,KAqBA,SAAA+sC,EAAA9xK,EAAA6wK,EAAAc,EAAAb,EAAAY,EAAAE,EAAAS,EAAAC,EAAAJ,EAAApxE,GAEA,GAAAuxE,EAAA,CASA,IAAA2B,EAAA3B,EAAAhnI,YAEA,GAAA2oI,KAAAC,SAAA,CAIA,IAAAC,EAAAF,EAAAt9K,MACAy9K,EAAAH,EAAAr9K,OACAwqI,EAAA6yC,EAAA7yC,YACAizC,EAAAJ,EAAA3mG,UACAgnG,EAAAhC,EAAAtrI,cACAutI,EAAAhC,KAAAvrI,cACAirI,EAAAK,EAAAtxE,aACAwzE,EAAAP,EAAAO,YACAC,EAAAxC,KAAAtlL,OACA+nL,EAAApC,EAAA52K,SAAA,aACAi5K,EAAArC,EAAA52K,SAAA,sBAIAtF,EAAAw+K,EAAA,YAAA/nK,GAEA,GAAAzW,EAAA,CAUA,GANA+7K,EAAA9yK,IAAAjJ,GAEAA,EAAAyf,KAAA,YAAAo+J,EAAA/0K,GAAA,EAAA+0K,EAAA90K,GAAA,IACA/I,EAAA48K,cAAAmB,EACA/9K,EAAA68K,eAAAmB,EAEAH,EAAAY,gBACA,OAAAz+K,EAIA,IAAA0+K,EAAAF,EAAA,aAAAxnK,EAAA2zF,EAAAsvE,GAGA,GAFAyE,GAWA,SAAA1+K,EAAA0+K,EAAAC,GAEAD,EAAAz0K,UAAAiyK,EAAAjyK,UACAy0K,EAAAxtK,YAAArH,EAAAqH,YACAwtK,EAAA/gJ,SAAA,CACA70B,EAAA,EACAC,EAAA,EACAxI,MAAAw9K,EACAv9K,OAAAw9K,IAEA,IAAAY,EAAA1C,EAAAxyK,UAAA,kBACAm1K,EAAAN,EAAAtlL,IAAA,eACA8tK,EAAA2X,EAAA,WACA,IAAAjlK,EAAA2gK,EAAAkE,GACA7kK,EAAAH,KAAAslK,EACA,IAAAz9J,EAAAg5J,EAAAoE,GAGA,GAFAp9J,EAAA7H,KAAAulK,EAEAF,EAAA,CACA,IAAAG,EAAAf,EAAA,EAAA/yC,EACA+zC,EAAAtlK,EAAA0H,EAAAy9J,EAAAE,EAAAV,EAAA,CACAt1K,EAAAkiI,EACAjiI,EAAA,EACAxI,MAAAu+K,EACAt+K,OAAA49K,SAIA3kK,EAAAyI,KAAAf,EAAAe,KAAA,KAGAw8J,EAAAhvK,SAAA+J,GACA/b,EAAAsjB,cAAA09J,EAAAv9J,KAEAnhB,EAAAiJ,IAAAy1K,GA7CAvpC,CAAAn1I,EAAA0+K,EAAAL,GAAAR,EAAAO,cAEAC,EAAA,CACA,IAAAn0G,EAAAs0G,EAAA,UAAAxnK,EAAA2zF,EAAAuvE,GACAhwG,GA4CA,SAAAlqE,EAAAkqE,GAEAA,EAAAjgE,UAAAiyK,EAAAjyK,UACAigE,EAAAh5D,YAAArH,EAAAqH,YACA,IAAA+tC,EAAAx3C,KAAAG,IAAAm2K,EAAA,EAAA/yC,EAAA,GACAxqF,EAAA/4C,KAAAG,IAAAo2K,EAAA,EAAAhzC,EAAA,GACA9gE,EAAAmN,SAAA,EACAnN,EAAAvsC,SAAA,CACA70B,EAAAkiI,EACAjiI,EAAAiiI,EACAzqI,MAAA0+C,EACAz+C,OAAAggD,IAEA,IAAA4vD,EAAA8rE,EAAAxyK,UAAA,YACAq9J,EAAA78F,EAAA,WACA,IAAAzwD,EAAA2gK,EAAAkE,GACA7kK,EAAAH,KAAA82F,EACA,IAAAjvF,EAAAg5J,EAAAoE,GACAQ,EAAAtlK,EAAA0H,EAAAivF,EAAAnxD,EAAAuB,GACA0pB,EAAAx6D,SAAA+J,GACA/b,EAAAsjB,cAAAkpD,EAAA/oD,KAEAnhB,EAAAiJ,IAAAihE,GAlEA80G,CAAAh/K,EAAAkqE,GAGA,OAAAlqE,IAkEA,SAAA+mK,EAAAzhD,EAAA1tH,GACAqmL,GAYA34D,EAAApuC,WAAAukG,EAAAlhL,KAAA+qH,IARA1tH,IAEA0tH,EAAA25D,kBACA35D,EAAApuC,WAAA,IASA,SAAA6nG,EAAAtlK,EAAA0H,EAAAivF,EAAA7vG,EAAAC,EAAA0+K,GACA,IAAAC,EAAAjD,EAAA52K,WACA4c,EAAAvlB,EAAA5B,SAAA8O,EAAAiY,kBAAAo6J,EAAAjyK,UAAA,mBAAAi1K,EAAA,sBAAAC,EAAAlmL,IAAA,SAEA,IAAAimL,GAAArB,EAAAN,WAAA,CACA,IAAA6B,EAAAv1K,EAAA5Q,IAAA,oBACAipB,EAAAk9J,IAAA,IAAAl9J,IAGA,IAAAm9J,EAAAF,EAAA75K,SAAA45K,EAAApF,EAAAF,GACA0F,EAAAH,EAAA75K,SAAA45K,EAAAnF,EAAAF,GACA0F,EAAAF,EAAAnjK,WAAA,QACAxe,EAAAwjB,cAAAzH,EAAA0H,EAAAk+J,EAAAC,EAAA,CACAv9J,YAAAw9J,EAAAr9J,EAAA,KACA1H,UAAA41F,EACAp0F,YAAA,IAEAkjK,IAAAzlK,EAAAqiC,SAAAn/C,EAAA5G,MAAAmpL,IACAzlK,EAAAkmC,SAAA4/H,GAAAF,EAAApmL,IAAA,aACAgnD,WAAA1/C,EACAu/C,YAAAt/C,EACAq+C,QAAA,GACK,KAGL,SAAA2/H,EAAAnC,EAAA7lL,EAAAm0G,EAAAt5F,GACA,IAAAi0G,EAAA,MAAA64D,GAAA3C,EAAAa,GAAA8B,GACAqB,EAAAjE,EAAAc,GAiBA,OAfA/2D,GAEAk2D,EAAAa,GAAA8B,GAAA,KAgBA,SAAAqB,EAAAl6D,EAAA+2D,IACAmD,EAAAtB,GAAA,IACAlB,IAAA,cAAAX,EAAA/2D,EAAA5sG,SAAAjjB,QAAAkH,EAAAlD,OAAA,GAA2F6rH,EAAAhlG,OAjB3Fm/J,CAAAD,EAAAl6D,EAAA+2D,IAEA4B,KACA34D,EAAA,IAAA9uH,EAAA,CACA6a,EAAAquK,EAAA/0E,EAAAt5F,MAEAsuK,UAAAh1E,EACA2a,EAAAs6D,gBAAAvD,EAeA,SAAAmD,EAAAl6D,EAAA+2D,GACA,IAAAwD,EAAAL,EAAAtB,GAAA,GACAxyG,EAAAwwG,EAAAxwG,WAEA,GAAAA,KAAAivG,GAAA,cAAAA,EAAA33J,WAAA,CACA,IAAA88J,EAAA,EACAC,EAAA,EAGAC,EAAAzE,EAAAhB,WAAA7uG,EAAA96B,gBAEA+pI,GAAAqF,KAAAhD,MACA8C,EAAAE,EAAAhD,IAAAz8K,MACAw/K,EAAAC,EAAAhD,IAAAx8K,QAKAq/K,EAAA7C,IAAA,cAAAX,EAAA,GAAA0D,GAAA,CACAj3K,EAAAg3K,EACA/2K,EAAAg3K,EACAx/K,MAAA,EACAC,OAAA,GAKAq/K,EAAA5C,OAAA,cAAAZ,EAzCA4D,CAAAT,EAAAl6D,EAAA+2D,IAIA3B,EAAA2B,GAAA6B,GAAA54D,GA+CA,SAAAo6D,EAAA/0E,EAAAu1E,GACA,IAAAC,EAAAx1E,EAAAqvE,EAAAkG,EACA,OAAAC,EAAA,GAAAA,EAGAlvJ,EAAA93B,QAAA+gC,mBC52BA,IAAAx8B,EAAclB,EAAQ,KAEtBsb,EAAatb,EAAQ,KAErBG,EAAaH,EAAQ,KAIrB8vE,EAFkB9vE,EAAQ,KAE1B8vE,iBAsBA8zG,EAAA,EAEA,SAAA1G,EAAAmB,GAKA/hL,KAAAkH,MAAA,IAAAtC,EAAA+Y,MACAokK,EAAA5xK,IAAAnQ,KAAAkH,OA6GA,SAAAqgL,EAAAv3K,EAAAC,EAAA2lB,EAAAw8G,EAAAxf,EAAAnX,GACA,IAAArwF,EAAA,EAAAwnG,EAAA5iH,IAAAs3K,EAAAr3K,GAAA,CAAAD,EAAA4lB,EAAA3lB,GAAA,CAAAD,EAAA4lB,EAAA3lB,EAAAmiI,GAAA,CAAAxf,EAAA5iH,IAAAs3K,EAAAr3K,EAAAmiI,IAGA,OAFA32B,GAAArwF,EAAApV,OAAA,KAAAhG,EAAA4lB,EAAA0xJ,EAAAr3K,EAAAmiI,EAAA,KACAxf,GAAAxnG,EAAA3pB,KAAA,CAAAuO,EAAAC,EAAAmiI,EAAA,IACAhnH,EAIA,SAAAo8J,EAAA/+K,EAAAsI,EAAA02K,GACAh/K,EAAAqQ,UAAA,CACA/K,cAAA,SACAi9F,iBAAA,UACA5yF,YAAArH,EAAA6E,eACA62B,WAAA17B,EAAAxQ,KACAirE,WAAA,UACAk8G,SAAA,aAEAh9C,SAAA,CACAv5H,UAAAs2K,KAAAt2K,UACA5Q,KAAAknL,KAAAlnL,MAEAkzE,aAAAg0G,GAAAj0G,EAAAi0G,EAAA12K,IA/HA6vK,EAAA1kL,UAAA,CACAyB,YAAAijL,EACA/uK,OAAA,SAAAd,EAAA5I,EAAA8qE,EAAA00G,GACA,IAAAl3K,EAAAM,EAAAvE,SAAA,cACAqxG,EAAA79G,KAAAkH,MAGA,GAFA22G,EAAAzjD,YAEA3pD,EAAAtQ,IAAA,SAAA8yE,EAAA,CAIA,IAAA20G,EAAAn3K,EAAAjE,SAAA,aAEAqW,EAAA+kK,EAAAp7K,SAAA,aACAq7K,EAAA,CACAl6G,IAAA,CACA3+D,KAAAyB,EAAAtQ,IAAA,QACAgP,MAAAsB,EAAAtQ,IAAA,SACA+O,IAAAuB,EAAAtQ,IAAA,OACAiP,OAAAqB,EAAAtQ,IAAA,WAEAm5B,IAAA,CACA7xB,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aAEAwyK,eAAA1uK,EAAAtQ,IAAA,kBACA2nL,WAAA,EACAC,WAAA,IAGA/nL,KAAAgoL,SAAA/0G,EAAA40G,EAAAhlK,GAEA7iB,KAAAioL,eAAAl3K,EAAA82K,EAAAD,EAAA/kK,EAAA8kK,GAEA3oK,EAAAmb,gBAAA0jF,EAAAgqE,EAAAl6G,IAAAk6G,EAAAvuJ,OAOA0uJ,SAAA,SAAA/0G,EAAA40G,EAAAhlK,GACA,QAAA5L,EAAAg8D,EAA+Bh8D,EAAMA,IAAA27D,WAAA,CACrC,IAAAxpD,EAAAnS,EAAAzK,WAAArM,IAAA,QACA6iD,EAAAngC,EAAAub,YAAAhV,GACAwM,EAAAjnB,KAAAG,IAAAk0C,EAAAv7C,MAAAygL,GAAAL,EAAA1I,gBACA0I,EAAAC,YAAAlyJ,EA1DA,EA2DAiyJ,EAAAE,WAAAtmL,KAAA,CACAwV,OACAmS,OACA3hB,MAAAmuB,MAQAqyJ,eAAA,SAAAl3K,EAAA82K,EAAAD,EAAA/kK,EAAA8kK,GASA,IAPA,IAAAQ,EAAA,EACAhJ,EAAA0I,EAAA1I,eACAz3K,EAAAqJ,EAAA5Q,IAAA,qBACAioL,EAAAppK,EAAAkb,iBAAA2tJ,EAAAl6G,IAAAk6G,EAAAvuJ,KACAwuJ,EAAAD,EAAAC,WACAC,EAAAF,EAAAE,WAEAxqL,EAAAwqL,EAAAtqL,OAAA,EAAuCF,GAAA,EAAQA,IAAA,CAC/C,IAAAqS,EAAAm4K,EAAAxqL,GACAkqL,EAAA73K,EAAAqH,KACA2e,EAAAhmB,EAAAnI,MACA2hB,EAAAxZ,EAAAwZ,KAEA0+J,EAAAM,EAAA3gL,QACAqgL,GAAAlyJ,EAAAupJ,EACAvpJ,EAAAupJ,EACA/1J,EAAA,MAGA,IAAA3gB,EAAA,IAAA7D,EAAAoZ,QAAA,CACAwJ,MAAA,CACA4D,OAAAm8J,EAAAY,EAAA,EAAAvyJ,EAAAluB,EAAAnK,IAAAwqL,EAAAtqL,OAAA,MAAAF,IAEAwS,MAAAlM,EAAArF,SAAAopL,EAAAzmG,eAAA,CACA2nC,SAAA,QACA1/F,OACAjI,SAAA0B,EAAAosD,eACA1lB,SAAA1mC,EAAA2G,YAEAjR,EAAA,GACA8vK,QAAAxkL,EAAAjC,MAAA+lL,EAAAF,KAEAznL,KAAAkH,MAAAiJ,IAAA1H,GACA++K,EAAA/+K,EAAAsI,EAAA02K,GACAU,GAAAvyJ,EA1GA,IAiHA7f,OAAA,WACA/V,KAAAkH,MAAAkzD,cA6BA,IAAAh5B,EAAAw/I,EACAzoJ,EAAA93B,QAAA+gC,mBC7KA,IAAAv9B,EAAaH,EAAQ,KAsHrBrD,EAAAwjL,WAjFA,WACA,IAEAyE,EAFA/6K,EAAA,GACAg7K,EAAA,GAEA,OAmBAp4K,IAAA,SAAA1H,EAAAxK,EAAAyyC,EAAAg2B,EAAA2oD,GAMA,OALAxrH,EAAA/B,SAAA4kE,KACA2oD,EAAA3oD,EACAA,EAAA,IAGA6hH,EAAA9/K,EAAAxB,MAIAshL,EAAA9/K,EAAAxB,IAAA,EACAsG,EAAA9L,KAAA,CACAgH,KACAxK,SACAyyC,OACAg2B,QACA2oD,YAEA,IASAoD,KAAA,SAAAp7C,GAEA,OADAixG,EAAAjxG,EACAr3E,MAMAi2C,MAAA,WAGA,IAFA,IAAA5oB,EAAA9f,EAAA9P,OAEAF,EAAA,EAAAC,EAAA+P,EAAA9P,OAA2CF,EAAAC,EAASD,IAAA,CACpD,IAAAqS,EAAArC,EAAAhQ,GACAqS,EAAAnH,GAAAie,UAAA9W,EAAA3R,OAAA2R,EAAA8gC,KAAA9gC,EAAA82D,MAAA92D,EAAAy/G,OAAAoD,GAGA,OAAAzyH,KAEA,SAAAyyH,MACAplG,IAGA9f,EAAA9P,OAAA,EACA8qL,EAAA,GACAD,6BChFA,IA/BA,IAAAhzJ,EAAc5xB,EAAQ,KAEtB4gF,EAAa5gF,EAAQ,KAyBrBD,EAAA,aAEA+kL,EAAA,oDAEAjrL,EAAA,EAAeA,EAAAirL,EAAA/qL,OAAwBF,IACvC+3B,EAAAlb,eAAA,CACA7a,KAAAipL,EAAAjrL,GACA2N,OAAA,cACGzH,GAGH6xB,EAAAlb,eAAA,CACA7a,KAAA,oBACA2L,OAAA,cACC,SAAAuG,EAAAhH,GACDA,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,UACAC,MAAA9B,GAGA,SAAAhB,EAAA1H,GACA,IACA+sI,EAAAxxD,EAAAxR,mBAAArhE,EADA,0CACAhB,GAEA,GAAAqlI,EAAA,CACA,IAAA2yC,EAAAh4K,EAAAkwK,cAEA8H,IACAh3K,EAAAyY,UAAAo6D,EAAAjR,cAAAo1G,EAAA3yC,EAAA7+H,MAAA,sBAGAxG,EAAA4vK,cAAAvqC,EAAA7+H,4BC3DA,IAAA48D,EAAoBnwE,EAAQ,KAE5BiwE,EAAcjwE,EAAQ,KAEtBG,EAAaH,EAAQ,KAqBrBpF,EAAAuF,EAAAvF,QACAoqL,EAAA,YACAtnJ,EAAA,CACAoqC,WAAA,UACAzhC,MAAA,SAAAh5B,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAo3D,EAAA93D,EAAAC,UAAA63D,KACAmK,EAAAnK,EAAAmK,KACA21G,EAAA53K,EAAAvE,SAAAk8K,GAEA11G,EAAAs/B,aAYA,SAAAs2E,EAAA3xK,EAAA4xK,EAAAC,EAAAH,EAAAI,EAAAh4K,GACA,IAAAs1K,EAAApvK,EAAAzK,WACA,IAAAw8K,EAAA/xK,EAAAmlC,YAEA,IAAA4sI,KAAA5qG,YAAA4qG,EAAAhE,SACA,OAGA,IAAAiE,EAAAhyK,EAAAzK,SAAAk8K,GACA,IAAAQ,EAAAJ,EAAA7xK,EAAA46F,OACA,IAAAkqC,EAgCA,SAAAktC,EAAAJ,EAAAK,EAAAP,GACA,IAAA5sC,EAAAl4I,EAAAlD,OAAA,GAAgCkoL,GAUhC,OATAhlL,EAAAjF,KAAA,kDAAAuqL,GAEA,IAAAzmL,EAAAumL,EAAA9oL,IAAAgpL,GAAA,GAEA,MAAAzmL,GAAAwmL,IAAAxmL,EAAAwmL,EAAAC,IACA,MAAAzmL,MAAAmmL,EAAAM,IACA,MAAAzmL,MAAAimL,EAAAxoL,IAAAgpL,IACA,MAAAzmL,IAAAq5I,EAAAotC,GAAAzmL,KAEAq5I,EA3CAqtC,CAAAH,EAAAJ,EAAAK,EAAAP,GAEA,IAAA3yJ,EAAAizJ,EAAA9oL,IAAA,eACA,IAAAm/K,EAAA2J,EAAA9oL,IAAA,yBACA,IAAAkpL,EAEA,MAAA/J,IAEA+J,EAAAC,EAAAvtC,GACA/lH,EAwDA,SAAAspJ,EAAA+J,GACA,aAAAA,EAAA11G,EAAAve,UAAAi0H,EAAA,UAAA/J,GAAA,KAzDAiK,CAAAjK,EAAA+J,IAGApyK,EAAAilC,UAAA,cAAAlmB,GACA,IAAA87E,EAAA76F,EAAA66F,aAEA,GAAAA,KAAAr0G,OAIG,CACH,IAAA27I,EAyDA,SAAAniI,EAAAovK,EAAA2C,EAAAC,EAAAltC,EAAAjqC,GACA,IAAAA,MAAAr0G,OACA,OAGA,IAAA+rL,EAAAC,EAAApD,EAAA,gBAAAtqC,EAAA57H,OAAA,SAAA47H,EAAA57H,QAAAspK,EAAApD,EAAA,eAAAoD,EAAApD,EAAA,oBAEA,IAAAmD,EACA,OAGA,IAAAhK,EAAA6G,EAAAlmL,IAAA,aACAs/K,EAAA4G,EAAAlmL,IAAA,aACAutB,EAAAs7J,EAAAt7J,WAAA/wB,QACA,MAAA6iL,KAAA9xJ,EAAA,KAAAA,EAAA,GAAA8xJ,GACA,MAAAC,KAAA/xJ,EAAA,KAAAA,EAAA,GAAA+xJ,GACA,IAAAC,EAAA2G,EAAAlmL,IAAA,kBACA4X,EAAA,CACAxY,KAAAiqL,EAAAjpL,KACAmtB,aACAuuB,OAAAutI,EAAAr9J,OAGA,UAAApU,EAAAxY,MAAA,UAAAmgL,GAAA,OAAAA,EAIA3nK,EAAA+7D,cAAA,UAHA/7D,EAAA+7D,cAAA,WACA/7D,EAAA2sB,MAAA,GAKA,IAAA00G,EAAA,IAAAvlE,EAAA97D,GAEA,OADAqhI,EAAAswC,mBAAAhK,EACAtmC,EAzFAuwC,CAAA1yK,EAAAovK,EAAA2C,EAAAC,EAAAltC,EAAAjqC,GAEAjuG,EAAAjF,KAAAkzG,EAAA,SAAA9vF,EAAAjZ,GAEA,GAAAiZ,EAAA6vF,OAAAk3E,EAAAtrL,QAAAukB,IAAA+mK,EAAA/mK,EAAA6vF,OAAA,CACA,IAAA+3E,EAwGA,SAAAvD,EAAAtqC,EAAA/5H,EAAAjZ,EAAAqwI,EAAAroI,GACA,IAAA84K,EAAAhmL,EAAAlD,OAAA,GAAqCo7I,GAErC,GAAA3C,EAAA,CACA,IAAA0wC,EAAA1wC,EAAA75I,KACAmgL,EAAA,UAAAoK,GAAA1wC,EAAAswC,mBACApqL,EAAA,UAAAogL,EAAA32K,EAAA,OAAA22K,EAAA3uK,EAAAwvK,aAAAv+J,EAAAkyB,SAAAlyB,EAAA8wF,SAAAuzE,EAAAlmL,IAAA,oBACA0pL,EAAAC,GAAA1wC,EAAAlkE,iBAAA51E,GAGA,OAAAuqL,EAlHAvyG,CAAA+uG,EAAAtqC,EAAA/5H,EAAAjZ,EAAAqwI,EAAAroI,GACA63K,EAAA5mK,EAAA4nK,EAAAd,EAAAH,EAAAI,EAAAh4K,WAVAs4K,EAAAC,EAAAvtC,GAEA9kI,EAAAilC,UAAA,QAAAmtI,GAjCAT,CAAA51G,EACA,GAJAnvE,EAAAhH,IAAAgsE,EAAAspC,YAAA,SAAAY,GACA,OAAAA,IAAA5yG,IAAAuoL,GAAA,OAGMC,EAAA53K,EAAA4vK,cAAAhuE,eAAA5hG,KA4DN,SAAAu4K,EAAAvtC,GACA,IAAA57H,EAAA4pK,EAAAhuC,EAAA,SAEA,GAAA57H,EAAA,CACA,IAAAi2D,EAAA2zG,EAAAhuC,EAAA,cACA7lE,EAAA6zG,EAAAhuC,EAAA,mBAUA,OARA7lE,IACA/1D,EAAAwzD,EAAAve,UAAAj1C,EAAA,UAAA+1D,IAGAE,IACAj2D,EAAAwzD,EAAA1d,YAAA91C,EAAAi2D,IAGAj2D,GAQA,SAAA4pK,EAAAhuC,EAAAx7I,GACA,IAAAjB,EAAAy8I,EAAAx7I,GAEA,SAAAjB,GAAA,SAAAA,EACA,OAAAA,EA8CA,SAAAmqL,EAAApD,EAAA9lL,GAGA,IAAA4rB,EAAAk6J,EAAAlmL,IAAAI,GACA,OAAAjC,EAAA6tB,MAAA1uB,OAAA,CACA8C,OACA4rB,SACG,KAgBHgM,EAAA93B,QAAA+gC,mBCtMA,IAAAv9B,EAAaH,EAAQ,KAErB+a,EAAmB/a,EAAQ,KAE3Bk+D,EAAcl+D,EAAQ,KAEtB6oB,EAAAq1C,EAAAr1C,aACAwC,EAAA6yC,EAAA7yC,iBAEA/P,EAAatb,EAAQ,KAErB4gF,EAAa5gF,EAAQ,KAqBrBmL,EAAAF,KAAAG,IACAJ,EAAAC,KAAAC,IACAo7K,EAAAnmL,EAAA5B,SACArD,EAAAiF,EAAAjF,KACAqrL,EAAA,4BACAC,EAAA,yBACAC,EAAA,sBACAC,EAAA,wBAKAhpJ,EAAA,CACAoqC,WAAA,UACAzhC,MAAA,SAAAh5B,EAAAtG,EAAAtC,EAAAsJ,GAGA,IAAAgkJ,EAAAttJ,EAAAuE,WACAgpJ,EAAAvtJ,EAAAwE,YACA4kF,EAAAxgF,EAAA/E,OACAw3F,EAAAxkF,EAAAya,cAAA1oB,EAAA0tF,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,cAEAoyC,EAAAwyC,EAAAxyC,MAAA,GAEAllB,EAAAtN,EAAAy9J,EAAAxmF,EAAA/7F,MAAAs3C,EAAA,IAAA02G,GACA37H,EAAAvN,EAAAy9J,EAAAxmF,EAAA97F,OAAAq3C,EAAA,IAAA22G,GAEA5hJ,EAAArC,KAAAlS,KAEAu2I,EAAAxxD,EAAAxR,mBAAArhE,EADA,0CACAV,GACAwzK,EAAA,kBAAAzwK,GAAA,gBAAAA,EAAArC,EAAA8yK,SAAA,KACAjxG,EAAAviE,EAAA4vK,cACA0J,EAAA/lG,EAAA3R,cAAAW,GAEA,mBAAAx/D,EAAA,CACA,IAAAw2K,EAAA,sBAAAx2K,EA2VA,SAAA/C,EAAA+kI,EAAAxiE,EAAAz5C,EAAAC,GAGA,IAOA9wB,EAPAuhL,GAAAz0C,GAAA,IAAkC7+H,KAClCuzK,EAAA,CAAA3wJ,EAAAC,GAEA,IAAAywJ,OAAAj3G,EACA,OAAAk3G,EAIA,IAAAC,EAAA5wJ,EAAAC,EACAy7G,EAAAk1C,EAAA15K,EAAA/E,OAAAgzK,gBAEA,KAAAh2K,EAAAuhL,EAAA33G,YAAA,CAKA,IAHA,IAAA1kD,EAAA,EACA86G,EAAAhgI,EAAAuiF,SAEAhuF,EAAA,EAAAC,EAAAwrI,EAAAvrI,OAA0CF,EAAAC,EAASD,IACnD2wB,GAAA86G,EAAAzrI,GAAAu1G,WAGA,IAAA43E,EAAAH,EAAAz3E,WAEA,OAAA43E,EACA,OAAAF,EAGAj1C,GAAArnH,EAAAw8J,EAEA,IAAA3mK,EAAA/a,EAAAwD,WACA0lI,EAAAnuH,EAAA5jB,IAAA8pL,GACA3E,EAAA32K,KAAAG,IAAAojI,EAAAy4C,EAAA5mK,KACAwxH,GAAA,EAAArD,KAAA,EAAAA,EAAAozC,GAAA32K,KAAA0f,IAAAknH,EAAA,KACAxmH,IAAAwmH,EAAAxmH,GACAw7J,EAAAvhL,EAGAusI,EAAAk1C,IAAAl1C,EAAAk1C,GACA,IAAA9tJ,EAAAhuB,KAAA0f,IAAAknH,EAAAk1C,EAAA,IACA,OAAA5wJ,EAAA8C,EAAA7C,EAAA6C,GApYAiuJ,CAAA75K,EAAA+kI,EAAAxiE,EAAAz5C,EAAAC,GAAAyqJ,EAAA,CAAAA,EAAA98K,MAAA88K,EAAA78K,QAAA,CAAAmyB,EAAAC,GACA5M,EAAAqkE,EAAArkE,KAEAA,GAAA,QAAAA,GAAA,SAAAA,IACAA,EAAA,QAGA,IAAAy4B,EAAA,CACAk5H,YAAAttF,EAAAstF,YACA3xJ,OACA4xJ,UAAAvtF,EAAAutF,WAGAxrG,EAAAs+B,SAAA4B,eAKA,IAAAq3E,EAAA,CACA76K,EAAA,EACAC,EAAA,EACAxI,MAAA6iL,EAAA,GACA5iL,OAAA4iL,EAAA,GACA/0C,KAAA+0C,EAAA,GAAAA,EAAA,IAEAh3G,EAAAn3B,UAAA0uI,GAqCA,SAAAC,EAAA7zK,EAAA0uC,EAAAolI,EAAAl5E,GACA,IAAApqG,EACA,IAAAC,EAEA,GAAAuP,EAAAq7F,YACA,OAGA,IAAAyyE,EAAA9tK,EAAAmlC,YACA30C,EAAAs9K,EAAAt9K,MACAC,EAAAq9K,EAAAr9K,OAEA,IAAA2+K,EAAApvK,EAAAzK,WACA,IAAA0lI,EAAAm0C,EAAAlmL,IAAA8pL,GACA,IAAAe,EAAA3E,EAAAlmL,IAAA+pL,GAAA,EACA,IAAAe,EAAAN,EAAAtE,GACA,IAAAf,EAAA32K,KAAAG,IAAAojI,EAAA+4C,GACA,IAAAC,EAAAh5C,EAAA84C,EACA,IAAAG,EAAA7F,EAAA0F,EACA,IAAA3E,EAAApvK,EAAAzK,WACAyK,EAAAklC,UAAA,CACA+1F,cACAozC,cACA2F,qBACG,GACHxjL,EAAAoH,EAAApH,EAAA,EAAAyjL,EAAA,GACAxjL,EAAAmH,EAAAnH,EAAAwjL,EAAAC,EAAA,GACA,IAAAC,EAAA3jL,EAAAC,EACA,IAAAoqG,EA0DA,SAAA76F,EAAAovK,EAAA+E,EAAAzlI,EAAAolI,EAAAl5E,GACA,IAAAC,EAAA76F,EAAAs0E,UAAA,GACA8/F,EAAA1lI,EAAAz4B,KACA,QAAAm+J,GAAA,SAAAA,MAAA,MACA,IAAAC,EAAA,MAAA3lI,EAAAm5H,WAAAn5H,EAAAm5H,WAAAjtE,EAEA,GAAAk5E,IAAAO,EACA,OAAAr0K,EAAA66F,aAAA,IA0EA,SAAAA,EAAAu5E,GACAA,GACAv5E,EAAA5kF,KAAA,SAAA7pB,EAAAC,GACA,IAAAq2C,EAAA,QAAA0xI,EAAAhoL,EAAAyvG,WAAAxvG,EAAAwvG,WAAAxvG,EAAAwvG,WAAAzvG,EAAAyvG,WACA,WAAAn5D,EAAA,QAAA0xI,EAAAhoL,EAAA8N,UAAA7N,EAAA6N,UAAA7N,EAAA6N,UAAA9N,EAAA8N,UAAAwoC,IAvEAzsB,CAHA4kF,EAAAjuG,EAAApH,OAAAq1G,EAAA,SAAA9vF,GACA,OAAAA,EAAAswF,cAEA+4E,GACA,IAAAv2C,EAiFA,SAAAuxC,EAAA96F,EAAA8/F,GAIA,IAFA,IAAAn9J,EAAA,EAEA3wB,EAAA,EAAAC,EAAA+tF,EAAA9tF,OAAwCF,EAAAC,EAASD,IACjD2wB,GAAAq9D,EAAAhuF,GAAAu1G,WAOA,IAAA53D,EAAAmrI,EAAAlmL,IAAA,mBAGA,GAAAorF,KAAA9tF,OAEG,aAAAy9C,GAAAmwI,EACH39J,EAAA,CAAA69D,IAAA9tF,OAAA,GAAAq1G,WAAAvnB,EAAA,GAAAunB,YACA,QAAAu4E,GAAA39J,EAAAmlD,cAEA,CACA,IAAAnlD,EAAA,CAAAze,UACArQ,EAAA2sF,EAAA,SAAAvpE,GACA,IAAA1iB,EAAA0iB,EAAA8wF,SAAA53D,GACA57C,EAAAouB,EAAA,KAAAA,EAAA,GAAApuB,GACAA,EAAAouB,EAAA,KAAAA,EAAA,GAAApuB,UAVAouB,EAAA,CAAAd,SAcA,OACAsB,MACAR,cAjHA69J,CAAAlF,EAAAv0E,EAAAu5E,GAEA,OAAAv2C,EAAA5mH,IACA,OAAAjX,EAAA66F,aAAA,GAKA,GAFAgjC,EAAA5mH,IAiCA,SAAAm4J,EAAA+E,EAAAl9J,EAAAm9J,EAAAG,GAEA,IAAAH,EACA,OAAAn9J,EAOA,IAJA,IAAAyxJ,EAAA0G,EAAAlmL,IAAA,cACA3C,EAAAguL,EAAA/tL,OACAguL,EAAAjuL,EAEAD,EAAAC,EAAA,EAAuBD,GAAA,EAAQA,IAAA,CAC/B,IAAA+B,EAAAksL,EAAA,QAAAH,EAAA7tL,EAAAD,EAAA,EAAAA,GAAAu1G,WAEAxzG,EAAA4uB,EAAAk9J,EAAAzL,IACA8L,EAAAluL,EACA2wB,GAAA5uB,GAKA,MADA,QAAA+rL,EAAAG,EAAAx1K,OAAA,EAAAxY,EAAAiuL,GAAAD,EAAAx1K,OAAAy1K,EAAAjuL,EAAAiuL,GACAv9J,EArDAw9J,CAAArF,EAAA+E,EAAAt2C,EAAA5mH,IAAAm9J,EAAAv5E,GAEA,IAAAgjC,EAAA5mH,IACA,OAAAjX,EAAA66F,aAAA,GAIA,QAAAv0G,EAAA,EAAAC,EAAAs0G,EAAAr0G,OAA4CF,EAAAC,EAASD,IAAA,CACrD,IAAAg4I,EAAAzjC,EAAAv0G,GAAAu1G,WAAAgiC,EAAA5mH,IAAAk9J,EAEAt5E,EAAAv0G,GAAA4+C,UAAA,CACAo5F,SAIA+1C,IACAx5E,EAAAr0G,QAAAwZ,EAAAklC,UAAA,CACAsoI,YAAA,IACK,GACL3yE,EAAAr0G,OAAA,GAOA,OAJAwZ,EAAA66F,eACA76F,EAAAklC,UAAA,CACAzuB,WAAAonH,EAAApnH,aACG,GACHokF,EAzGA65E,CAAA10K,EAAAovK,EAAA+E,EAAAzlI,EAAAolI,EAAAl5E,GAEA,IAAAC,EAAAr0G,OACA,OAGA,IAAAshB,EAAA,CACA/O,EAAAk7K,EACAj7K,EAAAk7K,EACA1jL,QACAC,UAEA,IAAAkkL,EAAAl9K,EAAAjH,EAAAC,GACA,IAAAmkL,EAAA58K,IAEA,IAAAo2D,EAAA,GACAA,EAAAkwE,KAAA,EAEA,QAAAh4I,EAAA,EAAAC,EAAAs0G,EAAAr0G,OAA4CF,EAAAC,GAAS,CACrD,IAAAwkB,EAAA8vF,EAAAv0G,GACA8nE,EAAA5jE,KAAAugB,GACAqjD,EAAAkwE,MAAAvzH,EAAAo6B,YAAAm5F,KACA,IAAAu2C,EAAAC,EAAA1mH,EAAAumH,EAAAjmI,EAAAk5H,aAEAiN,GAAAD,GACAtuL,IACAsuL,EAAAC,IAGAzmH,EAAAkwE,MAAAlwE,EAAA/wD,MAAA8nC,YAAAm5F,KACA31H,EAAAylD,EAAAumH,EAAA7sK,EAAAisK,GAAA,GACAY,EAAAl9K,EAAAqQ,EAAAtX,MAAAsX,EAAArX,QACA29D,EAAA5nE,OAAA4nE,EAAAkwE,KAAA,EACAs2C,EAAA58K,KAIAo2D,EAAA5nE,QACAmiB,EAAAylD,EAAAumH,EAAA7sK,EAAAisK,GAAA,GAGA,IAAAD,EAAA,CACA,IAAAnL,EAAAyG,EAAAlmL,IAAA,sBAEA,MAAAy/K,GAAAwL,EAAAxL,IACAmL,GAAA,GAIA,QAAAxtL,EAAA,EAAAC,EAAAs0G,EAAAr0G,OAA4CF,EAAAC,EAASD,IACrDutL,EAAAh5E,EAAAv0G,GAAAooD,EAAAolI,EAAAl5E,EAAA,GAlHAi5E,CAAAx3G,EAAA3tB,GAAA,KAEAklI,EAAAv3G,EAAAl3B,YACAx9C,EAAAyrL,EAAA,SAAApzK,EAAAlO,GACA,IAAA+2K,GAAAuK,EAAAthL,EAAA,IAAAuqE,GAAAw/B,WACA77F,EAAAklC,UAAAt4C,EAAAlD,OAAA,CACA+sB,WAAA,CAAAoyJ,KACA5tC,YAAA,EACAozC,YAAA,GACSuF,MAIT,IAAAmB,EAAAj7K,EAAAC,UAAA63D,KAAAmK,KACAg5G,EAAA7vI,UAgWA,SAAAqnD,EAAA+gF,EAAAzuC,GACA,GAAAyuC,EACA,OACAv0K,EAAAu0K,EAAAv0K,EACAC,EAAAs0K,EAAAt0K,GAIA,IAAAg8K,EAAA,CACAj8K,EAAA,EACAC,EAAA,GAGA,IAAA6lI,EACA,OAAAm2C,EAMA,IAAAh5G,EAAA6iE,EAAA7+H,KACA+H,EAAAi0D,EAAA72B,YAEA,IAAAp9B,EACA,OAAAitK,EAIA,IAAAC,EAAA,CAAAltK,EAAAvX,MAAA,EAAAuX,EAAAtX,OAAA,GACAuP,EAAAg8D,EAEA,KAAAh8D,GAAA,CACA,IAAA+xK,EAAA/xK,EAAAmlC,YACA8vI,EAAA,IAAAlD,EAAAh5K,EACAk8K,EAAA,IAAAlD,EAAA/4K,EACAgH,IAAA27D,WAGA,OACA5iE,EAAAwzF,EAAA/7F,MAAA,EAAAykL,EAAA,GACAj8K,EAAAuzF,EAAA97F,OAAA,EAAAwkL,EAAA,IAxYAC,CAAA3oF,EAAA+gF,EAAAzuC,IAAA,GACA/kI,EAAAuvK,cAAA98E,GA6YA,SAAA4oF,EAAAn1K,EAAAo1K,EAAAhC,EAAA/2G,EAAAu+B,GACA,IAAAm3E,EAAA/xK,EAAAmlC,YACA,IAAAkwI,EAAAjC,EAAAx4E,GACA,IAAA8zE,EAAA2G,OAAAr1K,EAEA,GAAAq1K,IAAA3G,GAAA9zE,IAAAw4E,EAAA5sL,QAAAwZ,IAAAq8D,EACA,OAGAr8D,EAAAklC,UAAA,CAEA6oI,UAAA,EAGA5mG,WAAAunG,IAAA0G,EAAA5rJ,UAAAuoJ,GACArD,oBACG,GAEH,IAAA4G,EAAA,IAAA9tK,EAAA4tK,EAAAr8K,EAAAg5K,EAAAh5K,EAAAq8K,EAAAp8K,EAAA+4K,EAAA/4K,EAAAo8K,EAAA5kL,MAAA4kL,EAAA3kL,QACA9I,EAAAqY,EAAA66F,cAAA,YAAA9vF,GACAoqK,EAAApqK,EAAAuqK,EAAAlC,EAAA/2G,EAAAu+B,EAAA,KA9ZAu6E,CAAAJ,EACA,IAAAvtK,GAAA+kF,EAAAxzF,GAAAwzF,EAAAvzF,EAAAwlJ,EAAAC,GAAA20B,EAAA/2G,EAAA,KAgPA,SAAAy4G,EAAA1mH,EAAAumH,EAAAryF,GAIA,IAHA,IAGAg8C,EAHAi3C,EAAA,EACAC,EAAAx9K,IAEA1R,EAAA,EAAAC,EAAA6nE,EAAA5nE,OAAyCF,EAAAC,EAASD,KAClDg4I,EAAAlwE,EAAA9nE,GAAA6+C,YAAAm5F,QAGAA,EAAAk3C,MAAAl3C,GACAA,EAAAi3C,MAAAj3C,IAIA,IAAAm3C,EAAArnH,EAAAkwE,KAAAlwE,EAAAkwE,KACA1lH,EAAA+7J,IAAAryF,EACA,OAAAmzF,EAAA79K,EAAAghB,EAAA28J,EAAAE,KAAA78J,EAAA48J,IAAAx9K,IAOA,SAAA2Q,EAAAylD,EAAAumH,EAAA7sK,EAAAisK,EAAApjL,GASA,IAAA+kL,EAAAf,IAAA7sK,EAAAtX,MAAA,IACAmlL,EAAA,EAAAD,EACAzoF,EAAA,UACAC,EAAA,mBACA7gC,EAAAvkD,EAAAmlF,EAAAyoF,IACAE,EAAAjB,EAAAvmH,EAAAkwE,KAAAq2C,EAAA,GAEAhkL,GAAAilL,EAAA9tK,EAAAolF,EAAAyoF,OACAC,EAAA9tK,EAAAolF,EAAAyoF,KAGA,QAAArvL,EAAA,EAAAuvL,EAAAznH,EAAA5nE,OAAsCF,EAAAuvL,EAAYvvL,IAAA,CAClD,IAAA0Z,EAAAouD,EAAA9nE,GACAyrL,EAAA,GACAtkI,EAAAmoI,EAAA51K,EAAAmlC,YAAAm5F,KAAAs3C,EAAA,EACAE,EAAA/D,EAAA7kF,EAAAyoF,IAAA/9K,EAAAg+K,EAAA,EAAA7B,EAAA,GAEAgC,EAAAjuK,EAAAmlF,EAAAyoF,IAAA5tK,EAAAolF,EAAAwoF,IAAArpH,EACA2pH,EAAA1vL,IAAAuvL,EAAA,GAAAE,EAAAtoI,EAAAsoI,EAAAtoI,EACAwoI,EAAAlE,EAAA7kF,EAAAwoF,IAAA99K,EAAAo+K,EAAA,EAAAjC,EAAA,GACAhC,EAAA9kF,EAAA0oF,IAAA7tK,EAAAmlF,EAAA0oF,IAAAl+K,EAAAs8K,EAAA+B,EAAA,GACA/D,EAAA9kF,EAAAyoF,IAAArpH,EAAA50D,EAAAs8K,EAAAkC,EAAA,GACA5pH,GAAA2pH,EACAh2K,EAAAklC,UAAA6sI,GAAA,GAGAjqK,EAAAmlF,EAAA0oF,KAAAC,EACA9tK,EAAAolF,EAAAyoF,KAAAC,EAuHA,SAAAlC,EAAAl6K,GACA,OAAAA,EAAAtQ,IAAAgqL,GAAA15K,EAAAtQ,IAAAiqL,GAAA,EAGAjyJ,EAAA93B,QAAA+gC,mBCvhBA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAAypL,EAAqBzpL,EAAQ,KAE7B+gK,EAAmB/gK,EAAQ,KAE3B0pL,EAAqB1pL,EAAQ,KAE7B2pL,EAAiB3pL,EAAQ,KAEzBsnI,EAAmBtnI,EAAQ,KAE3BwnI,EAAqBxnI,EAAQ,KAE7B4pL,EAAkB5pL,EAAQ,KAE1B6pL,EAAiB7pL,EAAQ,KAqBzB4xB,EAAAtb,kBAAAmzK,GACA73J,EAAAhb,eAAAmqJ,EAAA,wBACAnvI,EAAAhb,eAAA8yK,GACA93J,EAAAhb,eAAA+yK,GACA/3J,EAAAlZ,eAAA4uH,GACA11G,EAAAlZ,eAAA8uH,GACA51G,EAAAlZ,eAAAkxK,GAEAh4J,EAAAzZ,yBAAA,aACAlK,OAAA47K,qBCpDA,IAAAj4J,EAAc5xB,EAAQ,KAEtB+tC,EAAW/tC,EAAQ,KAEnBG,EAAaH,EAAQ,KAIrBktB,EAFaltB,EAAQ,KAErBktB,gBAEAoV,EAAYtiC,EAAQ,KAIpBi6B,EAFcj6B,EAAQ,KAEtBi6B,WAEA6vJ,EAA8B9pL,EAAQ,KAqBtC+pL,EAAAn4J,EAAA9Y,kBAAA,CACAjd,KAAA,eACA+H,KAAA,SAAA0E,GACAyhL,EAAAj1H,WAAAx4D,KAAA,OAAAb,WAEAa,KAAA2pC,mBAAA,WACA,OAAA3pC,KAAA0tL,iBAGA1tL,KAAAuqC,kBAAAv+B,EAAAk+H,OAAAl+H,EAAAmtJ,OAEAn5J,KAAA2tL,yBAEA1mJ,YAAA,SAAAj7B,GACAyhL,EAAAj1H,WAAAx4D,KAAA,cAAAb,WACAa,KAAAuqC,kBAAAv+B,EAAAk+H,OAAAl+H,EAAAmtJ,OAEAn5J,KAAA2tL,yBAEA/mJ,qBAAA,SAAA56B,GACAyhL,EAAAj1H,WAAAx4D,KAAA,uBAAAb,WACAyxB,EAAA5kB,EAAA,yBAEAi+B,eAAA,SAAAj+B,EAAAvB,GACA,IAAAy/H,EAAAl+H,EAAAk+H,OAAAl+H,EAAAmtJ,OAAA,GACA5lD,EAAAvnG,EAAAxK,MAAAwK,EAAAunG,OAAA,GACAzlG,EAAA9N,KAEA,GAAAuzG,GAAA22B,EACA,OAAAsjD,EAAAj6E,EAAA22B,EAAAlqI,MAAA,EAGA,SAAA0qI,EAAAE,GAEAF,EAAA38F,WAAA,wBAAAt9B,GACA,IAAAm9K,EAAA9/K,EAAA+/K,kBACAC,EAAAr9K,EAAA2S,WAAA,YACA2qK,EAAAH,EAAAE,GAOA,OALAC,IACAA,EAAAhqK,YAAAtT,EAAAsT,YACAtT,EAAAsT,YAAAgqK,GAGAt9K,IAEA,IAAAu9K,EAAAlgL,EAAAtB,SAAA,aAEAyhL,EAAA,IAAAjoJ,EAAA,CACApO,MAAAo2J,EAAAhiL,QACOgiL,EAAAjqK,YAAAtZ,GACPyjL,EAAApgL,EAAAtB,SAAA,sBACA2hL,EAAA,IAAAnoJ,EAAA,CACAlV,SAAA,CACA8G,MAAAs2J,EAAAliL,SAEOkiL,EAAAnqK,YAAAtZ,GAMP,SAAA2jL,EAAAnvK,GAEA,OADAA,EAAAjf,KAAA2oC,UAAA1pB,KACA,UAAAA,EAAA,GAAAgvK,EAAAhvK,GAAA,aAAAA,EAAA,cAAAA,EAAA,GAAAkvK,EAAAnuL,KAAA+jB,YAPA6mH,EAAA78F,WAAA,wBAAAt9B,GAEA,OADAA,EAAAu4B,mBAAAolJ,GACA39K,MA9BAjP,MA2CAypI,SAAA,WACA,OAAAjrI,KAAAgR,UAAA8mB,OAMAu2J,YAAA,WACA,OAAAruL,KAAAirI,WAAAL,UAMA0jD,kBAAA,WACA,OAAAtuL,KAAA0tL,iBAMAxiJ,cAAA,SAAA/5B,EAAAg6B,EAAAtyB,GACA,YAAAA,EAAA,CACA,IAAA6xH,EAAA1qI,KAAAgR,UACAmH,EAAAnY,KAAA4Y,cAAAzH,EAAA0H,GACA8sB,EAAA+kG,EAAA5yG,MAAAy2J,eAAAp9K,GACAq9K,EAAA9jD,EAAAl+F,QAAA7G,EAAAgjG,MAAAx3H,WACAs9K,EAAA/jD,EAAAl+F,QAAA7G,EAAAijG,MAAAz3H,WACA01G,EAAA,GASA,OARA,MAAA2nE,GAAA3nE,EAAAplH,KAAA+sL,GACA,MAAAC,GAAA5nE,EAAAplH,KAAAgtL,GACA5nE,EAAAlpF,EAAAkpF,EAAAn9F,KAAA,QAEAvR,EAAA7Y,QACAunH,GAAA,MAAAlpF,EAAAxlB,EAAA7Y,QAGAunH,EAGA,OAAA4mE,EAAAj1H,WAAAx4D,KAAA,gBAAAb,YAGAwuL,sBAAA,WACA,IAAA55I,EAAAlwC,EAAAhH,IAAAmD,KAAAgM,OAAA+nC,YAAA,YAAA4hC,GAEA,aAAAA,EAAAr2E,MAAAq2E,EAAA9xE,EAAAlD,OAAA,CACArB,MAAA,GACOq2E,KAEP+4G,EAAA,IAAAj9I,EAAA,UAAAzxC,MACA0uL,EAAAr5I,SAAAtB,GACA/zC,KAAA0tL,gBAAAgB,EACA1uL,KAAA6tL,kBAAAa,EAAA9zI,SAAA,SAAA3sB,GACA,OAAAygK,EAAA5yI,aAAA7tB,GAAA,MAGA2wE,QAAA,SAAA32B,GACAjoE,KAAAgM,OAAAi8D,QAEA02B,UAAA,SAAAtS,GACArsF,KAAAgM,OAAAqgF,UAEAjmE,mBAAA,WACA,OAAAqnK,EAAAl1H,UAAAv4D,KAAA,yBACA,UAAAA,KAAAG,IAAA,WAAAH,KAAAG,IAAA,2BAEAmmC,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA7H,iBAAA,OAMAqxH,iBAAA,EACAxgD,gBAAA,EACAviE,OAAA,KACA2vK,oBAAA,EAEAC,SAAA,CACAC,aAAA,GAGA38G,MAAA,CACA48G,WAAA,KAEAC,UAAA,OACAC,QAAA,GAEAC,WAAA,GACAC,iBAAA,GAEAlgL,KAAA,SACAE,IAAA,SAKAkoB,OAAA,SACAC,WAAA,GACA83J,WAAA,gBACAC,eAAA,GACAC,UAAA,CACAzvK,SAAA,UAEAy+D,WAAA,EACA4gG,MAAA,EAEA5yF,OAAA,KACApkB,KAAA,EAEAqnH,eAAA,GAUA13J,MAAA,CACAZ,MAAA,EACAq6C,UAAA,OAEA55C,UAAA,GACAtB,UAAA,CACAhW,MAAA,OACA1Y,MAAA,EACAsjI,UAAA,EACA10D,QAAA,IAEAvlD,SAAA,CACA8G,MAAA,CACAZ,MAAA,OAKAoK,EAAAqsJ,EACAt1J,EAAA93B,QAAA+gC,mBC3Pc19B,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAIrBukC,EAFavkC,EAAQ,KAErBukC,iBA4BA,SAAAsnJ,EAAAtoL,GACA,aAAAA,EASA,IAAAgjI,EAAA,SAAAE,GAMAnqI,KAAAwvL,UAAArlD,IAAA,EAMAnqI,KAAAuzG,MAAA,GAMAvzG,KAAAkqI,MAAA,GAMAlqI,KAAAyvL,UAAA,GAMAzvL,KAAA0vL,UAAA,GAMA1vL,KAAAwB,KAMAxB,KAAA4qI,UAGA+kD,EAAA1lD,EAAA/tI,UAqSA,SAAA0zL,EAAA3oL,EAAAkK,GAIAnR,KAAAiH,GAAA,MAAAA,EAAA,GAAAA,EAKAjH,KAAA6vL,QAAA,GAKA7vL,KAAA8vL,SAAA,GAKA9vL,KAAAkqI,MAAA,GAKAlqI,KAAA+vL,UAKA/vL,KAAAmR,UAAA,MAAAA,GAAA,EAAAA,EAiDA,SAAA6+K,EAAAC,EAAAC,EAAA/+K,GAKAnR,KAAA2oI,MAAAsnD,EAMAjwL,KAAA4oI,MAAAsnD,EACAlwL,KAAAmR,UAAA,MAAAA,GAAA,EAAAA,EA1XAw+K,EAAApwL,KAAA,QAMAowL,EAAAQ,WAAA,WACA,OAAAnwL,KAAAwvL,WASAG,EAAAtlD,QAAA,SAAApjI,EAAAkK,GACAlK,KAAA,GAAAkK,EACA,IAAAi/K,EAAApwL,KAAAyvL,UAEA,IAAAW,EAAAb,EAAAtoL,IAAA,CAIA,IAAAgQ,EAAA,IAAA24K,EAAA3oL,EAAAkK,GAIA,OAHA8F,EAAA84K,UAAA/vL,KACAA,KAAAuzG,MAAA9xG,KAAAwV,GACAm5K,EAAAb,EAAAtoL,IAAAgQ,EACAA,IASA04K,EAAAU,eAAA,SAAAl/K,GACA,IAAA6mC,EAAAh4C,KAAAwB,KAAAs2C,YAAA3mC,GACA,OAAAnR,KAAAuzG,MAAAv7D,IASA23I,EAAAv8G,YAAA,SAAAnsE,GACA,OAAAjH,KAAAyvL,UAAAF,EAAAtoL,KAWA0oL,EAAAllD,QAAA,SAAAwlD,EAAAC,EAAA/+K,GACA,IAAAi/K,EAAApwL,KAAAyvL,UACAa,EAAAtwL,KAAA0vL,UAkBA,GAhBA,kBAAAO,IACAA,EAAAjwL,KAAAuzG,MAAA08E,IAGA,kBAAAC,IACAA,EAAAlwL,KAAAuzG,MAAA28E,IAGAN,EAAAp6I,WAAAy6I,KACAA,EAAAG,EAAAb,EAAAU,KAGAL,EAAAp6I,WAAA06I,KACAA,EAAAE,EAAAb,EAAAW,KAGAD,GAAAC,EAAA,CAIA,IAAApyL,EAAAmyL,EAAAhpL,GAAA,IAAAipL,EAAAjpL,GAEA,IAAAqpL,EAAAxyL,GAAA,CAIA,IAAA6nC,EAAA,IAAAqqJ,EAAAC,EAAAC,EAAA/+K,GAgBA,OAfAw0B,EAAAoqJ,UAAA/vL,KAEAA,KAAAwvL,YACAS,EAAAH,SAAAruL,KAAAkkC,GACAuqJ,EAAAL,QAAApuL,KAAAkkC,IAGAsqJ,EAAA/lD,MAAAzoI,KAAAkkC,GAEAsqJ,IAAAC,GACAA,EAAAhmD,MAAAzoI,KAAAkkC,GAGA3lC,KAAAkqI,MAAAzoI,KAAAkkC,GACA2qJ,EAAAxyL,GAAA6nC,EACAA,KASAgqJ,EAAApB,eAAA,SAAAp9K,GACA,IAAA6mC,EAAAh4C,KAAA4qI,SAAA9yF,YAAA3mC,GACA,OAAAnR,KAAAkqI,MAAAlyF,IAUA23I,EAAAY,QAAA,SAAAN,EAAAC,GACAN,EAAAp6I,WAAAy6I,KACAA,IAAAhpL,IAGA2oL,EAAAp6I,WAAA06I,KACAA,IAAAjpL,IAGA,IAAAqpL,EAAAtwL,KAAA0vL,UAEA,OAAA1vL,KAAAwvL,UACAc,EAAAL,EAAA,IAAAC,GAEAI,EAAAL,EAAA,IAAAC,IAAAI,EAAAJ,EAAA,IAAAD,IAUAN,EAAAp9E,SAAA,SAAAzzG,EAAAC,GAIA,IAHA,IAAAw0G,EAAAvzG,KAAAuzG,MACA/1G,EAAA+1G,EAAA91G,OAEAF,EAAA,EAAiBA,EAAAC,EAASD,IAC1Bg2G,EAAAh2G,GAAA4T,WAAA,GACArS,EAAAzB,KAAA0B,EAAAw0G,EAAAh2G,OAWAoyL,EAAA7kD,SAAA,SAAAhsI,EAAAC,GAIA,IAHA,IAAAmrI,EAAAlqI,KAAAkqI,MACA1sI,EAAA0sI,EAAAzsI,OAEAF,EAAA,EAAiBA,EAAAC,EAASD,IAC1B2sI,EAAA3sI,GAAA4T,WAAA,GAAA+4H,EAAA3sI,GAAAorI,MAAAx3H,WAAA,GAAA+4H,EAAA3sI,GAAAqrI,MAAAz3H,WAAA,GACArS,EAAAzB,KAAA0B,EAAAmrI,EAAA3sI,OAaAoyL,EAAAa,qBAAA,SAAA1xL,EAAA2xL,EAAAvmK,EAAAnrB,GAKA,GAJA6wL,EAAAp6I,WAAAi7I,KACAA,EAAAzwL,KAAAyvL,UAAAF,EAAAkB,KAGAA,EAAA,CAMA,IAFA,IAAA5qE,EAAA,QAAA37F,EAAA,kBAAAA,EAAA,kBAEA3sB,EAAA,EAAiBA,EAAAyC,KAAAuzG,MAAA91G,OAAuBF,IACxCyC,KAAAuzG,MAAAh2G,GAAAmzL,WAAA,EAGA,IAAA5xL,EAAAzB,KAAA0B,EAAA0xL,EAAA,MAMA,IAFA,IAAAE,EAAA,CAAAF,GAEAE,EAAAlzL,QACA,KAAAmzL,EAAAD,EAAAx7K,QACA+0H,EAAA0mD,EAAA/qE,GAEA,IAAAtoH,EAAA,EAAmBA,EAAA2sI,EAAAzsI,OAAkBF,IAAA,CACrC,IAAAmb,EAAAwxH,EAAA3sI,GACAszL,EAAAn4K,EAAAiwH,QAAAioD,EAAAl4K,EAAAkwH,MAAAlwH,EAAAiwH,MAEA,IAAAkoD,EAAAH,UAAA,CACA,GAAA5xL,EAAAzB,KAAA0B,EAAA8xL,EAAAD,GAEA,OAGAD,EAAAlvL,KAAAovL,GACAA,EAAAH,WAAA,OAYAf,EAAAzkL,OAAA,WAMA,IALA,IAAA1J,EAAAxB,KAAAwB,KACAopI,EAAA5qI,KAAA4qI,SACAr3B,EAAAvzG,KAAAuzG,MACA22B,EAAAlqI,KAAAkqI,MAEA3sI,EAAA,EAAAC,EAAA+1G,EAAA91G,OAAqCF,EAAAC,EAASD,IAC9Cg2G,EAAAh2G,GAAA4T,WAAA,EAGA,IAAA5T,EAAA,EAAAC,EAAAgE,EAAA6rB,QAAqC9vB,EAAAC,EAASD,IAC9Cg2G,EAAA/xG,EAAAs2C,YAAAv6C,IAAA4T,UAAA5T,EAGAqtI,EAAA7wF,WAAA,SAAA9rB,GACA,IAAA0X,EAAAukG,EAAAU,EAAA9yF,YAAA7pB,IACA,OAAA0X,EAAAgjG,MAAAx3H,WAAA,GAAAw0B,EAAAijG,MAAAz3H,WAAA,IAGA,IAAA5T,EAAA,EAAAC,EAAA0sI,EAAAzsI,OAAqCF,EAAAC,EAASD,IAC9C2sI,EAAA3sI,GAAA4T,WAAA,EAGA,IAAA5T,EAAA,EAAAC,EAAAotI,EAAAv9G,QAAyC9vB,EAAAC,EAASD,IAClD2sI,EAAAU,EAAA9yF,YAAAv6C,IAAA4T,UAAA5T,GAQAoyL,EAAA1yL,MAAA,WAKA,IAJA,IAAA66B,EAAA,IAAAmyG,EAAAjqI,KAAAwvL,WACAj8E,EAAAvzG,KAAAuzG,MACA22B,EAAAlqI,KAAAkqI,MAEA3sI,EAAA,EAAiBA,EAAAg2G,EAAA91G,OAAkBF,IACnCu6B,EAAAuyG,QAAA92B,EAAAh2G,GAAA0J,GAAAssG,EAAAh2G,GAAA4T,WAGA,IAAA5T,EAAA,EAAiBA,EAAA2sI,EAAAzsI,OAAkBF,IAAA,CACnC,IAAAmb,EAAAwxH,EAAA3sI,GACAu6B,EAAA2yG,QAAA/xH,EAAAiwH,MAAA1hI,GAAAyR,EAAAkwH,MAAA3hI,GAAAyR,EAAAvH,WAGA,OAAA2mB,GAuCA83J,EAAA1zL,UAAA,CACAyB,YAAAiyL,EAKArnE,OAAA,WACA,OAAAvoH,KAAAkqI,MAAAzsI,QAMAqzL,SAAA,WACA,OAAA9wL,KAAA6vL,QAAApyL,QAMAszL,UAAA,WACA,OAAA/wL,KAAA8vL,SAAAryL,QAOA+O,SAAA,SAAAyS,GACA,KAAAjf,KAAAmR,UAAA,GAMA,OAFAnR,KAAA+vL,UACAvuL,KAAAs6C,aAAA97C,KAAAmR,WACA3E,SAAAyS,KA+BA+wK,EAAA9zL,UAAAsQ,SAAA,SAAAyS,GACA,KAAAjf,KAAAmR,UAAA,GAMA,OAFAnR,KAAA+vL,UACAnlD,SAAA9uF,aAAA97C,KAAAmR,WACA3E,SAAAyS,IAGA,IAAA+xK,EAAA,SAAAC,EAAA58C,GACA,OAKAvhC,SAAA,SAAA53D,GACA,IAAA15C,EAAAxB,KAAAixL,GAAA58C,GACA,OAAA7yI,EAAArB,IAAAqB,EAAAuzC,aAAAmG,GAAA,SAAAl7C,KAAAmR,YAOA+qC,UAAA,SAAAp+C,EAAAwB,GACAU,KAAAmR,WAAA,GAAAnR,KAAAixL,GAAA58C,GAAA53F,cAAAz8C,KAAAmR,UAAArT,EAAAwB,IAOAsR,UAAA,SAAA9S,EAAA4qC,GACA,OAAA1oC,KAAAixL,GAAA58C,GAAAjjI,cAAApR,KAAAmR,UAAArT,EAAA4qC,IAOAyT,UAAA,SAAAn9B,EAAAhhB,GACAgC,KAAAmR,WAAA,GAAAnR,KAAAixL,GAAA58C,GAAA/3F,cAAAt8C,KAAAmR,UAAA6N,EAAAhhB,IAMAo+C,UAAA,WACA,OAAAp8C,KAAAixL,GAAA58C,GAAAh4F,cAAAr8C,KAAAmR,YAMA+/K,aAAA,WACA,OAAAlxL,KAAAixL,GAAA58C,GAAAx3F,iBAAA78C,KAAAmR,YAMA2mC,YAAA,WACA,OAAA93C,KAAAixL,GAAA58C,GAAAv8F,YAAA93C,KAAAmR,cAKAtN,EAAAvC,MAAAsuL,EAAAoB,EAAA,qBACAntL,EAAAvC,MAAA0uL,EAAAgB,EAAA,yBACA/mD,EAAA2lD,OACA3lD,EAAA+lD,OACA/nJ,EAAA2nJ,GACA3nJ,EAAA+nJ,GACA,IAAA5uJ,EAAA6oG,EACA9xG,EAAA93B,QAAA+gC,mBC7iBA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBg9E,EAAiBh9E,EAAQ,KAEzB6wG,EAAe7wG,EAAQ,KAEvBy8F,EAAqBz8F,EAAQ,KAE7BugI,EAAiBvgI,EAAQ,KAIzB6tG,EAFoB7tG,EAAQ,KAE5B6tG,oBAEA3sG,EAAclB,EAAQ,KAEtBytL,EAAiBztL,EAAQ,KAqBzB0tL,EAAA,wBACAC,EAAA,wBAEA,SAAAC,EAAA1hL,EAAA2hL,GACA,OAAA3hL,EAAAgB,UAAA,YAAAhB,EAAApD,WAAArM,IAAAoxL,GAGA,SAAAC,EAAA5hL,EAAA2hL,EAAAE,GACA,IAAAhpL,EAAAmH,EAAAshL,eACA76G,EAAAi7G,EAAA1hL,EAAA2hL,GAEA,MAAAE,IACA,MAAAp7G,MAAA,GACAA,GAAAo7G,GAGAhpL,EAAA0xD,UAAA1xD,EAAA0xD,WACA1xD,EAAAgO,SAAA,SAAAuL,GACA,UAAAA,EAAAziB,MACAyiB,EAAApL,SAAA,UAAAy/D,KAKA,SAAAq7G,EAAA9hL,EAAA2hL,GACA,IAAAl7G,EAAAi7G,EAAA1hL,EAAA2hL,GACA9oL,EAAAmH,EAAAshL,eACAzoL,EAAAwxD,WAAAxxD,EAAAwxD,YACAxxD,EAAAgO,SAAA,SAAAuL,GACA,UAAAA,EAAAziB,MACAyiB,EAAApL,SAAA,UAAAy/D,KAKA,IAAAj1C,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,QACA+H,KAAA,SAAAmD,EAAAtC,GACA,IAAA++J,EAAA,IAAAxmF,EACAs0B,EAAA,IAAAT,EACArtG,EAAAlH,KAAAkH,MACAlH,KAAAykI,YAAA,IAAAtkC,EAAAh4F,EAAA2D,SACA9L,KAAA0kI,gBAAA,CACAzmI,OAAAiJ,GAEAA,EAAAiJ,IAAA+2J,EAAAhgK,OACAA,EAAAiJ,IAAA6kG,EAAA9tG,OACAlH,KAAAmnK,YAAAD,EACAlnK,KAAA2xL,UAAA38E,EACAh1G,KAAA4xL,cAAA,GAEA//K,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAAyC,EAAAmG,EAAAL,iBACA1Q,KAAA4I,OAAAmI,EACA/Q,KAAA6xL,gBAAA9gL,EAAA5Q,IAAA,kBACA,IAAA+mK,EAAAlnK,KAAAmnK,YACAnyD,EAAAh1G,KAAA2xL,UACAzqL,EAAAlH,KAAAkH,MAEA,YAAA0D,EAAArL,KAAA,CACA,IAAAylI,EAAA,CACAplH,SAAAhV,EAAAgV,SACA+c,MAAA/xB,EAAA+xB,OAGA38B,KAAA4xL,aACA1qL,EAAAyf,KAAAq+G,GAEApgI,EAAAgiB,YAAA1f,EAAA89H,EAAAj0H,GAKAogL,EAAApgL,EAAAk6H,WAAAjrI,KAAA8xL,oBAAA/gL,IACA,IAAAvP,EAAAuP,EAAAC,UACAk2J,EAAAxlF,WAAAlgF,GACA,IAAAopI,EAAA75H,EAAAs9K,cACAr5E,EAAAtzB,WAAAkpD,GAEA5qI,KAAA+xL,0BAEA/xL,KAAA+lI,kBAAAh1H,EAAAtG,EAAAtC,GAEAi/D,aAAApnE,KAAAgyL,gBACA,IAAA1E,EAAAv8K,EAAAu8K,YACA4B,EAAAn+K,EAAA5Q,IAAA,yBAEAmtL,GACAttL,KAAAiyL,2BAAA3E,EAAA4B,GAGA1tL,EAAAs7C,kBAAA,SAAAr0C,EAAAwlB,GACA,IAAAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GAEAxlB,EAAA0B,IAAA,QAAAA,IAAA,WACA,IAAAk0E,EAAA78E,EAAAs6C,aAAA7tB,GAAA9tB,IAAA,aAEAk+E,GACA51E,EAAAmB,GAAA,kBACA0jL,IACAA,EAAA4E,UACAlyL,KAAAmyL,YAAAnyL,KAAAiyL,2BAAA3E,EAAA4B,GACA5B,EAAA8E,SAAAnkK,GAEAzsB,EAAA86C,cAAAruB,EAAAxlB,EAAAmX,YAES5f,MAAA4J,GAAA,qBACT0jL,GACAA,EAAA+E,WAAApkK,IAESjuB,MAGTyI,EAAAgwF,aAAApa,GAAAivG,GACA7kL,EAAA0B,IAAA,YAAA1B,EAAA6pL,sBACA7pL,EAAA0B,IAAA,WAAA1B,EAAA8pL,wBAEAtmH,EAAA9rE,IAAA,wBACAsI,EAAAmB,GAAA,YAAAnB,EAAA6pL,qBAAA,WACAnqL,EAAA2P,eAAA,CACAvY,KAAA,qBACAizB,SAAAzhB,EAAA9J,GACAkK,UAAA1I,EAAA0I,cAGA1I,EAAAmB,GAAA,WAAAnB,EAAA8pL,uBAAA,WACApqL,EAAA2P,eAAA,CACAvY,KAAA,uBACAizB,SAAAzhB,EAAA9J,SAIKjH,MACLwB,EAAAs2B,MAAAgzG,SAAA,SAAAnlG,GACA,IAAAl9B,EAAAk9B,EAAAurJ,eACAzoL,EAAA0B,IAAA,YAAA1B,EAAA6pL,sBACA7pL,EAAA0B,IAAA,WAAA1B,EAAA8pL,wBAEA5sJ,EAAAn5B,WAAArM,IAAA,wBACAsI,EAAAmB,GAAA,YAAAnB,EAAA6pL,qBAAA,WACAnqL,EAAA2P,eAAA,CACAvY,KAAA,qBACAizB,SAAAzhB,EAAA9J,GACAurL,cAAA7sJ,EAAAx0B,cAGA1I,EAAAmB,GAAA,WAAAnB,EAAA8pL,uBAAA,WACApqL,EAAA2P,eAAA,CACAvY,KAAA,uBACAizB,SAAAzhB,EAAA9J,UAKA,IAAAwrL,EAAA,aAAA1hL,EAAA5Q,IAAA,WAAA4Q,EAAA5Q,IAAA,wBACAk9C,EAAA77C,EAAA46C,UAAA,MACAkB,EAAA97C,EAAA46C,UAAA,MACA56C,EAAAs7C,kBAAA,SAAAr0C,EAAAwlB,GACA,IAAA2xB,EAAAn3C,EAAA8vF,gBAEA,GAAAk6F,EAAA,CACA,IAAA9kH,EAAAnsE,EAAA66C,cAAApuB,GACA6gB,EAAAngC,KAAAw3F,MAAAx4B,EAAA,GAAArwB,EAAAqwB,EAAA,GAAAtwB,GAEAvO,EAAA,IACAA,EAAA,EAAAngC,KAAA4U,GAAAurB,GAGA,IAAAwuI,EAAA3vG,EAAA,GAAAtwB,EAEAigI,IACAxuI,GAAAngC,KAAA4U,IAGA,IAAAJ,EAAAm6J,EAAA,eACA19H,EAAAhpC,SAAA,CACA4M,cAAAsrB,EACA3rB,eACAupE,WAAA,WAEA9sC,EAAAn/B,aAAAm/B,EAAAn/B,WAAA0C,qBAEAy8B,EAAAhpC,SAAA,CACA4M,aAAA,MAIAxjB,KAAA4xL,cAAA,GAEA97K,QAAA,WACA9V,KAAAykI,aAAAzkI,KAAAykI,YAAA3uH,UACA9V,KAAA0kI,gBAAA,IAEAiqD,mBAAA,SAAA59K,EAAAtG,EAAAtC,EAAAsJ,GACA,IAEAqmB,EAFA93B,KAAA4I,OAAAoI,UAEA8mB,MACA3mB,EAAAM,EAAAN,UACAqhL,EAAA/gL,EAAA+gL,cACAv7K,EAAA6gB,EAAAu4J,eAAAl/K,GACAw0B,EAAA7N,EAAAy2J,eAAAiE,IAEAv7K,GAAA0uB,KAIA7N,EAAAy6E,SAAA,SAAAt7F,GACAu6K,EAAAv6K,EAAAm6K,EAAA,MAEAt5J,EAAAgzG,SAAA,SAAAnlG,GACA6rJ,EAAA7rJ,EAAA0rJ,EAAA,MAGAp6K,IACAy6K,EAAAz6K,EAAAm6K,GACAvtL,EAAAjF,KAAAqY,EAAAizH,MAAA,SAAAwoD,GACAA,EAAAvhL,UAAA,IAIAugL,EAAAgB,EAAArB,GACAK,EAAAgB,EAAA/pD,MAAAyoD,GACAM,EAAAgB,EAAA9pD,MAAAwoD,OAIAzrJ,IACA+rJ,EAAA/rJ,EAAA0rJ,GACAK,EAAA/rJ,EAAAgjG,MAAAyoD,GACAM,EAAA/rJ,EAAAijG,MAAAwoD,MAGAuB,qBAAA,SAAA5hL,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAqmB,EAAA93B,KAAA4I,OAAAoI,UAAA8mB,MAEAA,EAAAy6E,SAAA,SAAAt7F,GACAu6K,EAAAv6K,EAAAm6K,KAEAt5J,EAAAgzG,SAAA,SAAAnlG,GACA6rJ,EAAA7rJ,EAAA0rJ,MAGAY,2BAAA,SAAA3E,EAAA4B,GACA,IAAAphL,EAAA9N,MAEA,SAAA0kD,IACA4oI,EAAA5oI,KAAA,SAAAkuI,GACA9kL,EAAAkF,aAAAlF,EAAAlF,SACAkF,EAAAqkL,YAAAS,KAAA1D,EAAAphL,EAAAkkL,eAAA3qH,WAAA3iB,EAAA,IAAAA,OAHA,IAOAqhF,kBAAA,SAAAh1H,EAAAtG,EAAAtC,GACA,IAAA0xG,EAAA75G,KAAAykI,YACAyB,EAAAlmI,KAAA0kI,gBACAx9H,EAAAlH,KAAAkH,MACA2yG,EAAA7Y,kBAAA,SAAAtoF,EAAA1I,EAAAC,GACA,IAAA8O,EAAA7X,EAAAiY,kBAEA,OADAJ,EAAAS,eAAAtY,EAAA2f,WACA9H,EAAAmiB,QAAAlxB,EAAAC,KAAAshG,EAAA74F,EAAAvQ,EAAA4I,KAGA,SAAAA,EAAAL,iBAAAnR,MAKAs6G,EAAA5Y,OAAAlwF,EAAA5Q,IAAA,SACA+lI,EAAA9mC,UAAAruF,EAAA5Q,IAAA,cACA+lI,EAAAj+D,KAAAl3D,EAAAL,iBAAA4yH,UACAzpB,EAAA1vG,IAAA,OAAAA,IAAA,QAAAP,GAAA,eAAA6wB,EAAAC,GACAupG,EAAAmC,gBAAAF,EAAAzrG,EAAAC,GACAvyB,EAAA2P,eAAA,CACA0a,SAAAzhB,EAAA9J,GACA1H,KAAA,YACAk7B,KACAC,SAEK9wB,GAAA,gBAAAq+D,EAAAo+D,EAAAC,GACLrC,EAAAsC,iBAAAL,EAAAj+D,EAAAo+D,EAAAC,GACAn+H,EAAA2P,eAAA,CACA0a,SAAAzhB,EAAA9J,GACA1H,KAAA,YACA0oE,OACAngD,QAAAu+G,EACAt+G,QAAAu+G,IAGAtmI,KAAA+xL,0BAEAZ,EAAApgL,EAAAk6H,WAAAjrI,KAAA8xL,oBAAA/gL,IAEA/Q,KAAA2xL,UAAA3+K,gBACKhT,OA9BL65G,EAAA1Y,WAgCA4wF,wBAAA,WACA,IAAAhhL,EAAA/Q,KAAA4I,OACApH,EAAAuP,EAAAC,UAEA6hL,EAAA7yL,KAAA8xL,oBAAA/gL,GAEAylG,EAAA,CAAAq8E,KACArxL,EAAAs7C,kBAAA,SAAAr0C,EAAAwlB,GACAxlB,EAAAke,KAAA,QAAA6vF,MAGAs7E,oBAAA,SAAA/gL,GACA,IAAAnG,EAAAmG,EAAAL,iBAEA,YAAA9F,EAAArL,KACA,SAGA,IAAA+vL,EAAAtvL,KAAA6xL,gBACAiB,EAAAloL,EAAA+xB,MACAo2J,EAAAD,KAAA,MAIA,QAFAloL,EAAA04H,UACA,GAAAgsD,EAAA,GACAyD,GAEA//K,aAAA,SAAAjC,GACAogL,EAAApgL,EAAAk6H,WAAAjrI,KAAA8xL,oBAAA/gL,IAEA/Q,KAAAmnK,YAAAn0J,eAEAhT,KAAA2xL,UAAA3+K,gBAEA+C,OAAA,SAAAtL,EAAAtC,GACAnI,KAAAmnK,aAAAnnK,KAAAmnK,YAAApxJ,SACA/V,KAAA2xL,WAAA3xL,KAAA2xL,UAAA57K,YAIAoiB,EAAA93B,QAAA+gC,mBCrXA,IAAAx8B,EAAclB,EAAQ,KAEtBk8B,EAAWl8B,EAAQ,KAyBnBsvL,EAAApuL,EAAAuZ,KAAAjiB,UACA+2L,EAAAruL,EAAAwZ,YAAAliB,UAEA,SAAAg3L,EAAA1rK,GACA,OAAA4F,OAAA5F,EAAAyuF,OAAA7oF,OAAA5F,EAAA0uF,MAGA,IAAA90E,EAAAx8B,EAAAoiB,YAAA,CACAznB,KAAA,UACAwQ,MAAA,CACAwQ,OAAA,OACAC,KAAA,MAEAgH,MAAA,CACAC,GAAA,EACAE,GAAA,EACAD,GAAA,EACAE,GAAA,EACA4E,QAAA,EACAypF,KAAA,KACAC,KAAA,MAEA7yE,UAAA,SAAAxB,EAAAra,IACA0rK,EAAA1rK,GAAAwrK,EAAAC,GAAA5vJ,UAAAxB,EAAAra,IAEAkvF,QAAA,SAAAz5E,GACA,OAAAi2J,EAAAlzL,KAAAwnB,OAAAwrK,EAAAt8E,QAAAr5G,KAAA2C,KAAAi9B,GAAAg2J,EAAAv8E,QAAAr5G,KAAA2C,KAAAi9B,IAEA45E,UAAA,SAAA55E,GACA,IAAAzV,EAAAxnB,KAAAwnB,MACA4rC,EAAA8/H,EAAA1rK,GAAA,CAAAA,EAAAE,GAAAF,EAAAC,GAAAD,EAAAI,GAAAJ,EAAAG,IAAAsrK,EAAAp8E,UAAAx5G,KAAA2C,KAAAi9B,GACA,OAAA2C,EAAA/C,UAAAu2B,QAIAj7B,EAAA93B,QAAA+gC,mBC9DA,IAAA+xJ,EAAgBzvL,EAAQ,KAExBk8B,EAAWl8B,EAAQ,KAqBnBw4B,EAAA,GACAC,EAAA,GACAi3J,EAAA,GACAr0H,EAAAo0H,EAAAp0H,YACAlB,EAAAj+B,EAAAtD,WACA08C,EAAArqE,KAAAyb,IAEA,SAAAipK,EAAAC,EAAAjnG,EAAA3R,GASA,IARA,IAIAz9C,EAJAyhC,EAAA40H,EAAA,GACA30H,EAAA20H,EAAA,GACA10H,EAAA00H,EAAA,GACAx2J,EAAA7tB,IAEAskL,EAAA74G,IACAzqD,EAAA,GAEAoxC,EAAA,GAAoBA,GAAA,GAAWA,GAAA,IAC/BnlC,EAAA,GAAA6iC,EAAAL,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAyC,GACAnlC,EAAA,GAAA6iC,EAAAL,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAyC,IACA1nB,EAAAq/B,EAAAnb,EAAA3hC,EAAAmwD,GAAAknG,IAEAz2J,IACAA,EAAA6c,EACA1c,EAAAokC,GAMA,QAAA9jE,EAAA,EAAiBA,EAAA,GAAQA,IAAA,CAEzB,IAAA2jE,EAAAjkC,EAAAhN,EAGAkM,EAAA,GAAA4iC,EAAAL,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA3hC,GACAd,EAAA,GAAA4iC,EAAAL,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA3hC,GACAm2J,EAAA,GAAAr0H,EAAAL,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAsC,GACAkyH,EAAA,GAAAr0H,EAAAL,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAsC,GACA,IAAAvnB,EAAAkkB,EAAA1hC,EAAAkwD,GAAAknG,EAEA,GAAAv6G,EAAAr/B,GAAA,IACA,MAIA,IAAA65I,EAAA31H,EAAAu1H,EAAA/mG,GAAAknG,EACAtjK,GAAA,EAEA0pB,EAAA,EACA65I,GAAA,EACAv2J,GAAAhN,EAEAgN,GAAAhN,EAGAujK,GAAA,EACAv2J,GAAAhN,EAEAgN,GAAAhN,EAKA,OAAAgN,EA6FA9E,EAAA93B,QAzFA,SAAAy3B,EAAA6E,GACA,IAAA82J,EAAA,GACA/xH,EAAAyxH,EAAAzxH,mBACAqzC,EAAA,WACA2+E,EAAA,QACApjK,EAAA,GAGA,SAAAynE,EAAA9gF,GACA,IAAAogB,EAAApgB,EAAArG,UAAA,cAMA,OAJAymB,aAAAh7B,QACAg7B,KAAA,GAAAA,EAAA,OAGAA,EATAsF,GAAA,EAYA7E,EAAAgzG,SAAA,SAAAnlG,EAAA1X,GACA,IAAAopF,EAAA1xE,EAAAyW,YACAu3I,EAAAhuJ,EAAA/0B,UAAA,cACAgjL,EAAAjuJ,EAAA/0B,UAAA,YAEAymG,EAAAw8E,aACAx8E,EAAAw8E,WAAA,CAAAj0J,EAAA3iC,MAAAo6G,EAAA,IAAAz3E,EAAA3iC,MAAAo6G,EAAA,KAEAA,EAAA,IACAA,EAAAw8E,WAAApyL,KAAAm+B,EAAA3iC,MAAAo6G,EAAA,MAIA,IAAAy8E,EAAAz8E,EAAAw8E,WAEA,SAAAx8E,EAAA,IAKA,GAJAz3E,EAAAlE,KAAAq5E,EAAA,GAAA++E,EAAA,IACAl0J,EAAAlE,KAAAq5E,EAAA,GAAA++E,EAAA,IACAl0J,EAAAlE,KAAAq5E,EAAA,GAAA++E,EAAA,IAEAH,GAAA,QAAAA,EAAA,CACA,IAAAt8J,EAAA0gE,EAAApyD,EAAAgjG,OACA1rG,EAAAo2J,EAAAt+E,EAAA++E,EAAA,GAAAz8J,EAAAsF,GAEA+kC,EAAAqzC,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAA93E,EAAAw2J,GACA1+E,EAAA,MAAA0+E,EAAA,GACA1+E,EAAA,MAAA0+E,EAAA,GACA/xH,EAAAqzC,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAA93E,EAAAw2J,GACA1+E,EAAA,MAAA0+E,EAAA,GACA1+E,EAAA,MAAA0+E,EAAA,GAGAG,GAAA,QAAAA,IACAv8J,EAAA0gE,EAAApyD,EAAAijG,OACA3rG,EAAAo2J,EAAAt+E,EAAA++E,EAAA,GAAAz8J,EAAAsF,GAEA+kC,EAAAqzC,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAA93E,EAAAw2J,GACA1+E,EAAA,MAAA0+E,EAAA,GACA1+E,EAAA,MAAA0+E,EAAA,GACA/xH,EAAAqzC,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAA93E,EAAAw2J,GACA1+E,EAAA,MAAA0+E,EAAA,GACA1+E,EAAA,MAAA0+E,EAAA,IAIA7zJ,EAAAlE,KAAA27E,EAAA,GAAAtC,EAAA,IACAn1E,EAAAlE,KAAA27E,EAAA,GAAAtC,EAAA,IACAn1E,EAAAlE,KAAA27E,EAAA,GAAAtC,EAAA,SAGAn1E,EAAAlE,KAAAg4J,EAAA,GAAAI,EAAA,IACAl0J,EAAAlE,KAAAg4J,EAAA,GAAAI,EAAA,IACAl0J,EAAA3qB,IAAAqb,EAAAojK,EAAA,GAAAA,EAAA,IACA9zJ,EAAA/C,UAAAvM,KAEAqjK,GAAA,QAAAA,IACAt8J,EAAA0gE,EAAApyD,EAAAgjG,OACA/oG,EAAApD,YAAAk3J,EAAA,GAAAA,EAAA,GAAApjK,EAAA+G,EAAAsF,IAGAi3J,GAAA,QAAAA,IACAv8J,EAAA0gE,EAAApyD,EAAAijG,OACAhpG,EAAApD,YAAAk3J,EAAA,GAAAA,EAAA,GAAApjK,GAAA+G,EAAAsF,IAGAiD,EAAAlE,KAAA27E,EAAA,GAAAq8E,EAAA,IACA9zJ,EAAAlE,KAAA27E,EAAA,GAAAq8E,EAAA,wBC9KA,IAAAp+J,EAAc5xB,EAAQ,KAItBsjI,EAFkBtjI,EAAQ,KAE1BsjI,oBAmCA1xG,EAAAlb,eAfA,CACA7a,KAAA,YACAwV,MAAA,YACA7J,OAAA,QAYA,SAAAuG,EAAAhH,GACAA,EAAAuD,cAAA,CACAlF,SAAA,SACAyK,MAAA9B,GACG,SAAAV,GACH,IAAAnG,EAAAmG,EAAAL,iBACAwsC,EAAA8pF,EAAAp8H,EAAA6G,GACAV,EAAA4tF,WAAA5tF,EAAA4tF,UAAAzhD,EAAAmvC,QACAt7E,EAAA6tF,SAAA7tF,EAAA6tF,QAAA1hD,EAAA+qB,UAWA3yC,EAAAlb,eAAA,CACA7a,KAAA,qBACAwV,MAAA,qBACA7J,OAAA,mCACC,cAQDoqB,EAAAlb,eAAA,CACA7a,KAAA,uBACAwV,MAAA,uBACA7J,OAAA,qCACC,6BCpBDitB,EAAA93B,QApCA,SAAAoK,GACA,IAAA04E,EAAA14E,EAAA24E,eAAA,CACAt6E,SAAA,WAGAq6E,KAAA1lF,QAIAgN,EAAA+pF,iBAAA,iBAAAu/F,GACA,IAAArF,EAAAqF,EAAAzF,oBAEA9sL,EADAuyL,EAAA9oD,WACAzpI,KACAwyL,EAAAtF,EAAA9zI,SAAA8zI,EAAAliJ,SACAhrC,EAAAu4C,WAAA,SAAA9rB,GACA,IACA0nD,EADAn0E,EAAAs6C,aAAA7tB,GACA7K,WAAA,YAEA,SAAAuyD,EAAA,CACA,kBAAAA,IACAA,EAAAq+G,EAAAr+G,IAIA,QAAAp4E,EAAA,EAAuBA,EAAA4lF,EAAA1lF,OAAyBF,IAChD,IAAA4lF,EAAA5lF,GAAA8lF,WAAA1N,GACA,SAKA,YAEG31E,sBCCHm4B,EAAA93B,QAlCA,SAAAoK,GACA,IAAA4yF,EAAA,GACA5yF,EAAA+pF,iBAAA,iBAAAzjF,GACA,IAAA29K,EAAA39K,EAAAu9K,oBACA9sL,EAAAuP,EAAAC,UACAijL,EAAA,GACAvF,EAAA9vL,KAAA,SAAAqvB,GACA,IAAA1tB,EAAAmuL,EAAAliJ,QAAAve,GAEAgmK,EAAA,MAAA1zL,GAAA0tB,EACA,IACA9N,EADAuuK,EAAA5yI,aAAA7tB,GACA9tB,IAAA,oBAAA4Q,EAAA47B,oBAAApsC,EAAA88F,GACAqxF,EAAAjyI,cAAAxuB,EAAA,QAAA9N,KAGAuuK,EAAArhK,SACA7rB,EAAA5C,KAAA,SAAAqvB,GACA,IACA0nD,EADAn0E,EAAAs6C,aAAA7tB,GACA7K,WAAA,YAEA,MAAAuyD,IACA,kBAAAA,IACAA,EAAAs+G,EAAA,MAAAt+G,IAGAn0E,EAAA4P,cAAA6c,EAAA,aACAzsB,EAAAi7C,cAAAxuB,EAAA,QAAAygK,EAAAt9K,cAAAukE,EAAA,+BC1BA,SAAA94C,EAAAx5B,GAKA,OAJAA,aAAAhH,QACAgH,EAAA,CAAAA,MAGAA,EA8CA80B,EAAA93B,QA3CA,SAAAoK,GACAA,EAAA+pF,iBAAA,iBAAAzjF,GACA,IAAA+mB,EAAA/mB,EAAAk6H,WACAL,EAAA75H,EAAAs9K,cACAnvI,EAAAriB,EAAA9rB,EAAA5Q,IAAA,eACAk3B,EAAAwF,EAAA9rB,EAAA5Q,IAAA,mBACA+zL,EAAA,kBAAA9/K,MAAA,KACA+/K,EAAA,oBAAA//K,MAAA,KACAw2H,EAAA1uF,UAAA,aAAAgD,KAAA,IACA0rF,EAAA1uF,UAAA,WAAAgD,KAAA,IACA0rF,EAAA1uF,UAAA,iBAAA7kB,KAAA,IACAuzG,EAAA1uF,UAAA,eAAA7kB,KAAA,IACAuzG,EAAA1uF,UAAA,QAAAnrC,EAAA5Q,IAAA+zL,IACAtpD,EAAA1uF,UAAA,UAAAnrC,EAAA5Q,IAAAg0L,IACAvpD,EAAAhsI,KAAA,SAAAqvB,GACA,IAAAg+C,EAAA2+D,EAAA9uF,aAAA7tB,GACA0X,EAAA7N,EAAAy2J,eAAAtgK,GACAixB,EAAAriB,EAAAovC,EAAA7oD,WAAA,cACAiU,EAAAwF,EAAAovC,EAAA7oD,WAAA,kBAEAjD,EAAA8rD,EAAA9rE,IAAA+zL,GACA79G,EAAApK,EAAA9rE,IAAAg0L,GAEA,OAAAh0K,GACA,aACAA,EAAAwlB,EAAAgjG,MAAA/3H,UAAA,SACA,MAEA,aACAuP,EAAAwlB,EAAAijG,MAAAh4H,UAAA,SAIAsuC,EAAA,IAAAvZ,EAAAuW,UAAA,aAAAgD,EAAA,IACAA,EAAA,IAAAvZ,EAAAuW,UAAA,WAAAgD,EAAA,IACA7nB,EAAA,IAAAsO,EAAAuW,UAAA,iBAAA7kB,EAAA,IACAA,EAAA,IAAAsO,EAAAuW,UAAA,eAAA7kB,EAAA,IACAsO,EAAAuW,UAAA,QAAA/7B,GACAwlB,EAAAuW,UAAA,UAAAm6B,yBChEA,IAEAz3E,EAFY8E,EAAQ,KAEpB9E,KAEAw1L,EAA0B1wL,EAAQ,KAElCsnI,EAAAopD,EAAAppD,aACAH,EAAAupD,EAAAvpD,iBA6DA1yG,EAAA93B,QAzCA,SAAAoK,EAAAtC,GACAsC,EAAA+pF,iBAAA,iBAAAzjF,GACA,IAAAiO,EAAAjO,EAAA5Q,IAAA,UACAyK,EAAAmG,EAAAL,iBAEA,GAAA9F,GAAA,SAAAA,EAAArL,KAAA,CACA,IAAAiC,EAAAuP,EAAAC,UACAmL,EAAA,GACAvd,EAAAgM,EAAAuR,WAAA,SAAA4wB,GACA5wB,IAAA9c,OAAAmC,EAAA8pC,aAAAyB,GAAA,MAGA,QAAA57B,EAAA,EAA6BA,EAAA3P,EAAA6rB,QAA0Blc,IAAA,CAIvD,IAHA,IAAA7R,EAAA,GACAm8B,GAAA,EAEAl+B,EAAA,EAAuBA,EAAA4e,EAAA1e,OAAuBF,IAAA,CAC9C,IAAAmF,EAAAlB,EAAArB,IAAAgc,EAAA5e,GAAA4T,GAEAic,MAAA1qB,KACA+4B,GAAA,GAGAn8B,EAAAmC,KAAAiB,GAGA+4B,EACAj6B,EAAA86C,cAAAnrC,EAAAvG,EAAAk4E,YAAAxjF,IAGAkC,EAAA86C,cAAAnrC,EAAA,CAAAyb,UAIAi+G,EAAArpI,EAAAs2B,YACK9Y,GAAA,SAAAA,GACLgsH,EAAAj6H,uBC/DA,IAEAm6H,EAF4BxnI,EAAQ,KAEpCwnI,eA4BA/yG,EAAA93B,QARA,SAAAoK,GACAA,EAAA+pF,iBAAA,iBAAAzjF,GACA,aAAAA,EAAA5Q,IAAA,WACA+qI,EAAAn6H,uBCzBA,IAEAu8K,EAFmB5pL,EAAQ,KAE3B4pL,YAIAtiD,EAF0BtnI,EAAQ,KAElCsnI,aAIAE,EAF4BxnI,EAAQ,KAEpCwnI,eAIAj/G,EAFcvoB,EAAQ,KAEtBuoB,UAEA2T,EAAWl8B,EAAQ,KAEnBG,EAAaH,EAAQ,KA0JrBy0B,EAAA93B,QArIA,SAAAoK,GACAA,EAAA+pF,iBAAA,iBAAAu/F,GAGA,KAFAnpL,EAAAmpL,EAAArjL,mBAEA,SAAA9F,EAAArL,KAIA,aAAAw0L,EAAA5zL,IAAA,WACA,IAAAk0L,EAAAN,EAAAM,iBAAA,GACAv8J,EAAAi8J,EAAA9oD,WACAP,EAAA5yG,EAAAt2B,KACAopI,EAAA9yG,EAAA8yG,SACA0pD,EAAAP,EAAAvnL,SAAA,SACAsiL,EAAAwF,EAAAn0L,IAAA,cAEA4zL,EAAAM,gBACA3pD,EAAA9rI,KAAA,SAAAqvB,GACA,IAAAhnB,EAAAyjI,EAAAx2F,MAAAjmB,GACAy8G,EAAApuF,cAAAruB,EAAAomK,EAAAptL,IAAA,CAAA2lB,YAEOkiK,GAAA,SAAAA,EAEA,aAAAA,GACP5jD,EAAA6oD,GAFA/oD,EAAA+oD,GAKA,IAAAQ,EAAA7pD,EAAAtyF,cAAA,SACAo8I,EAAA5pD,EAAAxyF,cAAA,SAEA22I,EAAAuF,EAAAn0L,IAAA,aACA8uL,EAAAqF,EAAAn0L,IAAA,cAEA0D,EAAAvF,QAAAywL,KACAA,EAAA,CAAAA,MAGAlrL,EAAAvF,QAAA2wL,KACAA,EAAA,CAAAA,MAIAA,EAAA,CAAAA,EAAA,GAAAA,EAAA,IACA,IA8BArkL,EA9BA2oG,EAAAm3B,EAAA9vF,SAAA,iBAAAt7C,EAAA2uB,GACA,IAAA5C,EAAAq/G,EAAAruF,cAAApuB,GACAwmK,EAAAxoK,EAAA3sB,EAAAi1L,EAAAxF,GAMA,OAJA3hK,MAAAqnK,KACAA,GAAA1F,EAAA,GAAAA,EAAA,OAGA,CACA/qJ,EAAAywJ,EACAA,MACA3+G,MAAA40D,EAAA5uF,aAAA7tB,GAAA9tB,IAAA,SACAizD,GAAA/nC,GAAA+B,MAAA/B,EAAA,KAAA+B,MAAA/B,EAAA,SAAAA,KAGA6+G,EAAAU,EAAAhwF,SAAA,iBAAAt7C,EAAA2uB,GACA,IAAA0X,EAAA7N,EAAAy2J,eAAAtgK,GACA6O,EAAA7Q,EAAA3sB,EAAAk1L,EAAAvF,GAMA,OAJA7hK,MAAA0P,KACAA,GAAAmyJ,EAAA,GAAAA,EAAA,OAGA,CACAgB,GAAA18E,EAAA5tE,EAAAgjG,MAAAx3H,WACA++K,GAAA38E,EAAA5tE,EAAAijG,MAAAz3H,WACA2rB,IACAiuG,UAAAplG,EAAAn5B,WAAArM,IAAA,6BAIA4e,GADAnU,EAAAmpL,EAAArjL,kBACAyO,kBACAu1K,EAAApH,EAAA/5E,EAAA22B,EAAA,CACAnrH,OACAiwK,QAAAsF,EAAAn0L,IAAA,aAEAw0L,EAAAD,EAAAhwI,KAEAgwI,EAAAhwI,KAAA,SAAA5lD,GACA,QAAAvB,EAAA,EAAA+nD,EAAAiuD,EAAA91G,OAAyCF,EAAA+nD,EAAO/nD,IAChDg2G,EAAAh2G,GAAAu4E,OAEAl2C,EAAAlE,KAAA63E,EAAAh2G,GAAA61D,EAAAt7B,EAAAu4J,eAAA9yL,GAAA6+C,aAIAu4I,EAAA,SAAAphF,EAAA22B,EAAA0oD,GACA,QAAAr1L,EAAA,EAAA+nD,EAAAiuD,EAAA91G,OAA2CF,EAAA+nD,EAAO/nD,IAClDg2G,EAAAh2G,GAAAu4E,OACAh+C,EAAAu4J,eAAA9yL,GAAA4+C,UAAAo3D,EAAAh2G,GAAA61D,GAGAihI,EAAA3pD,EAAAx2F,MAAA32C,IAAAg2G,EAAAh2G,GAAA61D,EAGA,IAAA71D,EAAA,EAAA+nD,EAAA4kF,EAAAzsI,OAA2CF,EAAA+nD,EAAO/nD,IAAA,CAClD,IAAAmb,EAAAwxH,EAAA3sI,GACAooC,EAAA7N,EAAAy2J,eAAAhxL,GACAohE,EAAAjmD,EAAAu3K,GAAA78H,EACAwL,EAAAlmD,EAAAw3K,GAAA98H,EACAhoC,EAAAua,EAAAyW,aACAhxB,MAAAzuB,QAAA,IACA,GAAAyuB,EAAA,OACAA,EAAA,GAAAA,EAAA,OACAwU,EAAAlE,KAAAtQ,EAAA,GAAAuzC,GACA/+B,EAAAlE,KAAAtQ,EAAA,GAAAwzC,IAEAlmD,EAAAqyH,YACA3/G,EAAA,KAAAuzC,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,IAAAlmD,EAAAqyH,WAAApsE,EAAA,GAAAC,EAAA,OAAAA,EAAA,GAAAD,EAAA,IAAAjmD,EAAAqyH,YAGAplG,EAAAwW,UAAA/wB,GAIAtsB,KAAA8zL,MAIAmB,EAAAzG,YAAAoH,EACAX,EAAAM,kBAEAK,EAAAhwI,YAGAqvI,EAAAzG,YAAA,yBCvKA,IAAA1tJ,EAAWl8B,EAAQ,KAqBnB84B,EAAAoD,EAAApD,YAuIAn8B,EAAAitL,YAnIA,SAAA/5E,EAAA22B,EAAAnjI,GAiBA,IAhBA,IAAAgY,EAAAhY,EAAAgY,KACAtX,EAAAsX,EAAAtX,MACAC,EAAAqX,EAAArX,OACA2kF,EAAA,CAAAttE,EAAA/O,EAAAvI,EAAA,EAAAsX,EAAA9O,EAAAvI,EAAA,GAEAsnL,EAAA,MAAAjoL,EAAAioL,QAAA,GAAAjoL,EAAAioL,QAWAzxL,EAAA,EAAiBA,EAAAg2G,EAAA91G,OAAkBF,IAAA,CACnC,IAAA8hE,EAAAk0C,EAAAh2G,GAEA8hE,EAAAjM,IAgBAiM,EAAAjM,EAAAxzB,EAAAjuB,OAAAlK,GAAAkH,KAAAskB,SAAA,IAAAo5D,EAAA,GAAA3kF,GAAAiH,KAAAskB,SAAA,IAAAo5D,EAAA,KAGAhtB,EAAAu1H,GAAAh1J,EAAA3iC,MAAAoiE,EAAAjM,GACAiM,EAAA6qE,MAAA,KAMA,IAAA2qD,EAAA,GACA,OACA3C,OAAA,WACA2C,EAAA,IAEAzC,SAAA,SAAAnkK,GACAslF,EAAAtlF,GAAA6nD,OAAA,GAEAu8G,WAAA,SAAApkK,GACAslF,EAAAtlF,GAAA6nD,OAAA,GAEApxB,KAAA,SAAA5lD,GAIA,IAHA,IAAAg2L,EAAA,GACAC,EAAAxhF,EAAA91G,OAEAF,EAAA,EAAqBA,EAAA2sI,EAAAzsI,OAAkBF,IAAA,CACvC,IAAAmb,EAAAwxH,EAAA3sI,GACA0yL,EAAAv3K,EAAAu3K,GACAC,EAAAx3K,EAAAw3K,GACAtwJ,EAAA3qB,IAAA6/K,EAAA5E,EAAA98H,EAAA68H,EAAA78H,GACA,IAAAt2B,EAAA8C,EAAApiC,IAAAs3L,GAAAp8K,EAAAokB,EACAkH,EAAAksJ,EAAAlsJ,GAAAisJ,EAAAjsJ,EAAAksJ,EAAAlsJ,GAEA5W,MAAA4W,KACAA,EAAA,GAGApE,EAAA/C,UAAAi4J,MACA7E,EAAAn6G,OAAAt5C,EAAAyzJ,EAAA78H,EAAA68H,EAAA78H,EAAA0hI,EAAA9wJ,EAAAlH,EAAA+3J,IACA3E,EAAAp6G,OAAAt5C,EAAA0zJ,EAAA98H,EAAA88H,EAAA98H,EAAA0hI,IAAA,EAAA9wJ,GAAAlH,EAAA+3J,GAIA,IAAAt3L,EAAA,EAAqBA,EAAAw3L,EAAUx3L,KAC/B8hE,EAAAk0C,EAAAh2G,IAEAu4E,QACAl2C,EAAA3qB,IAAA6/K,EAAAzoG,EAAAhtB,EAAAjM,GAIA52B,EAAA6iC,EAAAjM,EAAAiM,EAAAjM,EAAA0hI,EAAA9F,EAAA6F,IAMA,IAAAt3L,EAAA,EAAqBA,EAAAw3L,EAAUx3L,IAC/B,CAAA0yL,EAAA18E,EAAAh2G,GAEA,IAFA,IAEAo1B,EAAAp1B,EAAA,EAA2Bo1B,EAAAoiK,EAAUpiK,IAAA,CACrCu9J,EAAA38E,EAAA5gF,GACAiN,EAAA3qB,IAAA6/K,EAAA5E,EAAA98H,EAAA68H,EAAA78H,GAGA,KAFAt2B,EAAA8C,EAAApiC,IAAAs3L,MAIAl1J,EAAA1/B,IAAA40L,EAAAnmL,KAAAskB,SAAA,GAAAtkB,KAAAskB,SAAA,IACA6J,EAAA,GAGA,IAAAk4J,GAAA/E,EAAAwE,IAAAvE,EAAAuE,KAAA33J,KACAmzJ,EAAAn6G,OAAAt5C,EAAAyzJ,EAAA2E,GAAA3E,EAAA2E,GAAAE,EAAAE,IACA9E,EAAAp6G,OAAAt5C,EAAA0zJ,EAAA0E,GAAA1E,EAAA0E,GAAAE,GAAAE,IAIA,IAAA1kK,EAAA,GAEA,IAAA/yB,EAAA,EAAqBA,EAAAw3L,EAAUx3L,IAAA,CAC/B,IAAA8hE,KAAAk0C,EAAAh2G,IAEAu4E,QACAl2C,EAAA3qB,IAAAqb,EAAA+uC,EAAAjM,EAAAiM,EAAAu1H,IACAp4J,EAAA6iC,EAAAjM,EAAAiM,EAAAjM,EAAA9iC,EAAAukK,GACAj1J,EAAAlE,KAAA2jC,EAAAu1H,GAAAv1H,EAAAjM,IAIAyhI,GAAA,KACA/1L,KAAAy0G,EAAA22B,EAAA2qD,EAAA,yBCvJA,IAAAryD,EAAW9+H,EAAQ,KAInB+1B,EAFc/1B,EAAQ,KAEtB+1B,cAEAi/C,EAAWh1E,EAAQ,KAkFnBy0B,EAAA93B,QAnDA,SAAAoK,EAAAtC,GACA,IAAAkN,EAAA,GA+CA,OA9CA5K,EAAA+pF,iBAAA,iBAAAzjF,GACA,IAAAkkL,EAAAlkL,EAAA5Q,IAAA,oBAEA,IAAA80L,GAAA,SAAAA,EAAA,CACA,IAAAzzL,EAAAuP,EAAAC,UACAkkL,EAAA1zL,EAAAo5C,SAAA,SAAA3sB,GACA,IAAAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GACA,QAAAg+C,EAAA9rE,IAAA,MAAA8rE,EAAA9rE,IAAA,QAEAyO,EAAA,GACAE,EAAA,GACA4pE,EAAAqxB,WAAAmrF,EAAAtmL,EAAAE,GAEAA,EAAA,GAAAF,EAAA,SACAE,EAAA,MACAF,EAAA,OAGAE,EAAA,GAAAF,EAAA,SACAE,EAAA,MACAF,EAAA,OAGA,IAAA0Q,GAAAxQ,EAAA,GAAAF,EAAA,KAAAE,EAAA,GAAAF,EAAA,IAEA4vF,EApCA,SAAAztF,EAAA5I,EAAAmX,GACA,IAAAtT,EAAA+E,EAAA0tF,qBAEA,OADAzyF,EAAAsT,SACAma,EAAAztB,EAAA,CACAvE,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,cA+BAm3H,CAAA/yH,EAAA5I,EAAAmX,GAEA8N,MAAA9N,KACA1Q,EAAA,CAAA4vF,EAAAxuF,EAAAwuF,EAAAvuF,GACAnB,EAAA,CAAA0vF,EAAAxuF,EAAAwuF,EAAA/2F,MAAA+2F,EAAAvuF,EAAAuuF,EAAA92F,SAGA,IAAAytL,EAAArmL,EAAA,GAAAF,EAAA,GACAwmL,EAAAtmL,EAAA,GAAAF,EAAA,GACAwvF,EAAAI,EAAA/2F,MACA42F,EAAAG,EAAA92F,OACA2tL,EAAAtkL,EAAAL,iBAAA,IAAA8xH,EACA6yD,EAAAj2F,UAAAruF,EAAA5Q,IAAA,cACAk1L,EAAAn3F,gBAAAtvF,EAAA,GAAAA,EAAA,GAAAumL,EAAAC,GACAC,EAAA32F,YAAAF,EAAAxuF,EAAAwuF,EAAAvuF,EAAAmuF,EAAAC,GAEAg3F,EAAA12F,UAAA5tF,EAAA5Q,IAAA,WACAk1L,EAAAz2F,QAAA7tF,EAAA5Q,IAAA,SACAkV,EAAA5T,KAAA4zL,MAGAhgL,oBCrFA3R,EAAQ,KAERA,EAAQ,sBCFR,IAAA2pI,EAAuB3pI,EAAQ,KAE/Be,EAAkBf,EAAQ,KAE1BG,EAAaH,EAAQ,KA+HrB09B,EA1GA38B,EAAA9D,OAAA,CACApB,KAAA,eACA0qC,eAAA,SAAAj+B,EAAAvB,GACA,IAAA6qL,EAAAtpL,EAAAxK,MAAA,GAOA,OALAqC,EAAAvF,QAAAg3L,KACAA,EAAA,CAAAA,IAGAtpL,EAAAxK,KAAA8zL,EACAjoD,EAAArtI,KAAA,YAEAsmC,cAAA,CACA9tB,OAAA,EACAD,EAAA,EAEA8zE,OAAA,cACA01C,iBAAA,EACArnD,OAAA,MACAJ,WAAA,IACAC,UAAA,GACA+pB,WAAA,EAEA11F,IAAA,EAEAE,IAAA,IAEAmpB,YAAA,GAEArB,SAAA,CAEAI,MAAA,EACAb,UAAA,CAEAhW,MAAA,8CACA1Y,MAAA,KAIAovB,UAAA,CAEAG,MAAA,EAEAv5B,OAAA,GAEA04B,UAAA,CACAhW,MAAA,OACA1Y,MAAA,EACAlI,KAAA,UAIAy4B,SAAA,CAEAhB,MAAA,EAEAiB,YAAA,EAEAx6B,OAAA,EAEA04B,UAAA,CACAhW,MAAA,OACA1Y,MAAA,EACAlI,KAAA,UAGA0hI,UAAA,CACAjqG,MAAA,EACAiF,SAAA,EAEA9b,MAAA,QAEA+X,QAAA,CACAlB,MAAA,EACAv5B,OAAA,MACAgK,MAAA,GAEAgwB,UAAA,CACAtX,MAAA,QAEAuV,MAAA,CACAsB,MAAA,EAEAmgE,aAAA,WAEAh3E,MAAA,OACAwE,SAAA,IAEAizC,OAAA,CACA5gC,MAAA,EACA7pB,gBAAA,gBACA+kI,YAAA,EACAl8G,YAAA,OACAvuB,MAAA,IACAC,OAAA,KAEAk/C,QAAA,OAEAuwC,aAAA,UAGAh3E,MAAA,OACAwE,SAAA,OAKAwT,EAAA93B,QAAA+gC,mBCpIA,IAAAm0J,EAAkB7xL,EAAQ,KAE1BkB,EAAclB,EAAQ,KAEtBiB,EAAgBjB,EAAQ,KAExBk+D,EAAcl+D,EAAQ,KAEtB6oB,EAAAq1C,EAAAr1C,aACA5N,EAAAijD,EAAAjjD,MACAsN,EAAA21C,EAAA31C,UAmCA,SAAAupK,EAAA59J,EAAA4qB,GASA,OARAA,IACA,kBAAAA,EACA5qB,EAAA4qB,EAAAv/C,QAAA,UAA6C,MAAA20B,IAAA,IACxC,oBAAA4qB,IACL5qB,EAAA4qB,EAAA5qB,KAIAA,EAGA,IAAA+xE,EAAA,EAAAh7F,KAAA4U,GAySA6d,EAxSAz8B,EAAAhE,OAAA,CACApB,KAAA,QACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACAnI,KAAAkH,MAAAkzD,YACA,IAAAghH,EAAArqK,EAAA5Q,IAAA,4BACAs1L,EAjCA,SAAA1kL,EAAA5I,GACA,IAAAkkF,EAAAt7E,EAAA5Q,IAAA,UACAsH,EAAAU,EAAAuE,WACAhF,EAAAS,EAAAwE,YACAoyC,EAAApwC,KAAAC,IAAAnH,EAAAC,GAIA,OACA21C,GAJA9wB,EAAA8/D,EAAA,GAAAlkF,EAAAuE,YAKA4wC,GAJA/wB,EAAA8/D,EAAA,GAAAlkF,EAAAwE,aAKAixC,EAJArxB,EAAAxb,EAAA5Q,IAAA,UAAA4+C,EAAA,IA0BA22I,CAAA3kL,EAAA5I,GAEAnI,KAAA21L,YAAA5kL,EAAAtG,EAAAtC,EAAAizK,EAAAqa,IAEA3/K,QAAA,aACA6/K,YAAA,SAAA5kL,EAAAtG,EAAAtC,EAAAizK,EAAAqa,GAWA,IAVA,IAAAvuL,EAAAlH,KAAAkH,MAEA6mE,EADAh9D,EAAAvE,SAAA,YACAA,SAAA,aACA83F,EAAAvzF,EAAA5Q,IAAA,aACAm6E,GAAAvpE,EAAA5Q,IAAA,kBAAAwO,KAAA4U,GAEAqyK,IADAr7G,GAAAxpE,EAAA5Q,IAAA,gBAAAwO,KAAA4U,IACA+2D,GAAAqvB,EACAksF,EAAAv7G,EACAw7G,EAAA/nH,EAAA5tE,IAAA,SAEA5C,EAAA,EAAmBA,EAAA69K,EAAA39K,OAAsBF,IAAA,CAEzC,IACAg9E,EAAAD,EAAAs7G,EADAjnL,KAAAC,IAAAD,KAAAG,IAAAssK,EAAA79K,GAAA,SAEAixK,EAAA,IAAA5pK,EAAAkZ,OAAA,CACA0J,MAAA,CACA8yD,WAAAu7G,EACAt7G,WACAl9B,GAAAo4I,EAAAp4I,GACAC,GAAAm4I,EAAAn4I,GACAgnD,YACAD,GAAAoxF,EAAA73I,EAAAk4I,EACAl4I,EAAA63I,EAAA73I,GAEA7yC,QAAA,IAEAyjK,EAAA53J,SAAA,CACA4J,KAAA46J,EAAA79K,GAAA,KAEAixK,EAAA53J,SAAAm3D,EAAAV,aAEA,wCACAnmE,EAAAiJ,IAAAq+J,GACAqnB,EAAAt7G,EAGA,IAAAw7G,EAAA,SAAAvpK,GAEA,GAAAA,GAAA,EACA,OAAA4uJ,EAAA,MAGA,QAAA79K,EAAA,EAAqBA,EAAA69K,EAAA39K,OAAsBF,IAC3C,GAAA69K,EAAA79K,GAAA,IAAAivB,IAAA,IAAAjvB,EAAA,EAAA69K,EAAA79K,EAAA,OAAAivB,EACA,OAAA4uJ,EAAA79K,GAAA,GAKA,OAAA69K,EAAA79K,EAAA,OAGA,IAAA+mG,EAAA,CACA,IAAArkC,EAAAqa,EACAA,EAAAC,EACAA,EAAAta,EAGAjgE,KAAAg2L,aAAAjlL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,EAAAn7G,EAAAC,EAAA+pB,GAEAtkG,KAAAi2L,eAAAllL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,EAAAn7G,EAAAC,EAAA+pB,GAEAtkG,KAAAk2L,aAAAnlL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,GAEAz1L,KAAAm2L,cAAAplL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,IAEAO,aAAA,SAAAjlL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,EAAAn7G,EAAAC,EAAA+pB,GAoBA,IAnBA,IAAAp9F,EAAAlH,KAAAkH,MACAm2C,EAAAo4I,EAAAp4I,GACAC,EAAAm4I,EAAAn4I,GACAM,EAAA63I,EAAA73I,EACAw4I,GAAArlL,EAAA5Q,IAAA,OACAk2L,GAAAtlL,EAAA5Q,IAAA,OACAssK,EAAA17J,EAAAvE,SAAA,aACAu2D,EAAAhyD,EAAAvE,SAAA,YACA8c,EAAAvY,EAAAvE,SAAA,aACAyrB,EAAAlnB,EAAA5Q,IAAA,eACAm2L,EAAAvzH,EAAA5iE,IAAA,eACAo2L,EAAAhqK,EAAAkgJ,EAAAtsK,IAAA,UAAAy9C,GACAowB,EAAAzhD,EAAAw2C,EAAA5iE,IAAA,UAAAy9C,GACAC,EAAAy8B,EACA51B,GAAA61B,EAAAD,GAAAriD,EACAu+J,EAAA9xI,EAAA4xI,EACAG,EAAAhqB,EAAAjgK,SAAA,aAAA6gE,eACAqpH,EAAA3zH,EAAAv2D,SAAA,aAAA6gE,eAEA9vE,EAAA,EAAmBA,GAAA06B,EAAkB16B,IAAA,CACrC,IAAAu1J,EAAAnkJ,KAAA6gC,IAAAqO,GACAk1G,EAAApkJ,KAAA2gC,IAAAuO,GAEA,GAAA4uH,EAAAtsK,IAAA,SACA,IAAA02B,EAAA,IAAAjyB,EAAAuZ,KAAA,CACAqJ,MAAA,CACAC,GAAAqrI,EAAAl1G,EAAAP,EACA11B,GAAAorI,EAAAn1G,EAAAN,EACA51B,GAAAorI,GAAAl1G,EAAA24I,GAAAl5I,EACAz1B,GAAAmrI,GAAAn1G,EAAA24I,GAAAj5I,GAEAvtC,MAAA0mL,EACA1rL,QAAA,IAGA,SAAA0rL,EAAAl2K,QACAsW,EAAAjgB,SAAA,CACA2J,OAAAw1K,EAAAx4L,EAAA06B,KAIA/wB,EAAAiJ,IAAA0mB,GAIA,GAAAvN,EAAAnpB,IAAA,SACA,IAAAy3B,EAAA49J,EAAA72K,EAAAphB,EAAA06B,GAAAo+J,EAAAD,MAAA9sK,EAAAnpB,IAAA,cACA87B,EAAA3S,EAAAnpB,IAAA,YACAuhB,EAAAq0K,EAAAx4L,EAAA06B,GACA/wB,EAAAiJ,IAAA,IAAAvL,EAAAgZ,KAAA,CACA7N,MAAAnL,EAAA+d,aAAA,GAAwC2G,EAAA,CACxCF,KAAAwO,EACA5nB,EAAA8iJ,GAAAl1G,EAAA24I,EAAAt6J,GAAAohB,EACAptC,EAAA8iJ,GAAAn1G,EAAA24I,EAAAt6J,GAAAqhB,EACAx4B,kBAAAiuI,GAAA,SAAAA,EAAA,qBACAluI,UAAAiuI,GAAA,UAAAA,EAAA,qBACW,CACXpxI,cAEA3W,QAAA,KAKA,GAAAg4D,EAAA5iE,IAAA,SAAA5C,IAAA06B,EAAA,CACA,QAAAtF,EAAA,EAAuBA,GAAA2jK,EAAqB3jK,IAAA,CAC5CmgI,EAAAnkJ,KAAA6gC,IAAAqO,GACAk1G,EAAApkJ,KAAA2gC,IAAAuO,GADA,IAEA84I,EAAA,IAAA/xL,EAAAuZ,KAAA,CACAqJ,MAAA,CACAC,GAAAqrI,EAAAl1G,EAAAP,EACA11B,GAAAorI,EAAAn1G,EAAAN,EACA51B,GAAAorI,GAAAl1G,EAAAowB,GAAA3wB,EACAz1B,GAAAmrI,GAAAn1G,EAAAowB,GAAA1wB,GAEAvyC,QAAA,EACAgF,MAAA2mL,IAGA,SAAAA,EAAAn2K,QACAo2K,EAAA//K,SAAA,CACA2J,OAAAw1K,GAAAx4L,EAAAo1B,EAAA2jK,GAAAr+J,KAIA/wB,EAAAiJ,IAAAwmL,GACA94I,GAAA24I,EAGA34I,GAAA24I,OAEA34I,GAAA6G,IAIAuxI,eAAA,SAAAllL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,EAAAn7G,EAAAC,EAAA+pB,GACA,IAAAp9F,EAAAlH,KAAAkH,MACAy6E,EAAA3hF,KAAA2kE,MAEA,GAAA5zD,EAAA5Q,IAAA,iBAQA,IAAAy2L,EAAA,EAAA7lL,EAAA5Q,IAAA,QAAA4Q,EAAA5Q,IAAA,QACA0lK,EAAA,CAAAvrF,EAAAC,GACA/4E,EAAAuP,EAAAC,UACAqlF,EAAA70F,EAAA8pC,aAAA,SACA9pC,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA8d,GACA,IAAAiK,EAAA,IAAAq9J,EAAA,CACA/tK,MAAA,CACAq2B,MAAAy8B,KAGA11E,EAAA+kB,UAAAuO,EAAA,CACA1Q,MAAA,CACAq2B,MAAA5xB,EAAAzqB,EAAArB,IAAAk2F,EAAApoE,GAAA2oK,EAAA/wB,GAAA,KAEO90J,GACP7J,EAAAiJ,IAAA+nB,GACA12B,EAAAo7C,iBAAA3uB,EAAAiK,KACKhtB,OAAA,SAAA42E,EAAAE,GACL,IAAA9pD,EAAAypD,EAAA9kC,iBAAAmlC,GACAp9E,EAAAgiB,YAAAsR,EAAA,CACA1Q,MAAA,CACAq2B,MAAA5xB,EAAAzqB,EAAArB,IAAAk2F,EAAAvU,GAAA80G,EAAA/wB,GAAA,KAEO90J,GACP7J,EAAAiJ,IAAA+nB,GACA12B,EAAAo7C,iBAAAklC,EAAA5pD,KACKniB,OAAA,SAAAkY,GACL,IAAAiK,EAAAypD,EAAA9kC,iBAAA5uB,GACA/mB,EAAA6O,OAAAmiB,KACKkzC,UACL5pE,EAAAs7C,kBAAA,SAAA5kB,EAAAjK,GACA,IAAAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GACA4oK,EAAA5qH,EAAAz/D,SAAA,WACA0rB,EAAA2M,SAAA,CACA70B,EAAAylL,EAAAp4I,GACAptC,EAAAwlL,EAAAn4I,GACA71C,MAAA8kB,EAAAsqK,EAAA12L,IAAA,SAAAs1L,EAAA73I,GACAA,EAAArxB,EAAAsqK,EAAA12L,IAAA,UAAAs1L,EAAA73I,KAEA1lB,EAAA4mD,SAAA7S,EAAAz/D,SAAA,aAAA20E,gBAEA,SAAAjpD,EAAAnoB,MAAAyQ,MACA0X,EAAAthB,SAAA,OAAAm/K,EAAA9pK,EAAAzqB,EAAArB,IAAAk2F,EAAApoE,GAAA2oK,EAAA,YAGAhyL,EAAAsjB,cAAAgQ,EAAA+zC,EAAAz/D,SAAA,sBAAA20E,kBAEAnhF,KAAA2kE,MAAAnjE,OArDAmgF,KAAA7kC,kBAAA,SAAAr0C,GACAvB,EAAA6O,OAAAtN,MAsDAytL,aAAA,SAAAnlL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,GACA,IAAAj0L,EAAAuP,EAAAC,UACAqlF,EAAA70F,EAAA8pC,aAAA,SACAwrJ,EAAA/lL,EAAAvE,SAAA,SAEA,GAAAsqL,EAAA32L,IAAA,SACA,IAAAg3F,EAAA2/F,EAAA32L,IAAA,gBACA6P,EAAAylL,EAAAp4I,GAAA9wB,EAAA4qE,EAAA,GAAAs+F,EAAA73I,GACA3tC,EAAAwlL,EAAAn4I,GAAA/wB,EAAA4qE,EAAA,GAAAs+F,EAAA73I,GACAw4I,GAAArlL,EAAA5Q,IAAA,OACAk2L,GAAAtlL,EAAA5Q,IAAA,OACAb,EAAAyR,EAAAC,UAAA7Q,IAAAk2F,EAAA,GACA30E,EAAAq0K,EAAA9pK,EAAA3sB,EAAA,CAAA82L,EAAAC,GAAA,WACAr2L,KAAAkH,MAAAiJ,IAAA,IAAAvL,EAAAgZ,KAAA,CACA7S,QAAA,EACAgF,MAAAnL,EAAA+d,aAAA,GAAsCm0K,EAAA,CACtC9mL,IACAC,IAEAmZ,KAAA5nB,EAAAgrC,QAAA,GACA3nB,UAAA,SACAC,kBAAA,UACS,CACTpD,YACAyC,WAAA,SAKAgyK,cAAA,SAAAplL,EAAAtG,EAAAtC,EAAA4tL,EAAAN,GACA,IAAAsB,EAAAhmL,EAAAvE,SAAA,UACA4pL,GAAArlL,EAAA5Q,IAAA,OACAk2L,GAAAtlL,EAAA5Q,IAAA,OAEA,GAAA42L,EAAA52L,IAAA,SACA,IAAAg3F,EAAA4/F,EAAA52L,IAAA,gBACA6P,EAAAylL,EAAAp4I,GAAA9wB,EAAA4qE,EAAA,GAAAs+F,EAAA73I,GACA3tC,EAAAwlL,EAAAn4I,GAAA/wB,EAAA4qE,EAAA,GAAAs+F,EAAA73I,GACAn2C,EAAA8kB,EAAAwqK,EAAA52L,IAAA,SAAAs1L,EAAA73I,GACAl2C,EAAA6kB,EAAAwqK,EAAA52L,IAAA,UAAAs1L,EAAA73I,GACAp8C,EAAAuP,EAAAC,UACA1R,EAAAkC,EAAArB,IAAAqB,EAAA8pC,aAAA,YACA5pB,EAAAq0K,EAAA9pK,EAAA3sB,EAAA,CAAA82L,EAAAC,GAAA,WACAr2L,KAAAkH,MAAAiJ,IAAA,IAAAvL,EAAAgZ,KAAA,CACA7S,QAAA,EACAgF,MAAAnL,EAAA+d,aAAA,GAAsCo0K,EAAA,CACtC/mL,IACAC,IACAmZ,KAAAosK,EACAl2L,EAAAy3L,EAAA52L,IAAA,cACA6kB,UAAAoI,MAAA3lB,GAAA,KAAAA,EACAwd,WAAAmI,MAAA1lB,GAAA,KAAAA,EACAmd,UAAA,SACAC,kBAAA,UACS,CACTpD,YACAyC,WAAA,WAOAgU,EAAA93B,QAAA+gC,mBCnWA,IAqBAA,EArBW19B,EAAQ,KAqBnB/C,OAAA,CACApB,KAAA,sBACAioB,MAAA,CACAq2B,MAAA,EACAp2C,MAAA,GACAm2C,EAAA,GACA5tC,EAAA,EACAC,EAAA,GAEAozB,UAAA,SAAAxB,EAAAra,GACA,IAAAsxD,EAAAnqE,KAAA6gC,IACAupC,EAAApqE,KAAA2gC,IACAsO,EAAAp2B,EAAAo2B,EACAn2C,EAAA+f,EAAA/f,MACAo2C,EAAAr2B,EAAAq2B,MACA7tC,EAAAwX,EAAAxX,EAAA8oE,EAAAj7B,GAAAp2C,MAAAm2C,EAAA,OACA3tC,EAAAuX,EAAAvX,EAAA8oE,EAAAl7B,GAAAp2C,MAAAm2C,EAAA,OACAC,EAAAr2B,EAAAq2B,MAAAlvC,KAAA4U,GAAA,EACAse,EAAA0b,OAAAvtC,EAAAC,GACA4xB,EAAA2b,OAAAh2B,EAAAxX,EAAA8oE,EAAAj7B,GAAAp2C,EAAA+f,EAAAvX,EAAA8oE,EAAAl7B,GAAAp2C,GACAo6B,EAAA2b,OAAAh2B,EAAAxX,EAAA8oE,EAAAtxD,EAAAq2B,OAAAD,EAAAp2B,EAAAvX,EAAA8oE,EAAAvxD,EAAAq2B,OAAAD,GACA/b,EAAA2b,OAAAh2B,EAAAxX,EAAA8oE,EAAAj7B,GAAAp2C,EAAA+f,EAAAvX,EAAA8oE,EAAAl7B,GAAAp2C,GACAo6B,EAAA2b,OAAAxtC,EAAAC,MAKAkoB,EAAA93B,QAAA+gC,mBChDA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAER,IAAA8rK,EAAgB9rK,EAAQ,KAExBszL,EAAmBtzL,EAAQ,KAE3BqkH,EAAiBrkH,EAAQ,KAqBzB4xB,EAAAhb,eAAAk1J,EAAA,WACAl6I,EAAAlZ,eAAA46K,GACA1hK,EAAAtb,kBAAA+tG,EAAA,4BCjCA,IAAAzyF,EAAc5xB,EAAQ,KAEtB2pI,EAAuB3pI,EAAQ,KAI/BktB,EAFaltB,EAAQ,KAErBktB,gBAoBAqmK,EAAA3hK,EAAA9Y,kBAAA,CACAjd,KAAA,gBACA+H,KAAA,SAAA0E,GACAirL,EAAAz+H,WAAAx4D,KAAA,OAAAb,WAGAa,KAAA2pC,mBAAA,WACA,OAAA3pC,KAAAyqC,cAIAzqC,KAAA6vK,kBAAA7jK,IAEAi+B,eAAA,SAAAj+B,EAAAvB,GACA,OAAA4iI,EAAArtI,KAAA,YAEA6vK,kBAAA,SAAA7jK,GAEA4kB,EAAA5kB,EAAA,sBACA,IAAA8jK,EAAA9jK,EAAA+jK,UACAC,EAAAhkK,EAAA8kB,SAAAi/I,UAEAD,EAAA94I,KAAA84I,EAAA94I,MAAAhrB,EAAA4rB,MAAAZ,KACAg5I,EAAAh5I,KAAAg5I,EAAAh5I,MAAAhrB,EAAA8kB,SAAA8G,MAAAZ,MAGApe,cAAA,SAAAzH,GACA,IAAA3P,EAAAxB,KAAAgR,UACAmH,EAAA8+K,EAAA1+H,UAAAv4D,KAAA,gBAAAmR,GACAklF,EAAA70F,EAAA8pC,aAAA,SACApd,EAAA1sB,EAAAs3C,OAAAu9C,GAIA,OAFAl+E,EAAAqU,QAAA0B,IAAA1sB,EAAArB,IAAAk2F,EAAAllF,GAAA+c,EAAA,KAAAnB,QAAA,KACA5U,EAAA4mB,MAAAt9B,KAAA,WACA0W,GAEAmuB,cAAA,CACA9tB,OAAA,EAEAD,EAAA,EAEAwpH,iBAAA,EACA/yH,KAAA,GACAE,IAAA,GACAC,MAAA,GACAC,OAAA,GAMA8nL,QAAA,KACAhkE,QAAA,OACAhmG,KAAA,aAEAuL,IAAA,EACA0+J,YAAA,SACAv/J,MAAA,CACAZ,MAAA,EACApX,SAAA,SAGAmwJ,UAAA,CACA/4I,MAAA,EACAv5B,OAAA,GACA04B,UAAA,CAEA1uB,MAAA,EACAlI,KAAA,UAGAk4B,UAAA,CAEAzB,YAAA,OACAk8G,YAAA,GAEAphH,SAAA,CACA8G,MAAA,CACAZ,MAAA,OAKAoK,EAAA61J,EACA9+J,EAAA93B,QAAA+gC,mBC9GA,IAAAx8B,EAAclB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBiB,EAAgBjB,EAAQ,KA2BxB,SAAA0zL,EAAA51L,EAAAysB,GACArpB,EAAA+Y,MAAAtgB,KAAA2C,MACA,IAAA4nE,EAAA,IAAAhjE,EAAAoZ,QACA+xJ,EAAA,IAAAnrK,EAAAqZ,SACAmL,EAAA,IAAAxkB,EAAAgZ,KAMA,SAAA07E,IACAy2E,EAAA3hK,OAAA2hK,EAAAa,YACAxnJ,EAAAhb,OAAAgb,EAAAwnJ,YAGA,SAAAp3E,IACAu2E,EAAA3hK,OAAA2hK,EAAAc,aACAznJ,EAAAhb,OAAAgb,EAAAynJ,aAZA7wK,KAAAmQ,IAAAy3D,GACA5nE,KAAAmQ,IAAA4/J,GACA/vK,KAAAmQ,IAAAiZ,GACAppB,KAAA0hF,WAAAlgF,EAAAysB,GAAA,GAYAjuB,KAAA4J,GAAA,WAAA0vF,GAAA1vF,GAAA,SAAA4vF,GAAA5vF,GAAA,YAAA0vF,GAAA1vF,GAAA,WAAA4vF,GAGA,IAAA69F,EAAAD,EAAAl7L,UACAo7L,EAAA,wBAEAD,EAAA31G,WAAA,SAAAlgF,EAAAysB,EAAA8iJ,GACA,IAAAnpG,EAAA5nE,KAAAi5B,QAAA,GACAloB,EAAAvP,EAAAkwC,UACAu6B,EAAAzqE,EAAAs6C,aAAA7tB,GACAjP,EAAAxd,EAAA66C,cAAApuB,GACAooD,EAAA70E,EAAAs6C,aAAA7tB,GAAA9tB,IAAAm3L,GACAjhH,EAAA,MAAAA,EAAA,EAAAA,EAEAzO,EAAAkX,SAAA,IAEAiyF,GACAnpG,EAAA/iC,SAAA,CACAzZ,OAAApM,EAAAoM,SAEAw8C,EAAAhxD,SAAA,CACAy/D,QAAA,IAEAzxE,EAAA+kB,UAAAi+C,EAAA,CACA73D,MAAA,CACAsmE,YAEKtlE,EAAAkd,IAELrpB,EAAAgiB,YAAAghD,EAAA,CACA73D,MAAA,CACAsmE,WAEA7uD,MAAA,CACA4D,OAAApM,EAAAoM,SAEKra,EAAAkd,GAIL,IAAAw3G,EAAAx5D,EAAAz/D,SAAA,aACA8qG,EAAA91G,EAAA4P,cAAA6c,EAAA,SACA25C,EAAAhxD,SAAA/S,EAAArF,SAAA,CACAsqH,SAAA,QACAtoG,KAAA82F,GACGmuB,EAAAtkD,aAAA,eACHvZ,EAAAnnD,WAAAglH,EAAAj5H,SAAA,YAAA20E,eAEAnhF,KAAAixK,aAAAzvK,EAAAysB,GAEArpB,EAAAsjB,cAAAloB,OAGAq3L,EAAApmB,aAAA,SAAAzvK,EAAAysB,GACA,IAAA8hJ,EAAA/vK,KAAAi5B,QAAA,GACAi4I,EAAAlxK,KAAAi5B,QAAA,GACAloB,EAAAvP,EAAAkwC,UACAu6B,EAAAzqE,EAAAs6C,aAAA7tB,GAEAugD,EADAhtE,EAAA66C,cAAApuB,GACA2J,MACA0/E,EAAA91G,EAAA4P,cAAA6c,EAAA,SACArpB,EAAAgiB,YAAAmpJ,EAAA,CACAvoJ,MAAA,CACA4D,OAAAojD,EAAA6oC,YAAA7oC,EAAA6oC,aAEGtmG,EAAAkd,GACHrpB,EAAAgiB,YAAAsqJ,EAAA,CACAnhK,MAAA,CACAC,EAAAw+D,EAAAx+D,EACAC,EAAAu+D,EAAAv+D,IAEGc,EAAAkd,GACHijJ,EAAAvqJ,KAAA,CACAuE,SAAAsjD,EAAAtjD,SACAgyD,OAAA,CAAA1O,EAAAx+D,EAAAw+D,EAAAv+D,GACA0R,GAAA,KAEA,IAAA2H,EAAA2iD,EAAAz/D,SAAA,SACA2kK,EAAAllG,EAAAz/D,SAAA,kBACA4kK,EAAAnlG,EAAAz/D,SAAA,aACA6kK,EAAAplG,EAAAz/D,SAAA,sBACA8qG,EAAA91G,EAAA4P,cAAA6c,EAAA,SACArpB,EAAAwjB,cAAA8oJ,EAAAnhK,MAAAmhK,EAAAzwJ,WAAA,GAAkE6I,EAAA6nJ,EAAA,CAClExoJ,aAAAnnB,EAAAkwC,UACA9oB,eAAAqF,EACAhF,YAAAznB,EAAAgrC,QAAAve,GACAvM,UAAA41F,EACAvxF,iBAAAyoD,EAAAwyD,QACG,CACHn8G,UAAA2pD,EAAA3pD,UACAC,kBAAA0pD,EAAAw0B,gBAEAkuE,EAAA9iK,OAAA8iK,EAAAL,cAAAvnJ,EAAAnpB,IAAA,QACA+wK,EAAAN,aAAAO,EAAAhxK,IAAA,QACA4vK,EAAA3hK,OAAA2hK,EAAAc,cAAAO,EAAAjxK,IAAA,QACA4vK,EAAAa,aAAAS,EAAAlxK,IAAA,QAEA4vK,EAAAn5J,SAAA,CACA2J,OAAA+2F,IAEAy4D,EAAAn5J,SAAAw6J,EAAA5kK,SAAA,aAAA6gE,gBACA0iG,EAAAtvJ,WAAA4wJ,EAAA7kK,SAAA,aAAA6gE,gBAGAxpE,EAAA9C,SAAAq2L,EAAAxyL,EAAA+Y,OACA,IA2BAyjB,EA3BAz8B,EAAAhE,OAAA,CACApB,KAAA,SACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACA2wE,EAAA3hF,KAAA2kE,MACAz9D,EAAAlH,KAAAkH,MACA1F,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA8d,GACA,IAAAspK,EAAA,IAAAH,EAAA51L,EAAAysB,GACAzsB,EAAAo7C,iBAAA3uB,EAAAspK,GACArwL,EAAAiJ,IAAAonL,KACKrsL,OAAA,SAAA42E,EAAAE,GACL,IAAA0vF,EAAA/vF,EAAA9kC,iBAAAmlC,GACA0vF,EAAAhwF,WAAAlgF,EAAAsgF,GACA56E,EAAAiJ,IAAAuhK,GACAlwK,EAAAo7C,iBAAAklC,EAAA4vF,KACK37J,OAAA,SAAAkY,GACL,IAAAyjJ,EAAA/vF,EAAA9kC,iBAAA5uB,GACA/mB,EAAA6O,OAAA27J,KACKtmG,UACLprE,KAAA2kE,MAAAnjE,GAEAuU,OAAA,WACA/V,KAAAkH,MAAAkzD,YACAp6D,KAAA2kE,MAAA,MAEA7uD,QAAA,eAGAqiB,EAAA93B,QAAA+gC,mBCxLA,IAAApiB,EAAatb,EAAQ,KAErBk+D,EAAcl+D,EAAQ,KAEtB6oB,EAAAq1C,EAAAr1C,aACAN,EAAA21C,EAAA31C,UAgMAkM,EAAA93B,QApFA,SAAAoK,EAAAtC,EAAAsJ,GACAhH,EAAA+pF,iBAAA,kBAAAzjF,GACA,IAAAvP,EAAAuP,EAAAC,UACAqlF,EAAA70F,EAAA8pC,aAAA,SACApe,EAAAnc,EAAA5Q,IAAA,QACAq+F,EA7FA,SAAAztF,EAAA5I,GACA,OAAA6W,EAAAya,cAAA1oB,EAAA0tF,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,cA0FAm3H,CAAA/yH,EAAA5I,GACAuvC,EAvFA,SAAAl2C,EAAA0rB,GAQA,IAPA,IAAAmpE,EAAA70F,EAAA8pC,aAAA,SACAksJ,EAAAh2L,EAAAo5C,SAAAy7C,EAAA,SAAA3zF,GACA,OAAAA,IAEAg1C,EAAA,GACA+/I,EAAA,cAAAvqK,EAEA3vB,EAAA,EAAAC,EAAAgE,EAAA6rB,QAAqC9vB,EAAAC,EAASD,IAC9Cm6C,EAAAn6C,KAYA,MARA,oBAAA2vB,EACAwqB,EAAAxqB,QACG,SAAAA,GACHwqB,EAAAxqB,KAAA,SAAA7pB,EAAAC,GACA,OAAAm0L,EAAAD,EAAAn0L,GAAAm0L,EAAAl0L,GAAAk0L,EAAAl0L,GAAAk0L,EAAAn0L,KAIAq0C,EAkEAggJ,CAAAl2L,EAAA0rB,GACAyqK,EAAA,CAAAprK,EAAAxb,EAAA5Q,IAAA,WAAAq+F,EAAA/2F,OAAA8kB,EAAAxb,EAAA5Q,IAAA,WAAAq+F,EAAA/2F,QACAimB,EAAAlsB,EAAA42C,cAAAi+C,GACAznF,EAAAmC,EAAA5Q,IAAA,OACA2O,EAAAiC,EAAA5Q,IAAA,OAEA,MAAAyO,IACAA,EAAAD,KAAAC,IAAA8e,EAAA,OAGA,MAAA5e,IACAA,EAAA4e,EAAA,IAGA,IAAAypK,EAAApmL,EAAA5Q,IAAA,eACAs4B,EAAA1nB,EAAA5Q,IAAA,OACAiyI,GAAA5zC,EAAA92F,OAAA+wB,GAAAj3B,EAAA6rB,QAAA,IAAA7rB,EAAA6rB,QACApd,EAAAuuF,EAAAvuF,EAEA2nL,EAAA,SAAA3pK,EAAA4pK,GAEA,IAEAh3H,EAFAn+D,EAAAlB,EAAArB,IAAAk2F,EAAApoE,IAAA,EACA2H,EAAA3J,EAAAvpB,EAAA,CAAAkM,EAAAE,GAAA6oL,GAAA,GAGA,OAAAR,GACA,WACAt2H,EAAA29B,EAAAxuF,EACA,MAEA,aACA6wD,EAAA29B,EAAAxuF,GAAAwuF,EAAA/2F,MAAAmuB,GAAA,EACA,MAEA,YACAirC,EAAA29B,EAAAxuF,EAAAwuF,EAAA/2F,MAAAmuB,EAIA,QAAAirC,EAAAg3H,GAAA,CAAAh3H,EAAAjrC,EAAAiiK,KAGA,cAAA3qK,IAEAklH,KACA35G,KACAxoB,GAAAuuF,EAAA92F,OACAgwC,IAAAm7B,WAGA,QAAAt1E,EAAA,EAAmBA,EAAAm6C,EAAAj6C,OAAoBF,IAAA,CACvC,IAAA0wB,EAAAypB,EAAAn6C,GACAmiI,EAAAhoF,EAAAn6C,EAAA,GAEAmK,EADAlG,EAAAs6C,aAAA7tB,GACA9tB,IAAA,oBAEA,MAAAuH,EACAA,EAAA0qI,GAEA1qI,EAAA6kB,EAAA7kB,EAAA82F,EAAA92F,QAEA,cAAAwlB,IACAxlB,OAIA,IAAAuuC,EAAA2hJ,EAAA3pK,EAAAhe,GACA49B,EAAA+pJ,EAAAl4D,EAAAzvH,EAAAvI,GACAuI,GAAAvI,EAAA+wB,EACAj3B,EAAA86C,cAAAruB,EAAA,CACA7C,OAAA6qB,EAAA52C,OAAAwuC,EAAAlxC,QAAAk2E,cArIA,SAAArxE,GACAA,EAAA5C,KAAA,SAAAqvB,GACA,IAOApJ,EACA4pE,EACAC,EACA2oB,EAVAprC,EAAAzqE,EAAAs6C,aAAA7tB,GAEA8kJ,EADA9mG,EAAAz/D,SAAA,SACArM,IAAA,YACAixK,EAAAnlG,EAAAz/D,SAAA,aACAwS,EAAAxd,EAAA66C,cAAApuB,GACA7C,EAAApM,EAAAoM,OACA8nJ,EAAA,UAAAH,GAAA,WAAAA,GAAA,WAAAA,EAMA,GAAAG,EAGAruJ,EAAA,SACAwyF,EAAA,EAHA5oB,GAAArjE,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,SACAsjE,GAAAtjE,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAEA,CAAAqjE,EAAAC,QACK,CACL,IAAAjnE,EACAE,EACAD,EACAsrJ,EAAA5B,EAAAjxK,IAAA,UAEA,SAAA4yK,GAEAtrJ,GAAA2D,EAAA,MAAAA,EAAA,SACAzD,GAAAyD,EAAA,MAAAA,EAAA,SAEAqjE,GADA/mE,EAAAD,EAAAurJ,GACA,EACAnuJ,EAAA,UAGA4C,GAAA2D,EAAA,MAAAA,EAAA,SACAzD,GAAAyD,EAAA,MAAAA,EAAA,SAEAqjE,GADA/mE,EAAAD,EAAAurJ,GACA,EACAnuJ,EAAA,QAIAwyF,EAAA,EAAA5vF,EAAAE,GAAA,CAAAD,EADAC,IAEA+mE,EAFA/mE,EAKA3I,EAAA4Y,MAAA,CACAy/E,aACArnG,EAAAy+E,EACAx+E,EAAAy+E,EACAsU,cAAA,SACAn+E,YACAm8G,OAAAkyC,KAqFA1kG,CAAAhtE,uBCjMA,IAAA8zB,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAAo0L,EAAqBp0L,EAAQ,KAqB7B4xB,EAAAhb,eAAAw9K,oBC7BA,IAAAj0L,EAAaH,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAqExBy0B,EAAA93B,QAhDA,SAAA2L,IAUA,SAAAA,GACA,IAAAA,EAAAi9D,SAAA,CAIA,IAAA8uH,GAAA,EACAl0L,EAAAjF,KAAAoN,EAAAmN,OAAA,SAAAw+I,GACAA,GAAA,aAAAA,EAAAp4J,OACAw4L,GAAA,KAIAA,IACA/rL,EAAAi9D,SAAA,OAtBA+uH,CAAAhsL,GA+BA,SAAAA,GACA,IAAAwtJ,EAAA30J,EAAA4O,iBAAAzH,EAAAisL,cACAp0L,EAAAjF,KAAA46J,EAAA,SAAA0+B,GACA,GAAAr0L,EAAA1F,SAAA+5L,GAAA,CAIA,IAAAC,EAAAD,EAAAC,eAAA,EACAC,EAAAvzL,EAAA4O,iBAAAzH,EAAAi9D,UAAAkvH,GAEAC,KAAAz+B,qBACA91J,EAAA7F,MAAAk6L,EAAAE,EAAAz+B,qBAAA,MAzCA0+B,CAAArsL,qBCzBA,IAAAnI,EAAaH,EAAQ,KAErB4Z,EAAa5Z,EAAQ,KAErB8uI,EAAiB9uI,EAAQ,KAEzB++F,EAAiB/+F,EAAQ,KAEzB40L,EAAmB50L,EAAQ,KAE3BkB,EAAclB,EAAQ,KAEtBy5B,EAAiBz5B,EAAQ,KAEzB60L,EAAiB70L,EAAQ,KA0BzB9E,EAAAiF,EAAAjF,KACA8P,EAAAC,KAAAC,IACAC,EAAAF,KAAAG,IACAyxJ,EAAA5xJ,KAAAod,MACAu0I,EAAA3xJ,KAAAg2C,KACAhmC,EAAAwe,EAAAxe,MACA4E,EAAA5U,KAAA4U,GAEA,SAAA0oH,EAAApS,EAAApvH,EAAAtC,GAMAnI,KAAAuuG,SAAA1qG,EAAAV,gBAQAnD,KAAAw4L,YAAA,GAOAx4L,KAAAmc,WAAA09G,EAAA19G,WAKAnc,KAAA4jC,MAKA5jC,KAAA4I,OAAAixH,EAEA75H,KAAAy4L,MAAA5+D,EAAApvH,EAAAtC,GAiXA,SAAAu7E,EAAAlmF,EAAAm7C,GACA,OAAAjqC,EAAAG,EAAArR,EAAAm7C,EAAA,IAAAA,EAAA,IA/WAszF,EAAA/vI,UAAA,CACAqD,KAAA,WACA5B,YAAAsuI,EAMAwsD,MAAA,SAAA5+D,EAAApvH,EAAAtC,GACA,IAAAgU,EAAA09G,EAAA19G,WACA29G,EAAAD,EAAAC,kBACAl7H,EAAAud,EAAA,SAAA6vB,EAAA/d,GACA,IAAAq4D,EAAAwzC,EAAA7rG,GACAi2B,EAAAz5C,EAAA5B,aAAA,eAAAy9E,GAEA3kC,EAAA3hD,KAAAuuG,SAAAruG,IAAA8rC,EAAA,IAAAssJ,EAAAtsJ,EAAAy2D,EAAA3+C,mBAAAI,GAAA,MAAAA,EAAA/jD,IAAA,QAAAmmF,IAEAhiC,EAAA,aAAA3C,EAAApiD,KACAoiD,EAAA2gB,OAAAhe,GAAAJ,EAAA/jD,IAAA,eACAwhD,EAAA0gB,QAAAne,EAAA/jD,IAAA,WAEA+jD,EAAAvC,OACAA,EAAAlxC,MAAAyzC,EACAvC,EAAAjxC,iBAAAwzC,EAAAxzC,iBAAA1Q,MACKA,OAQLkL,OAAA,SAAAT,EAAAtC,GACAnI,KAAA04L,sBAAA14L,KAAA4I,OAAA6B,IAMAkG,aAAA,SAAA0a,GACA,IAAAm4E,EAAAxjG,KAAA24L,kBAEAC,EAAAp1F,EAAAo1F,SACAC,EAAAr1F,EAAAq1F,WACAC,EAAAt1F,EAAAs1F,cACAC,EAAA1tK,EAAA,EAAAytK,GACAE,EAAA3tK,EAAAytK,GACA,OAAAC,GAAAH,GAAAG,GAAAH,EAAAp1F,EAAAzhD,YAAAi3I,GAAAH,GAAAG,GAAAH,EAAAr1F,EAAAy1F,cAEAzsL,SAAA,WACA,OAAAxM,KAAA4I,QAOA8vL,sBAAA,SAAA7+D,EAAApvH,GACAA,EAAA+H,WAAA,SAAAzB,GACA,GAAA8oH,EAAA3mD,SAAAniE,EAAAtG,GAAA,CAIA,IAAAjJ,EAAAuP,EAAAC,UACApS,EAAAoB,KAAAmc,WAAA,SAAA6vB,GACA,IAAA2V,EAAA3hD,KAAAuuG,SAAApuG,IAAA6rC,GAEA2V,EAAAhlB,MAAA02D,oBAAA7xF,IAAA8pC,aAAAU,IACAy2D,EAAAl/C,gBAAA5B,EAAAhlB,MAAAglB,EAAAlxC,QACOzQ,QACFA,OAQLyJ,OAAA,SAAAowH,EAAA1xH,GACAnI,KAAA4jC,MAAA4uG,EAAA/4G,cAAAogG,EAAAp7B,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,cAGA3M,KAAAk5L,eAMAl2G,QAAA,WACA,OAAAhjF,KAAA4jC,OAMA+0J,gBAAA,WACA,IAgBAQ,EAhBAt/D,EAAA75H,KAAA4I,OACAmW,EAAA/e,KAAA4jC,MACAsgE,EAAA,UACAC,EAAA,mBACAnlF,EAAA66G,EAAA15H,IAAA,UACA24L,EAAA,eAAA95K,EAAA,IACAi6K,EAAAl6K,EAAAolF,EAAA20F,IACAM,EAAA,GAAAH,GACAI,EAAAr5L,KAAAmc,WAAA1e,OACA67L,EAAA51G,EAAAm2C,EAAA15H,IAAA,mBAAAi5L,GACAG,EAAA71G,EAAAm2C,EAAA15H,IAAA,yBAAAk5L,IACAG,EAAA3/D,EAAA15H,IAAA,mBAAAk5L,EAAA,GAAAA,EAAAE,KAAA,GAAAD,EAAA,GAAAL,EAAA,EAIAltD,EAAAlS,EAAA15H,IAAA,oBAGA4rI,GAMAotD,EAAAz1G,EAAAqoD,EAAA,GAAAA,EAAA,GAAAqtD,GACArtD,EAAA,GAAAA,EAAA,GAAAotD,IANAA,EAAAz1G,EAAA41G,GAAAC,EAAA,GAAAH,IAEArtD,EAAA,CAAAutD,GADAz/D,EAAA15H,IAAA,qBAAAogK,EAAA84B,EAAA,IACAF,EAAA,IACA,GAAAptD,EAAA,GAAAotD,GAMA,IAAAM,GAAAR,EAAAE,IAAAE,EAAAE,GAEAE,EAAA,IAAAA,EAAA,GAEA,IAAAC,EAAA,CAAAn5B,EAAA5hJ,EAAAotH,EAAA,GAAAutD,EAAA,MAAAh5B,EAAA3hJ,EAAAotH,EAAA,GAAAutD,EAAA,OAEAK,EAAAF,EAAAH,EAAAvtD,EAAA,GACA,OACA/sH,SACA85K,gBACAD,WAAA95K,EAAAmlF,EAAA40F,IACAG,eACAL,SAAA75K,EAAAmlF,EAAA,EAAA40F,IACA/2I,WAAAhjC,EAAAolF,EAAA,EAAA20F,IACAU,iBACAF,kBACAG,oBACA1tD,mBACAstD,YACAK,kBACAC,yBAOAT,YAAA,WACA,IAAAn6K,EAAA/e,KAAA4jC,MACA41H,EAAAx5J,KAAAuuG,SACApyF,EAAAnc,KAAAmc,WAEAqnF,EAAAxjG,KAAA24L,kBAEA35K,EAAAwkF,EAAAxkF,OACAw6I,EAAA56J,KAAA,SAAA+iD,GACA,IAAAG,EAAA,GAAA0hD,EAAAzhD,YACA9zB,EAAA0zB,EAAA0gB,QAAA,IACA1gB,EAAA8B,UAAA3B,EAAA7zB,GAAA6zB,EAAA,EAAA7zB,MAEArvB,EAAAud,EAAA,SAAA6vB,EAAA/d,GACA,IAAAwnK,GAAAjyF,EAAAg2F,eAoNA,SAAAlzG,EAAAkd,GACA,IAKA5jF,EAGAkxD,EARAmoH,EAAAz1F,EAAAy1F,aACAK,EAAA91F,EAAA81F,gBACAD,EAAA71F,EAAA61F,UACAI,EAAAj2F,EAAAi2F,kBACAC,EAAAl2F,EAAAk2F,gBAEAtpH,EAAAqpH,EACAprH,GAAA,EAGAiY,EAAAozG,EAAA,IACA95K,EAAA0mE,EAAAmzG,EACA3oH,EAAA2oH,GACGnzG,GAAAozG,EAAA,IACH95K,EAAA4jF,EAAAm2F,qBAAArzG,EAAAgzG,EAAA91F,EAAAuoC,iBAAA,GACA37D,EAAAkpH,EACAjrH,GAAA,IAEAzuD,EAAAq5K,GAAAI,EAAA,EAAA/yG,GAAAmzG,EACA3oH,EAAA2oH,GAGA,OACA75K,WACAwwD,yBACA/B,gBACAyC,yBApCA,SAAAwV,EAAAkd,GACA,IAAA9+C,EAAA8+C,EAAAy1F,cAAAz1F,EAAA61F,UAAA,GACA,OACAz5K,SAAA8kC,EAAA4hC,EACAlW,uBAAA1rB,EACA2pB,eAAA,KAhNApgD,EAAAu1E,GACAo2F,EAAA,CACA/pD,WAAA,CACA7/H,EAAAylL,EAAA71K,SACA3P,EAAAuzF,EAAAzhD,YAEA+tF,SAAA,CACA9/H,EAAA,EACAC,EAAAwlL,EAAA71K,WAGAi6K,EAAA,CACAhqD,WAAAtsH,EAAA,EACAusH,SAAA,GAEAlwH,EAAA,CAAAg6K,EAAA56K,GAAAhP,EAAA+O,EAAA/O,EAAA4pL,EAAA56K,GAAA/O,EAAA8O,EAAA9O,GACAib,EAAA2uK,EAAA76K,GACA6H,EAAAvJ,EAAA3L,SACA2L,EAAAuxB,OAAAhoB,IAAAqE,GACA5N,EAAAkjB,UAAA3Z,IAAAjH,GAKA5f,KAAAw4L,YAAAxsJ,GAAA,CACApsB,WACAsL,WACArE,YACAupD,uBAAAqlH,EAAArlH,uBACA/B,cAAAonH,EAAApnH,cACAyC,qBAAA2kH,EAAA3kH,qBACApE,cAAA,EACAC,eAAA,IAEK3sE,OAQLi9F,QAAA,SAAAjxD,GACA,OAAAhsC,KAAAuuG,SAAApuG,IAAA6rC,IASA82C,YAAA,SAAAxjF,EAAA0sC,GACA,OAAAhsC,KAAA85L,iBAAA95L,KAAAuuG,SAAApuG,IAAA6rC,GAAA22B,YAAArjE,GAAA0sC,IAWA+tJ,gBAAA,SAAAv4L,EAAA61E,EAAAphC,EAAApI,GACA,MAAAoI,MAAA,GACA,MAAApI,MAAArsC,EAAA6rB,SACA,IAAAuhF,EAAA5uG,KAAAuuG,SACApyF,EAAAnc,KAAAmc,WACA69K,EAAA,GACA5yG,EAAA,GACAvjF,EAAAjF,KAAAud,EAAA,SAAAwnG,GACAq2E,EAAAv4L,KAAAD,EAAA8pC,aAAAq4E,IACAv8B,EAAA3lF,KAAAmtG,EAAAzuG,IAAAwjH,GAAAlzG,SAIA,IAFA,IAAAwpL,EAAAj6L,KAAAk6L,iBAEA/oL,EAAA8kC,EAA+B9kC,EAAA08B,EAAiB18B,IAAA,CAChD,IAAAgpL,EAEA,GAAAF,EAEO,CACPE,EAAA,SAGA,IAFA,IAAAj4L,EAAAV,EAAA22C,UAAA6hJ,EAAA7oL,GAEAwhB,EAAA,EAAAC,EAAAzW,EAAA1e,OAAiDk1B,EAAAC,EAAUD,IAAA,CAG3D,gBAFAy0D,EAAAz0D,GAAAynK,eAAAl4L,EAAAywB,IAEA,CACAwnK,EAAA,WACA,aAVAA,EAAA,SAeA9iH,EAAA8iH,EAAAhpL,KAQA+oL,eAAA,WAKA,IAJA,IAAA/9K,EAAAnc,KAAAmc,WACAyyF,EAAA5uG,KAAAuuG,SACA0rF,GAAA,EAEAtnK,EAAA,EAAAC,EAAAzW,EAAA1e,OAA6Ck1B,EAAAC,EAAUD,IACvD,WAAAi8E,EAAAzuG,IAAAgc,EAAAwW,IAAAliB,MAAA2pL,mBACAH,GAAA,GAIA,OAAAA,GAUAH,iBAAA,SAAAr3H,EAAAz2B,GACA,IAAAquJ,EAAAr6L,KAAAw4L,YAAAxsJ,GACA,OAAApnC,EAAA4a,eAAA,CAAAijD,EAAA,GAAA43H,EAAAxzK,YAMAyzK,cAAA,SAAAtuJ,GACA,OAAAnoC,EAAA5G,MAAA+C,KAAAw4L,YAAAxsJ,KAOA6/F,0BAAA,SAAAxgH,GACA,IAAAm4E,EAAAxjG,KAAA24L,kBAEAG,EAAAt1F,EAAAs1F,cACA/sD,EAAAvoC,EAAAuoC,iBAAApvI,QACAw8L,EAAAptD,EAAA,GAAAA,EAAA,GACApzF,EAAA,GAAA6qD,EAAA81F,iBAAA91F,EAAA61F,UAAA,IAEA,IAAAr5L,KAAA2Q,aAAA0a,GACA,OACAygH,SAAA,OACAC,oBAKA,IAGAp2E,EAHA4kI,EAAAlvK,EAAAytK,GAAAt1F,EAAAq1F,WAAAr1F,EAAAm2F,qBAIA7tD,EAAA,QACA2tD,EAAAj2F,EAAAi2F,kBAEAe,EAAAx6L,KAAA4I,OAAAzI,IAAA,8BAGAs6L,EAAA,MAAAD,EAAA,GAEA,GAAAf,EACAgB,GAAAhB,GAAAc,EAAApB,EAAAqB,EAAA,IACA1uD,EAAA,OACAn2E,EAAA4kI,EAAApB,EAAAqB,EAAA,IACOC,GAAAhB,GAAAc,EAAApB,GAAA,EAAAqB,EAAA,KACP1uD,EAAA,OACAn2E,EAAA4kI,EAAApB,GAAA,EAAAqB,EAAA,MAEA7kI,EAAA4kI,EAAApB,EAAAqB,EAAA,SAAA7kI,EAAA4kI,EAAApB,GAAA,EAAAqB,EAAA,UAAA7kI,EAAA,IAGAA,GAAA6tC,EAAA81F,gBAAAG,GACAlB,EAAA5iI,EAAAo2E,EAAApzF,EAAA,OACAmzF,EAAA,WAEA,CACAqtD,EAAAptD,EAAA,GAAAA,EAAA,IAEAA,EAAA,CAAAl9H,EAAA,EADA8pC,EAAA,GAAA4hJ,EAAApB,EACAA,EAAA,KACA,GAAAzqL,EAAAiqC,EAAA,GAAAozF,EAAA,GAAAotD,GACAptD,EAAA,GAAAA,EAAA,GAAAotD,EAGA,OACAptD,mBACAD,cAiDA,IAAA1qG,EAAA6qG,EACA9zG,EAAA93B,QAAA+gC,mBC/eA,IAAAv9B,EAAaH,EAAQ,KAErB0+D,EAAW1+D,EAAQ,KA8BnB40L,EAAA,SAAAtsJ,EAAArP,EAAAqvI,EAAAjoH,EAAAuiC,GACAlkB,EAAA/kE,KAAA2C,KAAAgsC,EAAArP,EAAAqvI,GAUAhsK,KAAAT,KAAAwkD,GAAA,QAMA/jD,KAAAsmF,aAGAgyG,EAAAp8L,UAAA,CACAyB,YAAA26L,EAMA7nL,MAAA,KAKAmzD,aAAA,WACA,qBAAA5jE,KAAA0Q,iBAAAlE,WAAArM,IAAA,YAGA0D,EAAA9C,SAAAu3L,EAAAl2H,GACA,IAAAhhC,EAAAk3J,EACAngK,EAAA93B,QAAA+gC,mBCtEA,IAAAv9B,EAAaH,EAAQ,KAErBovF,EAAgBpvF,EAAQ,KAExBA,EAAQ,KAqBR,IAAA09B,EAAA0xD,EAAAnyF,OAAA,CACApB,KAAA,WACAyb,aAAA,iBAKAtK,iBAAA,KAOAyL,WAAA,KAOA29G,kBAAA,KACAtzF,WAAA,MACAF,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACAvJ,KAAA,GACAE,IAAA,GACAC,MAAA,GACAC,OAAA,GAGA4P,OAAA,aAIAw6K,gBAAA,EACAkB,iBAAA,KACAnB,gBAAA,EACAD,gBAAA,GAEAqB,eAAA,GACAC,mBAAA,GAGAC,2BAAA,cACAC,oBAAA,QAEAnhC,oBAAA,MAMAryJ,KAAA,WACAwrF,EAAA52F,UAAAoL,KAAAlI,MAAAY,KAAAb,WACAa,KAAAinC,YAAA,KAMAA,YAAA,SAAAlM,GACA,IAAAg5C,EAAA/zE,KAAAgM,OACA+uB,GAAAl3B,EAAA7F,MAAA+1E,EAAAh5C,GAAA,GAEA/6B,KAAA+6L,mBAQA7nH,SAAA,SAAAziE,EAAAhG,GACA,IAAA0tL,EAAA1nL,EAAAtQ,IAAA,iBACA,aAAAg4L,GAAA1tL,EAAA5B,aAAA,WAAAsvL,KAAAn4L,MAEAg7L,cAAA,SAAAjjL,GACAlU,EAAAjF,KAAA,sGAAA2B,GACAwX,EAAAha,eAAAwC,KACAP,KAAAgM,OAAAzL,GAAAwX,EAAAxX,KAEKP,OAML+6L,gBAAA,WACA,IAAA5+K,EAAAnc,KAAAmc,WAAA,GACA29G,EAAA95H,KAAA85H,kBAAA,GACA1yC,EAAAvjF,EAAApH,OAAAuD,KAAAumC,gBAAA0xJ,aAAA,SAAA/zI,GAGA,OAAAA,EAAA/jD,IAAA,uBAAAH,KAAA4V,gBACK5V,MACL6D,EAAAjF,KAAAwoF,EAAA,SAAAljC,GACA/nC,EAAA1a,KAAA,MAAAyiD,EAAA/jD,IAAA,QACA25H,EAAAr4H,KAAAyiD,EAAAtuC,qBAKAuiB,EAAA93B,QAAA+gC,mBCjIA,IAAAv9B,EAAaH,EAAQ,KAErBc,EAAqBd,EAAQ,KAE7BisJ,EAAsBjsJ,EAAQ,KAE9B28H,EAAuB38H,EAAQ,KAE/By5B,EAAiBz5B,EAAQ,KAEzB48H,EAA2B58H,EAAQ,KAqBnC68H,EAAA/7H,EAAA7D,OAAA,CACApB,KAAA,mBAKAoiD,KAAA,KAMAs5I,gBAAA,GAKAC,mBAAA,WACA,OAAAvrC,EAAA,gHAAAA,CAAA3vJ,KAAAwM,SAAA,qBAaA2uL,mBAAA,SAAAC,GACA,IAAAH,EAAAj7L,KAAAi7L,gBAAAp3L,EAAA5G,MAAAm+L,GAEA,GAAAH,EACA,QAAA19L,EAAA09L,EAAAx9L,OAAA,EAA8CF,GAAA,EAAQA,IACtD4/B,EAAAnQ,IAAAiuK,EAAA19L,KAaA68L,eAAA,SAAA96L,GACA,IAAA27L,EAAAj7L,KAAAi7L,gBAEA,IAAAA,EAAAx9L,OACA,eAGA,SAAA6B,GAAA8tB,MAAA9tB,GACA,iBAIA,OAAA27L,EAAAx9L,OAAA,CACA,IAAAwyB,EAAAgrK,EAAA,GAEA,GAAAhrK,EAAA,IAAA3wB,MAAA2wB,EAAA,GACA,oBAGA,QAAA1yB,EAAA,EAAAC,EAAAy9L,EAAAx9L,OAAmDF,EAAAC,EAASD,IAC5D,GAAA09L,EAAA19L,GAAA,IAAA+B,MAAA27L,EAAA19L,GAAA,GACA,eAKA,oBAuBAsG,EAAA7F,MAAAuiI,EAAArkI,UAAAokI,GAMAD,EAAA,WAAAE,EAJA,SAAApwD,EAAAnkE,GACA,OAAAA,EAAAzM,OAAAyM,EAAAxK,KAAA,qBAvBA,CACAjC,KAAA,QAKAysC,IAAA,KAGAqvJ,gBAAA,CACA5zL,MAAA,GACAyqI,YAAA,EACAl8G,YAAA,oBACA7V,MAAA,oBACAk2D,QAAA,IAEA0P,UAAA,EAEAxtE,EAAA,KASA,IAAA6oB,EAAAm/F,EACApoG,EAAA93B,QAAA+gC,mBCzIA19B,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBCJR,IAAA4xB,EAAc5xB,EAAQ,KAgCtB4xB,EAAAlb,eALA,CACA7a,KAAA,iBACAwV,MAAA,oBAGA,SAAAtD,EAAAhH,GACAA,EAAAuD,cAAA,CACAlF,SAAA,eACAyK,MAAA9B,GACG,SAAA6pL,GACHA,EAAA35I,KAAAlxC,MAAA0qL,mBAAA1pL,EAAA2pL,eAOA9lK,EAAAlb,eAAA,8BAAA3I,EAAAhH,GACAA,EAAAuD,cAAA,CACAlF,SAAA,WACAyK,MAAA9B,GACG,SAAAooH,GACHA,EAAAmhE,cAAAvpL,wBCjDA,IAAA6jB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErB6oE,EAAkB7oE,EAAQ,KAE1Bs1G,EAAsBt1G,EAAQ,KAE9B8wI,EAAkB9wI,EAAQ,KAE1BkB,EAAclB,EAAQ,KAqBtB63L,EAAA,wCACA3pH,EAAAt8C,EAAA/Y,oBAAA,CACAhd,KAAA,eAKA+H,KAAA,SAAAmD,EAAAtC,GACAypE,EAAApZ,WAAAx4D,KAAA,OAAAb,YAKAa,KAAAw7L,iBAAA,IAAAxiF,EAAA7wG,EAAA2D,UAAAlC,GAAA,QAAA/F,EAAA7E,KAAAgB,KAAAy7L,SAAAz7L,QAMA6R,OAAA,SAAAqyC,EAAAz5C,EAAAtC,EAAAsJ,GACA,IAqGA,SAAAyyC,EAAAz5C,EAAAgH,GACA,OAAAA,GAAA,mBAAAA,EAAAlS,MAAAkL,EAAA24E,eAAA,CACAt6E,SAAA,eACAyK,MAAA9B,IACG,KAAAyyC,EAzGHw3I,CAAAx3I,EAAAz5C,EAAAgH,GAAA,CAIAzR,KAAAkkD,YACAlkD,KAAAmI,MACAnI,KAAAkH,MAAAkzD,YACA,IAAAiyG,EAAArsK,KAAAssK,WAIA,GAHAtsK,KAAAssK,WAAA,IAAA1nK,EAAA+Y,MACA3d,KAAAkH,MAAAiJ,IAAAnQ,KAAAssK,YAEApoH,EAAA/jD,IAAA,SAIA,IAAA+6F,EAwGA,SAAAh3C,EAAAz5C,GACA,OAAAA,EAAA5B,aAAA,WAAAq7C,EAAA/jD,IAAA,kBAzGAk9E,CAAAn5B,EAAAz5C,GACAG,EAAAswF,EAAAxqF,iBACA2qL,EAAAn3I,EAAAg3I,qBACAS,EAAAN,EAAA5zL,MACAukC,EAAAkY,EAAAvC,KAAA3V,IACAquJ,EAAAzvL,EAAA0vL,cAAAtuJ,GACA4vJ,EAAA/3L,EAAAlD,OAAA,CACAghC,uBAAAg6J,GACKtB,GACLvsH,EAAA,IAAAvB,EAAAroB,EAAA03I,GACA/3L,EAAAjF,KAAA28L,EAAAztH,EAAA39D,IAAA29D,GAEA9tE,KAAAssK,WAAAn8J,IAAA29D,EAAAb,YAEAjtE,KAAA67L,wBAAAD,EAAAP,EAAAn3I,EAAAg3C,EAAAygG,EAAAxzL,GAEA,IAAAu4G,EAAAjvG,IAAA,IAAAA,EAAA9H,UAAA,KAAAu6C,EACAt/C,EAAA2lB,gBAAA8hJ,EAAArsK,KAAAssK,WAAA5rD,MASAm7E,wBAAA,SAAAD,EAAAP,EAAAn3I,EAAAg3C,EAAAygG,EAAAxzL,GAEA,IAAAwwC,EAAAuL,EAAAvC,KAAAP,YACA06I,EAAAnjJ,EAAA,GAAAA,EAAA,GACAojF,EAAAptH,KAAAC,IAAA,MAAAD,KAAAyb,IAAA0xK,IAIA/8K,EAAAna,EAAA6Z,aAAA9M,OAAA,CACA3B,EAAA2oC,EAAA,GACA1oC,GAAA0rL,EAAA,EACAl0L,MAAAq0L,EACAp0L,OAAAi0L,IAEA58K,EAAA/O,GAAA+rH,EACAh9G,EAAAtX,OAAA,EAAAs0H,EAEA/7H,KAAAw7L,iBAAAv8E,MAAA,CACAC,iBAAA,EACAh0F,SAAA0wK,EAAA1wK,SACAtL,SAAAg8K,EAAAh8K,WACKm/F,UAAA,EACL9D,QAAA,KACA+C,SAAAw2B,EAAApI,sBAAArtH,GACAg8F,iBAAAy5B,EAAA/H,yBAAA1tH,EAAA5W,EAAA+yF,GACAqlB,0BAAAi0B,EAAAlI,2BAAAvtH,EAAA,MACK2/F,YAAA,CACLzE,UAAA,QACAtB,WAAA0iF,EACAviF,eAAA,IACKsG,aAqCL,SAAAl7D,GACA,IAAAvC,EAAAuC,EAAAvC,KACA,OAAA99C,EAAAhH,IAAAqnD,EAAA+2I,gBAAA,SAAAhrK,GACA,OACAgqF,UAAA,QACAgB,QAAA,KACA9uF,MAAA,CAAAw1B,EAAAghB,YAAA1yC,EAAA,OAAA0xB,EAAAghB,YAAA1yC,EAAA,WA3CK8rK,CAAA73I,KAELu3I,SAAA,SAAAO,EAAAjkL,GAEA,IAAAmsC,EAAAlkD,KAAAkkD,UACAvC,EAAAuC,EAAAvC,KACAy5I,EAAAv3L,EAAAhH,IAAAm/L,EAAA,SAAAC,GACA,OAAAt6I,EAAAihB,YAAAq5H,EAAA9vK,MAAA,OAAAw1B,EAAAihB,YAAAq5H,EAAA9vK,MAAA,YAKA+3B,EAAAl4C,OAAA+5E,WAAAhuE,EAAAujG,OAAAvjG,EAAA+gG,gBAEA94G,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,iBACA28L,eAAAh4I,EAAAj9C,GACAm0L,eAQAtlL,QAAA,WACA9V,KAAAw7L,iBAAA1lL,aA0BA,IAAAsrB,EAAAwwC,EACAz5C,EAAA93B,QAAA+gC,mBC/KA,IAAA0jB,EAAYphD,EAAQ,KAEpB9E,EAAAkmD,EAAAlmD,KACAuE,EAAA2hD,EAAA3hD,cAEAsB,EAAkBf,EAAQ,KAE1Bk+H,EAA0Bl+H,EAAQ,KAqBlC09B,EAAA38B,EAAA9D,OAAA,CACApB,KAAA,kBACAyb,aAAA,aACA4uB,sBAAA,kBACAK,eAAA,SAAAj+B,EAAAvB,GACA,IAAAvN,EAAA8C,KAAAypC,YAEA,OAkDA,SAAAvsC,EAAA6T,GAOA,GAAA7T,EAAA4/E,aACA,OAGA,IAAA+8C,EAAA9oH,EAAAtG,QAAA5B,aAAA,WAAAkI,EAAA5Q,IAAA,kBAEA,IAAA05H,EACA,OAGA,IAAA/8C,EAAA5/E,EAAA4/E,aAAA35E,IACAvE,EAAAi7H,EAAA19G,WAAA,SAAAwnG,GACA,IAAAw4E,GAAAx4E,EAMA1gH,QAAA,UALA65E,EAAA58E,IAAAyjH,EAAAw4E,KAvEAC,CAAAl/L,EAAA8C,MACA4hI,EAAA1kI,EAAA8C,OAUAq8L,2BAAA,SAAAlC,GACA,IAAAvvL,EAAA5K,KAAA0Q,iBACAlP,EAAAxB,KAAAgR,UACA0mC,EAAA,GAMA,OALA9sC,EAAAmvL,gBAAAv4L,EAAA,SAAA86L,EAAAnrL,GACAgpL,IAAAmC,GACA5kJ,EAAAj2C,KAAAD,EAAAs2C,YAAA3mC,MAGAumC,GAEApR,cAAA,CACA9tB,OAAA,EAEAD,EAAA,EAEA7H,iBAAA,WACAynL,cAAA,EACAvgK,MAAA,CACAZ,MAAA,GAEAulK,gBAAA,IACAC,cAAA,EACArmK,UAAA,CACA1uB,MAAA,EACA4uE,QAAA,IACA92E,KAAA,SAEAuxB,SAAA,CACA8G,MAAA,CACAZ,MAAA,IAGA0lD,YAAA,IACAnlD,QAAA,EAEAhR,gBAAA,YAgCA4R,EAAA93B,QAAA+gC,mBCjHA,IAAAx8B,EAAclB,EAAQ,KAItBiB,GAFajB,EAAQ,KAELA,EAAQ,MAqBxB+4L,EAAA,GAmJA,SAAAC,EAAAl7L,EAAA2P,EAAAgL,EAAAvR,GAGA,IAFA,IA2EAlI,EA3EA0oB,EAAA,GAEA7tB,EAAA,EAAiBA,EAAA4e,EAAA1e,OAAuBF,IAAA,CACxC,IAAAg/D,EAAApgD,EAAA5e,GACA+B,EAAAkC,EAAArB,IAAAqB,EAAA8pC,aAAAixB,GAAAprD,GAuEAzO,EArEApD,GAsEA,aAtEAsL,EAAAqyF,QAAA1gC,GAAAh9D,KAsEA,MAAAmD,EAAA,MAAAA,GAAA0qB,MAAA1qB,KArEA0oB,EAAA3pB,KAAAmJ,EAAAk4E,YAAAxjF,EAAAi9D,IAIA,OAAAnxC,EAGA,SAAAuxK,EAAAn7L,EAAAo7L,EAAAzrL,EAAAgL,EAAAvR,GACA,IAAAwgB,EAAAsxK,EAAAl7L,EAAA2P,EAAAgL,EAAAvR,GACA0sB,EAAA,IAAA1yB,EAAAqZ,SAAA,CACAuJ,MAAA,CACA4D,UAEArgB,QAAA,EACA4W,GAAA,KAIA,OAFAi7K,EAAAzsL,IAAAmnB,GACA91B,EAAAo7C,iBAAAzrC,EAAAmmB,GACAA,EAGA,SAAA4pD,EAAAnwE,GACA,IAAAwmB,EAAAxmB,EAAA5Q,IAAA,aAEA,OADA,IAAAo3B,MAAAklK,GACA,CACAtmK,UAAAplB,EAAAvE,SAAA,aAAA6gE,eACA91C,OAAA,MAAAA,IAAAklK,GAIA,SAAAI,EAAAp0L,EAAAjH,EAAA2P,EAAA0wE,GACA,IAAA1rD,EAAA0rD,EAAA1rD,UAEA30B,EAAAszC,gBAEA3e,EADA30B,EAAAs6C,aAAA3qC,GAAA3E,SAAA,aACA6gE,gBAGA5kE,EAAAq2E,SAAA3oD,GACA,IAAA8iE,EAAAxwF,EAAAsH,MACAkpF,EAAAz4E,KAAA,KAEAy4E,EAAA14E,OAAA/e,EAAA4P,cAAAD,EAAA,SAEA8nF,EAAA5iB,QAAA70E,EAAA4P,cAAAD,EAAA,WACA0wE,EAAAtqD,SAAA9uB,EAAA+e,MAAA+P,OAAAsqD,EAAAtqD,QA2BA,IAAA6J,EAlOAz8B,EAAAhE,OAAA,CACApB,KAAA,WACA+H,KAAA,WAKAtH,KAAA88L,WAAA,IAAAl4L,EAAA+Y,MACA3d,KAAAkH,MAAAiJ,IAAAnQ,KAAA88L,YAKA98L,KAAA2kE,MAKA3kE,KAAA0iJ,cAMA7wI,OAAA,SAAAd,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAmrL,EAAA58L,KAAA88L,WACAt7L,EAAAuP,EAAAC,UACA2wE,EAAA3hF,KAAA2kE,MACA/5D,EAAAmG,EAAAL,iBACAyL,EAAAvR,EAAAuR,WACA0lE,EAAAX,EAAAnwE,GA2BA,GA1BAvP,EAAAm4C,KAAAgoC,GAAAxxE,IAEA,SAAA4sL,GAEAF,EADAF,EAAAn7L,EAAAo7L,EAAAG,EAAA5gL,EAAAvR,GACApJ,EAAAu7L,EAAAl7G,KAJA32E,OAOA,SAAA6xL,EAAAC,GACA,IAAA1lK,EAAAqqD,EAAA9kC,iBAAAmgJ,GACA5xK,EAAAsxK,EAAAl7L,EAAAu7L,EAAA5gL,EAAAvR,GACApJ,EAAAo7C,iBAAAmgJ,EAAAzlK,GACA,IAAAopF,EAAAjvG,IAAA,IAAAA,EAAA9H,UAAA,KAAAoH,EACAnM,EAAAgiB,YAAA0Q,EAAA,CACA9P,MAAA,CACA4D,WAEOs1F,EAAAq8E,GACPF,EAAAvlK,EAAA91B,EAAAu7L,EAAAl7G,KAjBA9rE,OAoBA,SAAAinL,GACA,IAAA1lK,EAAAqqD,EAAA9kC,iBAAAmgJ,GACAJ,EAAA7mL,OAAAuhB,KAtBA8zC,WA0BAprE,KAAA0iJ,aAAA,CACA1iJ,KAAA0iJ,cAAA,EACA,IAAA1kC,EAiEA,SAAApzG,EAAAmG,EAAAjS,GACA,IAAA+6H,EAAAjvH,EAAA6F,MACAsO,EAAAnU,EAAAo4E,UACAi6G,EAAA,IAAAr4L,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAxI,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,UAGAskC,EAAA,eAAA6tF,EAAA15H,IAAA,2BAQA,OAPA88L,EAAAp4J,SAAAmH,EAAA,GACApnC,EAAA+kB,UAAAszK,EAAA,CACAz1K,MAAA,CACA/f,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,SAEGqJ,EAAAjS,GACHm+L,EApFA/2B,CAAAt7J,EAAAmG,EAAA,WAEAs2D,WAAA,WACAu1H,EAAAjvE,qBAGAivE,EAAAlvE,YAAA1P,GAGAh+G,KAAA2kE,MAAAnjE,GAEA64D,yBAAA,SAAAtpD,EAAAtG,EAAAtC,GACAnI,KAAA0iJ,cAAA,EACA1iJ,KAAA2kE,MAAA,KAEA3kE,KAAA88L,WAAA1iI,aAEAE,kBAAA,SAAAgoB,EAAAvxE,EAAAtG,GAMA,IALA,IAAAjJ,EAAAuP,EAAAC,UACApG,EAAAmG,EAAAL,iBACAyL,EAAAvR,EAAAuR,WACA0lE,EAAAX,EAAAnwE,GAEAI,EAAAmxE,EAAArsC,MAA0C9kC,EAAAmxE,EAAAz0C,IAA4B18B,IAAA,CACtE,IAAAmmB,EAAAqlK,EAAAn7L,EAAAxB,KAAA88L,WAAA3rL,EAAAgL,EAAAvR,GACA0sB,EAAAmnD,aAAA,EACAo+G,EAAAvlK,EAAA91B,EAAA2P,EAAA0wE,KAGA/rE,QAAA,aA8BAC,OAAA,WACA/V,KAAA88L,YAAA98L,KAAA88L,WAAA1iI,YACAp6D,KAAA2kE,MAAA,QA2GAxsC,EAAA93B,QAAA+gC,iBC3OA,IAAAk2J,EAAA,iCACAl2J,EAAA,CACAoqC,WAAA,WACAzhC,MAAA,SAAAh5B,EAAAtG,EAAAtC,GACA,IAAAs9H,EAAA10H,EAAAvE,SAAA,aACAuhE,EAAAh9D,EAAAvE,SAAA,aACA0wL,EAAAzyL,EAAAtK,IAAA,SACAggB,EAAA4tD,EAAA5tE,IAAA,UAAAslI,EAAAtlI,IAAA,UAAA+8L,EAAAnsL,EAAAqH,YAAA8kL,EAAAz/L,QACA8+L,EAAAxrL,EAAA5Q,IAAA,mBACAq8L,EAAAzrL,EAAA5Q,IAAA,iBACAg2B,EAAAplB,EAAAvE,SAAA,aAAA6gE,eACAziE,EAAAmG,EAAAL,iBACAlP,EAAAuP,EAAAC,UACAmsL,EAAA,CACApnK,OAAAI,EAAAkgD,QACA4lE,OAAAugD,EACAtgD,SAAAqgD,GAiBA,OAfA/6L,EAAA06C,UAAA,QAAA/7B,GAeA,CACA06C,SAdA,SAAA1iD,EAAA3W,GACAoJ,EAAAmvL,gBAAAv4L,EAAA,SAAA24L,EAAAhpL,GACA,IAAAklE,EAAA8mH,EAAAhD,GAEA,cAAAA,GAAA34L,EAAAszC,cAAA,CACA,IAAAsoJ,EAAA57L,EAAAs6C,aAAA3qC,GAAAhR,IAAAm3L,GAAA,GACA,MAAA8F,IAAA/mH,EAAA+mH,GAGA57L,EAAAi7C,cAAAtrC,EAAA,UAAAklE,IACOl+D,EAAA89B,MAAA99B,EAAA01B,SAQP1V,EAAA93B,QAAA+gC,mBCxDA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAA25L,EAAmB35L,EAAQ,KAE3B45L,EAAmB55L,EAAQ,KAqB3B4xB,EAAAlZ,eAAAihL,GACA/nK,EAAAhb,eAAAgjL,oBChCA,IAAA74L,EAAkBf,EAAQ,KAE1B8pL,EAA8B9pL,EAAQ,KAItCi6B,EAFcj6B,EAAQ,KAEtBi6B,WAyBA4/J,EAAA94L,EAAA9D,OAAA,CACApB,KAAA,gBACAikG,WAAA,KAQAv5D,eAAA,SAAAj+B,GACA,IAAAmtJ,EAAAntJ,EAAAk+H,OAAAl+H,EAAAmtJ,MACA5lD,EAAAvnG,EAAAxK,MAAAwK,EAAAunG,MAEA,GAAAA,GAAA4lD,EAEA,OADAq0B,EAAAj6E,EAAA4lD,EAAAn5J,MAAA,GACAwB,MAGAg8L,gBAAA,SAAArsL,EAAAssL,GACA,IAAAvsK,EAAAlxB,KAAAgM,OAAAxK,KAAA2P,GACA+f,EAAAwsK,OAAAD,EAAA,GACAvsK,EAAAysK,OAAAF,EAAA,IAQAxyD,SAAA,WACA,OAAAjrI,KAAAgR,UAAA8mB,OAQAu2J,YAAA,WACA,OAAAruL,KAAAirI,WAAAL,UAMA1/F,cAAA,SAAA/5B,EAAAg6B,EAAAtyB,GAEA,YAAAA,EAAA,CACA,IAAAV,EAAAnY,KAAA4Y,cAAAzH,EAAA0H,GACA+kL,EAAAzlL,EAAA3W,KACAqlH,EAAA+2E,EAAA1gM,OAAA,OAAA0gM,EAAA3/L,OAMA,OAJAka,EAAA7Y,QACAunH,GAAA,MAAA1uG,EAAA7Y,OAGAq+B,EAAAkpF,GAGA,OAAA02E,EAAAhlI,UAAAv4D,KAAA,gBAAAmR,EAAAg6B,IAEA7E,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA7H,iBAAA,OACAsO,OAAA,KAEAhQ,KAAA,KACAE,IAAA,KACAC,MAAA,MACAC,OAAA,KAEAyuL,UAAA,GAEAC,QAAA,EAEAz/G,WAAA,EAEA0/G,iBAAA,GACAnmK,MAAA,CACAZ,MAAA,EACApX,SAAA,QACAO,MAAA,OACAwE,SAAA,IAEA8S,UAAA,CACAy6G,YAAA,EACAl8G,YAAA,QAEAG,UAAA,CACAhW,MAAA,UACAk2D,QAAA,GACA00D,UAAA,IAEAj6G,SAAA,CACA8G,MAAA,CACAZ,MAAA,GAEAb,UAAA,CACAkgD,QAAA,KAGA9vD,gBAAA,SACAquI,kBAAA,OAGAxzH,EAAAm8J,EACAplK,EAAA93B,QAAA+gC,mBC3IA,IAAAx8B,EAAclB,EAAQ,KAEtB4xB,EAAc5xB,EAAQ,KA0BtBs6L,EAAAp5L,EAAAoiB,YAAA,CACAQ,MAAA,CACAC,GAAA,EACAE,GAAA,EACAD,GAAA,EACAE,GAAA,EACAquF,KAAA,EACAC,KAAA,EACAm+C,KAAA,EACAC,KAAA,EACA37G,OAAA,GAEAtV,UAAA,SAAAxB,EAAAra,GACA,IAAAy2K,EAAAz2K,EAAAmxB,OAAA,EACA9W,EAAA0b,OAAA/1B,EAAAC,GAAAD,EAAAG,GAAAs2K,GACAp8J,EAAAuc,cAAA52B,EAAAyuF,KAAAzuF,EAAA0uF,KAAA+nF,EAAAz2K,EAAA6sI,KAAA7sI,EAAA8sI,KAAA2pC,EAAAz2K,EAAAE,GAAAF,EAAAI,GAAAq2K,GACAp8J,EAAA2b,OAAAh2B,EAAAE,GAAAF,EAAAI,GAAAq2K,GACAp8J,EAAAuc,cAAA52B,EAAA6sI,KAAA7sI,EAAA8sI,KAAA2pC,EAAAz2K,EAAAyuF,KAAAzuF,EAAA0uF,KAAA+nF,EAAAz2K,EAAAC,GAAAD,EAAAG,GAAAs2K,GACAp8J,EAAA4b,eAIArc,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,SAMAqJ,OAAA,KACAiJ,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA2vB,EAAA/mB,EAAAk6H,WACA/jI,EAAAlH,KAAAkH,MACAs8F,EAAAzyF,EAAAyyF,WAEA/7F,EAAA+7F,EAAA/7F,MAEAC,EAAA87F,EAAA97F,OACAgjI,EAAA35H,EAAAC,UACA45H,EAAA75H,EAAAC,QAAA,QACAhR,KAAA4I,OAAAmI,EACA7J,EAAAkzD,YACAlzD,EAAAyf,KAAA,YAAA68E,EAAAxzF,EAAAwzF,EAAAvzF,IAEA6nB,EAAAgzG,SAAA,SAAAnlG,GACA,IAAA8yC,EAAA,IAAAulH,EACAvlH,EAAAtnE,UAAAw0B,EAAAx0B,UACAsnE,EAAArgE,YAAArH,EAAAqH,YACAqgE,EAAA5/D,SAAA,OACA,IAAAk1D,EAAApoC,EAAAn5B,SAAA,aACA+vK,EAAAxuG,EAAA5tE,IAAA,aACA+9L,EAAAv4J,EAAAgjG,MAAAvsF,YACA+hJ,EAAAx4J,EAAAgjG,MAAAn8H,WACA4xL,EAAAD,EAAAh+L,IAAA,UACAk+L,EAAAF,EAAAh+L,IAAA,UACAm+L,EAAA34J,EAAAijG,MAAAxsF,YACAmiJ,EAAA54J,EAAAijG,MAAAp8H,WACAgyL,EAAAD,EAAAp+L,IAAA,UACAs+L,EAAAF,EAAAp+L,IAAA,UACAu+L,EAAA/4J,EAAAyW,YACAq8B,EAAAjxD,MAAAmxB,OAAAhqC,KAAAG,IAAA,EAAA4vL,EAAAhkK,IACA,IAAAjT,GAAA,MAAA22K,IAAA32L,EAAAy2L,EAAAluL,GAAAkuL,EAAAzjK,GACA9S,GAAA,MAAA02K,IAAA32L,EAAAw2L,EAAAjuL,GAAAyuL,EAAAn+J,GAAAm+J,EAAAhkK,GAAA,EACAhT,EAAA,MAAA82K,IAAA/2L,EAAA62L,EAAAtuL,EACA4X,GAAA,MAAA62K,IAAA/2L,EAAA42L,EAAAruL,GAAAyuL,EAAAz0F,GAAAy0F,EAAAhkK,GAAA,EACAu7E,EAAAxuF,GAAA,EAAA80J,GAAA70J,EAAA60J,EACArmE,EAAAvuF,EACA0sI,EAAA5sI,EAAA80J,EAAA70J,GAAA,EAAA60J,GACAjoB,EAAA1sI,EAaA,OAZA6wD,EAAA5zC,SAAA,CACApd,KACAE,KACAD,KACAE,KACAquF,OACAC,OACAm+C,OACAC,SAEA77E,EAAA7hE,SAAAm3D,EAAAoT,gBAEA1I,EAAA1oE,MAAAyQ,MACA,aACAi4D,EAAA1oE,MAAAyQ,KAAAmlB,EAAAgjG,MAAA/3H,UAAA,SACA,MAEA,aACA6nE,EAAA1oE,MAAAyQ,KAAAmlB,EAAAijG,MAAAh4H,UAAA,SAIAhM,EAAAsjB,cAAAuwD,EAAA9yC,EAAAn5B,SAAA,sBAAA20E,gBACAj6E,EAAAiJ,IAAAsoE,GACAmyD,EAAAhuF,iBAAAjX,EAAAx0B,UAAAsnE,KAGA3gD,EAAAy6E,SAAA,SAAAt7F,GACA,IAAA+H,EAAA/H,EAAAmlC,YACA6vB,EAAAh1D,EAAAzK,WACAmyL,EAAA1yH,EAAA9rE,IAAA,UACAy+L,EAAA3yH,EAAA9rE,IAAA,UACAmpB,EAAA2iD,EAAAz/D,SAAA,SACA2kK,EAAAllG,EAAAz/D,SAAA,kBACAuS,EAAA,IAAAna,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAA,MAAA2uL,IAAAl3L,EAAAuX,EAAAhP,EACAC,EAAA,MAAA2uL,IAAAl3L,EAAAsX,EAAA/O,EACAxI,MAAAuX,EAAAyb,GACA/yB,OAAAsX,EAAA0b,IAEA3qB,MAAAk8D,EAAAz/D,SAAA,aAAA20E,iBAEA1gE,EAAAxJ,EAAAzK,SAAA,sBAAA20E,eACAv8E,EAAAwjB,cAAArJ,EAAAhP,MAAA0Q,EAAA6I,EAAA6nJ,EAAA,CACAxoJ,aAAA5X,EACA6X,eAAA3R,EAAA9F,UACA8X,YAAAhS,EAAAhQ,GACAic,YAAA,IAEAnE,EAAAnI,SAAA,OAAAK,EAAArG,UAAA,UACAhM,EAAAsjB,cAAAnJ,EAAA0B,GACAvZ,EAAAiJ,IAAA4O,GACA2rH,EAAA9tF,iBAAA3lC,EAAA9F,UAAA4N,GACAA,EAAAlG,SAAA,SAEA9H,EAAA5Q,IAAA,cAGAuqI,EAAA5tF,kBAAA,SAAAr0C,EAAA0I,GACA1I,EAAAyvF,MAAA,SAAAz9D,EAAAC,GACA16B,KAAAwnB,MAAAxX,GAAAyqB,EACAz6B,KAAAwnB,MAAAvX,GAAAyqB,EACA16B,KAAAqW,QACAlO,EAAA2P,eAAA,CACAvY,KAAA,WACAizB,SAAAzhB,EAAA9J,GACAkK,UAAAu5H,EAAA5yF,YAAA3mC,GACAusL,OAAA19L,KAAAwnB,MAAAxX,EAAAvI,EACAk2L,OAAA39L,KAAAwnB,MAAAvX,EAAAvI,KAIAe,EAAA41E,WAAA,EACA51E,EAAA+1E,OAAA,UAIAx+E,KAAA2kE,OAAA5zD,EAAA5Q,IAAA,cACA+G,EAAAwmH,YAWA,SAAA3uG,EAAAhO,EAAAjS,GACA,IAAAm+L,EAAA,IAAAr4L,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAA+O,EAAA/O,EAAA,GACAC,EAAA8O,EAAA9O,EAAA,GACAxI,MAAA,EACAC,OAAAqX,EAAArX,OAAA,MASA,OANA9C,EAAA+kB,UAAAszK,EAAA,CACAz1K,MAAA,CACA/f,MAAAsX,EAAAtX,MAAA,GACAC,OAAAqX,EAAArX,OAAA,KAEGqJ,EAAAjS,GACHm+L,EA1BA/2B,CAAAh/J,EAAAiY,kBAAApO,EAAA,WACA7J,EAAAymH,oBAIA3tH,KAAA2kE,MAAA5zD,EAAAC,WAEA8E,QAAA,eAsBAqiB,EAAA93B,QAAA+gC,mBC7Mc19B,EAAQ,KAqBtB0W,eAAA,CACA7a,KAAA,WACAwV,MAAA,WAEA7J,OAAA,UACC,SAAAuG,EAAAhH,GACDA,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,SACAC,MAAA9B,GACG,SAAAV,GACHA,EAAAysL,gBAAA/rL,EAAAN,UAAA,CAAAM,EAAAisL,OAAAjsL,EAAAksL,8BChCA,IAAA3+K,EAAatb,EAAQ,KAErBm7L,EAAWn7L,EAAQ,KAEnBG,EAAaH,EAAQ,KAEPA,EAAQ,KAEtBC,QA6QA,SAAAm7L,EAAAC,EAAAjB,EAAAp2L,GACA7D,EAAAjF,KAAAmgM,EAAA,SAAAxrF,GACA,IAAAt8F,EACAyjB,EAGAn9B,EAFAujE,EAAA,EACAzB,EAAAk0C,EAAA91G,OAIA,IAFA81G,EAAArmF,KAAA8xK,GAEAzhM,EAAA,EAAeA,EAAA8hE,EAAO9hE,IAAA,CAItB,IAFAm9B,EAAAomC,GADA7pD,EAAAs8F,EAAAh2G,IACA6+C,YAAAnsC,GAEA,GACA,IAAAgvL,EAAAhoL,EAAAmlC,YAAAnsC,EAAAyqB,EACAzjB,EAAAklC,UAAA,CACAlsC,EAAAgvL,IACS,GAGTn+H,EAAA7pD,EAAAmlC,YAAAnsC,EAAAgH,EAAAmlC,YAAA1hB,GAAAojK,EAMA,IAFApjK,EAAAomC,EAAAg9H,EAAAp2L,GAEA,GACAu3L,EAAAhoL,EAAAmlC,YAAAnsC,EAAAyqB,EAMA,IALAzjB,EAAAklC,UAAA,CACAlsC,EAAAgvL,IACO,GACPn+H,EAAA7pD,EAAAmlC,YAAAnsC,EAEA1S,EAAA8hE,EAAA,EAAqB9hE,GAAA,IAAQA,GAE7Bm9B,GADAzjB,EAAAs8F,EAAAh2G,IACA6+C,YAAAnsC,EAAAgH,EAAAmlC,YAAA1hB,GAAAojK,EAAAh9H,GAEA,IACAm+H,EAAAhoL,EAAAmlC,YAAAnsC,EAAAyqB,EACAzjB,EAAAklC,UAAA,CACAlsC,EAAAgvL,IACW,IAGXn+H,EAAA7pD,EAAAmlC,YAAAnsC,KAcA,SAAAivL,EAAAH,EAAA7qI,GACArwD,EAAAjF,KAAAmgM,EAAApiM,QAAAk2E,UAAA,SAAA0gC,GACA1vG,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACA,GAAAA,EAAA64K,SAAAryL,OAAA,CACA,IAAAwS,EAAAie,EAAAjX,EAAA64K,SAAAqP,GAAAjxK,EAAAjX,EAAA64K,SAAAsP,GACAH,EAAAhoL,EAAAmlC,YAAAnsC,KAAAo8E,EAAAp1E,IAAAi9C,EACAj9C,EAAAklC,UAAA,CACAlsC,EAAAgvL,IACS,QAMT,SAAAE,EAAAx5J,GACA,OAAA0mD,EAAA1mD,EAAAijG,OAAAjjG,EAAAmtE,WAWA,SAAAusF,EAAAN,EAAA7qI,GACArwD,EAAAjF,KAAAmgM,EAAA,SAAAxrF,GACA1vG,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACA,GAAAA,EAAA44K,QAAApyL,OAAA,CACA,IAAAwS,EAAAie,EAAAjX,EAAA44K,QAAAyP,GAAApxK,EAAAjX,EAAA44K,QAAAuP,GACAH,EAAAhoL,EAAAmlC,YAAAnsC,KAAAo8E,EAAAp1E,IAAAi9C,EACAj9C,EAAAklC,UAAA,CACAlsC,EAAAgvL,IACS,QAMT,SAAAK,EAAA35J,GACA,OAAA0mD,EAAA1mD,EAAAgjG,OAAAhjG,EAAAmtE,WAgCA,SAAAysF,EAAAl8L,EAAAC,GACA,OAAAD,EAAAulI,MAAAxsF,YAAAnsC,EAAA3M,EAAAslI,MAAAxsF,YAAAnsC,EAGA,SAAAuvL,EAAAn8L,EAAAC,GACA,OAAAD,EAAAslI,MAAAvsF,YAAAnsC,EAAA3M,EAAAqlI,MAAAvsF,YAAAnsC,EAGA,SAAAie,EAAAptB,EAAA+uB,GAKA,IAJA,IAAA3B,EAAA,EACA1wB,EAAAsD,EAAArD,OACAF,GAAA,IAEAA,EAAAC,GAAA,CACA,IAAA8B,GAAAuwB,EAAAxyB,KAAAyD,IAAAvD,MAEA6vB,MAAA9tB,KACA4uB,GAAA5uB,GAIA,OAAA4uB,EAGA,SAAAm+D,EAAAp1E,GACA,OAAAA,EAAAmlC,YAAAnsC,EAAAgH,EAAAmlC,YAAA1hB,GAAA,EAGA,SAAAskK,EAAA37L,EAAAC,GACA,OAAAD,EAAA+4C,YAAAnsC,EAAA3M,EAAA84C,YAAAnsC,EAGA,SAAAwvL,EAAAp8L,EAAAC,GACA,OAAAD,EAAAC,EAGA,SAAA87L,EAAAz5J,GACA,OAAAA,EAAAmtE,WAGA36E,EAAA93B,QA/ZA,SAAAoK,EAAAtC,EAAAsJ,GACAhH,EAAA+pF,iBAAA,kBAAAzjF,GACA,IAAA8sL,EAAA9sL,EAAA5Q,IAAA,aACA29L,EAAA/sL,EAAA5Q,IAAA,WACAqjG,EAwBA,SAAAzyF,EAAA5I,GACA,OAAA6W,EAAAya,cAAA1oB,EAAA0tF,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,cA3BAm3H,CAAA/yH,EAAA5I,GACA4I,EAAAyyF,aACA,IAAA/7F,EAAA+7F,EAAA/7F,MACAC,EAAA87F,EAAA97F,OACAowB,EAAA/mB,EAAAk6H,WACA13B,EAAAz7E,EAAAy7E,MACA22B,EAAApyG,EAAAoyG,OAqCA,SAAA32B,GACA1vG,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACA,IAAA5U,EAAA6rB,EAAAjX,EAAA64K,SAAAsP,GACA78L,EAAA2rB,EAAAjX,EAAA44K,QAAAuP,GACA9/L,EAAAqP,KAAAG,IAAAzM,EAAAE,GACA0U,EAAAklC,UAAA,CACA78C,UACK,KA3CLogM,CAAAnsF,GAwBA,SAAAA,EAAA22B,EAAA2zD,EAAAC,EAAAr2L,EAAAC,EAAAi4L,IAkCA,SAAApsF,EAAA22B,EAAA2zD,EAAAp2L,GAYA,IATA,IAAAm4L,EAAA,GAEAC,EAAA,GAEAC,EAAA,GACAC,EAAA,GACA/vL,EAAA,EAGAzS,EAAA,EAAiBA,EAAA2sI,EAAAzsI,OAAkBF,IACnCqiM,EAAAriM,GAAA,EAGA,QAAAA,EAAA,EAAiBA,EAAAg2G,EAAA91G,OAAkBF,IACnCsiM,EAAAtiM,GAAAg2G,EAAAh2G,GAAAsyL,QAAApyL,OAEA,IAAAoiM,EAAAtiM,IACAuiM,EAAAr+L,KAAA8xG,EAAAh2G,IAIA,KAAAuiM,EAAAriM,QACAoG,EAAAjF,KAAAkhM,EAAA,SAAA7oL,GACAA,EAAAklC,UAAA,CACAnsC,MACO,GACPiH,EAAAklC,UAAA,CACA1hB,GAAAojK,IACO,GACPh6L,EAAAjF,KAAAqY,EAAA64K,SAAA,SAAAnqJ,GACA,IAAAq6J,EAAA91D,EAAArpI,QAAA8kC,GACAi6J,EAAAI,GAAA,EACA,IAAA/sH,EAAAttC,EAAAijG,MACAq3D,EAAA1sF,EAAA1yG,QAAAoyE,GAEA,MAAA4sH,EAAAI,IACAF,EAAAt+L,KAAAwxE,SAIAjjE,EACA8vL,EAAAC,EACAA,EAAA,GAGA,QAAAxiM,EAAA,EAAiBA,EAAAqiM,EAAAniM,OAAwBF,MAgBzC,SAAAg2G,EAAAvjG,GACAnM,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACAA,EAAA64K,SAAAryL,QACAwZ,EAAAklC,UAAA,CACAnsC,IAAA,IACO,MAnBPkwL,CAAA3sF,EAAAvjG,GA+BA,SAAAujG,EAAA4qE,GACAt6K,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACA,IAAA6yH,EAAA7yH,EAAAmlC,YAAApsC,EAAAmuK,EACAlnK,EAAAklC,UAAA,CACAnsC,EAAA85H,IACK,KAlCLq2D,CAAA5sF,GADA9rG,EAAAo2L,IAAA7tL,EAAA,KApFAowL,CAAA7sF,EAAA22B,EAAA2zD,EAAAp2L,GAsIA,SAAA8rG,EAAA22B,EAAAxiI,EAAAo2L,EAAA6B,GACA,IAAAZ,EAAAF,IAAA/gM,IAAA,SAAAg/B,GACA,OAAAA,EAAAsf,YAAApsC,IACG68H,SAAA4yD,GAAA3yD,QAAAv5B,GAAA12G,IAAA,SAAAigC,GACH,OAAAA,EAAA56B,UA2BA,SAAAqxG,EAAAwrF,EAAA70D,EAAAxiI,EAAAo2L,GACA,IAAAuC,EAAA,GACAx8L,EAAAjF,KAAAmgM,EAAA,SAAAxrF,GACA,IAAAl0C,EAAAk0C,EAAA91G,OACAywB,EAAA,EACArqB,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACAiX,GAAAjX,EAAAmlC,YAAA98C,QAEA,IAAA8+K,GAAA12K,GAAA23D,EAAA,GAAAy+H,GAAA5vK,EACAmyK,EAAA5+L,KAAA28K,KAEAiiB,EAAAnzK,KAAA,SAAA7pB,EAAAC,GACA,OAAAD,EAAAC,IAEA,IAAAg9L,EAAAD,EAAA,GACAx8L,EAAAjF,KAAAmgM,EAAA,SAAAxrF,GACA1vG,EAAAjF,KAAA20G,EAAA,SAAAt8F,EAAA1Z,GACA0Z,EAAAklC,UAAA,CACAlsC,EAAA1S,IACO,GACP,IAAAgjM,EAAAtpL,EAAAmlC,YAAA98C,MAAAghM,EACArpL,EAAAklC,UAAA,CACAzhB,GAAA6lK,IACO,OAGP18L,EAAAjF,KAAAsrI,EAAA,SAAAvkG,GACA,IAAA66J,GAAA76J,EAAAmtE,WAAAwtF,EACA36J,EAAAwW,UAAA,CACAzhB,GAAA8lK,IACK,MAvDLC,CAAAltF,EAAAwrF,EAAA70D,EAAAxiI,EAAAo2L,GACAgB,EAAAC,EAAAjB,EAAAp2L,GAEA,QAAAwsD,EAAA,EAAqByrI,EAAA,EAAgBA,IAIrCT,EAAAH,EADA7qI,GAAA,KAEA4qI,EAAAC,EAAAjB,EAAAp2L,GACA23L,EAAAN,EAAA7qI,GACA4qI,EAAAC,EAAAjB,EAAAp2L,GArJAg5L,CAAAntF,EAAA22B,EAAAxiI,EAAAo2L,EAAA6B,GA2TA,SAAApsF,GACA1vG,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACAA,EAAA64K,SAAA5iK,KAAAqyK,GACAtoL,EAAA44K,QAAA3iK,KAAAsyK,KAEA37L,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACA,IAAAspB,EAAA,EACA0pE,EAAA,EACApmG,EAAAjF,KAAAqY,EAAA64K,SAAA,SAAAnqJ,GACAA,EAAAwW,UAAA,CACA5b,OACO,GACPA,GAAAoF,EAAAyW,YAAA1hB,KAEA72B,EAAAjF,KAAAqY,EAAA44K,QAAA,SAAAlqJ,GACAA,EAAAwW,UAAA,CACA8tD,OACO,GACPA,GAAAtkE,EAAAyW,YAAA1hB,OA5UAimK,CAAAptF,GAtBAqtF,CAAArtF,EAAA22B,EAAA2zD,EAAAC,EAAAr2L,EAAAC,EADA,IAHA7D,EAAApH,OAAA82G,EAAA,SAAAt8F,GACA,WAAAA,EAAAmlC,YAAA98C,QAEA7B,OAAA,EAAAsT,EAAA5Q,IAAA,yCChDA,IAAA0zE,EAAoBnwE,EAAQ,KAE5BG,EAAaH,EAAQ,KAkErBy0B,EAAA93B,QAxCA,SAAAoK,EAAAgH,GACAhH,EAAA+pF,iBAAA,kBAAAzjF,GACA,IACAwiG,EADAxiG,EAAAk6H,WACA13B,MAEA,GAAAA,EAAA91G,OAAA,CACA,IAAAojM,EAAA5xL,IACA0+E,GAAA,IACA9pF,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACA,IAAA6pL,EAAA7pL,EAAAmlC,YAAA98C,MAEAwhM,EAAAD,IACAA,EAAAC,GAGAA,EAAAnzG,IACAA,EAAAmzG,KAGAj9L,EAAAjF,KAAA20G,EAAA,SAAAt8F,GACA,IAMA8pL,EANA,IAAAltH,EAAA,CACAt0E,KAAA,QACAu0E,cAAA,SACApmD,WAAA,CAAAmzK,EAAAlzG,GACA1xC,OAAAlrC,EAAA5Q,IAAA,WAEA+0E,iBAAAj+D,EAAAmlC,YAAA98C,OACA2X,EAAAilC,UAAA,QAAA6kJ,GAEA,IACAC,EADA/pL,EAAAzK,WACArM,IAAA,mBAEA,MAAA6gM,GACA/pL,EAAAilC,UAAA,QAAA8kJ,0BC7DA,IAAA1rK,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAER,IAAAu9L,EAAoBv9L,EAAQ,KAE5Bw9L,EAAoBx9L,EAAQ,KAqB5B4xB,EAAAhb,eAAA2mL,GACA3rK,EAAAlZ,eAAA8kL,oBC9BA,IAAAr9L,EAAaH,EAAQ,KAErBe,EAAkBf,EAAQ,KAI1B4pI,EAFwB5pI,EAAQ,KAEhC4pI,iBAoBA6zD,EAAA18L,EAAA9D,OAAA,CACApB,KAAA,iBACAyb,aAAA,yBAUAizH,uBAAA,EACA1tI,KAAA,MACA6/E,gBAAA,GACG,CACH7/E,KAAA,KACA6/E,gBAAA,GACG,CACH7/E,KAAA,SACA6/E,gBAAA,GACG,CACH7/E,KAAA,KACA6/E,gBAAA,GACG,CACH7/E,KAAA,MACA6/E,gBAAA,IAOAjkE,WAAA,KAKAmqB,cAAA,CACA9tB,OAAA,EAEAD,EAAA,EAEA7H,iBAAA,cACAqxH,iBAAA,EACAxgD,gBAAA,EAGAviE,OAAA,KAEAoiL,SAAA,OAEA3pK,UAAA,CACAtX,MAAA,OACA+xH,YAAA,GAEAphH,SAAA,CACA2G,UAAA,CACAy6G,YAAA,EACAjzD,WAAA,EACAE,cAAA,EACAC,cAAA,EACAF,YAAA,oBAGA34D,gBAAA,aACAquI,kBAAA,OAGA/wJ,EAAAvC,MAAA6/L,EAAA7zD,GAAA,GACA,IAAAlsG,EAAA+/J,EACAhpK,EAAA93B,QAAA+gC,mBCjGA,IAAAv9B,EAAaH,EAAQ,KAErBiB,EAAgBjB,EAAQ,KAExBkB,EAAclB,EAAQ,KAEtB8Z,EAAW9Z,EAAQ,KAsBnB29L,EAAA,cACAC,EAAA,yBACAC,EAAA58L,EAAAhE,OAAA,CACApB,KAAA,UACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACA9J,EAAAlH,KAAAkH,MACAy6E,EAAA3hF,KAAA2kE,MAGA3kE,KAAA2kE,OACAz9D,EAAAkzD,YAGA,IAAAonI,EAAA,eAAAzwL,EAAA5Q,IAAA,cACAqB,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA2xE,GACA,GAAAtgF,EAAAi6B,SAAAqmD,GAAA,CACA,IACAC,EAAA0/G,EADAjgM,EAAA66C,cAAAylC,GACAtgF,EAAAsgF,EAAA0/G,GAAA,GACAhgM,EAAAo7C,iBAAAklC,EAAAC,GACA76E,EAAAiJ,IAAA4xE,MAEK72E,OAAA,SAAA42E,EAAAE,GACL,IAAAD,EAAAJ,EAAA9kC,iBAAAmlC,GAEA,GAAAxgF,EAAAi6B,SAAAqmD,GAAA,CAKA,IAAAgkD,EAAAtkI,EAAA66C,cAAAylC,GAEAC,EAGA2/G,EAAA57D,EAAA/jD,EAAAvgF,EAAAsgF,GAFAC,EAAA0/G,EAAA37D,EAAAtkI,EAAAsgF,EAAA0/G,GAKAt6L,EAAAiJ,IAAA4xE,GACAvgF,EAAAo7C,iBAAAklC,EAAAC,QAbA76E,EAAA6O,OAAAgsE,KAcKhsE,OAAA,SAAAisE,GACL,IAAAv5E,EAAAk5E,EAAA9kC,iBAAAmlC,GACAv5E,GAAAvB,EAAA6O,OAAAtN,KACK2iE,UACLprE,KAAA2kE,MAAAnjE,GAEAuU,OAAA,SAAAtL,GACA,IAAAvD,EAAAlH,KAAAkH,MACA1F,EAAAxB,KAAA2kE,MACA3kE,KAAA2kE,MAAA,KACAnjE,KAAAs7C,kBAAA,SAAAr0C,GACAA,GAAAvB,EAAA6O,OAAAtN,MAGAqN,QAAAjS,EAAAJ,OAEAk+L,EAAAnkL,EAAA7c,OAAA,CACApB,KAAA,iBACAioB,MAAA,GACA6b,UAAA,SAAAxB,EAAAra,GACA,IAAA44F,EAAA54F,EAAA4D,OACA7tB,EAAA,EAIA,IAHAskC,EAAA0b,OAAA6iE,EAAA7iH,GAAA,GAAA6iH,EAAA7iH,GAAA,IACAA,IAEUA,EAAA,EAAOA,IACjBskC,EAAA2b,OAAA4iE,EAAA7iH,GAAA,GAAA6iH,EAAA7iH,GAAA,IAKA,IAFAskC,EAAA4b,YAEUlgD,EAAA6iH,EAAA3iH,OAAiBF,IAC3BskC,EAAA0b,OAAA6iE,EAAA7iH,GAAA,GAAA6iH,EAAA7iH,GAAA,IACAA,IACAskC,EAAA2b,OAAA4iE,EAAA7iH,GAAA,GAAA6iH,EAAA7iH,GAAA,OAKA,SAAAkkM,EAAA37D,EAAAtkI,EAAA2P,EAAAqwL,EAAAp6J,GACA,IAAAg5E,EAAA0lB,EAAA1lB,KACA33G,EAAA,IAAAk5L,EAAA,CACAn6K,MAAA,CACA4D,OAAAgc,EAAAw6J,EAAAxhF,EAAAohF,EAAA17D,GAAA1lB,KAIA,OADAshF,EAAA57D,EAAAr9H,EAAAjH,EAAA2P,EAAAi2B,GACA3+B,EAGA,SAAAi5L,EAAA57D,EAAAr9H,EAAAjH,EAAA2P,EAAAi2B,GACA,IAAAr2B,EAAAvP,EAAAkwC,WAEAr9B,EADAzP,EAAAwiC,EAAA,4BACA3+B,EAAA,CACA+e,MAAA,CACA4D,OAAA06G,EAAA1lB,OAEGrvG,EAAAI,GACH,IAAA86D,EAAAzqE,EAAAs6C,aAAA3qC,GACA0wL,EAAA51H,EAAAz/D,SAAA60L,GACArrK,EAAAx0B,EAAA4P,cAAAD,EAAA,SAEAsmB,EAAAoqK,EAAA1gH,aAAA,iBACA1pD,EAAAlX,OAAAyV,EACAyB,EAAA9L,eAAA,EACAljB,EAAAq2E,SAAArnD,GACAhvB,EAAAkZ,GAAA,IACA,IAAAlB,EAAAwrD,EAAAz/D,SAAA80L,GAAAngH,eACAv8E,EAAAsjB,cAAAzf,EAAAgY,GAGA,SAAAmhL,EAAAx2K,EAAA4gB,EAAA85F,GACA,OAAAjiI,EAAAhH,IAAAuuB,EAAA,SAAAC,GAGA,OAFAA,IAAA1uB,SACAqvC,GAAA85F,EAAAg8D,aACAz2K,IAIA,IAAA+V,EAAAmgK,EACAppK,EAAA93B,QAAA+gC,iBClIA,IAAA2gK,EAAA,4BAyBA5pK,EAAA93B,QAvBA,SAAAoK,EAAAtC,GACA,IAAA+0L,EAAAzyL,EAAAtK,IAAA,SACAsK,EAAAstH,oBAAA,mBAAAhnH,GACA,IAAAixL,EAAA9E,EAAAnsL,EAAAqH,YAAA8kL,EAAAz/L,QACA+D,EAAAuP,EAAAC,UACAxP,EAAA06C,UAAA,CACAwvB,aAAA,YAGAvrD,MAAApP,EAAA5Q,IAAA4hM,IAAAC,IAGAv3L,EAAAohE,iBAAA96D,IACAvP,EAAA5C,KAAA,SAAAqvB,GACA,IAAAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GACAzsB,EAAAi7C,cAAAxuB,EAAA,CACA9N,MAAA8rD,EAAA9rE,IAAA4hM,GAAA,2BCpCA,IAAAl+L,EAAaH,EAAQ,KAIrB6oB,EAFc7oB,EAAQ,KAEtB6oB,aAoBA3tB,EAAAiF,EAAAjF,KA+JAu5B,EAAA93B,QA7JA,SAAAoK,GACA,IAAAw3L,EAmBA,SAAAx3L,GACA,IAAAtN,EAAA,GACA+kM,EAAA,GAgBA,OAfAz3L,EAAA+pF,iBAAA,mBAAAzjF,GACA,IAAA8jF,EAAA9jF,EAAAk6B,cACAhd,EAAApqB,EAAAhD,QAAAqhM,EAAArtG,GAEA5mE,EAAA,IACAA,EAAAi0K,EAAAzkM,OACAykM,EAAAj0K,GAAA4mE,EACA13F,EAAA8wB,GAAA,CACA0zB,KAAAkzC,EACAN,aAAA,KAIAp3F,EAAA8wB,GAAAsmE,aAAA9yF,KAAAsP,KAEA5T,EArCAglM,CAAA13L,GACA7L,EAAAqjM,EAAA,SAAAG,GACA,IAAA7tG,EAAA6tG,EAAA7tG,aAEAA,EAAA92F,SAwCA,SAAA2kM,GACA,IAAAzpJ,EAOAm8C,EANAD,EAAAutG,EAAAzgJ,KACA4yC,EAAA6tG,EAAA7tG,aACAmnE,EAAAnnE,EAAA92F,OACA4kM,EAAAD,EAAAC,aAAA,GACAC,EAAAF,EAAAE,cAAA,GACAC,EAAA,GAGA,gBAAA1tG,EAAAt1F,KACAu1F,EAAAD,EAAAlxB,mBACG,CACH,IAAA6+H,EAAA,EACA5jM,EAAA21F,EAAA,SAAAxjF,GACAyxL,EAAA7zL,KAAAG,IAAA0zL,EAAAzxL,EAAAC,UAAAqc,WAEAsrB,EAAAk8C,EAAAzzC,YAAAzyC,KAAAyb,IAAAuuB,EAAA,GAAAA,EAAA,IAGA/5C,EAAA21F,EAAA,SAAAxjF,GACA,IAAA0xL,EAAA1xL,EAAA5Q,IAAA,YAEA0D,EAAAvF,QAAAmkM,KACAA,EAAA,CAAAA,MAGAF,EAAA9gM,KAAA,CAAA8qB,EAAAk2K,EAAA,GAAA3tG,IAAA,EAAAvoE,EAAAk2K,EAAA,GAAA3tG,IAAA,MAEA,IAAA4tG,EAAA,GAAA5tG,EAAA,EACA6tG,EAAAD,EAAAhnC,EAAA,GACA0lC,GAAAsB,EAAAC,GAAAjnC,EAAA,IAAAA,EACAl4G,EAAA49I,EAAA,EAAAsB,EAAA,EACA9jM,EAAA21F,EAAA,SAAAxjF,EAAAkd,GACAq0K,EAAA7gM,KAAA+hD,GACAA,GAAAm/I,EAAAvB,EACAiB,EAAA5gM,KAAAkN,KAAAC,IAAAD,KAAAG,IAAAsyL,EAAAmB,EAAAt0K,GAAA,IAAAs0K,EAAAt0K,GAAA,OAxEA20K,CAAAR,GACAxjM,EAAA21F,EAAA,SAAAxjF,EAAAkd,IA+EA,SAAAld,EAAAvN,EAAA49L,GACA,IAAAx2L,EAAAmG,EAAAL,iBACAlP,EAAAuP,EAAAC,UACA6xL,EAAAzB,EAAA,EACA0B,EAAA,eAAA/xL,EAAA5Q,IAAA,cACA4iM,EAAA,EAAAD,EACAn1D,EAAA,UACAq1D,EAAAxhM,EAAA8pC,aAAAqiG,EAAAm1D,IACAG,EAAAzhM,EAAA8pC,aAAAqiG,EAAAo1D,IAAA,GAEA,WAAAC,GAAAC,EAAAxlM,OAAA,GAIA,QAAA0T,EAAA,EAAyBA,EAAA3P,EAAA6rB,QAA0Blc,IAAA,CACnD,IAAA+xL,EAAA1hM,EAAArB,IAAA6iM,EAAA7xL,GACAgyL,EAAAC,EAAAF,EAAAD,EAAA,GAAA9xL,GACAkyL,EAAAD,EAAAF,EAAAD,EAAA,GAAA9xL,GACAmyL,EAAAF,EAAAF,EAAAD,EAAA,GAAA9xL,GACAoyL,EAAAH,EAAAF,EAAAD,EAAA,GAAA9xL,GACAqyL,EAAAJ,EAAAF,EAAAD,EAAA,GAAA9xL,GACAivG,EAAA,GACAqjF,EAAArjF,EAAAkjF,EAAA,GACAG,EAAArjF,EAAAmjF,EAAA,GACAnjF,EAAA3+G,KAAA4hM,EAAAC,EAAAE,EAAAD,GACAG,EAAAtjF,EAAAijF,GACAK,EAAAtjF,EAAAojF,GACAE,EAAAtjF,EAAA+iF,GACA3hM,EAAA86C,cAAAnrC,EAAA,CACA2wL,aAAAqB,EAAAJ,GACA3iF,SAIA,SAAAgjF,EAAAF,EAAAS,EAAAxyL,GACA,IAIAka,EAJA3oB,EAAAlB,EAAArB,IAAAwjM,EAAAxyL,GACAiiD,EAAA,GAYA,OAXAA,EAAA0vI,GAAAI,EACA9vI,EAAA2vI,GAAArgM,EAGA0qB,MAAA81K,IAAA91K,MAAA1qB,GACA2oB,EAAA,CAAAuB,UAEAvB,EAAAzgB,EAAAk4E,YAAA1vB,IACA0vI,IAAAt/L,EAGA6nB,EAGA,SAAAo4K,EAAArjF,EAAA/0F,EAAA4qB,GACA,IAAA2tJ,EAAAv4K,EAAA1uB,QACAknM,EAAAx4K,EAAA1uB,QACAinM,EAAAd,IAAAD,EACAgB,EAAAf,IAAAD,EACA5sJ,EAAAmqE,EAAA3+G,KAAAmiM,EAAAC,GAAAzjF,EAAA3+G,KAAAoiM,EAAAD,GAGA,SAAAF,EAAAtjF,EAAA0jF,GACA,IAAAlmM,EAAAkmM,EAAAnnM,QACAi7I,EAAAksD,EAAAnnM,QACAiB,EAAAklM,IAAAD,EACAjrD,EAAAkrD,IAAAD,EACAziF,EAAA3+G,KAAA7D,EAAAg6I,IA9IAmsD,CAAAhzL,EAAAqxL,EAAAE,cAAAr0K,GAAAm0K,EAAAC,aAAAp0K,2BCrCA,IAAAqH,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAER,IAAAsgM,EAAmBtgM,EAAQ,KAE3BugM,EAAwBvgM,EAAQ,KAEhCwgM,EAAwBxgM,EAAQ,KAqBhC4xB,EAAAxb,qBAAAkqL,GACA1uK,EAAAhb,eAAA2pL,GACA3uK,EAAAlZ,eAAA8nL,oBCjCA,IAAArgM,EAAaH,EAAQ,KAErBe,EAAkBf,EAAQ,KAI1B4pI,EAFwB5pI,EAAQ,KAEhC4pI,iBAoBA62D,EAAA1/L,EAAA9D,OAAA,CACApB,KAAA,qBACAyb,aAAA,yBAKAizH,uBAAA,EACA1tI,KAAA,OACA6/E,gBAAA,GACG,CACH7/E,KAAA,QACA6/E,gBAAA,GACG,CACH7/E,KAAA,SACA6/E,gBAAA,GACG,CACH7/E,KAAA,UACA6/E,gBAAA,IAOAjkE,WAAA,KAKAmqB,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA7H,iBAAA,cACAqxH,iBAAA,EACAxgD,gBAAA,EAGAviE,OAAA,KAEAyY,UAAA,CACAtX,MAAA,UAEAuX,OAAA,UAEAw6G,YAAA,EAGAl8G,YAAA,UACAypI,aAAA,WAEA3uI,SAAA,CACA2G,UAAA,CACAy6G,YAAA,IAGAl9C,YAAA,KACAovG,YAAA,KACArvG,SAAA,KACAvY,OAAA,EACAylD,eAAA,IACAvlD,YAAA,IACAo4E,qBAAA,IACA5yB,qBAAA,MACAmiE,iBAAA,EACA99K,gBAAA,SACAquI,kBAAA,KAOA0vC,aAAA,WACA,cAEAl3B,cAAA,SAAAj8J,EAAA3P,EAAA+iM,GACA,IAAAz+D,EAAAtkI,EAAA66C,cAAAlrC,GACA,OAAA20H,GAAAy+D,EAAAxlL,KAAA+mH,EAAA0+D,cAGA3gM,EAAAvC,MAAA6iM,EAAA72D,GAAA,GACA,IAAAlsG,EAAA+iK,EACAhsK,EAAA93B,QAAA+gC,mBC7GA,IAAAv9B,EAAaH,EAAQ,KAErBiB,EAAgBjB,EAAQ,KAExBkB,EAAclB,EAAQ,KAEtB8Z,EAAW9Z,EAAQ,KAqBnB29L,EAAA,cACAC,EAAA,yBACAmD,EAAA,gDACAC,EAAA//L,EAAAhE,OAAA,CACApB,KAAA,cACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACAnI,KAAAutK,gBAAAx8J,GAEA/Q,KAAAytK,aAAAztK,KAAA0tK,aAAA38J,GAAA/Q,KAAA2tK,cAAA58J,IAEAspD,yBAAA,SAAAtpD,EAAAtG,EAAAtC,GACAnI,KAAA4tK,SAEA5tK,KAAAutK,gBAAAx8J,IAEAupD,kBAAA,SAAAniD,EAAApH,EAAAtG,EAAAtC,GACAnI,KAAAytK,aAAAztK,KAAA6tK,wBAAA11J,EAAApH,GAAA/Q,KAAA2kM,yBAAAxsL,EAAApH,IAEAw8J,gBAAA,SAAAx8J,GACA,IAAA+8J,EAAA/8J,EAAAu8B,gBAAAkvC,OAEA,MAAAx8E,KAAAytK,cAAAK,EAAA9tK,KAAAytK,gBACAztK,KAAAytK,aAAAK,EAEA9tK,KAAA4tK,WAGAD,cAAA,SAAA58J,GACA,IAAAvP,EAAAuP,EAAAC,UACA2wE,EAAA3hF,KAAA2kE,MACAz9D,EAAAlH,KAAAkH,MACA09L,EAAApjM,EAAA46C,UAAA,eAGAp8C,KAAA2kE,OACAz9D,EAAAkzD,YAGA54D,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA2xE,GACA,GAAAtgF,EAAAi6B,SAAAqmD,GAAA,CACA,IAAAr5E,EACAq9H,EAAAtkI,EAAA66C,cAAAylC,GACAr5E,EAAAg5L,EAAA37D,EAAAhkD,GAAA,GACAl9E,EAAA+kB,UAAAlhB,EAAA,CACA+e,MAAA,CACA4D,OAAA06G,EAAA1lB,OAESrvG,EAAA+wE,GACT+iH,EAAAp8L,EAAAjH,EAAAsgF,EAAA8iH,GACA19L,EAAAiJ,IAAA1H,GACAjH,EAAAo7C,iBAAAklC,EAAAr5E,MAEKyC,OAAA,SAAA42E,EAAAE,GACL,IAAAv5E,EAAAk5E,EAAA9kC,iBAAAmlC,GAEA,GAAAxgF,EAAAi6B,SAAAqmD,GAAA,CAKA,IAAAgkD,EAAAtkI,EAAA66C,cAAAylC,GAEAr5E,EAGA7D,EAAAgiB,YAAAne,EAAA,CACA+e,MAAA,CACA4D,OAAA06G,EAAA1lB,OAESrvG,EAAA+wE,GANTr5E,EAAAg5L,EAAA37D,EAAAhkD,GASA+iH,EAAAp8L,EAAAjH,EAAAsgF,EAAA8iH,GACA19L,EAAAiJ,IAAA1H,GACAjH,EAAAo7C,iBAAAklC,EAAAr5E,QAlBAvB,EAAA6O,OAAAtN,KAmBKsN,OAAA,SAAAisE,GACL,IAAAv5E,EAAAk5E,EAAA9kC,iBAAAmlC,GACAv5E,GAAAvB,EAAA6O,OAAAtN,KACK2iE,UACLprE,KAAA2kE,MAAAnjE,GAEAksK,aAAA,SAAA38J,GACA/Q,KAAA4tK,SAEAQ,EAAAr9J,EAAA/Q,KAAAkH,QAEAy9L,yBAAA,SAAAxsL,EAAApH,GAKA,IAJA,IAEAI,EAFA3P,EAAAuP,EAAAC,UACA4zL,EAAApjM,EAAA46C,UAAA,eAGA,OAAAjrC,EAAAgH,EAAA+oD,SAAA,CACA,IAAAz4D,EAGAo8L,EADAp8L,EAAAg5L,EADAjgM,EAAA66C,cAAAlrC,GACAA,GACA3P,EAAA2P,EAAAyzL,GACAn8L,EAAAg2E,aAAA,EACAz+E,KAAAkH,MAAAiJ,IAAA1H,KAGAolK,wBAAA,SAAA11J,EAAApH,GACAq9J,EAAAr9J,EAAA/Q,KAAAkH,OAAA,IAEA6O,OAAA,SAAAtL,GACAzK,KAAA4tK,UAEAA,OAAA,WACA5tK,KAAAkH,MAAAkzD,YACAp6D,KAAA2kE,MAAA,MAEA7uD,QAAAjS,EAAAJ,OAEAqhM,EAAAtnL,EAAA7c,OAAA,CACApB,KAAA,uBACAioB,MAAA,GACA6b,UAAA,SAAAxB,EAAAra,GACA,IAAA44F,EAAA54F,EAAA4D,OAEAprB,KAAA+kM,aACAljK,EAAA0b,OAAA6iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA2b,OAAA4iE,EAAA,MAAAA,EAAA,SAEAv+E,EAAA0b,OAAA6iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA2b,OAAA4iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA2b,OAAA4iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA2b,OAAA4iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA4b,YACA5b,EAAA0b,OAAA6iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA2b,OAAA4iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA0b,OAAA6iE,EAAA,MAAAA,EAAA,OACAv+E,EAAA2b,OAAA4iE,EAAA,MAAAA,EAAA,WAKA,SAAAqhF,EAAA37D,EAAA30H,EAAAi2B,GACA,IAAAg5E,EAAA0lB,EAAA1lB,KACA,WAAA0kF,EAAA,CACAt9K,MAAA,CACA4D,OAAAgc,EAAAw6J,EAAAxhF,EAAA0lB,GAAA1lB,GAEAz+F,GAAA,MAIA,SAAAkjL,EAAAp8L,EAAAjH,EAAA2P,EAAAyzL,GACA,IAAA34H,EAAAzqE,EAAAs6C,aAAA3qC,GACA0wL,EAAA51H,EAAAz/D,SAAA60L,GACAlhL,EAAA3e,EAAA4P,cAAAD,EAAA,SACA6kB,EAAAx0B,EAAA4P,cAAAD,EAAA,gBAAAgP,EAGAsX,EAAAoqK,EAAA1gH,aAAAsjH,GACAh8L,EAAAq2E,SAAArnD,GACAhvB,EAAAsH,MAAA4b,eAAA,EACAljB,EAAAsH,MAAAyQ,KAAAL,EACA1X,EAAAsH,MAAAwQ,OAAAyV,EACAvtB,EAAAs8L,YAAAH,EACA,IAAAnkL,EAAAwrD,EAAAz/D,SAAA80L,GAAAngH,eACAv8E,EAAAsjB,cAAAzf,EAAAgY,GAGA,SAAAmhL,EAAAx2K,EAAA06G,GACA,OAAAjiI,EAAAhH,IAAAuuB,EAAA,SAAAC,GAGA,OAFAA,IAAA1uB,SACA,GAAAmpI,EAAAg8D,aACAz2K,IAIA,IAAA25K,EAAAxnL,EAAA7c,OAAA,CACApB,KAAA,sBACAioB,MAAA,GACA6b,UAAA,SAAAxB,EAAAra,GAKA,IAFA,IAAA4D,EAAA5D,EAAA4D,OAEA7tB,EAAA,EAAmBA,EAAA6tB,EAAA3tB,QACnB,GAAAuC,KAAAilM,SAAA75K,EAAA7tB,KAAA,CACA,IAAAyS,EAAAob,EAAA7tB,KACAskC,EAAA0b,OAAAvtC,EAAAob,EAAA7tB,MACAskC,EAAA2b,OAAAxtC,EAAAob,EAAA7tB,WAEAA,GAAA,KAMA,SAAA6wK,EAAAr9J,EAAA7J,EAAAu3E,GACA,IAAAj9E,EAAAuP,EAAAC,UACAylF,EAAAj1F,EAAA46C,UAAA,eACA8oJ,EAAA,IAAAF,EAAA,CACAx9K,MAAA,CACA4D,OAAAqrE,GAEAwuG,OAAA,IAEA/9L,EAAAiJ,IAAA+0L,GACA,IAAAC,EAAA,IAAAH,EAAA,CACAx9K,MAAA,CACA4D,OAAAqrE,GAEAwuG,QAAA,IAEA/9L,EAAAiJ,IAAAg1L,GACA91B,EAAA,EAAA61B,EAAAn0L,EAAAvP,GACA6tK,GAAA,EAAA81B,EAAAp0L,EAAAvP,GAEAi9E,IACAymH,EAAAzmH,aAAA,EACA0mH,EAAA1mH,aAAA,GAIA,SAAA4wF,EAAA5rF,EAAAh7E,EAAAsI,EAAAvP,GACA,IAAA4jM,EAAA3hH,EAAA,UACAztD,EAAAx0B,EAAAoP,UAAA,cAAAw0L,IAAA5jM,EAAAoP,UAAA,QAAAw0L,GAGA3tK,EAAA1mB,EAAAvE,SAAA60L,GAAAlgH,aAAAsjH,GACAh8L,EAAAq2E,SAAArnD,GACAhvB,EAAAsH,MAAAyQ,KAAA,KACA/X,EAAAsH,MAAAwQ,OAAAyV,EAIA,IAAAoL,EAAAsjK,EACAvsK,EAAA93B,QAAA+gC,mBChQA,IAAAv9B,EAAaH,EAAQ,KAkCrBy0B,EAAA93B,QAbA,SAAA2L,GACAA,GAAAnI,EAAAvF,QAAA0N,EAAAmN,SAKAtV,EAAAjF,KAAAoN,EAAAmN,OAAA,SAAAksL,GACAxhM,EAAA1F,SAAAknM,IAAA,MAAAA,EAAA9lM,OACA8lM,EAAA9lM,KAAA,mCC7BA,IAAAq6D,EAA0Bl2D,EAAQ,KAqBlC4hM,EAAA,4BACAC,EAAA,6BACAC,EAAA,sBACAC,EAAA,uBACArkK,EAAA,CACAoqC,WAAA,cACAp4D,KAAAwmD,IAEA+R,kBAAA,EACA5hC,MAAA,SAAAh5B,EAAAtG,GACA,IAAAjJ,EAAAuP,EAAAC,UACAyxE,EAAA1xE,EAAAu8B,gBAAAkvC,MASA,GARAh7E,EAAA06C,UAAA,CACAwvB,aAAA,YACAg6H,OAAA3P,EAAA,EAAAhlL,GACA40L,OAAA5P,GAAA,EAAAhlL,GACA60L,aAAAC,EAAA,EAAA90L,GACA+0L,aAAAD,GAAA,EAAA90L,MAGAtG,EAAAohE,iBAAA96D,GAIA,OAAA0xE,GAAA,CACA5nB,SAGA,SAAA1iD,EAAA3W,GACA,IAAA2P,EAEA,YAAAA,EAAAgH,EAAA+oD,SAAA,CACA,IAAA+K,EAAAzqE,EAAAs6C,aAAA3qC,GACAsyE,EAAAjiF,EAAA66C,cAAAlrC,GAAAsyE,KACAjiF,EAAAi7C,cAAAtrC,EAAA,CACAgP,MAAA41K,EAAAtyG,EAAAxX,GACAj2C,YAAA6vK,EAAApiH,EAAAxX,QAKA,SAAA8pH,EAAAtyG,EAAAhzE,GACA,OAAAA,EAAAtQ,IAAAsjF,EAAA,EAAA+hH,EAAAC,GAGA,SAAAI,EAAApiH,EAAAhzE,GACA,OAAAA,EAAAtQ,IAAAsjF,EAAA,EAAA6hH,EAAAC,MAIAptK,EAAA93B,QAAA+gC,mBCvEA,IAEAzhB,EAFejc,EAAQ,KAEvBic,iBAEAi6C,EAA0Bl2D,EAAQ,KAIlC6oB,EAFc7oB,EAAQ,KAEtB6oB,aAIApqB,EAFYuB,EAAQ,KAEpBvB,UAoBAiyF,EAAA,qBAAAv4D,0BAAAx/B,MACA+kC,EAAA,CACAoqC,WAAA,cACAp4D,KAAAwmD,IACA7vB,MAAA,SAAAh5B,GACA,IAAAnG,EAAAmG,EAAAL,iBACAlP,EAAAuP,EAAAC,UACA+0L,EA4IA,SAAAh1L,EAAAvP,GACA,IACAm3C,EADAk8C,EAAA9jF,EAAAk6B,cAEA6pD,EAAA,aAAAD,EAAAt1F,KAAAs1F,EAAAlxB,gBAAAhrB,EAAAk8C,EAAAzzC,YAAAzyC,KAAAyb,IAAAuuB,EAAA,GAAAA,EAAA,IAAAn3C,EAAA6rB,SACA2nE,EAAAzoE,EAAApqB,EAAA4O,EAAA5Q,IAAA,eAAA20F,MACAsvG,EAAA73K,EAAApqB,EAAA4O,EAAA5Q,IAAA,kBAAA20F,GACAC,EAAAhkF,EAAA5Q,IAAA,YACA,aAAA40F,EAAAxoE,EAAAwoE,EAAAD,GACAnmF,KAAAG,IAAAH,KAAAC,IAAAkmF,EAAA,EAAAE,GAAAovG,GApJA4B,CAAAj1L,EAAAvP,GACAshM,EAAA,EACAC,EAAA,EACAp1D,EAAA,UACAq1D,EAAAxhM,EAAA8pC,aAAAqiG,EAAAm1D,IACAG,EAAAzhM,EAAA8pC,aAAAqiG,EAAAo1D,IAAA,GACAkD,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACAkD,EAAAlD,EAAA,GACAmD,EAAAnD,EAAA,GAOA,GANAzhM,EAAA26C,UAAA,CACA4pJ,cAEAnB,YAAAmB,GAAA,QAGA,MAAA/C,GAAAC,EAAAxlM,OAAA,GAIA,OACAo9D,SAAA9pD,EAAAu8B,gBAAAkvC,MAiEA,SAAArkE,EAAA3W,GAEA,IAEA6pB,EAGAla,EALAia,EAAA,IAAAgpE,EAAA,EAAAj8E,EAAAkV,OACA7pB,EAAA,EAEAo/E,EAAA,GACAC,EAAA,GAGA,YAAA1xE,EAAAgH,EAAA+oD,SAAA,CACA,IAAAgiI,EAAA1hM,EAAArB,IAAA6iM,EAAA7xL,GACAk1L,EAAA7kM,EAAArB,IAAA8lM,EAAA90L,GACAm1L,EAAA9kM,EAAArB,IAAA+lM,EAAA/0L,GACAo1L,EAAA/kM,EAAArB,IAAAgmM,EAAAh1L,GACAq1L,EAAAhlM,EAAArB,IAAAimM,EAAAj1L,GAEAic,MAAA81K,IAAA91K,MAAAm5K,IAAAn5K,MAAAo5K,IACAp7K,EAAA5nB,KAAAopB,IACAppB,GAAA,IAIA4nB,EAAA5nB,KAAAijM,EAAAjlM,EAAA2P,EAAAk1L,EAAAC,EAAAJ,GACAtjH,EAAAkgH,GAAAI,EACAtgH,EAAAmgH,GAAAwD,EACAl7K,EAAAzgB,EAAAk4E,YAAAF,EAAA,KAAAC,GACAz3D,EAAA5nB,KAAA6nB,IAAA,GAAAuB,IACAxB,EAAA5nB,KAAA6nB,IAAA,GAAAuB,IACAg2D,EAAAmgH,GAAAyD,EACAn7K,EAAAzgB,EAAAk4E,YAAAF,EAAA,KAAAC,GACAz3D,EAAA5nB,KAAA6nB,IAAA,GAAAuB,KAGAprB,EAAA26C,UAAA,cAAA/wB,IA/FA,SAAAjT,EAAA3W,GACA,IAAA2P,EAEA,YAAAA,EAAAgH,EAAA+oD,SAAA,CACA,IAAAgiI,EAAA1hM,EAAArB,IAAA6iM,EAAA7xL,GACAk1L,EAAA7kM,EAAArB,IAAA8lM,EAAA90L,GACAm1L,EAAA9kM,EAAArB,IAAA+lM,EAAA/0L,GACAo1L,EAAA/kM,EAAArB,IAAAgmM,EAAAh1L,GACAq1L,EAAAhlM,EAAArB,IAAAimM,EAAAj1L,GACAu1L,EAAA/3L,KAAAC,IAAAy3L,EAAAC,GACAK,EAAAh4L,KAAAG,IAAAu3L,EAAAC,GACAM,EAAAxD,EAAAsD,EAAAxD,GACA2D,EAAAzD,EAAAuD,EAAAzD,GACA4D,EAAA1D,EAAAmD,EAAArD,GACA6D,EAAA3D,EAAAoD,EAAAtD,GACA9iF,EAAA,GACAqjF,EAAArjF,EAAAymF,EAAA,GACApD,EAAArjF,EAAAwmF,EAAA,GACAxmF,EAAA3+G,KAAAulM,EAAAD,GAAAC,EAAAH,GAAAG,EAAAF,GAAAE,EAAAJ,IACAplM,EAAA86C,cAAAnrC,EAAA,CACAsyE,KAAAgjH,EAAAjlM,EAAA2P,EAAAk1L,EAAAC,EAAAJ,GACApE,aAAAuE,EAAAC,EAAAO,EAAA9D,GAAA6D,EAAA7D,GAEA3iF,OACAokF,UAAAyC,EAAAV,EAAAC,EAAAtD,KAIA,SAAAE,EAAA1gM,EAAAwgM,GACA,IAAA9vI,EAAA,GAGA,OAFAA,EAAA0vI,GAAAI,EACA9vI,EAAA2vI,GAAArgM,EACA0qB,MAAA81K,IAAA91K,MAAA1qB,GAAA,CAAAkqB,SAAAhiB,EAAAk4E,YAAA1vB,GAGA,SAAAqwI,EAAArjF,EAAA/0F,EAAA4qB,GACA,IAAA2tJ,EAAAv4K,EAAA1uB,QACAknM,EAAAx4K,EAAA1uB,QACAinM,EAAAd,GAAAnjL,EAAAikL,EAAAd,GAAAiD,EAAA,QACAlC,EAAAf,GAAAnjL,EAAAkkL,EAAAf,GAAAiD,EAAA,QACA9vJ,EAAAmqE,EAAA3+G,KAAAmiM,EAAAC,GAAAzjF,EAAA3+G,KAAAoiM,EAAAD,GAGA,SAAAqD,EAAAV,EAAAC,EAAAtD,GACA,IAAAgE,EAAA9D,EAAAmD,EAAArD,GACAiE,EAAA/D,EAAAoD,EAAAtD,GAGA,OAFAgE,EAAApE,IAAAiD,EAAA,EACAoB,EAAArE,IAAAiD,EAAA,EACA,CACA/1L,EAAAk3L,EAAA,GACAj3L,EAAAi3L,EAAA,GACAz/L,MAAAs7L,EAAAgD,EAAAoB,EAAA,GAAAD,EAAA,GACAx/L,OAAAq7L,EAAAoE,EAAA,GAAAD,EAAA,GAAAnB,GAIA,SAAAiB,EAAA37K,GAEA,OADAA,EAAAy3K,GAAAnjL,EAAA0L,EAAAy3K,GAAA,GACAz3K,OA0CA,SAAAo7K,EAAAjlM,EAAA2P,EAAAk1L,EAAAC,EAAAJ,GAaA,OAVAG,EAAAC,GACA,EACGD,EAAAC,EACH,EAEAn1L,EAAA,EACA3P,EAAArB,IAAA+lM,EAAA/0L,EAAA,IAAAm1L,EAAA,KACA,EAiBAnuK,EAAA93B,QAAA+gC,mBC9LA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAER,IAAA+gK,EAAmB/gK,EAAQ,KAE3BghK,EAAmBhhK,EAAQ,KAqB3B4xB,EAAAhb,eAAAmqJ,EAAA,2BACAnvI,EAAAlZ,eAAAsoJ,EAAA,mCC9BA,IAAA9iC,EAA0Bl+H,EAAQ,KAuBlC09B,EArBkB19B,EAAQ,KAqB1B/C,OAAA,CACApB,KAAA,uBACAyb,aAAA,iBACAivB,eAAA,SAAAj+B,EAAAvB,GACA,OAAAm3H,EAAA5hI,KAAAypC,YAAAzpC,OAEAotK,cAAA,QACA9mI,cAAA,CACA51B,iBAAA,cACA8H,OAAA,EACAD,EAAA,EACAwpH,iBAAA,EACAqlE,WAAA,SACA1qH,YAAA,EAEA2qH,aAAA,SAEAC,aAAA,CACA94D,OAAA,EAEA7xG,MAAA,IAEAs9E,UAAA,QAUA5iF,WAAA,MAYAc,EAAA93B,QAAA+gC,mBCnEA,IAAA9L,EAAc5xB,EAAQ,KAEtBg9E,EAAiBh9E,EAAQ,KAEzB6jM,EAAmB7jM,EAAQ,KAE3B4Z,EAAa5Z,EAAQ,KAErB6vK,EAAmB7vK,EAAQ,KAqB3B09B,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,gBACA+H,KAAA,WACAtH,KAAAmnK,YAAA,IAAAzmF,EAAA6mH,IAEA11L,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACAw2L,EAAAxnM,KAAAmnK,YACAqgC,EAAA9lH,WAAAlgF,GACAxB,KAAAkH,MAAAiJ,IAAAq3L,EAAAtgM,QAEAiL,gBAAA,SAAApB,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACAhR,KAAAkH,MAAAmP,QACA,IAAA6mC,EAAAq2H,IAAAxpI,MAAAh5B,GAEAmsC,EAAA2d,UACA3d,EAAA2d,SAAA,CACA5kB,MAAA,EACApI,IAAArsC,EAAA6rB,SACO7rB,GAGPxB,KAAAmnK,YAAAn0J,aAAAxR,IAEAimM,sBAAA,SAAA12L,GACA,IAAAnG,EAAAmG,EAAAL,iBAEA9F,KAAA24H,mBACAvjI,KAAAkH,MAAA2f,UAAAvJ,EAAArgB,MAAA2N,EAAA24H,oBACAvjI,KAAAkH,MAAAkoE,uBAGAr5D,OAAA,SAAAtL,EAAAtC,GACAnI,KAAAmnK,aAAAnnK,KAAAmnK,YAAApxJ,OAAA5N,IAEA2N,QAAA,eAGAqiB,EAAA93B,QAAA+gC,mBCpEA,IAAAv9B,EAAaH,EAAQ,KAIrBg8C,EAFch8C,EAAQ,KAEtBg8C,aAIA/hC,EAFeja,EAAQ,KAEvBia,MAIA4O,EAFc7oB,EAAQ,KAEtB6oB,aAEA0yB,EAAgBv7C,EAAQ,KAoCxB,SAAAgkM,EAAAC,EAAAC,GACAD,EAAA9uK,UAAA,SAAAgvK,GACAA,EAAAlhL,KAAA,CACApO,EAAAqvL,EAAArvL,EACAC,OAAAovL,EAAApvL,OACAzI,MAAA,CACAwQ,OAAA,WAAAqnL,EAAA3tF,UAAA2tF,EAAAznL,MAAA,KACAK,KAAA,SAAAonL,EAAA3tF,UAAA2tF,EAAAznL,MAAA,UAaA,SAAAonL,EAAA/lM,EAAAysB,GACAtQ,EAAAtgB,KAAA2C,MACA,IAAAo3B,EAAA,IAAA6nB,EAAAz9C,EAAAysB,GACA05K,EAAA,IAAAhqL,EACA3d,KAAAmQ,IAAAinB,GACAp3B,KAAAmQ,IAAAw3L,GAEAA,EAAAtxF,aAAA,WACAr2G,KAAA2mB,KAAAyQ,EAAA4gE,aAGAh4F,KAAA0hF,WAAAlgF,EAAAysB,GAGA,IAAA65K,EAAAP,EAAArrM,UAEA4rM,EAAAC,oBAAA,WACA/nM,KAAAi5B,QAAA,GAAAmhC,aAGA0tI,EAAAE,qBAAA,SAAAJ,GAKA,IAJA,IAAA1oJ,EAAA0oJ,EAAA1oJ,WACA/+B,EAAAynL,EAAAznL,MACAwnL,EAAA3nM,KAAAi5B,QAAA,GAEA17B,EAAA,EAAiBA,EAvDjB,EAuD2CA,IAAA,CAO3C,IAAAsqM,EAAAnoJ,EAAAR,GAAA,SAAA/+B,GACA0nL,EAAAlhL,KAAA,CACA5W,MAAA,CACA4b,eAAA,GAEAhK,GAAA,GACA5W,QAAA,EACA4xB,MAAA,UAEA,IAAA+pC,GAAAnpE,EAvEA,EAuEAqqM,EAAAp5D,OAAAo5D,EAAAK,aAEAJ,EAAAljK,QAAA,OAAA8sF,KAAAm2E,EAAAp5D,OAAA,CACA7xG,MAAA,CAAAirK,EAAAM,YAAA,EAAAN,EAAAM,YAAA,KACKxhI,SAAAzwB,QACL4xJ,EAAAhpH,cAAA,GAAA4yC,KAAAm2E,EAAAp5D,OAAA,CACAn4D,QAAA,IACK3P,SAAAzwB,QACL0xJ,EAAAx3L,IAAA03L,GAGAH,EAAAC,EAAAC,IAOAE,EAAAK,sBAAA,SAAAP,GAMA,IALA,IAAAQ,EAAApoM,KAAAqoM,WACAV,EAAA3nM,KAAAi5B,QAAA,GAEAqvK,EAAA,sCAEA/qM,EAAA,EAAiBA,EAAA+qM,EAAA7qM,OAA4BF,IAAA,CAC7C,IAAAg0C,EAAA+2J,EAAA/qM,GAEA,GAAA6qM,EAAA72J,KAAAq2J,EAAAr2J,GAGA,OAFAvxC,KAAA+nM,2BACA/nM,KAAAgoM,qBAAAJ,GAKAF,EAAAC,EAAAC,IAOAE,EAAA7tI,UAAA,WACAj6D,KAAA+J,QAAA,aAOA+9L,EAAA3tI,SAAA,WACAn6D,KAAA+J,QAAA,WASA+9L,EAAApmH,WAAA,SAAAlgF,EAAAysB,GACA,IAAAld,EAAAvP,EAAAkwC,UACA1xC,KAAAi5B,QAAA,GAAAyoD,WAAAlgF,EAAAysB,GACA,IAAA05K,EAAA3nM,KAAAi5B,QAAA,GACAgzC,EAAAzqE,EAAAs6C,aAAA7tB,GACAixB,EAAA19C,EAAA4P,cAAA6c,EAAA,UACAoJ,EAtIA,SAAAA,GAKA,OAJAxzB,EAAAvF,QAAA+4B,KACAA,EAAA,EAAAA,OAGAA,EAiIAigJ,CAAA91K,EAAA4P,cAAA6c,EAAA,eACA9N,EAAA3e,EAAA4P,cAAA6c,EAAA,SACA05K,EAAAhhL,KAAA,QAAA0Q,GACAswK,EAAAlxL,SAAA,SAAAoxL,GACAA,EAAAlhL,KAAA,CACAnG,KAAAL,MAGA,IAAAmhE,EAAArV,EAAA7oD,WAAA,gBAEA,GAAAk+D,EAAA,CACA,IAAA3T,EAAAg6H,EAAA/nL,SACA+tD,EAAA,GAAAphD,EAAA+0D,EAAA,GAAAjqD,EAAA,IACAs2C,EAAA,GAAAphD,EAAA+0D,EAAA,GAAAjqD,EAAA,IAGAswK,EAAAz8K,UAAA+gD,EAAA7oD,WAAA,oBAAAzU,KAAA4U,GAAA,OACA,IAAAqkL,EAAA,GAYA,GAXAA,EAAAP,aAAAt2L,EAAA5Q,IAAA,gBACAynM,EAAAM,YAAAj8H,EAAA9rE,IAAA,sBACAynM,EAAA3tF,UAAAhuC,EAAA9rE,IAAA,0BACAynM,EAAAp5D,OAAA,IAAAviE,EAAA9rE,IAAA,uBACAynM,EAAAK,aAAAh6K,EAAAzsB,EAAA6rB,QACAu6K,EAAArvL,EAAA0zD,EAAA7oD,WAAA,QACAwkL,EAAApvL,OAAAyzD,EAAA7oD,WAAA,aACAwkL,EAAA1oJ,aACA0oJ,EAAAznL,QACAngB,KAAAmK,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UAEA,WAAAy9L,EAAAP,aACArnM,KAAAqoM,WAAAroM,KAAAmoM,sBAAAP,GAAA5nM,KAAAgoM,qBAAAJ,GACA5nM,KAAAqoM,WAAAT,MACG,CAEH5nM,KAAAqoM,WAAA,KACAroM,KAAA+nM,sBACA,IAAA3wK,EAAAp3B,KAAAi5B,QAAA,GAEAqgE,EAAA,WACAliE,EAAA6iC,YAEA,WAAA2tI,EAAAP,cACArnM,KAAAgoM,qBAAAJ,IAIApuG,EAAA,WACApiE,EAAA+iC,WAEA,WAAAytI,EAAAP,cACArnM,KAAA+nM,uBAIA/nM,KAAA4J,GAAA,YAAA0vF,EAAAt5F,MAAA4J,GAAA,WAAA4vF,EAAAx5F,MAAA4J,GAAA,WAAA0vF,EAAAt5F,MAAA4J,GAAA,SAAA4vF,EAAAx5F,MAGAA,KAAAqoM,WAAAT,GAGAE,EAAA7lH,QAAA,SAAAnjF,GACAkB,KAAAmK,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UACArL,QAGA+E,EAAA9C,SAAAwmM,EAAA5pL,GACA,IAAAyjB,EAAAmmK,EACApvK,EAAA93B,QAAA+gC,mBCnPA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAER,IAAA6kM,EAAkB7kM,EAAQ,KAE1B8kM,EAAkB9kM,EAAQ,KAqB1B4xB,EAAAlZ,eAAAmsL,GACAjzK,EAAAhb,eAAAkuL,oBC9Bc9kM,EAAQ,KAEtBC,QAFA,IAIAc,EAAkBf,EAAQ,KAE1B+tC,EAAW/tC,EAAQ,KAEnBohD,EAAYphD,EAAQ,KAEpBN,EAAA0hD,EAAA1hD,YACA3C,EAAAqkD,EAAArkD,SACA5D,EAAAioD,EAAAjoD,IAIA8gC,EAFcj6B,EAAQ,KAEtBi6B,WAuBA8qK,GArBuB/kM,EAAQ,KAqB/B,qBAAAktC,YAAAv0C,MAAAu0C,aACA83J,EAAA,qBAAAr4J,aAAAh0C,MAAAg0C,aAEA,SAAAs4J,EAAAhxC,GACA,IAAAn2J,EAAAm2J,EAAAn2J,KAEAA,KAAA,IAAAA,EAAA,OAAAA,EAAA,MAAAihE,QACAk1F,EAAAn2J,KAAA3E,EAAA2E,EAAA,SAAA86D,GACA,IACAr+D,EAAA,CACA2qM,OAFA,CAAAtsI,EAAA,GAAAmG,MAAAnG,EAAA,GAAAmG,QAaA,OARAnG,EAAA,GAAA/7D,OACAtC,EAAA4qM,SAAAvsI,EAAA,GAAA/7D,MAGA+7D,EAAA,GAAA/7D,OACAtC,EAAA6qM,OAAAxsI,EAAA,GAAA/7D,MAGAE,EAAA,CAAAxC,EAAAq+D,EAAA,GAAAA,EAAA,QAKA,IAAAysI,EAAAtkM,EAAA9D,OAAA,CACApB,KAAA,eACAyb,aAAA,iBACA4uB,sBAAA,kBACAtiC,KAAA,SAAA0E,GAEAA,EAAAxK,KAAAwK,EAAAxK,MAAA,GAEAmnM,EAAA38L,GAEA,IAAA7O,EAAA6C,KAAAgpM,wBAAAh9L,EAAAxK,MAEAxB,KAAAipM,YAAA9rM,EAAA+rM,WACAlpM,KAAAmpM,kBAAAhsM,EAAAisM,iBAEAjsM,EAAA+rM,aACAl9L,EAAAxK,KAAA,IAAAq6B,aAAA1+B,EAAAkwB,QAGA07K,EAAAvwI,WAAAx4D,KAAA,OAAAb,YAEA8nC,YAAA,SAAAj7B,GAKA,GAHAA,EAAAxK,KAAAwK,EAAAxK,MAAA,GACAmnM,EAAA38L,GAEAA,EAAAxK,KAAA,CAEA,IAAArE,EAAA6C,KAAAgpM,wBAAAh9L,EAAAxK,MAEAxB,KAAAipM,YAAA9rM,EAAA+rM,WACAlpM,KAAAmpM,kBAAAhsM,EAAAisM,iBAEAjsM,EAAA+rM,aACAl9L,EAAAxK,KAAA,IAAAq6B,aAAA1+B,EAAAkwB,QAIA07K,EAAAvwI,WAAAx4D,KAAA,cAAAb,YAEA+Y,WAAA,SAAAC,GACA,IAAAhb,EAAA6C,KAAAgpM,wBAAA7wL,EAAA3W,MAEArE,EAAA+rM,aACAlpM,KAAAipM,aAIAjpM,KAAAipM,YAAA7lM,EAAApD,KAAAipM,YAAA9rM,EAAA+rM,YACAlpM,KAAAmpM,kBAAA/lM,EAAApD,KAAAmpM,kBAAAhsM,EAAAisM,oBAJAppM,KAAAipM,YAAA9rM,EAAA+rM,WACAlpM,KAAAmpM,kBAAAhsM,EAAAisM,kBAMAjxL,EAAA3W,KAAA,IAAAq6B,aAAA1+B,EAAAkwB,QAGArtB,KAAAyqC,aAAAvyB,WAAAC,EAAA3W,OAEA6nM,wBAAA,SAAAp7K,GACA,IAAAg+C,EAAAjsE,KAAAgR,UAAA8qC,aAAA7tB,GAEA,OADAg+C,EAAAjgE,kBAAA3P,MAAA4vE,EAAAjgE,OAAAigE,EAAA7oD,WAAA,WAGAssH,mBAAA,SAAAzhH,GACA,OAAAjuB,KAAAmpM,kBACAnpM,KAAAmpM,kBAAA,EAAAl7K,EAAA,GAEAjuB,KAAAqpM,wBAAAp7K,GAAAxwB,QAGAkyI,cAAA,SAAA1hH,EAAAsO,GACA,GAAAv8B,KAAAmpM,kBAAA,CAIA,IAHA,IAAA3lM,EAAAxD,KAAAmpM,kBAAA,EAAAl7K,GACAzwB,EAAAwC,KAAAmpM,kBAAA,EAAAl7K,EAAA,GAEA1wB,EAAA,EAAqBA,EAAAC,EAASD,IAC9Bg/B,EAAAh/B,GAAAg/B,EAAAh/B,IAAA,GACAg/B,EAAAh/B,GAAA,GAAAyC,KAAAipM,YAAAzlM,EAAA,EAAAjG,GACAg/B,EAAAh/B,GAAA,GAAAyC,KAAAipM,YAAAzlM,EAAA,EAAAjG,EAAA,GAGA,OAAAC,EAEA,IAAAorM,EAAA5oM,KAAAqpM,wBAAAp7K,GAEA,IAAA1wB,EAAA,EAAqBA,EAAAqrM,EAAAnrM,OAAmBF,IACxCg/B,EAAAh/B,GAAAg/B,EAAAh/B,IAAA,GACAg/B,EAAAh/B,GAAA,GAAAqrM,EAAArrM,GAAA,GACAg/B,EAAAh/B,GAAA,GAAAqrM,EAAArrM,GAAA,GAGA,OAAAqrM,EAAAnrM,QAGAurM,wBAAA,SAAAxnM,GACA,IAAA8nM,EAAA,EAQA,GANAtpM,KAAAipM,cACAK,EAAAtpM,KAAAipM,YAAAxrM,QAKA,kBAAA+D,EAAA,IASA,IARA,IAAAhE,EAAAgE,EAAA/D,OAEA8rM,EAAA,IAAAd,EAAAjrM,GACAgsM,EAAA,IAAAd,EAAAlrM,GACAisM,EAAA,EACAC,EAAA,EACA5uJ,EAAA,EAEAv9C,EAAA,EAAqBA,EAAAC,GAAS,CAC9Bs9C,IACA,IAAAztB,EAAA7rB,EAAAjE,KAEAgsM,EAAAG,KAAAD,EAAAH,EAEAC,EAAAG,KAAAr8K,EAEA,QAAA4R,EAAA,EAAuBA,EAAA5R,EAAW4R,IAAA,CAClC,IAAAjvB,EAAAxO,EAAAjE,KACA0S,EAAAzO,EAAAjE,KACAisM,EAAAC,KAAAz5L,EACAw5L,EAAAC,KAAAx5L,GAMA,OACAm5L,iBAAA,IAAAx4J,YAAA24J,EAAA1xJ,OAAA,EAAA6xJ,GACAR,WAAAM,EACAn8K,MAAAytB,GAIA,OACAsuJ,iBAAA,KACAF,WAAA,KACA77K,MAAA7rB,EAAA/D,SAGAwsC,eAAA,SAAAj+B,EAAAvB,GACA,IAAAiqG,EAAA,IAAAjjE,EAAA,UAAAzxC,MAeA,OAdA00G,EAAA5/D,eAAA,EACA4/D,EAAAr/D,SAAArpC,EAAAxK,KAAA,YAAA0vB,EAAAqrC,EAAAprD,EAAAqiC,GAEA,GAAAtiB,aAAA70B,MACA,OAAAuwB,IAEA8nF,EAAA5/D,eAAA,EACA,IAAAx1C,EAAA4xB,EAAA5xB,MAEA,aAAAA,EACAA,aAAAjD,MAAAiD,EAAAk0C,GAAAl0C,OADA,IAKAo1G,GAEAxpE,cAAA,SAAA/5B,GACA,IACA86D,EADAjsE,KAAAgR,UACA8qC,aAAA3qC,GACA5Q,EAAA0rE,EAAA9rE,IAAA,QAEA,GAAAI,EACA,OAAAA,EAGA,IAAAsoM,EAAA58H,EAAA9rE,IAAA,YACA2oM,EAAA78H,EAAA9rE,IAAA,UACA0mH,EAAA,GAGA,OAFA,MAAAgiF,GAAAhiF,EAAAplH,KAAAonM,GACA,MAAAC,GAAAjiF,EAAAplH,KAAAqnM,GACAnrK,EAAAkpF,EAAAn9F,KAAA,SAEA2jB,mBAAA,WACA,QAAArtC,KAAAG,IAAA,gBAEA6sC,eAAA,WACA,IAAA0vC,EAAA18E,KAAAgM,OAAA0wE,YAEA,aAAAA,EACA18E,KAAAgM,OAAAwwE,MAAA,IAAAx8E,KAAAG,IAAA,eAGAu8E,GAEAzvC,wBAAA,WACA,IAAA6nH,EAAA90J,KAAAgM,OAAA8oJ,qBAEA,aAAAA,EACA90J,KAAAgM,OAAAwwE,MAAA,IAAAx8E,KAAAG,IAAA,wBAGA20J,GAEAxuH,cAAA,CACA51B,iBAAA,MACA8H,OAAA,EACAD,EAAA,EACAwpH,iBAAA,EACAxgD,gBAAA,EAEA2D,WAAA,EACAC,WAAA,EACA/tD,OAAA,gBACAC,WAAA,QAEAgoE,SAAA,EACAsqG,OAAA,CACA3yK,MAAA,EACAw3G,OAAA,EAKAC,cAAA,EACAr3G,OAAA,SACAC,WAAA,EACAqN,MAAA,EAEAklK,YAAA,IAIAptH,OAAA,EAEAylD,eAAA,IAGAwlC,UAAA,EACA7vI,MAAA,CACAZ,MAAA,EACApX,SAAA,OAIAuW,UAAA,CACAkgD,QAAA,OAIAj1C,EAAA2nK,EACA5wK,EAAA93B,QAAA+gC,mBCrTc19B,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtB6wG,EAAe7wG,EAAQ,KAEvByqI,EAAiBzqI,EAAQ,KAEzBya,EAAWza,EAAQ,KAEnBua,EAAeva,EAAQ,KAEvBmmM,EAAqBnmM,EAAQ,KAE7BomM,EAAoBpmM,EAAQ,KAE5B6kM,EAAkB7kM,EAAQ,KAqB1B09B,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,QACA+H,KAAA,aACAuK,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UAEAgkG,EAAAh1G,KAAA+pM,gBAAAvoM,EAAAuP,GAEAyH,EAAAzH,EAAA5Q,IAAA,UACAypM,EAAA74L,EAAA5Q,IAAA,sBACAiH,EAAAe,EAAA2D,QAIAk+L,EAAA,QAAA5iM,EAAAyF,QAAAyB,UAEA07L,GACA5iM,EAAAyF,QAAA+6I,SAAApvI,GAAAU,OAAA,GAIA,MAAAlZ,KAAAiqM,aAAAD,GACA5iM,EAAAkjF,YAAAtqF,KAAAiqM,YAAA,CACAh+C,YAAA,IAIAjsJ,KAAAkqM,YAAAn5L,IAAA64L,IACAI,GACA5iM,EAAAkjF,YAAA9xE,EAAA,CACAyzI,YAAA,EACAC,eAAAv9I,KAAAG,IAAAH,KAAAC,IAAAg7L,EAAA,eAKA50F,EAAAtzB,WAAAlgF,GACAxB,KAAAiqM,YAAAzxL,EACAxY,KAAAyzK,WAAA,GAEAp5G,yBAAA,SAAAtpD,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UAEAhR,KAAA+pM,gBAAAvoM,EAAAuP,GAEAoxE,yBAAA3gF,GAEAxB,KAAAkqJ,YAAA/hJ,GAEAnI,KAAAyzK,WAAA,GAEAn5G,kBAAA,SAAAgoB,EAAAvxE,EAAAtG,GACAzK,KAAA2xL,UAAAtvG,kBAAAC,EAAAvxE,EAAAC,WAEAhR,KAAAyzK,UAAAnxF,EAAAz0C,MAAA98B,EAAAC,UAAAqc,SAEAlb,gBAAA,SAAApB,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACAs8B,EAAAv8B,EAAAu8B,gBAEA,IAAAttC,KAAAyzK,WAAAnmI,EAAAkvC,OAAAlvC,EAAAqtB,kBAEA,OACAzvD,QAAA,GAKA,IAAAgyC,EAAAqrJ,EAAAx+J,MAAAh5B,GAEAmsC,EAAA2d,UACA3d,EAAA2d,SAAA,CACA5kB,MAAA,EACApI,IAAArsC,EAAA6rB,SACS7rB,GAGTxB,KAAA2xL,UAAA3+K,eAEAhT,KAAAkqJ,YAAA/hJ,IAGA4hM,gBAAA,SAAAvoM,EAAAuP,GACA,IAAAikG,EAAAh1G,KAAA2xL,UAEAwY,EAAAnqM,KAAAkqM,YAAAn5L,GAEAu+H,IAAAv+H,EAAA5Q,IAAA,YAEA2tK,EADA/8J,EAAAu8B,gBACAkvC,MAeA,OAbAw4B,GAAAm1F,IAAAnqM,KAAAoqM,WAAA96D,IAAAtvI,KAAAqqM,aAAAv8B,IAAA9tK,KAAAytK,eACAz4D,GACAA,EAAAj/F,SAGAi/F,EAAAh1G,KAAA2xL,UAAA7jB,EAAA,IAAAg8B,EAAA,IAAAv1F,EAAA+6B,EAAA66D,EAAAN,EAAA5rL,EAAAksL,EAAAh8D,EAAAhwH,GACAne,KAAAoqM,UAAAD,EACAnqM,KAAAqqM,YAAA/6D,EACAtvI,KAAAytK,aAAAK,EACA9tK,KAAAkH,MAAAkzD,aAGAp6D,KAAAkH,MAAAiJ,IAAA6kG,EAAA9tG,OACA8tG,GAEAk1F,YAAA,SAAAn5L,GACA,QAAAA,EAAA5Q,IAAA,gBAEA+pJ,YAAA,SAAA/hJ,GAEA,IAAAf,EAAAe,EAAA2D,QACA,QAAA1E,EAAAyF,QAAAyB,WAEA,MAAAtO,KAAAiqM,aACA7iM,EAAAyF,QAAA+6I,SAAA5nJ,KAAAiqM,aAAA/wL,OAAA,IAGAnD,OAAA,SAAAtL,EAAAtC,GACAnI,KAAA2xL,WAAA3xL,KAAA2xL,UAAA57K,SACA/V,KAAA2xL,UAAA,KAEA3xL,KAAAkqJ,YAAA/hJ,IAEA2N,QAAA,eAGAqiB,EAAA93B,QAAA+gC,mBCtKA,IAAAnjB,EAAeva,EAAQ,KAEvBG,EAAaH,EAAQ,KAErByqI,EAAiBzqI,EAAQ,KAEzBk8B,EAAWl8B,EAAQ,KAgCnB,SAAAmmM,EAAAn1F,EAAAzmF,EAAA4zD,GACAssD,EAAA9wI,KAAA2C,KAAA00G,EAAAzmF,EAAA4zD,GACA7hF,KAAAsqM,WAAA,EACAtqM,KAAAuqM,kBAAA,EAGA,IAAAC,EAAAX,EAAA3tM,UAEAsuM,EAAArzF,WAAA,SAAAzC,EAAAzmF,EAAA4zD,GACA,WAAA5jE,EAAAy2F,EAAAzmF,EAAA4zD,IAIA2oH,EAAA57D,sBAAA,SAAAx3G,EAAAhM,GACAprB,KAAAmoK,QAAA/8I,EAIA,IAHA,IAAAq/K,EAAA,IACAjtM,EAAA,EAEAD,EAAA,EAAiBA,EAAA6tB,EAAA3tB,OAAmBF,IAAA,CACpC,IAAAohE,EAAAvzC,EAAA7tB,EAAA,GACAqhE,EAAAxzC,EAAA7tB,GACAC,GAAAoiC,EAAAxD,KAAAuiC,EAAAC,GACA6rI,EAAAhpM,KAAAjE,GAGA,OAAAA,EAAA,CAIA,IAAAD,EAAA,EAAiBA,EAAAktM,EAAAhtM,OAAsBF,IACvCktM,EAAAltM,IAAAC,EAGAwC,KAAA0qM,SAAAD,EACAzqM,KAAA2qM,QAAAntM,IAIAgtM,EAAA37D,cAAA,SAAAz3G,GACA,OAAAp3B,KAAA2qM,SAIAH,EAAAx7D,qBAAA,SAAA53G,GACA,IAAA6F,EAAA7F,EAAA23G,IACA3jH,EAAAprB,KAAAmoK,QACAyiC,EAAA5qM,KAAA0qM,SACAltM,EAAA4tB,EAAA3tB,OAEA,GAAAmtM,EAAA,CAKA,IAAAl6E,EAAA1wH,KAAAsqM,WAGA,GAAArtK,EAAAj9B,KAAAuqM,kBAAA,CAKA,IAAAt5E,EAFAtiH,KAAAC,IAAA8hH,EAAA,EAAAlzH,EAAA,GAEuByzH,GAAA,KACvB25E,EAAA35E,IAAAh0F,GADmCg0F,KAOnCA,EAAAtiH,KAAAC,IAAAqiH,EAAAzzH,EAAA,OACG,CACH,QAAAyzH,EAAAP,EAA+BO,EAAAzzH,KAC/BotM,EAAA35E,GAAAh0F,GAD4Cg0F,KAM5CA,EAAAtiH,KAAAC,IAAAqiH,EAAA,EAAAzzH,EAAA,GAGAoiC,EAAA5C,KAAA5F,EAAAxX,SAAAwL,EAAA6lG,GAAA7lG,EAAA6lG,EAAA,IAAAh0F,EAAA2tK,EAAA35E,KAAA25E,EAAA35E,EAAA,GAAA25E,EAAA35E,KACA,IAAAjnB,EAAA5+E,EAAA6lG,EAAA,MAAA7lG,EAAA6lG,GAAA,GACAhnB,EAAA7+E,EAAA6lG,EAAA,MAAA7lG,EAAA6lG,GAAA,GACA75F,EAAAlM,UAAAvc,KAAAw3F,MAAA8D,EAAAD,GAAAr7F,KAAA4U,GAAA,EACAvjB,KAAAsqM,WAAAr5E,EACAjxH,KAAAuqM,kBAAAttK,EACA7F,EAAAhpB,QAAA,IAGAvK,EAAA9C,SAAA8oM,EAAA17D,GACA,IAAA/sG,EAAAyoK,EACA1xK,EAAA93B,QAAA+gC,mBCjIA,IAAAx8B,EAAclB,EAAQ,KAEtBgb,EAA6Bhb,EAAQ,KAErCmnM,EAAkBnnM,EAAQ,KAE1BonM,EAAuBpnM,EAAQ,KAsB/BqnM,EAAAnmM,EAAAoiB,YAAA,CACAQ,MAAA,CACAigJ,UAAA,EACA18B,UAAA,EACAqoB,KAAA,IAEA/vH,UAAA,SAAApkB,EAAAuI,GACA,IAAA4rI,EAAA5rI,EAAA4rI,KACAroB,EAAAvjH,EAAAujH,UAEA,GAAAvjH,EAAAigJ,SACA,QAAAlqK,EAAA,EAAqBA,EAAA61J,EAAA31J,QAAiB,CACtC,IAAA4vB,EAAA+lI,EAAA71J,KAEA,GAAA8vB,EAAA,GACApO,EAAAs+B,OAAA61G,EAAA71J,KAAA61J,EAAA71J,MAEA,QAAA0hC,EAAA,EAAyBA,EAAA5R,EAAW4R,IACpChgB,EAAAu+B,OAAA41G,EAAA71J,KAAA61J,EAAA71J,YAKA,IAAAA,EAAA,EAAqBA,EAAA61J,EAAA31J,QAAiB,CACtC,IAAAojE,EAAAuyF,EAAA71J,KACAujE,EAAAsyF,EAAA71J,KACAkqB,EAAA2rI,EAAA71J,KACAoqB,EAAAyrI,EAAA71J,KAGA,GAFA0hB,EAAAs+B,OAAAsjB,EAAAC,GAEAiqE,EAAA,GACA,IAAArjH,GAAAm5C,EAAAp5C,GAAA,GAAAq5C,EAAAn5C,GAAAojH,EACAnjH,GAAAk5C,EAAAn5C,GAAA,GAAAF,EAAAo5C,GAAAkqE,EACA9rH,EAAAm7D,iBAAA1yD,EAAAE,EAAAH,EAAAE,QAEA1I,EAAAu+B,OAAA/1B,EAAAE,KAKAksJ,cAAA,SAAA7jK,EAAAC,GACA,IAAAuX,EAAAxnB,KAAAwnB,MACA4rI,EAAA5rI,EAAA4rI,KACAroB,EAAAvjH,EAAAujH,UAEA,GAAAvjH,EAAAigJ,SAGA,IAFA,IAAAt2J,EAAA,EAEA5T,EAAA,EAAqBA,EAAA61J,EAAA31J,QAAiB,CACtC,IAAA4vB,EAAA+lI,EAAA71J,KAEA,GAAA8vB,EAAA,EAIA,IAHA,IAAAwzC,EAAAuyF,EAAA71J,KACAujE,EAAAsyF,EAAA71J,KAEA0hC,EAAA,EAAyBA,EAAA5R,EAAW4R,IAAA,CACpC,IAAAxX,EAAA2rI,EAAA71J,KACAoqB,EAAAyrI,EAAA71J,KAEA,GAAAstM,EAAAxmK,cAAAw8B,EAAAC,EAAAr5C,EAAAE,GACA,OAAAxW,EAKAA,SAKA,IAFAA,EAAA,EAEA5T,EAAA,EAAqBA,EAAA61J,EAAA31J,QAAiB,CACtCojE,EAAAuyF,EAAA71J,KACAujE,EAAAsyF,EAAA71J,KACAkqB,EAAA2rI,EAAA71J,KACAoqB,EAAAyrI,EAAA71J,KAEA,GAAAwtI,EAAA,GACA,IAAArjH,GAAAm5C,EAAAp5C,GAAA,GAAAq5C,EAAAn5C,GAAAojH,EACAnjH,GAAAk5C,EAAAn5C,GAAA,GAAAF,EAAAo5C,GAAAkqE,EAEA,GAAA+/D,EAAAzmK,cAAAw8B,EAAAC,EAAAp5C,EAAAE,EAAAH,EAAAE,GACA,OAAAxW,OAGA,GAAA05L,EAAAxmK,cAAAw8B,EAAAC,EAAAr5C,EAAAE,GACA,OAAAxW,EAIAA,IAIA,YAIA,SAAA24L,IACA9pM,KAAAkH,MAAA,IAAAtC,EAAA+Y,MAGA,IAAAqtL,EAAAlB,EAAA5tM,UAEA8uM,EAAA9oH,aAAA,WACA,OAAAliF,KAAAw1G,cAQAw1F,EAAAtpH,WAAA,SAAAlgF,GACAxB,KAAAkH,MAAAkzD,YACA,IAAA6wI,EAAA,IAAAF,EAAA,CACAr/K,WAAA,EACA8yD,OAAA,YAEAysH,EAAApmK,SAAA,CACAuuH,KAAA5xJ,EAAA46C,UAAA,iBAGAp8C,KAAA+zK,WAAAk3B,EAAAzpM,GAGAxB,KAAAkH,MAAAiJ,IAAA86L,GACAjrM,KAAAw1G,aAAA,MAOAw1F,EAAA7oH,yBAAA,SAAA3gF,GACAxB,KAAAkH,MAAAkzD,YAEAp6D,KAAAu1G,oBAEA/zG,EAAA6rB,QAAA,KACArtB,KAAAw1G,eACAx1G,KAAAw1G,aAAA,IAAA92F,EAAA,CACA3T,QAAA,KAIA/K,KAAAkH,MAAAiJ,IAAAnQ,KAAAw1G,eAEAx1G,KAAAw1G,aAAA,MAQAw1F,EAAA3oH,kBAAA,SAAAC,EAAA9gF,GACA,IAAAypM,EAAA,IAAAF,EACAE,EAAApmK,SAAA,CACAuuH,KAAA5xJ,EAAA46C,UAAA,iBAGAp8C,KAAA+zK,WAAAk3B,EAAAzpM,IAAAxB,KAAAw1G,cAEAx1G,KAAAw1G,aAMAx1G,KAAAw1G,aAAA7K,eAAAsgG,GAAA,IALAA,EAAAv/K,WAAA,EACAu/K,EAAAzsH,OAAA,UACAysH,EAAAviD,aAAApmE,EAAArsC,MACAj2C,KAAAkH,MAAAiJ,IAAA86L,KAUAD,EAAAj1L,OAAA,WACA/V,KAAAu1G,oBAEAv1G,KAAAw1G,aAAA,KACAx1G,KAAAkH,MAAAkzD,aAGA4wI,EAAAj3B,WAAA,SAAAk3B,EAAAzpM,EAAA0yK,GACA,IAAAxiI,EAAAlwC,EAAAkwC,UACAu5J,EAAApmK,SAAA,CACA4iI,SAAA/1H,EAAAvxC,IAAA,YACA4qI,UAAAr5F,EAAAvxC,IAAA,yBAEA8qM,EAAAnsH,SAAAptC,EAAAllC,SAAA,aAAA6gE,gBACA49H,EAAAl7L,MAAA4b,eAAA,EACA,IAAA2rF,EAAA91G,EAAAoP,UAAA,SAEA0mG,GACA2zF,EAAAr0L,SAAA,SAAA0gG,GAGA2zF,EAAAr0L,SAAA,QAEAs9J,IAGA+2B,EAAA7yL,YAAAs5B,EAAAt5B,YACA6yL,EAAArhM,GAAA,qBAAA8O,GACAuyL,EAAA95L,UAAA,KACA,IAAAA,EAAA85L,EAAAp3B,cAAAn7J,EAAAg+C,QAAAh+C,EAAAo+C,SAEA3lD,EAAA,IAEA85L,EAAA95L,YAAA85L,EAAAviD,kBAMAsiD,EAAAz1F,kBAAA,WACA,IAAA92B,EAAAz+E,KAAAw1G,aAEA/2B,GACAA,EAAAisB,oBAIA,IAAAtpE,EAAA0oK,EACA3xK,EAAA93B,QAAA+gC,iBC3OA,SAAAvE,EAAAx5B,GAKA,OAJAA,aAAAhH,QACAgH,EAAA,CAAAA,MAGAA,EAGA,IAAA8wL,EAAA,oBAAA//K,MAAA,KACAgtB,EAAA,CACAoqC,WAAA,QACAzhC,MAAA,SAAAh5B,EAAAtG,EAAAtC,GACA,IAAA+2C,EAAAriB,EAAA9rB,EAAA5Q,IAAA,WACAk3B,EAAAwF,EAAA9rB,EAAA5Q,IAAA,eACAqB,EAAAuP,EAAAC,UAmBA,OAlBAxP,EAAA06C,UAAA,aAAAgD,KAAA,IACA19C,EAAA06C,UAAA,WAAAgD,KAAA,IACA19C,EAAA06C,UAAA,iBAAA7kB,KAAA,IACA71B,EAAA06C,UAAA,eAAA7kB,KAAA,IACA71B,EAAA06C,UAAA,UAAAnrC,EAAA5Q,IAAAg0L,IAcA,CACApoH,SAAAvqE,EAAAszC,cAbA,SAAAtzC,EAAAysB,GACA,IAAAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GACAixB,EAAAriB,EAAAovC,EAAA7oD,WAAA,cACAiU,EAAAwF,EAAAovC,EAAA7oD,WAAA,kBACAizD,EAAApK,EAAA9rE,IAAAg0L,GACAj1I,EAAA,IAAA19C,EAAAi7C,cAAAxuB,EAAA,aAAAixB,EAAA,IACAA,EAAA,IAAA19C,EAAAi7C,cAAAxuB,EAAA,WAAAixB,EAAA,IACA7nB,EAAA,IAAA71B,EAAAi7C,cAAAxuB,EAAA,iBAAAoJ,EAAA,IACAA,EAAA,IAAA71B,EAAAi7C,cAAAxuB,EAAA,eAAAoJ,EAAA,IACA71B,EAAAi7C,cAAAxuB,EAAA,UAAAooD,IAIA,QAIAl+C,EAAA93B,QAAA+gC,mBCxDA19B,EAAQ,KAERA,EAAQ,sBCFR,IAAAe,EAAkBf,EAAQ,KAE1Bk+H,EAA0Bl+H,EAAQ,KAElCoY,EAAuBpY,EAAQ,KAqB/B09B,EAAA38B,EAAA9D,OAAA,CACApB,KAAA,iBACA0qC,eAAA,SAAAj+B,EAAAvB,GACA,OAAAm3H,EAAA5hI,KAAAypC,YAAAzpC,KAAA,CACA+7D,cAAA,WAGA1uB,mBAAA,WACA,IAAApxB,EAAAH,EAAA3b,IAAAH,KAAAG,IAAA,qBAEA,GAAA8b,KAAAE,WACA,cAAAF,EAAAE,WAAA,YAAAF,EAAAE,WAAA,IAGAmqB,cAAA,CAEA51B,iBAAA,cACA8H,OAAA,EACAD,EAAA,EAKA8mF,SAAA,EACA6rG,SAAA,GACAC,UAAA,GACAC,WAAA,EACAC,WAAA,KAIAlzK,EAAA93B,QAAA+gC,mBCxDc19B,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBkB,EAAclB,EAAQ,KAEtB4nM,EAAmB5nM,EAAQ,KAE3BG,EAAaH,EAAQ,KAuErB,IAAA09B,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,UACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAAojM,EACA9gM,EAAAuD,cAAA,qBAAA2nB,GACAA,EAAAolH,iBAAA,SAAAywD,GACAA,IAAAz6L,IACAw6L,EAAA51K,OAIA31B,KAAAkH,MAAAkzD,YACAp6D,KAAAyrM,wBAAA,KACA,IAAA7gM,EAAAmG,EAAAL,iBAEA,gBAAA9F,EAAArL,MAAA,aAAAqL,EAAArL,KACAS,KAAA0rM,8BAAA36L,EAAA5I,EAAA,EAAA4I,EAAAC,UAAAqc,SAtBA,SAAAziB,GACA,IAAAuR,EAAAvR,EAAAuR,WAEA,cAAAA,EAAA,YAAAA,EAAA,GAoBKwvL,CAAA/gM,IACL5K,KAAA4rM,aAAAhhM,EAAAmG,EAAAw6L,EAAApjM,IAGAkyD,yBAAA,SAAAtpD,EAAAtG,EAAAtC,GACAnI,KAAAkH,MAAAkzD,aAEAE,kBAAA,SAAAniD,EAAApH,EAAAtG,EAAAtC,GACA4I,EAAAL,kBAGA1Q,KAAA0rM,8BAAA36L,EAAA5I,EAAAgQ,EAAA89B,MAAA99B,EAAA01B,KAAA,IAGA69J,8BAAA,SAAA36L,EAAA5I,EAAA8tC,EAAApI,EAAA4wC,GACA,IACAh3E,EACAC,EAFAkD,EAAAmG,EAAAL,iBAIA,mBAAA9F,EAAArL,KAAA,CACA,IAAA0jF,EAAAr4E,EAAAqyF,QAAA,KACA/Z,EAAAt4E,EAAAqyF,QAAA,KACAx1F,EAAAw7E,EAAAtf,eACAj8D,EAAAw7E,EAAAvf,eAgBA,IAbA,IAAAz8D,EAAAlH,KAAAkH,MACA1F,EAAAuP,EAAAC,UAKAjB,EAAAgB,EAAAvE,SAJA,aAIA20E,aAAA,WACAh/D,EAAApR,EAAAvE,SAJA,sBAIA20E,eACA73D,EAAAvY,EAAAvE,SAJA,SAKAg1E,EAAAzwE,EAAAvE,SAJA,kBAKAyoL,EAAArqL,EAAArL,KACAguC,EAAA,gBAAA0nJ,EAAA,CAAAzzL,EAAA8pC,aAAA,KAAA9pC,EAAA8pC,aAAA,KAAA9pC,EAAA8pC,aAAA,WAAA9pC,EAAA8pC,aAAA,QAAA9pC,EAAA8pC,aAAA,UAEArd,EAAAgoB,EAAyBhoB,EAAA4f,EAAW5f,IAAA,CACpC,IAAAlP,EAEA,mBAAAk2K,EAAA,CAEA,GAAA7nK,MAAA5rB,EAAArB,IAAAotC,EAAA,GAAAtf,IACA,SAGA,IAAA5C,EAAAzgB,EAAAk4E,YAAA,CAAAthF,EAAArB,IAAAotC,EAAA,GAAAtf,GAAAzsB,EAAArB,IAAAotC,EAAA,GAAAtf,KACAlP,EAAA,IAAAna,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAAqb,EAAA,GAAA5jB,EAAA,EACAwI,EAAAob,EAAA,GAAA3jB,EAAA,EACAD,QACAC,UAEAqI,MAAA,CACAyQ,KAAAhf,EAAA4P,cAAA6c,EAAA,SACAooD,QAAA70E,EAAA4P,cAAA6c,EAAA,kBAGO,CAEP,GAAAb,MAAA5rB,EAAArB,IAAAotC,EAAA,GAAAtf,IACA,SAGAlP,EAAA,IAAAna,EAAAsZ,KAAA,CACAyD,GAAA,EACA6F,MAAA5c,EAAAihM,WAAA,CAAArqM,EAAArB,IAAAotC,EAAA,GAAAtf,KAAA69K,aACA/7L,MAAA,CACAyQ,KAAAhf,EAAA4P,cAAA6c,EAAA,SACAooD,QAAA70E,EAAA4P,cAAA6c,EAAA,cAKA,IAAAg+C,EAAAzqE,EAAAs6C,aAAA7tB,GAEAzsB,EAAAszC,gBACA/kC,EAAAk8D,EAAAz/D,SApDA,aAoDA20E,aAAA,WACAh/D,EAAA8pD,EAAAz/D,SApDA,sBAoDA20E,eACA73D,EAAA2iD,EAAAz/D,SApDA,SAqDAg1E,EAAAvV,EAAAz/D,SApDA,mBAuDA,IAAAw/D,EAAAj7D,EAAAy6B,YAAAvd,GACAhF,EAAA,IAEA+iD,GAAA,MAAAA,EAAA,KACA/iD,EAAA+iD,EAAA,IAGApnE,EAAAwjB,cAAArY,EAAAoS,EAAAmH,EAAAk4D,EAAA,CACA74D,aAAA5X,EACA6X,eAAAqF,EACAhF,cACA/F,YAAA,IAEAnE,EAAAnI,SAAA7G,GACAnL,EAAAsjB,cAAAnJ,EAAAvd,EAAAszC,cAAA3yB,EAAAte,EAAAlD,OAAA,GAAkFwhB,IAClFpD,EAAA0/D,cAEAA,IAEA1/D,EAAA7H,eAAA,GAGAhQ,EAAAiJ,IAAA4O,GACAvd,EAAAo7C,iBAAA3uB,EAAAlP,KAGA6sL,aAAA,SAAA9sG,EAAA/tF,EAAAkoI,EAAA9wI,GACA,IAAA4jM,EAAA9yD,EAAAC,cAAAgB,QACA8xD,EAAA/yD,EAAAC,cAAAiB,WAIA34I,EAAAuP,EAAAC,UACAi7L,EAAAjsM,KAAAksM,UAAAlsM,KAAAksM,UAAA,IAAAZ,EACAW,EAAAf,SAAAn6L,EAAA5Q,IAAA,YACA8rM,EAAAd,UAAAp6L,EAAA5Q,IAAA,aACA8rM,EAAAZ,WAAAt6L,EAAA5Q,IAAA,cACA8rM,EAAAb,WAAAr6L,EAAA5Q,IAAA,cACA,IAAA4e,EAAA+/E,EAAAglC,cAAA7mI,QACAwmI,EAAA3kC,EAAAykC,mBACAxkH,EAAAS,eAAAikH,GAEA,IAAAzzH,EAAArB,KAAAG,IAAAiQ,EAAA/O,EAAA,GACAC,EAAAtB,KAAAG,IAAAiQ,EAAA9O,EAAA,GACAyX,EAAA/Y,KAAAC,IAAAmQ,EAAAtX,MAAAsX,EAAA/O,EAAA7H,EAAAuE,YACAkb,EAAAjZ,KAAAC,IAAAmQ,EAAArX,OAAAqX,EAAA9O,EAAA9H,EAAAwE,aACAlF,EAAAigB,EAAA1X,EACAtI,EAAAkgB,EAAA3X,EACAmlC,EAAA,CAAA5zC,EAAA8pC,aAAA,OAAA9pC,EAAA8pC,aAAA,OAAA9pC,EAAA8pC,aAAA,UACAlgB,EAAA5pB,EAAAo5C,SAAAxF,EAAA,SAAA+2J,EAAAC,EAAA9sM,GACA,IAAAu1G,EAAA/V,EAAAhc,YAAA,CAAAqpH,EAAAC,IAIA,OAHAv3F,EAAA,IAAA7kG,EACA6kG,EAAA,IAAA5kG,EACA4kG,EAAApzG,KAAAnC,GACAu1G,IAEAnnF,EAAAurH,EAAA73F,YACAirJ,EAAA,yBAAApzD,EAAA15I,KA9KA,SAAAmuB,EAAAvB,GACA,IAAAmgL,EAAA5+K,EAAA,GAAAA,EAAA,GAEA,OADAvB,EAAA,EAAAA,EAAA,GAAAuB,EAAA,IAAA4+K,GAAAngL,EAAA,GAAAuB,EAAA,IAAA4+K,GACA,SAAA5pM,GACA,OAAAA,GAAAypB,EAAA,IAAAzpB,GAAAypB,EAAA,IA0KAogL,CAAA7+K,EAAAurH,EAAAjtI,OAAAmgB,OAlNA,SAAAuB,EAAA8mD,EAAA28B,GACA,IAAAm7F,EAAA5+K,EAAA,GAAAA,EAAA,GAMAlwB,GALAg3E,EAAA3wE,EAAAhH,IAAA23E,EAAA,SAAAE,GACA,OACAzkD,SAAA,EAAAykD,EAAAzkD,SAAA,GAAAvC,EAAA,IAAA4+K,GAAA53H,EAAAzkD,SAAA,GAAAvC,EAAA,IAAA4+K,OAGA7uM,OACA6pD,EAAA,EACA,gBAAA5kD,GAEA,QAAAnF,EAAA+pD,EAA2B/pD,EAAAC,EAASD,IAGpC,IAFA0yB,EAAAukD,EAAAj3E,GAAA0yB,UAEA,IAAAvtB,MAAAutB,EAAA,IACAq3B,EAAA/pD,EACA,MAIA,GAAAA,IAAAC,EAEA,IAAAD,EAAA+pD,EAAA,EAAiC/pD,GAAA,EAAQA,IAAA,CACzC,IAAA0yB,EAEA,IAFAA,EAAAukD,EAAAj3E,GAAA0yB,UAEA,IAAAvtB,MAAAutB,EAAA,IACAq3B,EAAA/pD,EACA,OAKA,OAAAA,GAAA,GAAAA,EAAAC,GAAA2zG,EAAA5zG,IAkLAivM,CAAA9+K,EAAAurH,EAAAwzD,eAAAxzD,EAAAjtI,OAAAmlG,UACA86F,EAAA/gM,OAAAkgB,EAAA3jB,EAAAC,EAAAqkM,EAAA5rL,MAAAi1D,gBAAA,CACA8kE,QAAA6xD,EAAA5rL,MAAAk0D,iBACA8lE,WAAA6xD,EAAA7rL,MAAAk0D,kBACKg4H,GACL,IAAAx8L,EAAA,IAAAjL,EAAAkL,MAAA,CACAC,MAAA,CACAtI,QACAC,SACAsI,IACAC,IACAC,MAAA+7L,EAAAz8L,QAEAzE,QAAA,IAEA/K,KAAAkH,MAAAiJ,IAAAN,IAEAiG,QAAA,eAGAqiB,EAAA93B,QAAA+gC,mBCrQA,IAAAv9B,EAAaH,EAAQ,KAoCrB,SAAAgpM,IACA,IAAAl9L,EAAA3L,EAAAlF,eACAqB,KAAAwP,SACAxP,KAAAkrM,SAAA,GACAlrM,KAAAmrM,UAAA,GACAnrM,KAAAorM,WAAA,EACAprM,KAAAqrM,WAAA,EACArrM,KAAA2sM,gBAAA,GAGAD,EAAAxwM,UAAA,CAOAgP,OAAA,SAAA1J,EAAAiG,EAAAC,EAAAm1B,EAAA+vK,EAAAP,GACA,IAAAzqK,EAAA5hC,KAAA6sM,YAEAC,EAAA9sM,KAAA+sM,aAAAvrM,EAAAorM,EAAA,WAEAI,EAAAhtM,KAAA+sM,aAAAvrM,EAAAorM,EAAA,cAEAhvJ,EAAA59C,KAAAmrM,UAAAnrM,KAAAkrM,SACA17L,EAAAxP,KAAAwP,OACAqyB,EAAAryB,EAAA5O,WAAA,MACApD,EAAAgE,EAAA/D,OACA+R,EAAA/H,QACA+H,EAAA9H,SAEA,QAAAnK,EAAA,EAAmBA,EAAAC,IAASD,EAAA,CAC5B,IAAA61D,EAAA5xD,EAAAjE,GACAyS,EAAAojD,EAAA,GACAnjD,EAAAmjD,EAAA,GAGAc,EAAAr3B,EAFAu2B,EAAA,IAIAvxB,EAAAmyF,YAAA9/D,EACAryB,EAAAk8C,UAAAn8C,EAAA5xB,EAAA4tC,EAAA3tC,EAAA2tC,GAGA,IAAApuC,EAAA/H,QAAA+H,EAAA9H,OAGA,OAAA8H,EAYA,IARA,IAAAy9L,EAAAprK,EAAAqrK,aAAA,IAAA19L,EAAA/H,MAAA+H,EAAA9H,QACAylM,EAAAF,EAAAzrM,KACAgC,EAAA,EACA4pM,EAAAD,EAAA1vM,OACA4tM,EAAArrM,KAAAqrM,WAEAgC,EADArtM,KAAAorM,WACAC,EAEA7nM,EAAA4pM,GAAA,CACAl5I,EAAAi5I,EAAA3pM,EAAA,WACA8pM,EAAA,EAAA3+L,KAAAod,MAAA,IAAAmoC,GAEA,GAAAA,EAAA,GACA,IAAAw0G,EAAA2jC,EAAAn4I,GAAA44I,EAAAE,EAEA94I,EAAA,IAAAA,IAAAm5I,EAAAhC,GACA8B,EAAA3pM,KAAAklK,EAAA4kC,GACAH,EAAA3pM,KAAAklK,EAAA4kC,EAAA,GACAH,EAAA3pM,KAAAklK,EAAA4kC,EAAA,GACAH,EAAA3pM,KAAAklK,EAAA4kC,EAAA,GAAAp5I,EAAA,SAEA1wD,GAAA,EAKA,OADAq+B,EAAA0rK,aAAAN,EAAA,KACAz9L,GAQAq9L,UAAA,WACA,IAAAW,EAAAxtM,KAAAytM,eAAAztM,KAAAytM,aAAA5pM,EAAAlF,gBAEAi/C,EAAA59C,KAAAmrM,UAAAnrM,KAAAkrM,SACApuK,EAAA,EAAA8gB,EACA4vJ,EAAA/lM,MAAAq1B,EACA0wK,EAAA9lM,OAAAo1B,EACA,IAAA+E,EAAA2rK,EAAA5sM,WAAA,MAeA,OAdAihC,EAAAwmH,UAAA,IAAAvrH,KAIA+E,EAAAs9C,cAAAriD,EACA+E,EAAAo9C,WAAAj/E,KAAAkrM,SAGArpK,EAAAq9C,YAAA,OAEAr9C,EAAAsB,YACAtB,EAAAsc,KAAAP,IAAA59C,KAAAmrM,UAAA,IAAAx8L,KAAA4U,IAAA,GACAse,EAAA4b,YACA5b,EAAArhB,OACAgtL,GAOAT,aAAA,SAAAvrM,EAAAorM,EAAAnyI,GAMA,IALA,IAAAizI,EAAA1tM,KAAA2sM,gBACAgB,EAAAD,EAAAjzI,KAAAizI,EAAAjzI,GAAA,IAAAmzI,kBAAA,OACAztL,EAAA,UACAhW,EAAA,EAEA5M,EAAA,EAAmBA,EAAA,IAASA,IAC5BqvM,EAAAnyI,GAAAl9D,EAAA,OAAA4iB,GACAwtL,EAAAxjM,KAAAgW,EAAA,GACAwtL,EAAAxjM,KAAAgW,EAAA,GACAwtL,EAAAxjM,KAAAgW,EAAA,GACAwtL,EAAAxjM,KAAAgW,EAAA,GAGA,OAAAwtL,IAGA,IAAAvsK,EAAAsrK,EACAv0K,EAAA93B,QAAA+gC,mBCvKA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAEAsb,EAFetb,EAAQ,KAEvBsb,OAEAylJ,EAAmB/gK,EAAQ,KAE3BA,EAAQ,KAsBR4xB,EAAAlZ,eAAAvY,EAAAjC,MAAAod,EAAA,iBACAsW,EAAAhb,eAAAmqJ,EAAA,8CCvCA,IAqBAopC,EArBoBnqM,EAAQ,KAqB5B/C,OAAA,CACApB,KAAA,sBACAyb,aAAA,SACAsrB,cAAA,CACAlP,OAAA,SAEAC,WAAA,KAEAgqD,aAAA,KACAysH,eAAA,KAEAxsH,aAAA,KACAysH,aAAA,KAGAC,cAAA,EAKAC,sBAAA,MAEAC,YAAA,EACAC,mBAAA,KAEAC,kBAAA,IAEAn5G,OAAA,QAIAvY,YAAA,EACA6E,gBAAA,GAGAt3C,eAAA,SAAAj+B,GAGA,OADAA,EAAAq8D,MAAA,KACAwlI,EAAAr1I,WAAAx4D,KAAA,iBAAAb,cAGAiiC,EAAAysK,EACA11K,EAAA93B,QAAA+gC,mBC/DA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAItBg8C,EAFch8C,EAAQ,KAEtBg8C,aAEAkiB,EAAcl+D,EAAQ,KAEtB6oB,EAAAq1C,EAAAr1C,aACA8D,EAAAuxC,EAAAvxC,UAIAgyG,EAFc3+H,EAAQ,KAEtB2+H,SAoBAirC,EAAA,4BAEA+gC,EAAA,EACAnqG,GAAA,IACAC,GAAA,QACAp7F,MAAA,EACAulM,QAAA,kBACC,CACDpqG,GAAA,IACAC,GAAA,SACAp7F,MAAA,EACAulM,QAAA,mBAEAC,EAAA,IAAA3pM,EAAAiZ,OAuFA,SAAA2wL,EAAAhtM,EAAA2P,EAAA86D,EAAAl0D,GACA,IAAAiH,EAAAxd,EAAA66C,cAAAlrC,GACA68L,EAAA/hI,EAAA9rE,IAAA,gBACA+tM,EAAAjiI,EAAA9rE,IAAA,cACA2tM,EAAA7hI,EAAA9rE,IAAA,2BAEA+qB,GADA+gD,EAAA9rE,IAAA,iBACA,GAAAwO,KAAA4U,GAAA,OACA6qL,EAAAniI,EAAA9rE,IAAA,wBACAimB,EAAA6lD,EAAA7lD,qBACAqoL,EAAA,CACAt9L,YACA6N,SACAitD,YACA/sB,WAAA19C,EAAA4P,cAAAD,EAAA,oBACAgP,MAAA3e,EAAA4P,cAAAD,EAAA,SACA+8L,aACAF,eACAC,sBAAAhiI,EAAA9rE,IAAA,yBACAiuM,oBACAljL,WACAw1F,eAAAt6F,EAAA6lD,EAAA,KACAsV,eAAAn7D,GAAA6lD,EAAA9rE,IAAA,kBACAwhB,GAAAsqD,EAAA7oD,WAAA,aAiBA,SAAA6oD,EAAA+hI,EAAAhvL,EAAAjH,EAAAg0J,GACA,IAKA2iC,EALAr4G,EAAAt+E,EAAAs+E,SACA83G,EAAAliI,EAAA9rE,IAAA,sBACA22B,EAAA/e,EAAAnN,SAAAwrF,aAAAr+E,EAAAnN,SAAAqgC,eACA0jK,EAAA73K,EAAAigE,cAAAjgE,EAAA6rC,YAAA,IACAisI,EAAA,IAAA5vL,EAAAq3E,EAAA8N,KAAA,GAGA,GAAAtgG,EAAAvF,QAAA6vM,GAAA,CACA,IAAAU,EAAA,CAAAC,EAAAh4K,EAAAq3K,EAAA,IAAAQ,EAAAG,EAAAh4K,EAAAq3K,EAAA,IAAAQ,GACAE,EAAA,GAAAA,EAAA,IAAAA,EAAAh8H,UACA67H,EAAAG,EAAAD,QAEAF,EADG,MAAAP,EACHW,EAAAh4K,EAAAq3K,GAAAQ,EACGX,EACHj2L,EAAAg3L,eAAA14G,EAAAttF,OAAA6lM,GAAAD,EAEA3vL,EAAAq3E,EAAA8N,IAGA4nE,EAAA2iC,iBAEAV,IACAjiC,EAAAijC,gBAAAhwL,EAAAq3E,EAAA8N,KAGA4nE,EAAAkjC,OAAAP,EAAA,IAAAA,EAAA,OAzCAQ,CAAAjjI,EAAA+hI,EAAAhvL,EAAAjH,EAAA02L,GAiDA,SAAAjtM,EAAA2P,EAAA6N,EAAAgvL,EAAAE,EAAAQ,EAAAO,EAAAb,EAAAr2L,EAAAg0J,GACA,IAAA11E,EAAAt+E,EAAAs+E,SACA84G,EAAAp3L,EAAAo3L,YACAC,EAAAzgM,KAAAyb,IAAApL,EAAAmwL,EAAAhrG,KACA9sE,EAAA71B,EAAA4P,cAAAD,EAAA,cAEAtN,EAAAvF,QAAA+4B,GACAA,IAAA16B,SAEA,MAAA06B,IACAA,EAAA,QAGAA,EAAA,CAAAA,MAOAA,EAAA83K,EAAApmM,OAAAwjB,EAAA8K,EAAA83K,EAAApmM,OAAAqmM,GACA/3K,EAAAg/D,EAAAttF,OAAAwjB,EAAA8K,EAAAg/D,EAAAttF,OAAAilM,EAAAoB,EAAAzgM,KAAAyb,IAAAskL,IACA3iC,EAAA10I,cAEA00I,EAAAsjC,YAAA,CAAAh4K,EAAA,GAAA+2K,EAAA/2K,EAAA,GAAA+2K,IAEA/3G,EAAAttF,SAAAgP,EAAA6rD,cAAA,KAAAqrI,EA1EAK,CAAA9tM,EAAA2P,EAAA6N,EAAAgvL,EAAAE,EAAAO,EAAAC,eAAAD,EAAAQ,OAAAb,EAAAr2L,EAAA02L,GA6EA,SAAAxiI,EAAAojI,EAAAnkL,EAAAnT,EAAAg0J,GAIA,IAAAwjC,EAAAtjI,EAAA9rE,IAAAmtK,IAAA,EAEAiiC,IACAhB,EAAA5nL,KAAA,CACAgW,MAAA0yK,EAAA1yM,QACAuuB,aAEAqjL,EAAAp8L,kBACAo9L,GAAAhB,EAAArqK,eACAqrK,GAAAF,EAAAt3L,EAAAs+E,SAAAttF,QAGAgjK,EAAAwjC,iBA5FAC,CAAAvjI,EAAAwiI,EAAAY,YAAAnkL,EAAAnT,EAAA02L,GACA,IAAAp3K,EAAAo3K,EAAAp3K,WACAiqD,EAAArV,EAAA9rE,IAAA,gBAOA,OALA0D,EAAAvF,QAAAgjF,KACAA,EAAA,CAAA/0D,EAAA+0D,EAAA,GAAAjqD,EAAA,IAAA9K,EAAA+0D,EAAA,GAAAjqD,EAAA,MA0FA,SAAA40C,EAAA50C,EAAArY,EAAAgvL,EAAAE,EAAA5sH,EAAAwsH,EAAAyB,EAAAb,EAAAM,EAAAj3L,EAAAg0J,GACA,IAAAojC,EAAAp3L,EAAAo3L,YACA94G,EAAAt+E,EAAAs+E,SACA44G,EAAAljC,EAAAkjC,OACAQ,EAAA9gM,KAAAG,IAAAuoB,EAAAg/D,EAAAttF,OAAAwmM,EAAA,GACAG,EAAAD,EAIA,GAAAzB,EAAA,CACA,IAAA2B,EAAAhhM,KAAAyb,IAAAskL,GACAX,EAAAlqM,EAAA5B,SAAAgqE,EAAA9rE,IAAA,0BACAyvM,GAAA,EAEA7B,EAAAngH,YAAA,OAAAmgH,EAAAtwM,OAAA,IACAmyM,GAAA,EACA7B,IAAApxM,MAAA,EAAAoxM,EAAAtwM,OAAA,IAGAswM,EAAAxhL,EAAAwhL,EAAA12K,EAAAg/D,EAAAttF,QACA,IAAA8mM,EAAAlhM,KAAAG,IAAA2gM,EAAA,EAAA1B,EAAA,GAGA+B,EAAAF,EAAA,IAAA7B,EAGAgC,EAAA1/K,EAAA29K,GACAgC,EAAAD,EAAA/B,EAAAiC,GAAAN,EAAAG,GAAAD,GAGAK,EAAAP,EAAAK,EAAAP,EAEAI,EAAAJ,EAAA,GADA1B,EAAAmC,EAAA,GAAAN,EAAAI,IAAA,IAEAF,EAAAF,EAAA,IAAA7B,EAEAgC,GAAA,UAAA/B,IACAgC,EAAAhB,EAAAiB,GAAAthM,KAAAyb,IAAA4kL,GAAAc,GAAAD,GAAA,GAGAH,EAAAM,EAAAH,EAAAC,EACA/jC,EAAAikC,cACAjkC,EAAAgiC,eAGA,IAAAoC,EAAAlB,GAAAS,EAAA,GACAU,EAAArkC,EAAAqkC,aAAA,GACAA,EAAAjB,EAAApmM,OAAAiW,EAAAmwL,EAAAhrG,IAAA,EACAisG,EAAA/5G,EAAAttF,OAAA,UAAA+kM,EAAAqC,EAAA,QAAArC,EAAAY,EAAAyB,EAAAzB,EAAA,EAEAptH,IACA8uH,EAAA,IAAA9uH,EAAA,GACA8uH,EAAA,IAAA9uH,EAAA,IAGA,IAAA+uH,EAAAtkC,EAAAskC,eAAA,GACAA,EAAAlB,EAAApmM,OAAAiW,EAAAmwL,EAAAjrG,IACAmsG,EAAAh6G,EAAAttF,OAAAiW,EAAAq3E,EAAA6N,IACA,IAAAosG,EAAAvkC,EAAAukC,aAAAzsM,EAAAlD,OAAA,GAA2Dqe,GAC3DsxL,EAAAj6G,EAAA8N,IAAA8qG,EAAAtgM,KAAAG,IAAAH,KAAAyb,IAAApL,EAAAq3E,EAAA8N,KAAAx1F,KAAAyb,IAAAgmL,EAAA/5G,EAAAttF,OAAAonM,IACAG,EAAAnB,EAAAhrG,IAAAnlF,EAAAmwL,EAAAhrG,IACA,IAAAnjB,EAAA+qF,EAAA/qF,UAAA,GAEAA,EAAAmuH,EAAAjrG,KAAAllF,EAAAmwL,EAAAjrG,IACAljB,EAAAmuH,EAAAhrG,IAAApsF,EAAAilI,OAAAmyD,EAAAhrG,IACAnjB,EAAAqV,EAAA6N,IAAA,EACAljB,EAAAqV,EAAA8N,IAAAnlF,EAAAq3E,EAAA8N,IAxJAosG,CAAAtkI,EAAA50C,EAAArY,EAAAgvL,EAAAE,EAAA5sH,EAAAwsH,EAAAW,EAAAc,eAAAd,EAAAC,eAAAD,EAAAO,gBAAAj3L,EAAA02L,GACAA,EAiCA,SAAAK,EAAAntJ,EAAAriD,GACA,OAAAqiD,EAAAo1C,cAAAp1C,EAAAghB,YAAAhhB,EAAAhlB,MAAA3qB,MAAA1S,KAwHA,SAAAkxM,EAAA/B,GACA,IAAAL,EAAAK,EAAAL,kBACAnvL,EAAAygC,EACA+uJ,EAAAvvJ,YAAAkvJ,EAAA,GAAAA,EAAA,EAAAA,IAAAK,EAAAtuL,OAOA,OANAlB,EAAA0H,KAAA,CACA43D,SAAA,IAEA,UAAAt/D,EAAA1f,MAAA0f,EAAArI,SAAA,CACA+U,eAAA,IAEA1M,EAGA,SAAAwxL,EAAAroI,EAAArwD,EAAA02L,EAAAxoL,GACA,IAAAyqL,EAAAtoI,EAAAuoI,kBACAt5K,EAAAo3K,EAAAp3K,WACAk4K,EAAAd,EAAAc,eACAa,EAAA3B,EAAA2B,aACA/5G,EAAAt+E,EAAAs+E,SACA25G,EAAAvB,EAAAuB,aAAA,EACAjnM,EAAA,EACAupJ,EAAAj7H,EAAAtf,EAAAs+E,SAAAttF,OAAAwmM,EAAA,EAAAd,EAAAV,aAmBA,IAlBA6C,EAAAxoI,EAAA,SAAAnpD,GACAA,EAAA4xL,0BAAA9nM,EACAkW,EAAA6xL,uBAAAd,EAEAjnM,EAAAinM,EACAe,EAAA9xL,EAAA,KAAA+xL,EAAAjoM,GAAA0lM,EAAAxoL,GAEA8qL,EAAA9xL,EAAA,MACA0d,MAAA,OACO8xK,EAAAxoL,EAAA,WACPyqL,EAAA36L,OAAAkJ,KAIAgyL,EAAAhyL,EAAAwvL,GACA1lM,MAGQA,EAAAinM,EAAqBjnM,IAAA,CAC7B,IAAAkW,EAAAuxL,EAAA/B,GACAxvL,EAAA4xL,0BAAA9nM,EACAkW,EAAA6xL,uBAAAd,EACAU,EAAAvgM,IAAA8O,GACA,IAAAhhB,EAAA+yM,EAAAjoM,GACAgoM,EAAA9xL,EAAA,CACAW,SAAA3hB,EAAA2hB,SACA+c,MAAA,OACK,CACLA,MAAA1+B,EAAA0+B,MACAzR,SAAAjtB,EAAAitB,UACKujL,EAAAxoL,GAGLhH,EAAArV,GAAA,YAAAsnM,GAAAtnM,GAAA,WAAAunM,GACAF,EAAAhyL,EAAAwvL,GAGA,SAAAuC,EAAAjoM,GACA,IAAA6W,EAAAwwL,EAAAzzM,QAGAsyM,EAAAR,EAAAQ,OACA1xM,EAAAwL,EAOA,OALA,UAAA0lM,EAAAR,sBAAAgB,EAAA,EAAAA,EAAA,KACA1xM,EAAAyyM,EAAA,EAAAjnM,GAGA6W,EAAAy2E,EAAAttF,OAAAupJ,GAAA/0J,EAAAyyM,EAAA,MAAAI,EAAA/5G,EAAAttF,OACA,CACA6W,WACA+c,MAAA8xK,EAAAY,YAAA1yM,QACAuuB,SAAAujL,EAAAvjL,UAIA,SAAAgmL,IACAN,EAAAxoI,EAAA,SAAAnpD,GACAA,EAAAlV,QAAA,cAIA,SAAAonM,IACAP,EAAAxoI,EAAA,SAAAnpD,GACAA,EAAAlV,QAAA,aAKA,SAAAqnM,EAAAhpI,EAAArwD,EAAA02L,EAAAxoL,GACA,IAAAyqL,EAAAtoI,EAAAuoI,kBACAU,EAAAjpI,EAAAkpI,oBAEAD,EAYAN,EAAAM,EAAA,MACAzxL,SAAA6uL,EAAA2B,aAAAzzM,QACAggC,MAAA8xK,EAAAY,YAAA1yM,QACAuuB,SAAAujL,EAAAvjL,UACKujL,EAAAxoL,IAfLorL,EAAAjpI,EAAAkpI,oBAAAd,EAAA/B,GACAiC,EAAAvgM,IAAAkhM,GACAN,EAAAM,EAAA,CACAzxL,SAAA6uL,EAAA2B,aAAAzzM,QACAggC,MAAA,MACAzR,SAAAujL,EAAAvjL,UACK,CACLyR,MAAA8xK,EAAAY,YAAA1yM,SACK8xM,EAAAxoL,GACLorL,EAAAznM,GAAA,YAWA,WACA5J,KAAA+J,QAAA,cAZAH,GAAA,WAeA,WACA5J,KAAA+J,QAAA,aAPAknM,EAAAI,EAAA5C,GAYA,SAAA8C,EAAAnpI,EAAAqmI,EAAAxoL,GACA,IAAAurL,EAAA3tM,EAAAlD,OAAA,GAAkC8tM,EAAA6B,cAClCmB,EAAArpI,EAAAspI,mBAEAD,EAaAV,EAAAU,EAAA,MACAjqL,MAAAgqL,GACK/C,EAAAxoL,IAdLwrL,EAAArpI,EAAAspI,mBAAA,IAAA9sM,EAAAsZ,KAAA,CACAyD,GAAA,EACA6F,MAAAgqL,EACAzmM,QAAA,EACAgF,MAAA,CACAwQ,OAAA,cACAC,KAAA,cACAX,UAAA,KAGAuoD,EAAAj4D,IAAAshM,IAQA,SAAAE,EAAAvpI,EAAArwD,EAAA02L,EAAAxoL,GAEA,GAAAwoL,EAAAP,WAAA,CACA,IAAAlwF,EAAA51C,EAAAwpI,oBACA5wH,EAAAn9E,EAAAlD,OAAA,GAAoC8tM,EAAAztH,WACpCqV,EAAAt+E,EAAAs+E,SACAqqB,EAAA+tF,EAAA/tF,eACAvvG,EAAAs9L,EAAAt9L,UAEA,GAAA6sG,EACAp5G,EAAAgiB,YAAAo3F,EAAA,CACAx2F,MAAAw5D,GACO0/B,EAAAvvG,OACF,CACL6vE,EAAAqV,EAAA8N,IAAA,EACA6Z,EAAA,IAAAp5G,EAAAsZ,KAAA,CACAsJ,MAAAw5D,IAGA5Y,EAAAuoI,kBAAAjjF,YAAA1P,GAEA51C,EAAAwpI,oBAAA5zF,EACA,IAAA//G,EAAA,GACAA,EAAAo4F,EAAA8N,IAAAsqG,EAAAztH,UAAAqV,EAAA8N,IACAv/F,EAAAqhB,EAAA,2BAAA+3F,EAAA,CACAx2F,MAAAvpB,GACOyiH,EAAAvvG,KAKP,SAAA2qC,EAAAt6C,EAAA2P,GACA,IAAA86D,EAAAzqE,EAAAs6C,aAAA3qC,GAGA,OAFA86D,EAAAxlD,0BACAwlD,EAAA7lD,qBACA6lD,EAGA,SAAAxlD,EAAAxH,GAEA,OACAlW,MAAAkW,EAAA4xL,0BACAxjL,MAAApO,EAAA6xL,wBAIA,SAAA1qL,IAEA,OAAApmB,KAAA+jB,YAAAqC,wBAAApmB,KAAAojB,WAAA,aAGA,SAAA6tL,EAAAhyL,EAAAwvL,GACAxvL,EAAA9U,IAAA,YAAAA,IAAA,UACA,IAAAwyB,EAAA8xK,EAAAY,YAAA1yM,QACA8xM,EAAAltH,gBAAAtiE,EAAArV,GAAA,sBACA5J,KAAA0mB,UAAA,CACAiW,MAAA,KAAAA,EAAA,OAAAA,EAAA,KACK,oBACF/yB,GAAA,oBACH5J,KAAA0mB,UAAA,CACAiW,QAAAhgC,SACK,oBAIL,SAAAk1M,EAAArwM,EAAAuW,EAAA02L,EAAAxoL,GAEA,IAAAmiD,EAAA,IAAAxjE,EAAA+Y,MAEA+yL,EAAA,IAAA9rM,EAAA+Y,MAeA,OAdAyqD,EAAAj4D,IAAAugM,GACAtoI,EAAAuoI,kBAAAD,EACAA,EAAA/pL,KAAA,WAAA8nL,EAAA4B,eAAA1zM,SAEA8xM,EAAAT,aACAyC,EAAAroI,EAAArwD,EAAA02L,GAEA2C,EAAAhpI,EAAArwD,EAAA02L,GAGA8C,EAAAnpI,EAAAqmI,EAAAxoL,GACA0rL,EAAAvpI,EAAArwD,EAAA02L,EAAAxoL,GACAmiD,EAAA0pI,oBAAAC,EAAAvwM,EAAAitM,GACArmI,EAAA4pI,sBAAAvD,EACArmI,EAqBA,SAAA6pI,EAAAzwM,EAAA2P,EAAAuvG,EAAAt4C,GAEA,IAAA+zF,EAAA/zF,EAAAspI,mBACAv1C,MAAApsJ,MAAAqZ,KAAA,MACA,IAAA8oL,EAAA,GACAtB,EAAAxoI,EAAA,SAAAnpD,GACAizL,EAAAzwM,KAAAwd,KAEAmpD,EAAAkpI,qBAAAY,EAAAzwM,KAAA2mE,EAAAkpI,qBAEAlpI,EAAAwpI,sBAAAlxF,EAAA,MACA78G,EAAAjF,KAAAszM,EAAA,SAAAjzL,GACAra,EAAAgiB,YAAA3H,EAAA,CACA0d,MAAA,OACK+jF,EAAAvvG,EAAA,WACLi3D,EAAAp/D,QAAAo/D,EAAAp/D,OAAA+M,OAAAqyD,OAGA5mE,EAAAo7C,iBAAAzrC,EAAA,MAGA,SAAA4gM,EAAAvwM,EAAAitM,GACA,OAAAjtM,EAAA4P,cAAAq9L,EAAAt9L,UAAA,oBAAAs9L,EAAAT,eAAAS,EAAAP,YAAAxkL,KAAA,KAGA,SAAAknL,EAAAxoI,EAAAtpE,EAAAC,GAEA8E,EAAAjF,KAAAwpE,EAAAuoI,kBAAAplH,WAAA,SAAA9iF,GACAA,IAAA2/D,EAAAspI,oBAAA5yM,EAAAzB,KAAA0B,EAAA0J,KAIA,SAAAsoM,EAAAtoM,EAAA0pM,EAAAC,EAAA3D,EAAAxoL,EAAAnnB,GACAqzM,GAAA1pM,EAAAke,KAAAwrL,GAEA1D,EAAAP,aAAAjoL,EACAmsL,GAAA3pM,EAAAke,KAAAyrL,GAEAA,GAAAxtM,EAAAqhB,EAAA,2BAAAxd,EAAA2pM,EAAA3D,EAAA/tF,eAAA+tF,EAAAt9L,UAAArS,GAIA,SAAA27G,EAAAryC,EAAArwD,EAAA02L,GACA,IAAAtuL,EAAAsuL,EAAAtuL,MACAhP,EAAAs9L,EAAAt9L,UACA86D,EAAAwiI,EAAAxiI,UAGAtrD,EAAAsrD,EAAAz/D,SAAA,aAAA20E,aAAA,WACA1gE,EAAAwrD,EAAAz/D,SAAA,sBAAA20E,eACAM,EAAAxV,EAAA7oD,WAAA,UACAwtL,EAAAxoI,EAAA,SAAAnpD,GAEAA,EAAA4gC,SAAA1/B,GACAlB,EAAArI,SAAA/S,EAAArF,SAAA,CACAgiB,KAAAL,EACAk2D,QAAAo4H,EAAAp4H,SACK11D,IACL/b,EAAAsjB,cAAAjJ,EAAAwB,GACAghE,IAAAxiE,EAAAu/D,OAAAiD,GACAxiE,EAAA0C,GAAA8sL,EAAA9sL,KAEA,IAAA0wL,EAAA,GACAC,EAAAv6L,EAAAs+E,SAAAi4G,UAAAG,EAAAC,eAAA,IACA+C,EAAArpI,EAAAspI,mBACArvE,EAAAovE,EAAA1hM,MAAAsiM,EAAApmI,EAAA9rD,EAAApI,EAAAhH,YAAAI,EAAAmhM,GACA1tM,EAAAsjB,cAAAupL,EAAAY,GAGA,SAAApC,EAAAsC,GACA,IAAAC,EAAA7jM,KAAAgQ,MAAA4zL,GAEA,OAAA5jM,KAAAyb,IAAAmoL,EAAAC,GAAA,KAAAA,EAAA7jM,KAAAg2C,KAAA4tJ,GAGA,IAAAnxK,EA5lBA9L,EAAA7Y,gBAAA,CACAld,KAAA,eACAsS,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAAjB,EAAAlH,KAAAkH,MACA1F,EAAAuP,EAAAC,UACA2wE,EAAA3hF,KAAA2kE,MACAwxB,EAAAplF,EAAAL,iBAEAkzD,IADAuyB,EAAAlrD,cACA24B,eACA6uI,EAAAt8G,EAAAz/D,KAAAssD,UACAjrE,EAAA,CACAilI,OAAA,CACAv1I,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aAEAoE,cACAnG,SAAAurF,EACA44G,eAAA,EAAA0D,EAAAziM,EAAAyiM,EAAAziM,EAAAyiM,EAAAhrM,OAAA,CAAAgrM,EAAAxiM,EAAAwiM,EAAAxiM,EAAAwiM,EAAA/qM,SACAk8D,eACAyyB,SAAAg4G,GAAAzqI,GACAurI,YAAAd,EAAA,EAAAzqI,IA+CA,OA7CApiE,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAAgB,GACA,GAAA3P,EAAAi6B,SAAAtqB,GAAA,CAIA,IAAA86D,EAAAnwB,EAAAt6C,EAAA2P,GACAs9L,EAAAD,EAAAhtM,EAAA2P,EAAA86D,EAAAl0D,GACAqwD,EAAAypI,EAAArwM,EAAAuW,EAAA02L,GACAjtM,EAAAo7C,iBAAAzrC,EAAAi3D,GACAlhE,EAAAiJ,IAAAi4D,GACAqyC,EAAAryC,EAAArwD,EAAA02L,MACKvjM,OAAA,SAAA00G,EAAAD,GACL,IAAAv3C,EAAAuZ,EAAA9kC,iBAAA8iE,GAEA,GAAAn+G,EAAAi6B,SAAAmkF,GAAA,CAKA,IAAA3zC,EAAAnwB,EAAAt6C,EAAAo+G,GACA6uF,EAAAD,EAAAhtM,EAAAo+G,EAAA3zC,EAAAl0D,GACA26L,EAAAX,EAAAvwM,EAAAitM,GAEArmI,GAAAsqI,IAAAtqI,EAAA0pI,sBACA5qM,EAAA6O,OAAAqyD,GACA5mE,EAAAo7C,iBAAAgjE,EAAA,MACAx3C,EAAA,MAGAA,EA4cA,SAAAA,EAAArwD,EAAA02L,GACA,IAAA/tF,EAAA+tF,EAAA/tF,eACAvvG,EAAAs9L,EAAAt9L,UACAu/L,EAAAtoI,EAAAuoI,kBACA/rM,EAAAgiB,YAAA8pL,EAAA,CACA9wL,SAAA6uL,EAAA4B,eAAA1zM,SACG+jH,EAAAvvG,GAEHs9L,EAAAT,aACAyC,EAAAroI,EAAArwD,EAAA02L,GAAA,GAEA2C,EAAAhpI,EAAArwD,EAAA02L,GAAA,GAGA8C,EAAAnpI,EAAAqmI,GAAA,GACAkD,EAAAvpI,EAAArwD,EAAA02L,GAAA,GA1dAkE,CAAAvqI,EAAArwD,EAAA02L,GAEArmI,EAAAypI,EAAArwM,EAAAuW,EAAA02L,GAAA,GAGAjtM,EAAAo7C,iBAAAgjE,EAAAx3C,GACAA,EAAA4pI,sBAAAvD,EAEAvnM,EAAAiJ,IAAAi4D,GACAqyC,EAAAryC,EAAArwD,EAAA02L,QAxBAvnM,EAAA6O,OAAAqyD,KAyBKryD,OAAA,SAAA5E,GACL,IAAAi3D,EAAAuZ,EAAA9kC,iBAAA1rC,GACAi3D,GAAA6pI,EAAAtwH,EAAAxwE,EAAAi3D,EAAA4pI,sBAAAtxF,eAAAt4C,KACKgD,UACLprE,KAAA2kE,MAAAnjE,EACAxB,KAAAkH,OAEA4O,QAAAjS,EAAAJ,KACAsS,OAAA,SAAAtL,EAAAtC,GACA,IAAAjB,EAAAlH,KAAAkH,MACA1F,EAAAxB,KAAA2kE,MAEAl6D,EAAAtK,IAAA,aACAqB,GACAA,EAAAs7C,kBAAA,SAAAsrB,GACA6pI,EAAAzwM,EAAA4mE,EAAAj3D,UAAA1G,EAAA29D,KAIAlhE,EAAAkzD,eA4gBAjiC,EAAA93B,QAAA+gC,mBChpBA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAAkvM,EAAuBlvM,EAAQ,KAE/BmvM,EAAuBnvM,EAAQ,KAE/BqkH,EAAiBrkH,EAAQ,KAqBzB4xB,EAAAlZ,eAAAw2L,GACAt9K,EAAAhb,eAAAu4L,GACAv9K,EAAAtb,kBAAA+tG,EAAA,gCCnCA,IAAA+qF,EAAapvM,EAAQ,KAEEA,EAAQ,KAuD/BqY,SAAA,UACApK,OAvBA,SAAAlH,EAAAtC,GACA,IAAA4qM,EAAA,GAkBA,OAjBAtoM,EAAAuD,cAAA,sBAAAk2C,EAAAj2B,GACA,IAAAy7C,EAAA,IAAAopI,EAAA5uJ,EAAAz5C,EAAAtC,GACAuhE,EAAAnpE,KAAA,UAAA0tB,EACAy7C,EAAAjgE,OAAAy6C,EAAA/7C,GACA+7C,EAAAxzC,iBAAAg5D,EACAqpI,EAAAtxM,KAAAioE,KAEAj/D,EAAA+H,WAAA,SAAAzB,GACA,kBAAAA,EAAA5Q,IAAA,qBACA,IAAA8mF,EAAAx8E,EAAA8oB,gBAAA,CACAzqB,SAAA,aACAC,MAAAgI,EAAA5Q,IAAA,mBACA8G,GAAA8J,EAAA5Q,IAAA,kBACO,GACP4Q,EAAAL,iBAAAu2E,KAAAv2E,oBAGAqiM,GAKA52L,WAAA22L,EAAA52M,UAAAigB,8BC3DA,IAAA62L,EAAiBtvM,EAAQ,KAEzB++F,EAAiB/+F,EAAQ,KAIzB+1B,EAFc/1B,EAAQ,KAEtB+1B,cAIA76B,EAFY8E,EAAQ,KAEpB9E,KAgCA,SAAAk0M,EAAA5uJ,EAAAz5C,EAAAtC,GAKAnI,KAAAk7C,UAAA,SAQAl7C,KAAAmc,WAAA,WAMAnc,KAAAizM,MAAA,KAMAjzM,KAAA4jC,MAEA5jC,KAAAy4L,MAAAv0I,EAAAz5C,EAAAtC,GAMAnI,KAAAyQ,MAAAyzC,EAGA4uJ,EAAA52M,UAAA,CACAqD,KAAA,aACAw7F,oBAAA,EACAp9F,YAAAm1M,EAUAra,MAAA,SAAAv0I,EAAAz5C,EAAAtC,GACA,IAAA6jC,EAAAhsC,KAAAk7C,UACAyG,EAAA,IAAAqxJ,EAAAhnK,EAAAy2D,EAAA3+C,mBAAAI,GAAA,MAAAA,EAAA/jD,IAAA,QAAA+jD,EAAA/jD,IAAA,aACAmkD,EAAA,aAAA3C,EAAApiD,KACAoiD,EAAA2gB,OAAAhe,GAAAJ,EAAA/jD,IAAA,eACAwhD,EAAA0gB,QAAAne,EAAA/jD,IAAA,WACAwhD,EAAAnpB,OAAA0rB,EAAA/jD,IAAA,UACA+jD,EAAAvC,OACAA,EAAAlxC,MAAAyzC,EACAvC,EAAAjxC,iBAAA1Q,KACAA,KAAAizM,MAAAtxJ,GAQAz2C,OAAA,SAAAT,EAAAtC,GACAsC,EAAA+H,WAAA,SAAAzB,GACA,GAAAA,EAAAL,mBAAA1Q,KAAA,CACA,IAAAwB,EAAAuP,EAAAC,UACApS,EAAA4C,EAAA8pC,aAAAtrC,KAAAk7C,WAAA,YAAAlP,GACAhsC,KAAAizM,MAAAt2K,MAAA02D,oBAAA7xF,EAAAwqC,IACShsC,MACTyiG,EAAAl/C,gBAAAvjD,KAAAizM,MAAAt2K,MAAA38B,KAAAizM,MAAAxiM,SAEKzQ,OASLyJ,OAAA,SAAAy6C,EAAA/7C,GACAnI,KAAA4jC,MAAAnK,EAAA,CACAzqB,KAAAk1C,EAAA/jD,IAAA,QACA+O,IAAAg1C,EAAA/jD,IAAA,OACAgP,MAAA+0C,EAAA/jD,IAAA,SACAiP,OAAA80C,EAAA/jD,IAAA,UACAsH,MAAAy8C,EAAA/jD,IAAA,SACAuH,OAAAw8C,EAAA/jD,IAAA,WACK,CACLsH,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,cAGA3M,KAAAkzM,eAMAlwH,QAAA,WACA,OAAAhjF,KAAA4jC,OAMAsvK,YAAA,WACA,IAAAn0L,EAAA/e,KAAA4jC,MACA+d,EAAA3hD,KAAAizM,MACArvI,EAAAjiB,EAAAiiB,eACAjrB,EAAAirB,EAAA,GAAA7kD,EAAAtX,OAAA,GAAAsX,EAAArX,QACAumB,EAAA0zB,EAAAkxB,QAAA,IACAlxB,EAAA8B,UAAA9K,EAAA1qB,GAAA0qB,EAAA,EAAA1qB,IAEAjuB,KAAAmzM,qBAAAxxJ,EAAAiiB,EAAA7kD,EAAA/O,EAAA+O,EAAA9O,IAOAkjM,qBAAA,SAAAxxJ,EAAA4tD,GACA,IAAAztD,EAAAH,EAAAP,YACAgyJ,EAAAtxJ,EAAA,GAAAA,EAAA,GACA8hB,EAAAjiB,EAAAiiB,eACAjiB,EAAAo1C,cAAAnzB,EAAA,SAAAnB,GACA,OAAAA,EAAA8sC,GACK,SAAA9sC,GACL,OAAA2wI,EAAA3wI,EAAA8sC,GAEA5tD,EAAA8tD,aAAA7rC,EAAA,SAAAnB,GACA,OAAAA,EAAA8sC,GACK,SAAA9sC,GACL,OAAA2wI,EAAA3wI,EAAA8sC,IASAtS,QAAA,WACA,OAAAj9F,KAAAizM,OAQAhoK,YAAA,WACA,OAAAjrC,KAAAizM,OAMA73G,QAAA,WACA,OAAAp7F,KAAAizM,QAMA33G,eAAA,WACA,OACAI,SAAA,CAAA17F,KAAAi9F,aAUAtsF,aAAA,SAAA0a,GACA,IAAAtM,EAAA/e,KAAAgjF,UACArhC,EAAA3hD,KAAAi9F,UAGA,qBAFAt7C,EAAAnpB,OAGAmpB,EAAAzgB,QAAAygB,EAAA8tD,aAAApkF,EAAA,MAAAA,EAAA,IAAAtM,EAAA9O,GAAAob,EAAA,IAAAtM,EAAA9O,EAAA8O,EAAArX,OAEAi6C,EAAAzgB,QAAAygB,EAAA8tD,aAAApkF,EAAA,MAAAA,EAAA,IAAAtM,EAAA9O,GAAAob,EAAA,IAAAtM,EAAA9O,EAAA8O,EAAArX,QAQAm7D,YAAA,SAAAx3C,GACA,IAAAs2B,EAAA3hD,KAAAi9F,UACA,OAAAt7C,EAAAihB,YAAAjhB,EAAA8tD,aAAApkF,EAAA,eAAAs2B,EAAAnpB,OAAA,SASAsqD,YAAA,SAAApgF,GACA,IAAAi/C,EAAA3hD,KAAAi9F,UACAl+E,EAAA/e,KAAAgjF,UACA6xB,EAAA,GACA5mF,EAAA,eAAA0zB,EAAAnpB,OAAA,IAQA,OANA91B,aAAArG,QACAqG,IAAA,IAGAmyG,EAAA5mF,GAAA0zB,EAAAo1C,cAAAp1C,EAAAghB,aAAAjgE,IACAmyG,EAAA,EAAA5mF,GAAA,IAAAA,EAAAlP,EAAA9O,EAAA8O,EAAArX,OAAA,EAAAqX,EAAA/O,EAAA+O,EAAAtX,MAAA,EACAotG,IAGA,IAAAzzE,EAAA0xK,EACA36K,EAAA93B,QAAA+gC,mBC3QA,IAAAv9B,EAAaH,EAAQ,KAErB0+D,EAAW1+D,EAAQ,KA+BnBsvM,EAAA,SAAAhnK,EAAArP,EAAAqvI,EAAAjoH,EAAAnkC,GACAwiD,EAAA/kE,KAAA2C,KAAAgsC,EAAArP,EAAAqvI,GAUAhsK,KAAAT,KAAAwkD,GAAA,QAUA/jD,KAAA4f,YAAA,SAQA5f,KAAAw4B,OAAA,MAGAw6K,EAAA92M,UAAA,CACAyB,YAAAq1M,EAMAviM,MAAA,KAMAmzD,aAAA,WACA,IAAAhkD,EAAA5f,KAAA4f,SACA,cAAAA,GAAA,WAAAA,GAMAijD,YAAA,SAAAx3C,EAAAe,GACA,OAAApsB,KAAA0Q,iBAAAmyD,YAAAx3C,EAAAe,GAAA,IASA2qE,cAAA,KAOA0Y,aAAA,MAEA5rG,EAAA9C,SAAAiyM,EAAA5wI,GACA,IAAAhhC,EAAA4xK,EACA76K,EAAA93B,QAAA+gC,mBC3GA,IAAAv9B,EAAaH,EAAQ,KAErB6oE,EAAkB7oE,EAAQ,KAE1BkB,EAAclB,EAAQ,KAEtB2vM,EAAuB3vM,EAAQ,KAE/BkuE,EAAeluE,EAAQ,KAqBvBwoK,EAAA,wCAEAonC,EAAA1hI,EAAAjxE,OAAA,CACApB,KAAA,aACAuyE,iBAAA,oBACAjgE,OAAA,SAAAqyC,EAAAz5C,EAAAtC,EAAAsJ,GACA,IAAAvK,EAAAlH,KAAAkH,MACAA,EAAAkzD,YACA,IAAAp7C,EAAAq0L,EAAAr0L,OAAAklC,GACA4pB,EAAA,IAAAvB,EAAAroB,EAAAllC,GACAnb,EAAAjF,KAAAstK,EAAAp+F,EAAA39D,IAAA29D,GACA5mE,EAAAiJ,IAAA29D,EAAAb,YAEA/oB,EAAA/jD,IAAAozM,mBACAvzM,KAAA,WAAAkkD,GAGAovJ,EAAA/6I,UAAAv4D,KAAA,SAAAkkD,EAAAz5C,EAAAtC,EAAAsJ,IAEA+6J,WAAA,SAAAtoH,GACA,IAAAvC,EAAAuC,EAAAvC,KAEA,IAAAA,EAAAhlB,MAAAwnB,UAAA,CAIA,IAAAsoH,EAAAvoH,EAAA13C,SAAA,aACAuhE,EAAA0+F,EAAAjgK,SAAA,aACAqT,EAAAkuD,EAAA5tE,IAAA,SACAusK,EAAA3+F,EAAA5tE,IAAA,SACAusK,eAAArwK,MAAAqwK,EAAA,CAAAA,GAWA,IAVA,IAAAt9D,EAAAlrD,EAAAxzC,iBAAAsyE,UACApf,EAAAjiB,EAAAiiB,eACA+yG,EAAA,GACAhK,EAAA,EACAzpG,EAAAvhB,EAAAmhB,eAAA,CACAC,UAAA0pG,IAEA9tG,EAAA,GACAC,EAAA,GAEArhE,EAAA,EAAmBA,EAAA2lE,EAAAzlE,SAAwBF,EAAA,CAC3C,IAAA0wE,EAAAtsB,EAAAo1C,cAAA7zB,EAAA3lE,GAAAklE,OAEAmB,GACAjF,EAAA,GAAAsP,EACAtP,EAAA,GAAAywC,EAAAn/F,EACA2uD,EAAA,GAAAqP,EACArP,EAAA,GAAAwwC,EAAAn/F,EAAAm/F,EAAA1nG,SAEAi3D,EAAA,GAAAywC,EAAAp/F,EACA2uD,EAAA,GAAAsP,EACArP,EAAA,GAAAwwC,EAAAp/F,EAAAo/F,EAAA3nG,MACAm3D,EAAA,GAAAqP,GAGA,IAAA2+F,EAAAD,IAAAD,EAAAjvK,OACAk5K,EAAA/J,GAAA+J,EAAA/J,IAAA,GACA+J,EAAA/J,GAAAnrK,KAAA,IAAAmD,EAAAuZ,KAAAvZ,EAAA0iB,qBAAA,CACAE,MAAA,CACAC,GAAAk3C,EAAA,GACAh3C,GAAAg3C,EAAA,GACAj3C,GAAAk3C,EAAA,GACAh3C,GAAAg3C,EAAA,IAEA7uD,MAAA,CACA8P,aAEA9U,QAAA,MAIA,IAAAxN,EAAA,EAAmBA,EAAAo5K,EAAAl5K,SAAuBF,EAC1CyC,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAo3J,EAAAp5K,GAAA,CACAwS,MAAA,CACAwQ,OAAAmsJ,EAAAnvK,EAAAmvK,EAAAjvK,QACAolC,SAAAkrC,EAAA6hF,YAAA/vI,GACAA,aAEA9U,QAAA,SAKAq2B,EAAAkyK,EACAn7K,EAAA93B,QAAA+gC,mBClHA,IAAAv9B,EAAaH,EAAQ,KAErBc,EAAqBd,EAAQ,KAE7B28H,EAAuB38H,EAAQ,KAE/B48H,EAA2B58H,EAAQ,KAqBnC68H,EAAA/7H,EAAA7D,OAAA,CACApB,KAAA,aACAinC,WAAA,MAKAmb,KAAA,KAKAjxC,iBAAA,KAKA2sE,iBAAA,WACA,OAAAr9E,QAgDA6D,EAAA7F,MAAAuiI,EAAArkI,UAAAokI,GACAD,EAAA,SAAAE,EALA,SAAApwD,EAAAnkE,GACA,OAAAA,EAAAzM,OAAAyM,EAAAxK,KAAA,qBA1CA,CACAwN,KAAA,KACAE,IAAA,KACAC,MAAA,KACAC,OAAA,KACA7P,KAAA,QACAqgB,SAAA,SACA4Y,OAAA,aACA5B,SAAA,CACAI,MAAA,EACAb,UAAA,CACA1uB,MAAA,EACAlI,KAAA,UAMA02B,QAAA,CACAe,MAAA,GAEAgB,SAAA,CACAhB,MAAA,EACAv5B,OAAA,EACA04B,UAAA,CACA1uB,MAAA,IAGAw5H,UAAA,CACAjqG,MAAA,EACA/G,SAAA,QAEA4G,UAAA,CACAG,MAAA,EACAb,UAAA,CACA52B,KAAA,SACA82E,QAAA,OAWA,IAAAj1C,EAAAm/F,EACApoG,EAAA93B,QAAA+gC,mBChGA,IAAAv9B,EAAaH,EAAQ,KAIrBsvB,EAFatvB,EAAQ,KAErBsvB,UAEAwgL,EAAkB9vM,EAAQ,KAE1B+vM,EAA0B/vM,EAAQ,KAqBlC9E,EAAAiF,EAAAjF,KACAgD,EAAAiC,EAAAjC,MACAykC,EAAArT,IAmHA,SAAA0gL,EAAAn3G,EAAAo3G,EAAAC,EAAAC,EAAAC,GACA,IAAAnyJ,EAAA46C,EAAA56C,KAEA,IAAAA,EAAAhlB,MAAAwnB,WAAAxC,EAAA+gB,YAAAixI,GAIA,GAAAp3G,EAAAD,cAAA,CAMA,IAAAknB,EAuBA,SAAAlkH,EAAAi9F,GACA,IAAA56C,EAAA46C,EAAA56C,KACA3V,EAAA2V,EAAA3V,IACA+nK,EAAAz0M,EACA00M,EAAA,GACAx6J,EAAA5qB,OAAA6qB,UACAC,GAAA,EA+CA,OA9CA96C,EAAA29F,EAAAhI,aAAA,SAAAp7E,EAAA8U,GACA,IACAgmL,EACAxhL,EAFAgb,EAAAt0B,EAAAnI,UAAAs6B,aAAAU,GAAA,GAIA,GAAA7yB,EAAA+zB,mBAAA,CACA,IAAA/vC,EAAAgc,EAAA+zB,mBAAAO,EAAAnuC,EAAAqiD,GACAlvB,EAAAt1B,EAAAs1B,YACAwhL,EAAA92M,EAAA+2M,iBACK,CAML,KALAzhL,EAAAtZ,EAAAnI,UAAAqoC,iBAAA5L,EAAA,GAAAnuC,EAGA,aAAAqiD,EAAApiD,KAAA,UAEA9B,OACA,OAGAw2M,EAAA96L,EAAAnI,UAAA7Q,IAAAstC,EAAA,GAAAhb,EAAA,IAGA,SAAAwhL,GAAAnmL,SAAAmmL,GAAA,CAIA,IAAAt6J,EAAAr6C,EAAA20M,EACA73K,EAAAztB,KAAAyb,IAAAuvB,GAEAvd,GAAAod,KACApd,EAAAod,GAAAG,GAAA,GAAAD,EAAA,KACAF,EAAApd,EACAsd,EAAAC,EACAo6J,EAAAE,EACAD,EAAAv2M,OAAA,GAGAmB,EAAA6zB,EAAA,SAAAthB,GACA6iM,EAAAvyM,KAAA,CACA2W,YAAAe,EAAAf,YACAnH,gBAAAE,EACAA,UAAAgI,EAAAnI,UAAA8mC,YAAA3mC,WAKA,CACA6iM,eACAD,eA9EAI,CAAAR,EAAAp3G,GACAy3G,EAAAxwF,EAAAwwF,aACAD,EAAAvwF,EAAAuwF,YAGAC,EAAA,UAAAF,EAAA17L,aACAvU,EAAAlD,OAAAmzM,EAAAE,EAAA,KAKAH,GAAAt3G,EAAAR,MACAp6C,EAAA+gB,YAAAqxI,IAAA,MAAAA,IACAJ,EAAAI,GAIAH,EAAAQ,YAAA73G,EAAAo3G,EAAAK,EAAAF,GAGAF,EAAAS,YAAA93G,EAAAinB,EAAAuwF,QAzBAH,EAAAQ,YAAA73G,EAAAo3G,GAuFA,SAAAS,EAAAE,EAAA/3G,EAAAj9F,EAAA00M,GACAM,EAAA/3G,EAAAz+F,KAAA,CACAwB,QACA00M,gBAIA,SAAAK,EAAAE,EAAAh4G,EAAAinB,EAAAlkH,GACA,IAAA00M,EAAAxwF,EAAAwwF,aACAryJ,EAAA46C,EAAA56C,KACAuC,EAAAvC,EAAAlxC,MACA8hE,EAAAgqB,EAAAhqB,iBAGA,GAAAgqB,EAAAV,gBAAAm4G,EAAAv2M,OAAA,CAIA,IAAAy9F,EAAAqB,EAAA3xF,SAAA6F,MACAuqF,EAAAw4G,EAAAj5G,QAAAW,GACAs5G,EAAAD,EAAA13M,IAAAm+F,GAEAw5G,IACAA,EAAAD,EAAA13M,IAAAm+F,GAAA,CACAy5G,WAAAv5G,EAAAj0F,GACAytM,cAAAx5G,EAAAtlF,eACAq/K,aAAA/5F,EAAA37F,KACAo1M,iBAAAz5G,EAAApyF,SACA8rM,WAAA,IAEAL,EAAAjnM,KAAA7L,KAAA+yM,IAGAA,EAAAI,WAAAnzM,KAAA,CACAkiH,QAAAhiE,EAAA3V,IACAs6C,UAAApiC,EAAAtuC,eACAmuC,SAAAG,EAAA3kD,KACA+nF,OAAApjC,EAAAj9C,GACA3H,QAKAu1M,cAAA,CACAhoL,UAAA0lD,EAAApyE,IAAA,mBACAkxE,UAAAkB,EAAApyE,IAAA,oBAEAgjG,kBAAA6wG,EAAAr3M,WA6GA,SAAAm4M,EAAAv4G,GACA,IAAAr4C,EAAAq4C,EAAA56C,KAAAlxC,MACAb,EAAA,GACAo8B,EAAAp8B,EAAA+zG,QAAApnB,EAAA56C,KAAA3V,IAIA,OAHAp8B,EAAA02E,UAAA12E,EAAAo8B,EAAA,aAAAkY,EAAAtuC,eACAhG,EAAAugE,SAAAvgE,EAAAo8B,EAAA,YAAAkY,EAAA3jD,KACAqP,EAAA03E,OAAA13E,EAAAo8B,EAAA,UAAAkY,EAAAj9C,GACA2I,EAGA,SAAAmlM,EAAA1pL,GACA,OAAAA,GAAA,MAAAA,EAAA,IAAA+B,MAAA/B,EAAA,WAAAA,EAAA,IAAA+B,MAAA/B,EAAA,IAGA8M,EAAA93B,QA/VA,SAAAoR,EAAAhH,EAAAtC,GACA,IAAA+nI,EAAAz+H,EAAAy+H,YACA7kH,EAAA,CAAA5Z,EAAAzB,EAAAyB,EAAAxB,GACAzF,EAAAiH,EACAqG,EAAArG,EAAAqG,gBAAAjU,EAAA7E,KAAAmJ,EAAA2P,eAAA3P,GACAi8E,EAAA35E,EAAA5B,aAAA,eAAAu7E,iBAGA,GAAAA,EAAA,CAIA2wH,EAAA1pL,KAGAA,EAAAooL,EAAA,CACAr7L,YAAA5N,EAAA4N,YAGAjH,UAAA3G,EAAA2G,WACK1G,GAAA4gB,OAGL,IAAA2pL,EAAAD,EAAA1pL,GAKA4pL,EAAAzqM,EAAA8vF,SACAA,EAAAlW,EAAAkW,SACA46G,EAAA,UAAAhlE,GAAA6kE,EAAA1pL,GACAyoL,EAAA,GACAQ,EAAA,GACAC,EAAA,CACAjnM,KAAA,GACAzQ,IAAA,IAEA+2M,EAAA,CACAQ,YAAAxyM,EAAAwyM,EAAAE,GACAD,YAAAzyM,EAAAyyM,EAAAE,IAGA31M,EAAAwlF,EAAAsW,YAAA,SAAA9vF,EAAAowF,GAEA,IAAAm6G,EAAAH,GAAApqM,EAAA+F,aAAA0a,GACAzsB,EAAAwlF,mBAAA4W,GAAA,SAAAuB,EAAAz+F,GACA,IAAA6jD,EAAA46C,EAAA56C,KACAyzJ,EAwRA,SAAAH,EAAA14G,GACA,QAAAh/F,EAAA,EAAiBA,GAAA03M,GAAA,IAAAx3M,OAAkCF,IAAA,CACnD,IAAA63M,EAAAH,EAAA13M,GAEA,GAAAg/F,EAAA56C,KAAA3V,MAAAopK,EAAAzxF,SAAApnB,EAAA56C,KAAAlxC,MAAAmF,iBAAAw/L,EAAA9uH,UACA,OAAA8uH,GA7RAC,CAAAJ,EAAA14G,GAEA,IAAA24G,GAAAC,KAAAF,GAAAG,GAAA,CACA,IAAA1yM,EAAA0yM,KAAA91M,MAEA,MAAAoD,GAAAsyM,IACAtyM,EAAAi/C,EAAAkhB,YAAAx3C,IAGA,MAAA3oB,GAAAgxM,EAAAn3G,EAAA75F,EAAAkxM,GAAA,EAAAE,QAKA,IAAAwB,EAAA,GAsBA,OArBA12M,EAAA07F,EAAA,SAAAi7G,EAAAC,GACA,IAAA54G,EAAA24G,EAAA34G,UAEAA,IAAA03G,EAAAkB,IACA52M,EAAAg+F,EAAAtC,SAAA,SAAAm7G,EAAAC,GACA,IAAAC,EAAArB,EAAAoB,GAEA,GAAAD,IAAAF,GAAAI,EAAA,CACA,IAAAjzM,EAAAizM,EAAAr2M,MACAs9F,EAAAC,SAAAn6F,EAAA6yM,EAAA5zJ,KAAAhlB,MAAA3qB,MAAA4qF,EAAAC,OAAAn6F,EAAAoyM,EAAAW,GAAAX,EAAAS,MACAD,EAAAC,EAAAz3M,KAAA4E,OAKA9D,EAAA02M,EAAA,SAAA5yM,EAAA8yM,GACA9B,EAAAp5G,EAAAk7G,GAAA9yM,EAAAkxM,GAAA,EAAAE,KA0JA,SAAAQ,EAAAh6G,EAAAw5G,GACA,IAAA8B,EAAA9B,EAAAx5G,SAAA,GAEA17F,EAAA07F,EAAA,SAAAiC,EAAAz+F,GACA,IAAAkO,EAAAuwF,EAAAhqB,iBAAAvmE,OACA6pM,EAAAvB,EAAAx2M,GAEA+3M,IACAt5G,EAAAC,YAAAxwF,EAAAqP,OAAA,QACArP,EAAA1M,MAAAu2M,EAAAv2M,MAEA0M,EAAAm3F,mBAAA0yG,EAAA7B,cAAA,IAAAr3M,UAMA4/F,EAAAC,YAAAxwF,EAAAqP,OAAA,QAIA,SAAArP,EAAAqP,QAAAu6L,EAAAn0M,KAAA,CACAkiH,QAAApnB,EAAA56C,KAAA3V,IACAs6C,UAAAiW,EAAA56C,KAAAlxC,MAAAmF,eACAtW,MAAA0M,EAAA1M,UAhLAw2M,CAAAxB,EAAAh6G,EAAAw5G,GAqLA,SAAAS,EAAAlpL,EAAA5Z,EAAAqG,GAEA,IAAAi9L,EAAA1pL,IAAAkpL,EAAAjnM,KAAA7P,OAAA,CAWA,IAAA0+D,IAAAo4I,EAAAjnM,KAAA,GAAAsnM,WAAA,QAA+DzxG,mBAAA,WAC/DrrF,EAAA,CACAvY,KAAA,UACAwU,eAAA,EACA/D,EAAAqb,EAAA,GACApb,EAAAob,EAAA,GACAq4F,cAAAjyG,EAAAiyG,cACA9jG,SAAAnO,EAAAmO,SACA3O,gBAAAkrD,EAAAlrD,gBACAE,UAAAgrD,EAAAhrD,UACAiH,YAAA+jD,EAAA/jD,YACAm8L,iBAAAjnM,YArBAwK,EAAA,CACAvY,KAAA,YAxLAw2M,CAAAxB,EAAAlpL,EAAA5Z,EAAAqG,GAgNA,SAAAwiF,EAAAxiF,EAAA3P,GAIA,IAAAf,EAAAe,EAAA2D,QAEAkqM,EAAA3vK,EAAAj/B,GAAA,8BACA6uM,EAAA5vK,EAAAj/B,GAAA,6BAGAxI,EAAA07F,EAAA,SAAAiC,EAAAz+F,GACA,IAAAkO,EAAAuwF,EAAAhqB,iBAAAvmE,OACA,SAAAA,EAAAqP,QAAAzc,EAAAoN,EAAAm3F,kBAAA,SAAAtuF,GACA,IAAA/W,EAAA+W,EAAAuD,YAAA,MAAAvD,EAAA1D,UACA8kM,EAAAn4M,GAAA+W,MAIA,IAAAqhM,EAAA,GACAC,EAAA,GACAtyM,EAAAjF,KAAAo3M,EAAA,SAAAnhM,EAAA/W,IACAm4M,EAAAn4M,IAAAq4M,EAAA10M,KAAAoT,KAEAhR,EAAAjF,KAAAq3M,EAAA,SAAAphM,EAAA/W,IACAk4M,EAAAl4M,IAAAo4M,EAAAz0M,KAAAoT,KAEAshM,EAAA14M,QAAA0K,EAAA2P,eAAA,CACAvY,KAAA,WACAwU,eAAA,EACAU,MAAA0hM,IAEAD,EAAAz4M,QAAA0K,EAAA2P,eAAA,CACAvY,KAAA,YACAwU,eAAA,EACAU,MAAAyhM,IAjPAE,CAAA97G,EAAAxiF,EAAA3P,GACA2rM,qBC/IA,IAuGA1yK,EAvGc19B,EAAQ,KAqBtB4Y,qBAAA,CACA/c,KAAA,cACA6kF,iBAAA,KACA99C,cAAA,CAEAtP,KAAA,OAEAg1G,UAAA,KAEAxzH,OAAA,EACAD,EAAA,GACAhZ,KAAA,OAGAw8F,MAAA,EACAF,gBAAA,EACAv8F,MAAA,KACA+b,OAAA,KAaA8oE,KAAA,GAGAx6E,UAAA,KACA+9E,wBAAA,IACAvxD,UAAA,CACAhW,MAAA,OACA1Y,MAAA,EACAlI,KAAA,SAEA82B,YAAA,CACAlW,MAAA,yBAEAyX,MAAA,CACAZ,MAAA,EACAq6C,UAAA,KAEAxkD,UAAA,OAEA+M,OAAA,EACAzZ,MAAA,OACAymC,QAAA,UACAz5C,gBAAA,OAEA6oB,YAAA,KACAk8G,YAAA,EACAjzD,WAAA,EACAC,YAAA,QAMA6iC,OAAA,CACA/qF,MAAA,EACAq/K,KAAA,2MAEAt3J,KAAA,GAEAnlB,OAAA,GAGAzZ,MAAA,OACA8+D,WAAA,EACAC,YAAA,OACAC,cAAA,EACAC,cAAA,EAEAt6E,SAAA,OAKAqzB,EAAA93B,QAAA+gC,mBCxGA,IAAA9L,EAAc5xB,EAAQ,KAEtB4yM,EAAqB5yM,EAAQ,KAqB7B6yM,EAAAjhL,EAAA/Y,oBAAA,CACAhd,KAAA,cACAsS,OAAA,SAAA+oF,EAAAnwF,EAAAtC,GACA,IAAAwyF,EAAAlwF,EAAA5B,aAAA,WACAmjI,EAAApxC,EAAAz6F,IAAA,cAAAw6F,KAAAx6F,IAAA,gCAGAm2M,EAAAv6L,SAAA,cAAA5T,EAAA,SAAA+nI,EAAAx3H,EAAAZ,GAEA,SAAAk0H,IAAA,UAAAkE,GAAAlE,EAAAnrI,QAAAqvI,IAAA,IACAp4H,EAAA,CACAvY,KAAA,oBACA2wI,cACAlgI,EAAA0I,KAAAg+C,QACAzmD,EAAAyI,KAAAo+C,aASA/gD,OAAA,SAAAtL,EAAAtC,GACAmuM,EAAAvlE,WAAA5oI,EAAA2D,QAAA,eACAyqM,EAAA/9I,WAAAx4D,KAAA4I,OAAA,SAAAzJ,YAMA2W,QAAA,SAAArL,EAAAtC,GACAmuM,EAAAvlE,WAAA,cAAA5oI,GACAouM,EAAA/9I,WAAAx4D,KAAA4I,OAAA,UAAAzJ,cAGAiiC,EAAAm1K,EACAp+K,EAAA93B,QAAA+gC,mBC5DA,IAAAx8B,EAAclB,EAAQ,KAEtB+8G,EAAsB/8G,EAAQ,KAE9BstI,EAAiBttI,EAAQ,KAEzB2vM,EAAuB3vM,EAAQ,KAE/BkuE,EAAeluE,EAAQ,KAqBvB8yM,EAAA,UACAC,EAAA,mBACAC,EAAAj2F,EAAA9/G,OAAA,CAIAshH,aAAA,SAAAtf,EAAArjG,EAAA4kD,EAAAquB,EAAApqE,GACA,IAAAw5C,EAAAuC,EAAAvC,KACA/2C,EAAA+2C,EAAAjxC,iBACA4vG,EAAAtpB,EAAApsF,EAAA,EAAA+rM,EAAAh1J,IACAwvF,EAAAvmI,EAAAk4E,YAAAxjF,GAAA,GACAokG,EAAAnxB,EAAApyE,IAAA,QAEA,GAAAujG,GAAA,SAAAA,EAAA,CACA,IAAAzK,EAAA+3C,EAAAvtC,aAAAlxB,GACAswC,EAAAuuB,EAAA1tC,GAAA/hD,EAAAwvF,EAAA7wB,EAAArnB,GACA4pB,EAAA9yG,MAAAkpF,EACA0J,EAAAuf,WAAAW,EAAAtjH,KACAojG,EAAAzqE,QAAA2qF,EAGA,IAAArf,EAAA6vG,EAAAr0L,OAAAklC,GACA8sF,EAAAntC,kCAAAvkG,EAAAqjG,EAAAa,EAAAt/C,EAAAquB,EAAApqE,IAMAm7G,mBAAA,SAAAhkH,EAAA4kD,EAAAquB,GACA,IAAAixB,EAAA6vG,EAAAr0L,OAAAklC,EAAA,CACAy9E,aAAA,IAGA,OADAn+B,EAAAl1B,YAAAiE,EAAApyE,IAAA,iBACA,CACAyf,SAAAoxH,EAAAztC,uBAAAr/C,EAAAvC,KAAAriD,EAAAkkG,GACAt4E,SAAAs4E,EAAAt4E,UAAAs4E,EAAA72B,eAAA,EAAAh+D,KAAA4U,GAAA,KAOAw/F,sBAAA,SAAAl8F,EAAA8uC,EAAAzR,EAAAquB,GACA,IAAA5wB,EAAAuC,EAAAvC,KACA/2C,EAAA+2C,EAAAjxC,iBACA8iC,EAAAmjK,EAAAh1J,GACAG,EAAAk1C,EAAApsF,EAAA4oC,GACA69F,EAAAxqH,EAAAjH,SACAyxH,EAAA79F,IAAAmiB,EAAAniB,GACA69F,EAAA79F,GAAA7kC,KAAAC,IAAAkzC,EAAA,GAAAuvF,EAAA79F,IACA69F,EAAA79F,GAAA7kC,KAAAG,IAAAgzC,EAAA,GAAAuvF,EAAA79F,IACA,IAAA8sE,EAAAtpB,EAAApsF,EAAA,EAAA4oC,GACA89F,GAAAhxB,EAAA,GAAAA,EAAA,MACAmD,EAAA,CAAA6tB,KAEA,OADA7tB,EAAAjwE,GAAA69F,EAAA79F,GACA,CACA5zB,SAAAyxH,EACAnmH,SAAArE,EAAAqE,SACAu4F,cACAC,cAAA,CACA1gB,cAAA,cAKAouC,EAAA,CACA95G,KAAA,SAAAqqB,EAAAwvF,EAAA7wB,EAAArnB,GACA,IAAA8c,EAAAi7B,EAAAjtC,cAAA,CAAAotC,EAAA7wB,EAAA,KAAA6wB,EAAA7wB,EAAA,IAAAq2F,EAAAh1J,IAKA,OAJA/8C,EAAA0iB,qBAAA,CACAE,MAAAuuF,EACAhmG,MAAAkpF,IAEA,CACA15F,KAAA,OACAioB,MAAAuuF,IAGAy7B,OAAA,SAAA7vF,EAAAwvF,EAAA7wB,EAAArnB,GACA,IAAAnE,EAAAnzC,EAAAgiB,eACA9iB,EAAAy/D,EAAA,GAAAA,EAAA,GACA,OACA/gH,KAAA,OACAioB,MAAAwpH,EAAA/sC,cAAA,CAAAktC,EAAAr8C,EAAA,EAAAwrB,EAAA,KAAAxrB,EAAAj0C,GAAA81J,EAAAh1J,OAKA,SAAAg1J,EAAAh1J,GACA,OAAAA,EAAAiiB,eAAA,IAGA,SAAAozB,EAAApsF,EAAA4oC,GACA,IAAAz0B,EAAAnU,EAAAo4E,UACA,OAAAjkE,EAAAy3L,EAAAhjK,IAAAz0B,EAAAy3L,EAAAhjK,IAAAz0B,EAAA03L,EAAAjjK,KAGAo+B,EAAAc,yBAAA,oBAAAgkI,GACA,IAAAt1K,EAAAs1K,EACAv+K,EAAA93B,QAAA+gC,mBC/HA,IAAA38B,EAAkBf,EAAQ,KAE1Bq3D,EAAuBr3D,EAAQ,KAI/Bu3D,EAFuBv3D,EAAQ,KAE/Bu3D,uBAEAxpB,EAAW/tC,EAAQ,KAEnBG,EAAaH,EAAQ,KAIrBi6B,EAFcj6B,EAAQ,KAEtBi6B,WAEAkhK,EAAWn7L,EAAQ,KA2BnBkzM,EAAAnyM,EAAA9D,OAAA,CACApB,KAAA,oBACAyb,aAAA,eAMA61E,QAAA,KAKAvpF,KAAA,SAAA0E,GACA4qM,EAAAp+I,WAAAx4D,KAAA,OAAAb,WAIAa,KAAA2pC,mBAAA,WACA,OAAA3pC,KAAAyqC,eAUAosK,QAAA,SAAAr1M,GAiBA,IAhBA,IAAAs1M,EAAAt1M,EAAA/D,OAEAs5M,EAAAlY,IAAA/gM,IAAA,SAAAozB,GACA,OAAAA,EAAA,KACK47G,QAAAtrI,GAELw1M,EAAAnzM,EAAAhH,IAAAk6M,EAAA,SAAAj6K,GACA,OACAv8B,KAAAu8B,EAAAh/B,IACAm5M,SAAAn6K,EAAA56B,UAGAg1M,EAAAF,EAAAv5M,OACA05M,GAAA,EACApuM,GAAA,EAEAxL,EAAA,EAAmBA,EAAA25M,IAAc35M,EAAA,CACjC,IAAAC,EAAAw5M,EAAAz5M,GAAA05M,SAAAx5M,OAEAD,EAAA25M,IACAA,EAAA35M,EACAuL,EAAAxL,GAIA,QAAA0hC,EAAA,EAAmBA,EAAAi4K,IAAcj4K,EACjC,GAAAA,IAAAl2B,EAMA,IAFA,IAAAxI,EAAAy2M,EAAA/3K,GAAA1+B,KAEAoyB,EAAA,EAAqBA,EAAAwkL,IAAkBxkL,EAAA,CAKvC,IAJA,IAAAykL,EAAAJ,EAAAjuM,GAAAkuM,SAAAtkL,GAAA,GACAl1B,EAAAu5M,EAAA/3K,GAAAg4K,SAAAx5M,OACA45M,GAAA,EAEA/xJ,EAAA,EAAuBA,EAAA7nD,IAAY6nD,EAAA,CAGnC,GAFA0xJ,EAAA/3K,GAAAg4K,SAAA3xJ,GAAA,KAEA8xJ,EAAA,CACAC,EAAA/xJ,EACA,QAIA,IAAA+xJ,IACA71M,EAAAs1M,GAAA,GACAt1M,EAAAs1M,GAAA,GAAAM,EACA51M,EAAAs1M,GAAA,KACAt1M,EAAAs1M,GAAA,GAAAv2M,EACAu2M,KAKA,OAAAt1M,GASAyoC,eAAA,SAAAj+B,EAAAvB,GAiBA,IAhBA,IAKAs5C,EALAt5C,EAAA8oB,gBAAA,CACAzqB,SAAA,aACAC,MAAA/I,KAAAG,IAAA,mBACA8G,GAAAjH,KAAAG,IAAA,kBACK,GACLA,IAAA,QAEAm4I,EAAAz0I,EAAApH,OAAAuP,EAAAxK,KAAA,SAAA0vB,GACA,YAAAyC,IAAAzC,EAAA,KAGA1vB,EAAAxB,KAAA62M,QAAAv+D,GAAA,IACAhjG,EAAA,GACAu7C,EAAA7wF,KAAA6wF,QAAAhtF,EAAAV,gBACAkqB,EAAA,EAEA9vB,EAAA,EAAmBA,EAAAiE,EAAA/D,SAAiBF,EACpC+3C,EAAA7zC,KAAAD,EAAAjE,GAlHA,IAoHAszF,EAAA1wF,IAAAqB,EAAAjE,GApHA,MAqHAszF,EAAA3wF,IAAAsB,EAAAjE,GArHA,GAqHA8vB,GACAA,KAIA,IAAAmwD,EAAAziB,EAAAv5D,EAAA,CACAs6D,gBAAA,WACA4J,iBAAA,EACAnlE,KAAA,OACAhB,KAAA07D,EAAAlX,IACO,CACPxjD,KAAA,QACAhB,KAAA,SACO,CACPgB,KAAA,OACAhB,KAAA,YAEAu9E,aAAA,CACApT,OAAA,EACApqE,MAAA,EACAq3C,SAAA,KAGArpC,EAAA,IAAAmkC,EAAA+rC,EAAAx9E,MAEA,OADAsN,EAAA+nC,SAAA7zC,GACA8L,GASAgqM,eAAA,WAKA,IAJA,IAAA91M,EAAAxB,KAAAgR,UACAumM,EAAA/1M,EAAA6rB,QACAmqL,EAAA,GAEAj6M,EAAA,EAAmBA,EAAAg6M,IAAch6M,EACjCi6M,EAAAj6M,KAeA,IAXA,IAAAw5M,EAAAlY,IAAA/gM,IAAA,SAAAiL,GACA,OAAAvH,EAAArB,IAAA,OAAA4I,KACK+jI,QAAA0qE,GACLC,EAAA5zM,EAAAhH,IAAAk6M,EAAA,SAAAj6K,GACA,OACAv8B,KAAAu8B,EAAAh/B,IACA45C,QAAA5a,EAAA56B,UAGAw1M,EAAAl2M,EAAA8pC,aAAA,UAEA3Y,EAAA,EAAmBA,EAAA8kL,EAAAh6M,SAAwBk1B,EAC3C8kL,EAAA9kL,GAAA+kB,QAAAxqB,KAAAyqL,GAGA,SAAAA,EAAAC,EAAAC,GACA,OAAAr2M,EAAArB,IAAAu3M,EAAAE,GAAAp2M,EAAArB,IAAAu3M,EAAAG,GAGA,OAAAJ,GAYAvqK,mBAAA,SAAAlB,EAAA1sC,EAAAu1F,GACAhxF,EAAAvF,QAAA0tC,KACAA,IAAA,CAAAA,GAAA,IASA,IANA,IAIAkoK,EAJA1yM,EAAAxB,KAAAgR,UACAymM,EAAAz3M,KAAAs3M,iBACA5/J,EAAA,GACAw/J,EAAAO,EAAAh6M,OAGAF,EAAA,EAAmBA,EAAA25M,IAAc35M,EAAA,CAKjC,IAJA,IAAAi8C,EAAA5qB,OAAA6qB,UACAq+J,GAAA,EACAC,EAAAN,EAAAl6M,GAAAm6C,QAAAj6C,OAEAk1B,EAAA,EAAqBA,EAAAolL,IAAcplL,EAAA,CACnC,IAAAqlL,EAAAx2M,EAAArB,IAAA6rC,EAAA,GAAAyrK,EAAAl6M,GAAAm6C,QAAA/kB,IACAyJ,EAAAztB,KAAAyb,IAAA4tL,EAAA14M,GAEA88B,GAAAod,IACA06J,EAAA8D,EACAx+J,EAAApd,EACA07K,EAAAL,EAAAl6M,GAAAm6C,QAAA/kB,IAIA+kB,EAAAj2C,KAAAq2M,GAGA,OACArlL,YAAAilB,EACAw8J,iBAQAhpK,cAAA,SAAA/5B,GACA,IAAA3P,EAAAxB,KAAAgR,UACAinM,EAAAz2M,EAAAgrC,QAAAr7B,GACA+mM,EAAA12M,EAAArB,IAAAqB,EAAA8pC,aAAA,SAAAn6B,GAMA,OAJAic,MAAA8qL,IAAA,MAAAA,KACAA,EAAA,KAGAv6K,EAAAs6K,EAAA,MAAAC,IAEA5xK,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA7H,iBAAA,aAEAkwC,YAAA,cAEAsmC,gBAAA,EACA3gE,gBAAA,SACAqR,MAAA,CACAgC,OAAA,EACA5C,MAAA,EACApX,SAAA,OACAO,MAAA,OACAwE,SAAA,IAEAmM,SAAA,CACA8G,MAAA,CACAZ,MAAA,OAKAoK,EAAAw1K,EACAz+K,EAAA93B,QAAA+gC,mBCrTA,IAAA9L,EAAc5xB,EAAQ,KAItBsa,EAFYta,EAAQ,KAEpBsa,QAEApZ,EAAclB,EAAQ,KAEtBohD,EAAYphD,EAAQ,KAEpB1E,EAAA8lD,EAAA9lD,KACA2B,EAAAmkD,EAAAnkD,OAEAivC,EAAiBlsC,EAAQ,KA0BzB09B,EAAA9L,EAAA7Y,gBAAA,CACAld,KAAA,aACA+H,KAAA,WACAtH,KAAA8lJ,QAAA,IAEAj0I,OAAA,SAAAd,EAAAtG,EAAAtC,GACA,IAAA3G,EAAAuP,EAAAC,UACA9J,EAAAlH,KAAAkH,MACAuwM,EAAA1mM,EAAAumM,iBACA9zG,EAAAhiG,EAAA46C,UAAA,cACAr9B,EAAAykF,EAAAzkF,KACA6hC,EAAA4iD,EAAA5iD,YAGA,SAAAu3J,EAAAvoM,GACA,OAAAA,EAAArP,KAHA2G,EAAAyf,KAAA,cAAA5H,EAAA9O,EAAA2wC,EAAA,KAMA,IAAAmqB,EAAA,IAAAn7B,EAAA5vC,KAAAo4M,eAAA,GAAAX,EAAAU,KACAE,EAAA,GAGA,SAAAC,EAAAj9L,EAAA4S,EAAA+zD,GACA,IAAAu2H,EAAAv4M,KAAA8lJ,QAEA,cAAAzqI,EAAA,CAUA,IALA,IAEA8E,EAaAynD,EACAx+C,EAhBAovL,EAAA,GACApzC,EAAA,GAEA1tH,EAAA+/J,EAAAxpL,GAAAypB,QAEA/kB,EAAA,EAAqBA,EAAA+kB,EAAAj6C,OAAoBk1B,IAAA,CACzC,IAAA3T,EAAAxd,EAAA66C,cAAA3E,EAAA/kB,IACA3iB,EAAAgP,EAAAhP,EACA8wD,EAAA9hD,EAAA8hD,GACA7wD,EAAA+O,EAAA/O,EACAuoM,EAAA/2M,KAAA,CAAAuO,EAAA8wD,IACAskG,EAAA3jK,KAAA,CAAAuO,EAAA8wD,EAAA7wD,IACAkQ,EAAA3e,EAAA4P,cAAAsmC,EAAA/kB,GAAA,SAKA,IAAAmxE,EAAAtiG,EAAA66C,cAAA3E,EAAA,IACAu0B,EAAAzqE,EAAAs6C,aAAApE,EAAA/kB,EAAA,IACArJ,EAAA2iD,EAAAz/D,SAAA,SACAotB,EAAAtQ,EAAAnpB,IAAA,UAEA,WAAAkb,EAAA,CACA,IAAAo9L,EAAAJ,EAAApqL,GAAA,IAAArpB,EAAA+Y,MACAiqD,EAAA,IAAA5pD,EAAA,CACAwJ,MAAA,CACA4D,OAAAotL,EACAt4E,gBAAAklC,EACA7tI,OAAA,GACA4oG,gBAAA,GACAlH,kBAAA,GAEAt3G,GAAA,IAEAyH,EAAA,IAAAxkB,EAAAgZ,KAAA,CACA7N,MAAA,CACAC,EAAA8zF,EAAA9zF,EAAA4pB,EACA3pB,EAAA6zF,EAAAhjC,GAAAgjC,EAAA7zF,EAAA,KAGAwoM,EAAAtoM,IAAAy3D,GACA6wI,EAAAtoM,IAAAiZ,GACAliB,EAAAiJ,IAAAsoM,GACA7wI,EAAA8lD,YA0CA,SAAA3uG,EAAAhO,EAAAjS,GACA,IAAAm+L,EAAA,IAAAr4L,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAA+O,EAAA/O,EAAA,GACAC,EAAA8O,EAAA9O,EAAA,GACAxI,MAAA,EACAC,OAAAqX,EAAArX,OAAA,MASA,OANA9C,EAAA+kB,UAAAszK,EAAA,CACAz1K,MAAA,CACA/f,MAAAsX,EAAAtX,MAAA,GACAC,OAAAqX,EAAArX,OAAA,KAEGqJ,EAAAjS,GACHm+L,EAzDA/2B,CAAAt+F,EAAAzoD,kBAAApO,EAAA,WACA62D,EAAA+lD,wBAEO,CACP8qF,EAAAF,EAAAv2H,GACApa,EAAA6wI,EAAAx/K,QAAA,GACA7P,EAAAqvL,EAAAx/K,QAAA,GACA/xB,EAAAiJ,IAAAsoM,GACAJ,EAAApqL,GAAAwqL,EACA7zM,EAAAgiB,YAAAghD,EAAA,CACApgD,MAAA,CACA4D,OAAAotL,EACAt4E,gBAAAklC,IAESr0J,GACTnM,EAAAgiB,YAAAwC,EAAA,CACArZ,MAAA,CACAC,EAAA8zF,EAAA9zF,EAAA4pB,EACA3pB,EAAA6zF,EAAAhjC,GAAAgjC,EAAA7zF,EAAA,IAESc,GAGT,IAAA60H,EAAA35D,EAAAz/D,SAAA,sBACAi5H,EAAAx5D,EAAAz/D,SAAA,aACA5H,EAAA+d,aAAAyG,EAAArZ,MAAAuZ,EAAA,CACAF,KAAAE,EAAAnpB,IAAA,QAAA4Q,EAAAiY,kBAAA0uB,EAAA/kB,EAAA,cAAAnxB,EAAAgrC,QAAAkL,EAAA/kB,EAAA,SACA7N,kBAAA,WAEA8iD,EAAAhxD,SAAAjW,EAAA,CACA6f,KAAAL,GACOslH,EAAAtkD,aAAA,aACPv8E,EAAAsjB,cAAA0/C,EAAAg+D,EAAAzkD,qBA/EAj6E,EAAA6O,OAAAwiM,EAAAtqL,IANA88C,EAAA56D,IAAAnR,EAAAs5M,EAAAt4M,KAAA,QAAAkL,OAAAlM,EAAAs5M,EAAAt4M,KAAA,WAAA+V,OAAA/W,EAAAs5M,EAAAt4M,KAAA,WAAAorE,UAwFAprE,KAAAo4M,cAAAX,EACAz3M,KAAA8lJ,QAAAuyD,GAEAviM,QAAA,eAsBAqiB,EAAA93B,QAAA+gC,mBC5KA,IAAAv9B,EAAaH,EAAQ,KAErBy5B,EAAiBz5B,EAAQ,KA8DzB,SAAAkvM,EAAApxM,EAAAuP,EAAArJ,GACA,GAAAlG,EAAA6rB,QAyBA,IArBA,IAmBAqrL,EAnBA9tM,EAAAmG,EAAAL,iBAEA+mM,EAAA1mM,EAAAumM,iBAEAI,EAAAl2M,EAAA8pC,aAAA,UACA+qD,EAAA70F,EAAA8pC,aAAA,SACAqtK,EAAA90M,EAAAhH,IAAA46M,EAAA,SAAAmB,GACA,OAAA/0M,EAAAhH,IAAA+7M,EAAAlhK,QAAA,SAAAzpB,GACA,IAAA4mF,EAAAjqG,EAAAk4E,YAAAthF,EAAArB,IAAAu3M,EAAAzpL,IAEA,OADA4mF,EAAA,GAAArzG,EAAArB,IAAAk2F,EAAApoE,GACA4mF,MAGArxD,EAqCA,SAAAhiD,GASA,IARA,IAAA01M,EAAA11M,EAAA/D,OACAs6M,EAAAv2M,EAAA,GAAA/D,OACAo7M,EAAA,GACA/3I,EAAA,GACAhyD,EAAA,EAEA00C,EAAA,GAEAjmD,EAAA,EAAiBA,EAAAw6M,IAAcx6M,EAAA,CAC/B,QAAAo1B,EAAA,EAAAmmL,EAAA,EAA6BnmL,EAAAukL,IAAcvkL,EAC3CmmL,GAAAt3M,EAAAmxB,GAAAp1B,GAAA,GAGAu7M,EAAAhqM,IACAA,EAAAgqM,GAGAD,EAAAp3M,KAAAq3M,GAGA,QAAA75K,EAAA,EAAiBA,EAAA84K,IAAc94K,EAC/B6hC,EAAA7hC,IAAAnwB,EAAA+pM,EAAA55K,IAAA,EAGAnwB,EAAA,EAEA,QAAAw2C,EAAA,EAAiBA,EAAAyyJ,IAAczyJ,EAAA,CAC/B,IAAAp3B,EAAA2qL,EAAAvzJ,GAAAwb,EAAAxb,GAEAp3B,EAAApf,IACAA,EAAAof,GAMA,OAFAs1B,EAAAsd,KACAtd,EAAA10C,MACA00C,EA1EAu1J,CAAAJ,GACAK,EAAAx1J,EAAAsd,GACAs9G,EAAA12K,EAAA87C,EAAA10C,IAEAuwD,EAAAo4I,EAAAh6M,OACAgiB,EAAAg4L,EAAA,GAAA//J,QAAAj6C,OAGAk1B,EAAA,EAAiBA,EAAAlT,IAAOkT,EAAA,CACxB+lL,EAAAM,EAAArmL,GAAAyrJ,EACA58K,EAAA86C,cAAAm7J,EAAA,GAAA//J,QAAA/kB,GAAA,CACAsmL,WAAA,EACAjpM,EAAA2oM,EAAA,GAAAhmL,GAAA,GACAmuC,GAAA43I,EACAzoM,EAAA0oM,EAAA,GAAAhmL,GAAA,GAAAyrJ,IAGA,QAAA7gL,EAAA,EAAmBA,EAAA8hE,IAAO9hE,EAC1Bm7M,GAAAC,EAAAp7M,EAAA,GAAAo1B,GAAA,GAAAyrJ,EACA58K,EAAA86C,cAAAm7J,EAAAl6M,GAAAm6C,QAAA/kB,GAAA,CACAsmL,WAAA17M,EACAyS,EAAA2oM,EAAAp7M,GAAAo1B,GAAA,GACAmuC,GAAA43I,EACAzoM,EAAA0oM,EAAAp7M,GAAAo1B,GAAA,GAAAyrJ,KAsDAjmJ,EAAA93B,QAnIA,SAAAoK,EAAAtC,GACAsC,EAAA+pF,iBAAA,sBAAAzjF,GACA,IAAAvP,EAAAuP,EAAAC,UACA04D,EAAA34D,EAAAL,iBACA8yF,EAAA,GAEAzkF,EAAA2qD,EAAAsZ,UACAwgB,EAAAzkF,OACA,IAAA6hC,EAAA7vC,EAAA5Q,IAAA,eACAwhD,EAAA+nB,EAAAuzB,UACAuG,EAAA5iD,cAEA,eAAAe,EAAAnpB,QACAooB,EAAA,GAAAzjB,EAAA5Q,aAAAq0B,EAAA,GAAA7hC,EAAArX,QACAk5C,EAAA,GAAAzjB,EAAA5Q,aAAAq0B,EAAA,GAAA7hC,EAAArX,QAEAkrM,EAAApxM,EAAAuP,EADAgO,EAAArX,OAAAk5C,EAAA,GAAAA,EAAA,MAGAA,EAAA,GAAAzjB,EAAA5Q,aAAAq0B,EAAA,GAAA7hC,EAAAtX,OACAm5C,EAAA,GAAAzjB,EAAA5Q,aAAAq0B,EAAA,GAAA7hC,EAAAtX,OAEAmrM,EAAApxM,EAAAuP,EADAgO,EAAAtX,MAAAm5C,EAAA,GAAAA,EAAA,KAIAp/C,EAAA26C,UAAA,aAAAqnD,uBCpDA,IAEArgG,EAFYO,EAAQ,KAEpBP,cA+CAg1B,EAAA93B,QAtBA,SAAAoK,GACAA,EAAA+pF,iBAAA,sBAAAzjF,GACA,IAAAvP,EAAAuP,EAAAC,UACAglC,EAAAjlC,EAAA05B,aACA2wI,EAAArqK,EAAA5Q,IAAA,SACAs9F,EAAAt6F,IACA3B,EAAA5C,KAAA,SAAAqvB,GACAwvE,EAAAv9F,IAAAsB,EAAAs2C,YAAA7pB,QAEA+nB,EAAAp3C,KAAA,SAAA60C,GACA,IAAAlzC,EAAAy1C,EAAAxJ,QAAAiH,GACAtzB,EAAAi7J,GAAArqK,EAAA8/E,QAAA1wF,IAAAI,GAAA,GAAA66K,EAAA39K,QACAu4C,EAAAyG,cAAAhJ,EAAA,QAAAtzB,GACA,IAAA8N,EAAAwvE,EAAAt9F,IAAAszC,GAEA,MAAAxlB,GACAzsB,EAAAi7C,cAAAxuB,EAAA,QAAA9N,yBC3CA,IAAAmV,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAA8rK,EAAgB9rK,EAAQ,KAExBw1M,EAAqBx1M,EAAQ,KAE7BqkH,EAAiBrkH,EAAQ,KAqBzB4xB,EAAAhb,eAAAzW,EAAAjC,MAAA4tK,EAAA,aACAl6I,EAAAlZ,eAAAvY,EAAAjC,MAAAs3M,EAAA,aACA5jL,EAAAtb,kBAAAnW,EAAAjC,MAAAmmH,EAAA,8BCrCA,IAAAlkH,EAAaH,EAAQ,KAErBe,EAAkBf,EAAQ,KAE1BquG,EAAWruG,EAAQ,KAInB8vE,EAFkB9vE,EAAQ,KAE1B8vE,iBAoBApyC,EAAA38B,EAAA9D,OAAA,CACApB,KAAA,kBAKAo/K,UAAA,KACA10I,eAAA,SAAAj+B,EAAAvB,GAEA,IAAAuoE,EAAA,CACAzyE,KAAAyL,EAAAzL,KACAgrF,SAAAv/E,EAAAxK,OAiHA,SAAAq+K,EAAA5rE,GAIA,IAAA/lF,EAAA,EACArqB,EAAAjF,KAAAq1G,EAAA1oB,SAAA,SAAAvpE,GACA69J,EAAA79J,GACA,IAAA89J,EAAA99J,EAAA1iB,MACAuE,EAAAvF,QAAAwhL,SAAA,IACA5xJ,GAAA4xJ,IAEA,IAAAC,EAAA9rE,EAAA30G,MAEAuE,EAAAvF,QAAAyhL,KACAA,IAAA,KAGA,MAAAA,GAAA3yJ,MAAA2yJ,MACAA,EAAA7xJ,GAIA6xJ,EAAA,IACAA,EAAA,GAGAl8K,EAAAvF,QAAA21G,EAAA30G,OAAA20G,EAAA30G,MAAA,GAAAygL,EAAA9rE,EAAA30G,MAAAygL,EAzIAF,CAAA7sG,GACA,IAAA4gC,EAAA5nG,EAAA4nG,QAAA,GAEAioE,EAAA,GAKA,OAJAA,EAAAjoE,SAIA7B,EAAA0B,WAAAzgC,EAAAhzE,KAAA67K,GAAAr6K,MAEA0lC,cAAA,WACAlnC,KAAAqgL,iBAMAznK,cAAA,SAAAzH,GACA,IAAAgH,EAAA1T,EAAAvI,UAAA0c,cAAAxZ,MAAAY,KAAAb,WACA8X,EAAAjX,KAAAgR,UAAA63D,KAAAwqC,mBAAAliG,GAEA,OADAgH,EAAAs7D,aAAAD,EAAAv8D,EAAAjX,MACAmY,GAEAmuB,cAAA,CACA9tB,OAAA,EACAD,EAAA,EAEA8zE,OAAA,cACA3R,OAAA,UAEA4pB,WAAA,EACAhqB,WAAA,GAEA21F,SAAA,EACAI,iBAAA,EAEAC,kBAAA,EAIA6oC,gBAAA,aAEAj6B,UAAA,aACAk6B,wBAAA,EACAxhL,MAAA,CAEAiX,OAAA,SACA7X,MAAA,EACAq/C,QAAA,EAGA0sB,MAAA,SACAnjF,SAAA,SACAqc,SAAA,EACAlxB,QAAA,EACA+lB,SAAA,IAEA2G,UAAA,CACAy6G,YAAA,EACAl8G,YAAA,QACAqgD,QAAA,EACAvlD,SAAA,GACAmpC,UAAA,CACAoc,QAAA,GAEAlc,SAAA,CACAkc,QAAA,KAIAk6F,cAAA,YACA3b,kBAAA,IACAltE,wBAAA,IACAnhE,gBAAA,WACA/kB,KAAA,GACAoyG,OAAA,GAaA1mF,KAAA,QAEAyzJ,YAAA,WACA,OAAA3gL,KAAA2+K,WAMA0B,cAAA,SAAA/sG,GACAA,EAAAtzE,KAAA2+K,UAAArrG,IAAAtzE,KAAA2+K,UACA,IAAA3rG,EAAAhzE,KAAAyqC,aAAAo+B,KAAAmK,KAEAM,QAAAN,KAAAE,SAAAI,MACAtzE,KAAA2+K,UAAA3rG,MAsCA76C,EAAA93B,QAAA+gC,mBCrLA,IAAAv9B,EAAaH,EAAQ,KAErBiB,EAAgBjB,EAAQ,KAExB21M,EAAoB31M,EAAQ,KAE5BksC,EAAiBlsC,EAAQ,KAwNzB09B,EAlMAz8B,EAAAhE,OAAA,CACApB,KAAA,WACA+H,KAAA,aACAuK,OAAA,SAAAd,EAAAtG,EAAAtC,EAAAsJ,GACA,IAAAw7G,EAAAjtH,KACAA,KAAA+Q,cACA/Q,KAAAmI,MACAnI,KAAAyK,UACA,IAAAjJ,EAAAuP,EAAAC,UACA2rK,EAAAn7K,EAAAqnE,KAAAmK,KACAsmI,EAAAvoM,EAAA4vK,cACAz5K,EAAAlH,KAAAkH,MACAkyM,EAAAroM,EAAA5Q,IAAA,0BACAo5M,EAAA,GACAD,EAAA/mG,SAAA,SAAAt7F,GACAsiM,EAAA93M,KAAAwV,KAEA,IAAAuiM,EAAAx5M,KAAAy5M,cAAA,GAIA,GAmBA,SAAAF,EAAAC,GACA,OAAAD,EAAA97M,QAAA,IAAA+7M,EAAA/7M,OACA,OAKA,SAAAgiH,EAAAxoG,GACA,OAAAA,EAAAi9B,QAGA,SAAAivI,EAAAu2B,EAAAC,GACA,IAAAC,EAAA,MAAAF,EAAA,KAAAH,EAAAG,GACAr2B,EAAA,MAAAs2B,EAAA,KAAAH,EAAAG,IAKA,SAAAC,EAAAv2B,GACA+1B,IAAAQ,KAAA9mG,aAEA8mG,EAAA,MAGA,GAAAA,IAAAj9B,GAAA0G,IAAA1G,EACA,GAAA0G,KAAA3uG,MACAklI,GAEAv2B,EAAA3uG,MAAAgN,YAAA,EAAAk4H,EAAA,SAAA7oM,EAAAtG,GAEAjJ,EAAAo7C,iBAAAg9J,EAAAzoM,UAAAkyK,EAAA3uG,QAeA,SAAAz9D,GACA,IAAAA,EACA,OAGAA,EAAAy9D,QACAxtE,EAAA6O,OAAAkB,EAAAy9D,OACAz9D,EAAAy9D,MAAA,MAnBA+nG,CAAA4G,QAES,GAAAu2B,EAAA,CAET,IAAAllI,EAAA,IAAA2kI,EAAAO,EAAA7oM,EAAAtG,GACAvD,EAAAiJ,IAAAukE,GAEAlzE,EAAAo7C,iBAAAg9J,EAAAzoM,UAAAujE,IA1BAkuG,CAAAg3B,EAAAv2B,GATA,IAAAzzI,EAAA4pK,EAAAD,EAAA95F,KAAAtvG,IAAAgzK,GAAAj4K,OAAAi4K,GAAAptK,OAAAlS,EAAAjC,MAAAuhL,EAAA,OAAA/3G,UA3BA03G,CAAAy2B,EAAAC,GA8EA,SAAA78B,EAAArpG,GACA,GAAAA,EAAAu+B,MAAA,GAEAob,EAAA4sF,aAEA5sF,EAAA4sF,aAAAn4H,YAAA,EAAAi7F,EAAA,SAAA5rK,EAAAtG,IAGAwiH,EAAA4sF,aAAA,IAAAR,EAAA18B,EAAA5rK,EAAAtG,GACAvD,EAAAiJ,IAAA88G,EAAA4sF,eAGAvmI,EAAAoB,MAAAolI,eACAxmI,EAAAoB,MAAAvqE,IAAA,QAAAmpE,EAAAoB,MAAAolI,eAGA,IAAA/kM,EAAA,SAAA2D,GACAu0G,EAAAy3D,YAAApxG,EAAAV,aAGAU,EAAAoB,MAAAolI,cAAA/kM,EACAk4G,EAAA4sF,aAAAjwM,GAAA,QAAAmL,QACOk4G,EAAA4sF,eAEP3yM,EAAA6O,OAAAk3G,EAAA4sF,cACA5sF,EAAA4sF,aAAA,MAtGAE,CAAAp9B,EAAA28B,GAEA7nM,KAAAwoD,WAAAxoD,EAAAwoD,UAAAya,MAAA,CACA,IAAAykI,EAAApoM,EAAAqS,WAAA,mBACA3R,EAAAwoD,UAAAya,MAAA4kB,WAAA6/G,QACK,GAAA1nM,KAAAuoM,YAAA,CACL,IAAAtlI,EAAA10E,KAAA65M,cAEAnlI,GAAAioG,EAAApxF,SAAA9tF,SACAi3E,EAAAioG,EAAApxF,SAAA,GAAA7W,OAGAA,GACAA,EAAA8kB,WAIAx5F,KAAAwJ,cAEAxJ,KAAAy5M,aAAAF,GAuFAzjM,QAAA,aAKAtM,YAAA,WACA,IAAAyjH,EAAAjtH,KAEA+U,EAAA,SAAA2D,GACA,IAAAuhM,GAAA,EACAhtF,EAAAl8G,YAAA4vK,cACApuE,SAAA,SAAAt7F,GACA,IAAAgjM,GAAAhjM,EAAAy9D,OAAAz9D,EAAAy9D,MAAAz7C,QAAA,KAAAvgB,EAAAza,OAAA,CACA,IAAAihL,EAAAjoK,EAAAzK,WAAArM,IAAA,aAEA,kBAAA++K,EACAjyD,EAAAy3D,YAAAztK,QACW,YAAAioK,EAAA,CACX,IAAAjzG,EAAAh1D,EAAAzK,WACA23E,EAAAlY,EAAA9rE,IAAA,QAEA,GAAAgkF,EAAA,CACA,IAAAygG,EAAA34G,EAAA9rE,IAAA,uBACA4M,OAAA83K,KAAA1gG,EAAAygG,IAIAq1B,GAAA,MAKAj6M,KAAAkH,MAAA4yM,eACA95M,KAAAkH,MAAAiD,IAAA,QAAAnK,KAAAkH,MAAA4yM,eAGA95M,KAAAkH,MAAA0C,GAAA,QAAAmL,GACA/U,KAAAkH,MAAA4yM,cAAA/kM,GAMA2vK,YAAA,SAAAztK,GACAA,IAAAjX,KAAA+Q,YAAA4vK,eACA3gL,KAAAmI,IAAA2P,eAAA,CACAvY,KA5KA,qBA6KA3B,KAAAoC,KAAA0S,IACA8f,SAAAxyB,KAAA+Q,YAAA9J,GACAgsE,WAAAh8D,KAQAtG,aAAA,SAAA0a,EAAAta,GACA,IACA+0H,EADA/0H,EAAAC,UACAqrC,cAAA,GAEA,GAAAypF,EAAA,CACA,IAAArrG,EAAApP,EAAA,GAAAy6G,EAAAzoF,GACA3iB,EAAArP,EAAA,GAAAy6G,EAAAxoF,GACAo9B,EAAA/rE,KAAAmtB,KAAArB,IAAAC,KACA,OAAAggD,GAAAorD,EAAAloF,GAAA88B,GAAAorD,EAAAzhC,OAKAlsE,EAAA93B,QAAA+gC,mBC/NA,IAAAv9B,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAqBtBw2M,EAAA,CACA7xF,KAAA,OAEA8xF,WAAA,aACAC,SAAA,WACAC,KAAA,QAEAC,EAAA,EACAC,EAAA,EAOA,SAAAlB,EAAApiM,EAAAlG,EAAAtG,GACA7F,EAAA+Y,MAAAtgB,KAAA2C,MACA,IAAAwuK,EAAA,IAAA5pK,EAAAkZ,OAAA,CACA6D,GAAA24L,IAEA9rC,EAAAp2J,YAAArH,EAAAqH,YACA,IAAAgR,EAAA,IAAAxkB,EAAAgZ,KAAA,CACA+D,GAAA44L,EACAxvM,OAAAkM,EAAAzK,SAAA,SAAArM,IAAA,YAMA,SAAAm5F,IACAlwE,EAAAhb,OAAAgb,EAAAwnJ,YAGA,SAAAp3E,IACApwE,EAAAhb,OAAAgb,EAAAynJ,aATA7wK,KAAAmQ,IAAAq+J,GACAxuK,KAAAmQ,IAAAiZ,GACAppB,KAAA0hF,YAAA,EAAAzqE,EAAA,SAAAlG,EAAAtG,GAUAzK,KAAA4J,GAAA,WAAA0vF,GAAA1vF,GAAA,SAAA4vF,GAAA5vF,GAAA,YAAA0vF,GAAA1vF,GAAA,WAAA4vF,GAGA,IAAAghH,EAAAnB,EAAAn9M,UAEAs+M,EAAA94H,WAAA,SAAAqvF,EAAA95J,EAAAwjD,EAAA1pD,EAAAtG,GACAzK,KAAAiX,OACAA,EAAAy9D,MAAA10E,KACA+Q,KAAA/Q,KAAA44F,aACAnuF,KAAAzK,KAAAy6M,SACA,IAAAjsC,EAAAxuK,KAAAi5B,QAAA,GACAu1I,EAAAr9J,UAAA8F,EAAA9F,UACA,IAAA86D,EAAAh1D,EAAAzK,WACAwS,EAAA/H,EAAAmlC,YAEAp9B,GACA1S,QAAAC,IAAA0K,EAAAmlC,aAGA,IAAA40H,EAAAntK,EAAAlD,OAAA,GAAoCqe,GACpCgyJ,EAAAp5I,MAAA,KACA,IAEA7nB,EAFAunG,EAiOA,SAAArgG,EAAAlG,EAAAtG,GAEA,IAAA6sG,EAAArgG,EAAArG,UAAA,SACA6oI,EAAAxiI,EAAArG,UAAA,cAEA6oI,GAAA,IAAAA,EAAAh8I,SAEA65G,EAAA,MAIA,IAAAn3F,EAAAlJ,EAAAzK,SAAA,aAAArM,IAAA,SAEA,GAAAggB,EACA,OAAAA,EACG,GAAAm3F,EAEH,OAAAA,EACG,OAAArgG,EAAA46F,MAEH,OAAApnG,EAAAuB,OAAAmU,MAAA,GAGA,IAAA1iB,EAAAgN,EAAAuB,OAAAmU,MAAA1iB,OACA0iB,EAAA1V,EAAAuB,OAAAmU,MAaA,SAAAlJ,GACA,IAAA4S,EAAA5S,EAEA,KAAA4S,EAAAgoF,MAAA,GACAhoF,IAAA+oD,WAGA,IAAA+pG,EAAA1lK,EAAA07F,eAAA,GACA,OAAA9uG,EAAAhD,QAAA87K,EAAApxF,SAAA1hE,GArBA6wL,CAAAzjM,GAAAxZ,GAGA,OAAA0iB,EA5PAw6L,CAAA1jM,EAAAlG,EAAAtG,GACAkW,EAAAsrD,EAAAz/D,SAAA,aAAA20E,eAGA,cAAA1mB,EACA1qD,EAAA4Q,MACG,CACH,IAAAi6L,EAAA3uI,EAAAz/D,SAAAiuD,EAAA,cAAA0mB,eACApxE,EAAAlM,EAAA7F,MAAA48M,EAAAj6L,GAGA5Q,EAAAlM,EAAArF,SAAA,CACAsqH,SAAA,QACAtoG,KAAAzQ,EAAAyQ,MAAA82F,GACGvnG,GAEHghK,GACAvC,EAAA3pI,SAAAmsI,GACAxC,EAAAhnJ,MAAAo2B,EAAA5+B,EAAAqlF,GACAz/F,EAAAgiB,YAAA4nJ,EAAA,CACAhnJ,MAAA,CACAo2B,EAAA5+B,EAAA4+B,IAEK7sC,EAAAkG,EAAA9F,WACLq9J,EAAA1vF,SAAA/uE,IACG,kBAAAA,EAAAyQ,MAAAzQ,EAAAyQ,KAAAjhB,MAAA,kBAAAivK,EAAAz+J,MAAAyQ,MAAAguJ,EAAAz+J,MAAAyQ,KAAAjhB,MAGHqF,EAAAgiB,YAAA4nJ,EAAA,CACAhnJ,MAAAwpJ,GACKjgK,GACLy9J,EAAA1vF,SAAA/uE,IAEAnL,EAAAgiB,YAAA4nJ,EAAA,CACAhnJ,MAAAwpJ,EACAjhK,SACKgB,GAGL/Q,KAAAixK,aAAAlgK,EAAAumG,EAAA78C,GAEA,IAAAgnB,EAAAxV,EAAA7oD,WAAA,UAGA,GAFAq+D,GAAA+sF,EAAA7nJ,KAAA,SAAA86D,GAEAsvF,EAAA,CACA,IAAAooC,EAAApoM,EAAAqS,WAAA,mBAEApjB,KAAAwJ,YAAAglK,EAAAv3J,EAAAlG,EAAAooM,GAGAn5M,KAAA44F,aAAA7nF,GAAA/Q,KAAA44F,aACA54F,KAAAy6M,SAAAhwM,GAAAzK,KAAAy6M,UAGAD,EAAAlhH,WAAA,SAAA6/G,GACA,IAAAlsF,EAAAjtH,KACAA,KAAAiX,KAAA26F,SAAA5+B,KAAAu/B,SAAA,SAAAlzC,GAyNA,IAAApoD,EAAA4jM,EAAAC,EAxNAz7I,EAAAqV,QACAu4C,EAAAh2G,OAAAooD,EACAA,EAAAqV,MAAAgN,YAAA,EAAAriB,EAAA,aAsNApoD,EArNOooD,EAqNPw7I,EArNO5tF,EAAAh2G,MAqNP6jM,EArNO3B,KAsNPe,EAAA7xF,OAEGyyF,IAAAZ,EAAAG,KACHpjM,IAAA4jM,EACGC,IAAAZ,EAAAE,SACHnjM,IAAA4jM,GAAA5jM,EAAAk8F,aAAA0nG,GAEA5jM,IAAA4jM,GAAA5jM,EAAAm8F,eAAAynG,IA5NAx7I,EAAAqV,MAAAz7C,QAAA,GAAAlvB,QAAA,aACOovM,IAAAe,EAAA7xF,MACPhpD,EAAAqV,MAAAz7C,QAAA,GAAAlvB,QAAA,iBAMAywM,EAAAhhH,SAAA,WACAx5F,KAAAiX,KAAA26F,SAAA5+B,KAAAu/B,SAAA,SAAAlzC,GACAA,EAAAqV,OACArV,EAAAqV,MAAAgN,YAAA,EAAAriB,EAAA,aAKAm7I,EAAAO,YAAA,WACA/6M,KAAA0hF,YAAA,EAAA1hF,KAAAiX,KAAA,cAGAujM,EAAAQ,WAAA,WACAh7M,KAAA0hF,YAAA,EAAA1hF,KAAAiX,KAAA,aAGAujM,EAAAvpC,aAAA,SAAAlgK,EAAAumG,EAAA78C,GACA,IAAAwR,EAAAjsE,KAAAiX,KAAAzK,WACA8b,EAAA2jD,EAAAz/D,SAAA,SACA8c,EAAA,WAAAmxC,GAAA,aAAAA,EAAAnyC,EAAA2jD,EAAAz/D,SAAAiuD,EAAA,UACA02G,EAAAllG,EAAAz/D,SAAA,kBACA4c,EAAAvlB,EAAA5B,SAAA8O,EAAAiY,kBAAAhpB,KAAAiX,KAAA9F,UAAA,4BAAAnR,KAAAiX,KAAA1W,OAEA,IAAA06M,EAAA,UACA7xL,EAAA,IAGA,IAAApK,EAAAhf,KAAAiX,KAAAmlC,YACA8+J,EAAA5xL,EAAAnpB,IAAA,YAEA,MAAA+6M,IACAA,EAAA5yL,EAAAnoB,IAAA,aAGA+6M,IAAA,IAAAvsM,KAAA4U,GACA,IAAAs6B,EAAA7+B,EAAAu7D,SAAAv7D,EAAAs7D,WAEA,MAAA4gI,GAAAvsM,KAAAyb,IAAAyzB,GAAAq9J,IAEA9xL,EAAA,IAGA,IAAAwO,EAAA53B,KAAAi5B,QAAA,GACAr0B,EAAAwjB,cAAAwP,EAAA7nB,MAAA6nB,EAAAnX,YAAA,GAA2D6H,EAAA6oJ,EAAA,CAC3DloJ,YAAAK,EAAAlG,WAAA,QAAAgG,EAAA,KACA1H,UAAA41F,EACAvxF,gBAAA,IAEA,IAGA63B,EAHA8yH,GAAA1xJ,EAAAs7D,WAAAt7D,EAAAu7D,UAAA,EACA9/C,EAAA9rB,KAAA6gC,IAAAkhI,GACAh2I,EAAA/rB,KAAA2gC,IAAAohI,GAEAqC,EAAAkoC,EAAA,YACAE,EAAAF,EAAA,eACAp2L,EAAAo2L,EAAA,SAEA,YAAAloC,GACAn1H,EAAA5+B,EAAA4+B,EAAAu9J,EACAt2L,EAAA6rJ,EAAA/hK,KAAA4U,GAAA,kBAEAsB,GAAA,WAAAA,EAGK,SAAAA,GACL+4B,EAAA5+B,EAAAqlF,GAAA82G,EAEAzqC,EAAA/hK,KAAA4U,GAAA,IACAsB,EAAA,UAEK,UAAAA,IACL+4B,EAAA5+B,EAAA4+B,EAAAu9J,EAEAzqC,EAAA/hK,KAAA4U,GAAA,IACAsB,EAAA,UAZA+4B,GAAA5+B,EAAA4+B,EAAA5+B,EAAAqlF,IAAA,EACAx/E,EAAA,UAgBA+S,EAAAjR,KAAA,SACAyC,OACAvE,YACAC,kBAAAm2L,EAAA,2BACA5kI,QAAA4kI,EAAA,aAEA,IAAAxsH,EAAA7wC,EAAAnjB,EAAAzb,EAAAq+B,GACAqxC,EAAA9wC,EAAAljB,EAAA1b,EAAAs+B,GACA1lB,EAAAjR,KAAA,YAAA8nE,EAAAC,IACA,IAAA0sH,EAAAH,EAAA,UACApsK,EAAA,EAsBA,SAAAosK,EAAA16M,GACA,IAAA86M,EAAA/xL,EAAAnpB,IAAAI,GAEA,aAAA86M,EACA/yL,EAAAnoB,IAAAI,GAEA86M,EA1BA,WAAAD,GACAvsK,GAAA6hI,IAEA/hK,KAAA4U,GAAA,IACAsrB,GAAAlgC,KAAA4U,IAEG,eAAA63L,GACHvsK,EAAAlgC,KAAA4U,GAAA,EAAAmtJ,GAEA/hK,KAAA4U,GAAA,EACAsrB,GAAAlgC,KAAA4U,GACKsrB,GAAAlgC,KAAA4U,GAAA,IACLsrB,GAAAlgC,KAAA4U,IAEG,kBAAA63L,IACHvsK,EAAAusK,EAAAzsM,KAAA4U,GAAA,KAGAqU,EAAAjR,KAAA,WAAAkoB,IAaA2rK,EAAAhxM,YAAA,SAAAglK,EAAAv3J,EAAAlG,EAAAooM,GACA3qC,EAAArkK,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UACA,IAAA8iH,EAAAjtH,KAEAs5F,EAAA,WACA2zB,EAAA3zB,WAAA6/G,IAGA3/G,EAAA,WACAyzB,EAAAzzB,YAWAzoF,EAAAqV,sBACAooJ,EAAA5kK,GAAA,YAAA0vF,GAAA1vF,GAAA,WAAA4vF,GAAA5vF,GAAA,WAAA0vF,GAAA1vF,GAAA,SAAA4vF,GAAA5vF,GAAA,WATA,WACAqjH,EAAA+tF,eAQApxM,GAAA,YALA,WACAqjH,EAAA8tF,iBAQAl3M,EAAA9C,SAAAs4M,EAAAz0M,EAAA+Y,OACA,IAAAyjB,EAAAi4K,EAqEAlhL,EAAA93B,QAAA+gC,mBC9WA,IAAA9L,EAAc5xB,EAAQ,KAEtB4gF,EAAa5gF,EAAQ,KAyBrB43M,EAAA,qBACAhmL,EAAAlb,eAAA,CACA7a,KAAA+7M,EACApwM,OAAA,cACC,SAAAuG,EAAAhH,GACDA,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,WACAC,MAAA9B,GAGA,SAAAhB,EAAA1H,GACA,IAAA+sI,EAAAxxD,EAAAxR,mBAAArhE,EAAA,CAAA6pM,GAAA7qM,GAEA,GAAAqlI,EAAA,CACA,IAAA2yC,EAAAh4K,EAAAkwK,cAEA8H,IACAh3K,EAAAyY,UAAAo6D,EAAAjR,cAAAo1G,EAAA3yC,EAAA7+H,MAAA,sBAGAxG,EAAA4vK,cAAAvqC,EAAA7+H,WAIA,IAAAskM,EAAA,oBACAjmL,EAAAlb,eAAA,CACA7a,KAAAg8M,EACArwM,OAAA,cACC,SAAAuG,EAAAhH,GACDA,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,WACAC,MAAA9B,GAGA,SAAAhB,EAAA1H,GACA,IAAA+sI,EAAAxxD,EAAAxR,mBAAArhE,EAAA,CAAA8pM,GAAA9qM,GAEAqlI,IACArkI,EAAAwoD,UAAA67E,EAAA7+H,UAKAqe,EAAAlb,eAAA,CACA7a,KAFA,sBAGA2L,OAAA,cACC,SAAAuG,EAAAhH,GACDA,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,WACAC,MAAA9B,GAGA,SAAAhB,EAAA1H,GACA0I,EAAAuoM,aAAA,uBCnFA,IAEAztL,EAFc7oB,EAAQ,KAEtB6oB,aAEA1oB,EAAaH,EAAQ,KAsBrBoiK,GADAn3J,KAAA4U,GACA5U,KAAA4U,GAAA,KA0KA4U,EAAA93B,QAxKA,SAAAmrE,EAAA/gE,EAAAtC,EAAAsJ,GACAhH,EAAA+pF,iBAAAhpB,EAAA,SAAAz6D,GACA,IAAAs7E,EAAAt7E,EAAA5Q,IAAA,UACAu6E,EAAA3pE,EAAA5Q,IAAA,UAEA0D,EAAAvF,QAAAo8E,KACAA,EAAA,GAAAA,IAGA72E,EAAAvF,QAAA+tF,KACAA,EAAA,CAAAA,MAGA,IAAA5kF,EAAAU,EAAAuE,WACAhF,EAAAS,EAAAwE,YACAoyC,EAAApwC,KAAAC,IAAAnH,EAAAC,GACA21C,EAAA9wB,EAAA8/D,EAAA,GAAA5kF,GACA61C,EAAA/wB,EAAA8/D,EAAA,GAAA3kF,GACA28F,EAAA93E,EAAAmuD,EAAA,GAAA37B,EAAA,GACAnB,EAAArxB,EAAAmuD,EAAA,GAAA37B,EAAA,GACAu7B,GAAAvpE,EAAA5Q,IAAA,cAAA2lK,EACAmK,EAAAl/J,EAAA5Q,IAAA,YAAA2lK,EACA6W,EAAA5rK,EAAAC,UAAA63D,KAAAmK,KACAg5G,EAAAj7K,EAAA4vK,cACA66B,EAAAxvB,EAAAn6E,MACA3kF,EAAAnc,EAAA5Q,IAAA,QAEA,MAAA+sB,GA8GA,SAAAy+J,EAAA10K,EAAAwkM,GACA,IAAAlwH,EAAAt0E,EAAAs0E,UAAA,GACAt0E,EAAAs0E,SAiBA,SAAAA,EAAAmwH,GACA,uBAAAA,EACA,OAAAnwH,EAAAr+D,KAAAwuL,GAEA,IAAAD,EAAA,QAAAC,EACA,OAAAnwH,EAAAr+D,KAAA,SAAA7pB,EAAAC,GACA,IAAAq2C,GAAAt2C,EAAAyvG,WAAAxvG,EAAAwvG,aAAA2oG,EAAA,MACA,WAAA9hK,GAAAt2C,EAAA8N,UAAA7N,EAAA6N,YAAAsqM,GAAA,KAAA9hK,IAxBAzsB,CAAAq+D,EAAAkwH,GAEAlwH,EAAA9tF,QACAoG,EAAAjF,KAAAqY,EAAAs0E,SAAA,SAAAvpE,GACA2pK,EAAA3pK,EAAAy5L,KAnHA9vB,CAAAK,EAAA9+J,GAGA,IAAA0kJ,EAAA,EACA/tK,EAAAjF,KAAAotL,EAAAzgG,SAAA,SAAAvpE,IACAoL,MAAApL,EAAA8wF,aAAA8+D,MAEA,IAAA1jJ,EAAA89J,EAAAl5E,WAEA++D,EAAAljK,KAAA4U,IAAA2K,GAAA0jJ,GAAA,EACA+pC,EAAA3vB,EAAAn6E,MAAA,EACA+B,EAAAo4E,EAAAtkL,QAAAi0M,GAAA,KACAC,GAAAh+J,EAAAymD,IAAAuP,GAAA,GACAtP,EAAAvzF,EAAA5Q,IAAA,aACAmwK,EAAAv/J,EAAA5Q,IAAA,oBAIAq4H,EAAAl0B,EAAA,KAgEA,GAAAq3G,EAAA,CACA,IAAAE,EAAAx3G,EACAy3G,EAAAz3G,EAAAu3G,EACA/9J,EAAA,EAAAlvC,KAAA4U,GACAo5J,EAAAxgI,UAAA,CACA0B,QACAy8B,aACAC,SAAAD,EAAAz8B,EACAymD,YACAjnD,KACAC,KACA+mD,GAAAw3G,EACAj+J,EAAAk+J,KAtEA,SAAAj5B,EAAA5rK,EAAAqjE,GACA,GAAArjE,EAAA,CAIA,IAAAsjE,EAAAD,EAEA,GAAArjE,IAAA0lK,EAAA,CAEA,IAAAr9K,EAAA2X,EAAA67F,WACAj1D,EAAA,IAAA3vB,GAAAoiJ,EAAAuB,EAAAvyK,EAAAuyK,EAEAh0H,EAAAoyH,IACApyH,EAAAoyH,GAMA11F,EAAAD,EAAAk+C,EAAA36E,EACA,IAAAg0D,EAAA56F,EAAA46F,MAAA2pG,GAAAG,GAAA,KACAE,EAAAx3G,EAAAu3G,EAAA/pG,EACAiqG,EAAAz3G,EAAAu3G,GAAA/pG,EAAA,GACA5lC,EAAAh1D,EAAAzK,WAEA,MAAAy/D,EAAA9rE,IAAA,QACA07M,EAAAtvL,EAAA0/C,EAAA9rE,IAAA,MAAA4+C,EAAA,IAGA,MAAAktB,EAAA9rE,IAAA,OACA27M,EAAAvvL,EAAA0/C,EAAA9rE,IAAA,KAAA4+C,EAAA,IAGA9nC,EAAAklC,UAAA,CACA0B,QACAy8B,aACAC,WACA+pB,YACAjnD,KACAC,KACA+mD,GAAAw3G,EACAj+J,EAAAk+J,IAKA,GAAA7kM,EAAAs0E,UAAAt0E,EAAAs0E,SAAA9tF,OAAA,CAEA,IAAAs+M,EAAA,EACAl4M,EAAAjF,KAAAqY,EAAAs0E,SAAA,SAAAt0E,GACA8kM,GAAAl5B,EAAA5rK,EAAAqjE,EAAAyhI,KAIA,OAAAxhI,EAAAD,GAoBAuoG,CAAAmJ,EAAA1xG,uBC1Jc52E,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBwoI,EAAkBxoI,EAAQ,KAI1Bm0F,EAFmBn0F,EAAQ,KAE3Bm0F,gBAEA+pC,EAA0Bl+H,EAAQ,KAIlCuzF,EAFevzF,EAAQ,KAEvBuzF,gBAEArnD,EAAiBlsC,EAAQ,KAEzBs4M,EAAyBt4M,EAAQ,KAEjCu4M,EAAiBv4M,EAAQ,KAEzBw4M,EAAwBx4M,EAAQ,KAEhCy4M,EAAmBz4M,EAAQ,KAE3B04M,EAAsB14M,EAAQ,KAqB9B24M,EAAA,cACAC,EAAA,yBACAC,EAAA,UACAC,EAAA,qBAGAC,EAAA,QAaAC,EAAA,CACA9iF,YAAAoiF,EACAl9G,IAAAm9G,EACAj1H,WAAAk1H,EACAl4F,MAAAm4F,EACAviD,SAAAwiD,GA4KA,SAAAO,EAAAv7M,EAAAw7M,EAAAC,EAAAC,EAAA11K,GACA,MAAAy1K,EAAAz7M,IAAAgmC,IACAw1K,EAAAx7M,GAAAy7M,EAAAz7M,GACAy7M,EAAAz7M,GAAA07M,EAAA17M,IAIA,SAAA27M,EAAAC,EAAAx7M,EAAAiJ,EAAAtC,GACA,IAAA80M,EAAAD,EAAA78M,IAAA,cACAyK,EAAAoyM,EAAAtsM,iBACAwsM,EAAA,GAEAtyM,IACAsyM,EAAAtyM,EAAA8xM,eAAA9xM,EAAA8xM,mBAAA9xM,EAAArL,MAAAqL,IAGA,IAuBAuyM,EAEAC,EACAC,EACAC,EACAC,EA5BAC,EAAA35M,EAAArF,SAAA,CACAkO,SAAAvE,EAAAuE,SACAC,UAAAxE,EAAAwE,UACAb,MAAA3D,EAAA2D,MACAc,oBAAAzE,EAAAyE,oBACAtN,MAoDA,SAAA0sC,EAAA/6B,GAEA,OADA,MAAAA,MAAAksM,GACA37M,EAAArB,IAAAqB,EAAAuzC,aAAA/I,GAAA,GAAA/6B,IArDAlB,MAkEA,SAAAgsH,EAAA9qH,GACA,MAAAA,MAAAksM,GACAM,EAAAxsM,GACA,IAAAwmB,EAAA2lL,EAAA5wM,SAAA6vM,GAAAl7H,eACA,MAAAo8H,IAAA9lL,EAAAjX,KAAA+8L,GACA,IAAAlnI,EAAA70E,EAAA4P,cAAAH,EAAA,WAQA,OAPA,MAAAolE,IAAA5+C,EAAA4+C,WACA61D,EAAAvpH,aAAA8U,EAAA4lL,EAAA,MACA37L,UAAA67L,EACAr6L,YAAA,IAEAuU,EAAArO,KAAAi0L,EAAAj6L,WAAA,QAAAvf,EAAA1B,UAAA66M,EAAAh0L,kBAAA/X,EAAA,UAAA4mF,EAAAr2F,EAAAyP,IAAA,KACA8qH,GAAAl4H,EAAAlD,OAAA82B,EAAAskG,GACAtkG,GA9EAimL,cAuFA,SAAA3hF,EAAA9qH,GACA,MAAAA,MAAAksM,GACAM,EAAAxsM,GACA,IAAAwmB,EAAA2lL,EAAA5wM,SAAA8vM,GAAAn7H,eAMA,OALA+qD,EAAAvpH,aAAA8U,EAAA6lL,EAAA,MACAp6L,YAAA,IACK,GACLuU,EAAArO,KAAAk0L,EAAAl6L,WAAA,QAAAvf,EAAAvB,UAAA06M,EAAAh0L,kBAAA/X,EAAA,YAAA+rM,EAAAh0L,kBAAA/X,EAAA,UAAA4mF,EAAAr2F,EAAAyP,IAAA,KACA8qH,GAAAl4H,EAAAlD,OAAA82B,EAAAskG,GACAtkG,GA/FAwkB,OAwGA,SAAAprC,EAAAI,GAEA,OADA,MAAAA,MAAAksM,GACA37M,EAAA4P,cAAAH,EAAAJ,IAzGA8sM,UAsHA,SAAA5lM,GACA,GAAAnN,EAAAqgC,YAAA,CACA,IAAA4pD,EAAAjqF,EAAAqgC,cACA,OAAAgsD,EAAApzF,EAAArF,SAAA,CACAmjD,KAAAkzC,GACO98E,GAAA5P,KA1HPy1M,qBAmIA,WACA,OAAAnzM,EAAAutH,2BAnIA5yE,KAgJA,SAAArtC,GACA,OAAAm0H,EAAA1iH,QAAAzR,EAAAtN,KAhJGyyM,EAAA/0M,KAAA,IACH01M,EAAA,CACA9+M,QAAA,GACAyzB,SAAAwqL,EAAA/1M,GACAwlC,WAAAuwK,EAAAz8M,KACA6X,YAAA4kM,EAAA5kM,YACAxN,SAAAsyM,EAAAtyM,SACAkzM,iBAAAt8M,EAAA6rB,QACAwR,OAAAk/K,EAAAf,EAAAhsM,YAIAgtM,GAAA,EAKA,gBAAA/sM,GAGA,OAFAksM,EAAAlsM,EACA+sM,GAAA,EACAf,KAAAp5M,EAAArF,SAAA,CACAyS,kBACAE,UAAA3P,EAAAs2C,YAAA7mC,IACK4sM,GAAAL,IAAA,IAGL,SAAAC,EAAAxsM,GACA,MAAAA,MAAAksM,GAEAa,IACAZ,EAAA57M,EAAAs6C,aAAA7qC,GACAosM,EAAAD,EAAA5wM,SAAA+vM,GACAe,EAAAF,EAAA5wM,SAAAgwM,GACAe,EAAA/7M,EAAA4P,cAAAH,EAAA,SACA+sM,GAAA,IAkHA,SAAAD,EAAAv8M,GACA,IAAAq7E,EAAA,GAUA,OATAh5E,EAAAjF,KAAA4C,EAAA2a,WAAA,SAAAogD,EAAA4/H,GACA,IAAAlwJ,EAAAzqC,EAAAqqC,iBAAA0wB,GAEA,IAAAtwB,EAAAgxB,aAAA,CACA,IAAAlwB,EAAAd,EAAAc,UACA8vC,EAAA9vC,GAAA8vC,EAAA9vC,IAAA,IACAd,EAAA+F,eAAAmqJ,KAGAt/G,EAGA,SAAAtV,EAAA9+D,EAAA0I,EAAAwxF,EAAAx8E,EAAAjf,EAAA1F,GAGA,OAFAiH,EAAAw1M,EAAAx1M,EAAA0I,EAAAwxF,EAAAx8E,EAAAjf,EAAA1F,KACAA,EAAAo7C,iBAAAzrC,EAAA1I,GACAA,EAGA,SAAAw1M,EAAAx1M,EAAA0I,EAAAwxF,EAAAx8E,EAAAjf,EAAA1F,GACA,IAAA08M,EAAAv7G,EAAApjG,KAQA,IANAkJ,GAAAy1M,IAAAz1M,EAAA01M,qBAAA,SAAAD,GAAAv7G,EAAA7jF,WAAArW,EAAA21M,kBAAA,UAAAF,GAAAv7G,EAAA5yF,MAAAG,QAAAzH,EAAA41M,mBAAA,SAAAH,GAAAv7G,EAAA5yF,MAAAqZ,OAAA3gB,EAAA61M,eACAp3M,EAAA6O,OAAAtN,GACAA,EAAA,MAIA,MAAAy1M,EAAA,CAIA,IAoCAn/M,EApCAqoC,GAAA3+B,EAIA,IAHAA,MAvSA,SAAAk6F,GACA,IACAl6F,EADA81M,EAAA57G,EAAApjG,KAGA,YAAAg/M,EAAA,CACA,IAAA/2L,EAAAm7E,EAAAn7E,OACA/e,EAAAyjI,EAAArtH,SAAA2I,EAAA1I,SAAA,MACA9O,EAAAwX,EAAAxX,GAAA,EACAC,EAAAuX,EAAAvX,GAAA,EACAxI,MAAA+f,EAAA/f,OAAA,EACAC,OAAA8f,EAAA9f,QAAA,GACK,WACL02M,iBAAAz7G,EAAA7jF,aACG,UAAAy/L,GACH91M,EAAA,IAAAyjI,EAAAp8H,MAAA,KACAuuM,kBAAA17G,EAAA5yF,MAAAG,MACG,SAAAquM,GACH91M,EAAA,IAAAyjI,EAAAtuH,KAAA,KACA0gM,aAAA37G,EAAA5yF,MAAAqZ,KAGA3gB,EAAA,IAAAowD,EADAqzE,EAAAqyE,EAAA9/K,OAAA,GAAAlP,cAAAgvL,EAAA5hN,MAAA,KAMA,OAFA8L,EAAA01M,oBAAAI,EACA91M,EAAAlI,KAAAoiG,EAAApiG,KACAkI,EA6QA+1M,CAAA77G,IA1QA,SAAAl6F,EAAA0I,EAAAwxF,EAAAx8E,EAAA3kB,EAAA4lC,GACA,IAAAq3K,EAAA,GACA5B,EAAAl6G,EAAA5yF,OAAA,GAOA,GANA4yF,EAAAn7E,QAAAi3L,EAAAj3L,MAAA3jB,EAAA5G,MAAA0lG,EAAAn7E,QACAm7E,EAAA/iF,WAAA6+L,EAAA7+L,SAAA+iF,EAAA/iF,SAAAjjB,SACAgmG,EAAAhmE,QAAA8hL,EAAA9hL,MAAAgmE,EAAAhmE,MAAAhgC,SACAgmG,EAAAzlB,SAAAuhI,EAAAvhI,OAAAylB,EAAAzlB,OAAAvgF,SACAgmG,EAAAz3E,WAAAuzL,EAAAvzL,SAAAy3E,EAAAz3E,UAEA,UAAAziB,EAAAlJ,MAAAojG,EAAA5yF,MAAA,CACA,IAAA6sM,EAAA6B,EAAA1uM,MAAA,GACAlM,EAAAjF,KAAA,oCAAAwC,GACAu7M,EAAAv7M,EAAAw7M,EAAAC,EAAAp0M,EAAAsH,MAAAq3B,KAIA,SAAA3+B,EAAAlJ,MAAAojG,EAAA5yF,QACA6sM,EAAA6B,EAAA1uM,MAAA,GACAlM,EAAAjF,KAAA,mBAAAwC,GACAu7M,EAAAv7M,EAAAw7M,EAAAC,EAAAp0M,EAAAsH,MAAAq3B,MAIAy1K,EAAA9+M,eAAA,aAAA8+M,EAAAr8L,OAAAq8L,EAAA17L,SAAA07L,EAAAr8L,OACAq8L,EAAA9+M,eAAA,eAAA8+M,EAAAt8L,SAAAs8L,EAAAz7L,WAAAy7L,EAAAt8L,SAGA,aAAA9X,EAAAlJ,OACAkJ,EAAAq2E,SAAA+9H,GAEAz1K,GAAA,CACA3+B,EAAAsH,MAAAsmE,QAAA,EACA,IAAAqoI,EAAA7B,EAAAxmI,QACA,MAAAqoI,MAAA,GACAxyE,EAAAviH,UAAAlhB,EAAA,CACAsH,MAAA,CACAsmE,QAAAqoI,IAEOv4L,EAAAhV,GAIPi2B,EACA3+B,EAAAke,KAAA83L,GAEAvyE,EAAAtlH,YAAAne,EAAAg2M,EAAAt4L,EAAAhV,GAIA1I,EAAAke,KAAA,CACAhF,GAAAghF,EAAAhhF,IAAA,EACA5W,OAAA43F,EAAA53F,UAEA,IAAA43F,EAAA+6G,eAAAxxE,EAAAhkH,cAAAzf,EAAAk6F,EAAA+6G,eAsNAiB,CAAAl2M,EAAA0I,EAAAwxF,EAAAx8E,EAAA3kB,EAAA4lC,GAEA,UAAA82K,EAAA,CACA,IAAA1E,EAAA/wM,EAAA8iF,YAAA,GACAguH,EAAA52G,EAAApX,UAAA,GAEA,GAAAoX,EAAAi8G,mBA6BA,IAAAhvK,GADA7wC,EA1BA,CACAy6M,cACAD,cACApoM,YACAgV,kBACAjf,MAAAuB,EACAjH,SAqBAg4M,YAAAz6M,EAAAw6M,YAAA95F,IAAA1gH,GAAAoR,IAAA0uM,GAAA3zM,OAAA2zM,GAAA9oM,OAAA+oM,GAAA1zI,cAnBK,CAIL,IAFA,IAAAriE,EAAA,EAEYA,EAAAwwM,EAAA97M,OAA4BsL,IACxCk1M,EAAAx1M,EAAAwwB,QAAAlwB,GAAAoI,EAAAooM,EAAAxwM,GAAAod,EAAA1d,EAAAjH,GAGA,KAAYuH,EAAAywM,EAAA/7M,OAA4BsL,IACxCywM,EAAAzwM,IAAAN,EAAAsN,OAAAyjM,EAAAzwM,KAMA,OADA7B,EAAAiJ,IAAA1H,GACAA,GAOA,SAAAg3G,EAAA7vG,EAAAqe,GACA,IAAA1tB,EAAAqP,KAAArP,KACA,aAAAA,IAAAk8M,EAAAxuL,EAGA,SAAA4wL,EAAAj/F,EAAAD,GACA,IAAA5gH,EAAAiB,KAAAjB,QACAggN,EAAA,MAAAn/F,EAAA7gH,EAAAw6M,YAAA35F,GAAA,KAEAq+F,EADA,MAAAt+F,EAAA5gH,EAAAy6M,YAAA75F,GAAA,KACA5gH,EAAAoS,UAAA4tM,EAAAhgN,EAAAonB,gBAAApnB,EAAAmI,MAAAnI,EAAAyC,MAGA,SAAAs9M,EAAAn/F,GACA,IAAA5gH,EAAAiB,KAAAjB,QACAijB,EAAAjjB,EAAAy6M,YAAA75F,GACA39F,GAAAjjB,EAAAmI,MAAA6O,OAAAiM,GA/aAsT,EAAA9Y,kBAAA,CACAjd,KAAA,gBACAyb,aAAA,+CACAsrB,cAAA,CACA51B,iBAAA,cAEA8H,OAAA,EACAD,EAAA,EACAwpH,iBAAA,GAWA93F,eAAA,SAAAj+B,EAAAvB,GACA,OAAAm3H,EAAA5hI,KAAAypC,YAAAzpC,SAMAs1B,EAAA7Y,gBAAA,CACAld,KAAA,SAMAolE,MAAA,KAKA9yD,OAAA,SAAAmrM,EAAAvyM,EAAAtC,GACA,IAAAw5E,EAAA3hF,KAAA2kE,MACAnjE,EAAAw7M,EAAAhsM,UACA9J,EAAAlH,KAAAkH,MACA+1M,EAAAF,EAAAC,EAAAx7M,EAAAiJ,EAAAtC,GACAnI,KAAAkH,MAAAkzD,YACA54D,EAAAm4C,KAAAgoC,GAAAxxE,IAAA,SAAA2xE,GACAva,EAAA,KAAAua,EAAAm7H,EAAAn7H,GAAAk7H,EAAA91M,EAAA1F,KACK0J,OAAA,SAAA42E,EAAAE,GAELza,EADAoa,EAAA9kC,iBAAAmlC,GACAF,EAAAm7H,EAAAn7H,GAAAk7H,EAAA91M,EAAA1F,KACKuU,OAAA,SAAAisE,GACL,IAAAv5E,EAAAk5E,EAAA9kC,iBAAAmlC,GACAv5E,GAAAvB,EAAA6O,OAAAtN,KACK2iE,UACLprE,KAAA2kE,MAAAnjE,GAEA64D,yBAAA,SAAA2iJ,EAAAvyM,EAAAtC,GACAnI,KAAAkH,MAAAkzD,YACAp6D,KAAA2kE,MAAA,MAEArK,kBAAA,SAAAniD,EAAA6kM,EAAAvyM,EAAAtC,GACA,IAAA3G,EAAAw7M,EAAAhsM,UACAisM,EAAAF,EAAAC,EAAAx7M,EAAAiJ,EAAAtC,GAEA,SAAA62M,EAAAv2M,GACAA,EAAAiO,UACAjO,EAAAg2E,aAAA,EACAh2E,EAAAyO,eAAA,GAIA,QAAA+W,EAAA9V,EAAA89B,MAAgChoB,EAAA9V,EAAA01B,IAAkB5f,IAAA,CAClDs5C,EAAA,KAAAt5C,EAAAgvL,EAAAhvL,GAAA+uL,EAAAh9M,KAAAkH,MAAA1F,GACAiV,SAAAuoM,KAOAlpM,QAAAjS,EAAAJ,wBC/JA,IAAAI,EAAaH,EAAQ,KAqBrB,SAAAu7M,EAAAC,EAAAhuL,GAGA,OADAA,KAAA,MACArtB,EAAAhH,IAAA,mBAAAmvC,EAAA23J,GACA,IAAAhiJ,EAAA3hD,KAAAi9F,QAAAjxD,GACAtpC,EAAAwuB,EAAAyyK,GACAwb,EAAAD,EAAAvb,GAAA,EACA,mBAAAhiJ,EAAApiD,KAAAoiD,EAAAgiB,eAAAh1D,KAAAyb,IAAAu3B,EAAAghB,YAAAjgE,EAAAy8M,GAAAx9J,EAAAghB,YAAAjgE,EAAAy8M,KACGn/M,MAwBHm4B,EAAA93B,QArBA,SAAAuK,GACA,IAAAmU,EAAAnU,EAAA8rB,KAAAssD,UACA,OACAp4E,SAAA,CAEArL,KAAA,cACAyQ,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAxI,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,QAEAS,IAAA,CACAs6D,MAAA,SAAAjhE,GAEA,OAAAoJ,EAAAk4E,YAAAthF,IAEAu9C,KAAAl7C,EAAA7E,KAAAigN,EAAAr0M,uBChDA,IAAA/G,EAAaH,EAAQ,KAqBrB,SAAAu7M,EAAAC,EAAAhuL,GAEA,OADAA,KAAA,MACArtB,EAAAhH,IAAA,eAAA8mM,GACA,IAAAjhM,EAAAwuB,EAAAyyK,GACAwb,EAAAD,EAAAvb,GAAA,EACAhlI,EAAA,GACAC,EAAA,GAIA,OAHAD,EAAAglI,GAAAjhM,EAAAy8M,EACAvgJ,EAAA+kI,GAAAjhM,EAAAy8M,EACAxgJ,EAAA,EAAAglI,GAAA/kI,EAAA,EAAA+kI,GAAAzyK,EAAA,EAAAyyK,GACAh1L,KAAAyb,IAAApqB,KAAA8iF,YAAAnkB,GAAAglI,GAAA3jM,KAAA8iF,YAAAlkB,GAAA+kI,KACG3jM,MAyBHm4B,EAAA93B,QAtBA,SAAAuK,GACA,IAAAmU,EAAAnU,EAAAuU,kBACA,OACAvU,SAAA,CACArL,KAAA,MACAyQ,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAxI,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,QAEAS,IAAA,CACAs6D,MAAA,SAAAjhE,GAIA,OAAAoJ,EAAAk4E,YAAAthF,IAEAu9C,KAAAl7C,EAAA7E,KAAAigN,EAAAr0M,uBCpDA,IAAA/G,EAAaH,EAAQ,KAqBrB,SAAAu7M,EAAAC,EAAAhuL,GAEA,IAAAywB,EAAA3hD,KAAAi9F,UACAv6F,EAAAwuB,aAAA70B,MAAA60B,EAAA,GAAAA,EACAiuL,GAAAD,aAAA7iN,MAAA6iN,EAAA,GAAAA,GAAA,EACA,mBAAAv9J,EAAApiD,KAAAoiD,EAAAgiB,eAAAh1D,KAAAyb,IAAAu3B,EAAAghB,YAAAjgE,EAAAy8M,GAAAx9J,EAAAghB,YAAAjgE,EAAAy8M,IAuBAhnL,EAAA93B,QApBA,SAAAuK,GACA,IAAAmU,EAAAnU,EAAAo4E,UACA,OACAp4E,SAAA,CACArL,KAAA,aACAyQ,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAxI,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,QAEAS,IAAA,CACAs6D,MAAA,SAAA//D,GAEA,OAAAkI,EAAAk4E,YAAApgF,IAEAq8C,KAAAl7C,EAAA7E,KAAAigN,EAAAr0M,uBC5CA,IAAA/G,EAAaH,EAAQ,KAqBrB,SAAAu7M,EAAAC,EAAAhuL,GAEA,OAAArtB,EAAAhH,IAAA,4BAAAmvC,EAAA23J,GACA,IAAAhiJ,EAAA3hD,KAAA,MAAAgsC,EAAA,UACAtpC,EAAAwuB,EAAAyyK,GACAwb,EAAAD,EAAAvb,GAAA,EACAp9L,EAAA,SAAAylC,EACA7uC,EAAA,aAAAwkD,EAAApiD,KAAAoiD,EAAAgiB,eAAAh1D,KAAAyb,IAAAu3B,EAAAp7C,GAAA7D,EAAAy8M,GAAAx9J,EAAAp7C,GAAA7D,EAAAy8M,IAMA,MAJA,UAAAnzK,IACA7uC,IAAAwR,KAAA4U,GAAA,KAGApmB,GACG6C,MA6BHm4B,EAAA93B,QA1BA,SAAAuK,GACA,IAAAu5G,EAAAv5G,EAAAw5G,gBACAH,EAAAr5G,EAAAs5G,eACAxpC,EAAAypC,EAAA/iE,YAEA,OADAs5B,EAAA,GAAAA,EAAA,IAAAA,EAAA7H,UACA,CACAjoE,SAAA,CACArL,KAAA,QACA89C,GAAAzyC,EAAAyyC,GACAC,GAAA1yC,EAAA0yC,GACAM,EAAA88B,EAAA,GACA2pB,GAAA3pB,EAAA,IAEAvyE,IAAA,CACAs6D,MAAA5+D,EAAA7E,KAAA,SAAAwC,GACA,IAAAk5E,EAAAypC,EAAAi7F,aAAA59M,EAAA,IACAq8C,EAAAomE,EAAAo7F,YAAA79M,EAAA,IACAihE,EAAA73D,EAAAkqK,aAAA,CAAAp6F,EAAA78B,IAEA,OADA4kB,EAAAhhE,KAAAi5E,EAAA78B,EAAAlvC,KAAA4U,GAAA,KACAk/C,IAEA1jB,KAAAl7C,EAAA7E,KAAAigN,EAAAr0M,qBCdAutB,EAAA93B,QA3BA,SAAAuK,GACA,IAAAmU,EAAAnU,EAAAo4E,UACAs8H,EAAA10M,EAAA20M,eACA,OACA30M,SAAA,CACArL,KAAA,WACAyQ,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,EACAxI,MAAAsX,EAAAtX,MACAC,OAAAqX,EAAArX,OACA83M,UAAA50M,EAAA60M,eACAC,WAAA90M,EAAA+0M,gBACAL,UAAA,CACArpK,MAAAqpK,EAAArpK,MACApI,IAAAyxK,EAAAzxK,IACA+xK,MAAAN,EAAAM,MACAC,SAAAP,EAAAQ,SAGA33M,IAAA,CACAs6D,MAAA,SAAAjhE,EAAA4qB,GACA,OAAAxhB,EAAAk4E,YAAAthF,EAAA4qB,wBCvCc1oB,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAExBwoI,EAAkBxoI,EAAQ,KAE1B8uI,EAAiB9uI,EAAQ,KAwBzB4xB,EAAAxb,qBAAA,SAAA9N,GACA,IAAA+zM,EAAA/zM,EAAApH,QAOAf,EAAAvF,QAAAyhN,GACAA,EAAA,IAAAA,EAAA,GAAAC,SAOAh0M,EAAApH,QAAA,CAAAoH,EAAApH,QAAA,IANAoH,EAAApH,QAAA,EACAo7M,SAAAD,IAOGA,MAAAC,WACHh0M,EAAApH,QAAA,EACAo7M,SAAA,CAAAD,QAOA,IAAAE,EAAA3qL,EAAAhZ,qBAAA,CACA/c,KAAA,UACA+mC,cAAA,CAyBA05K,SAAA,GACAE,SAAA,MAUAC,mBAAA,KAKAl5K,YAAA,SAAAj7B,GAEA,IAAAg0M,EAAAhgN,KAAAgM,OAAAg0M,SACAhgN,KAAAgM,OAAAg0M,SAAA,KACAC,EAAAznJ,WAAAx4D,KAAA,cAAAb,WACAa,KAAAgM,OAAAg0M,YAMA94K,cAAA,SAAAnM,EAAAqM,GACA,IAAA2sC,EAAA/zE,KAAAgM,OACAm4D,GAAA/8B,EAAA2sC,EAAAh5C,GAAAilL,SACAI,EAAArsI,EAAAisI,SAAA54K,EAAA,GAAA2sC,EAAAisI,SACAK,EAAA,GAEArgN,KAAAsgN,SAAAn8I,EAAAk8I,GAEA,IAAAE,EAAA17M,EAAAusB,gBAAAgvL,EAAAC,GACAx7M,EAAA2sB,cAAA+uL,GAEA,IAAAC,EAAAxgN,KAAAmgN,mBAAA,GACAt8M,EAAAjF,KAAA2hN,EAAA,SAAA/pF,EAAAztH,GACA,IAAA03M,EAAAjqF,EAAAxqH,OAEAy0M,IAIAD,EAAA/+M,KAAAg/M,GA2QA,SAAAjqF,EAAAiqF,GACA,IAAAC,EAAAlqF,EAAAjlG,MAKA,GAHAkvL,EAAAx5M,GAAAuvH,EAAA5kG,QAAA3qB,IACAw5M,EAAAlhN,MAAAmhN,IAAAD,EAAAlhN,KAAAmhN,EAAAnhN,MAEA,MAAAkhN,EAAAP,SAAA,CACA,IAAAS,EAAAF,EAAAG,aAEAD,EACAF,EAAAP,SAAAS,EAAA15M,GACKy5M,IACLD,EAAAP,SAAAQ,EAAAR,UAKAO,EAAAG,aAAA,KA3RAC,CAAArqF,EAAAiqF,GA8RA,SAAAL,EAAAr3M,EAAA03M,GAEA,IAAAK,EAAAj9M,EAAAlD,OAAA,GAAqC8/M,GACrCC,EAAAN,EAAAr3M,GACAg4M,EAAAN,EAAAM,SAAA,QAEA,UAAAA,EACAL,GAGA78M,EAAA7F,MAAA0iN,EAAAI,GAAA,GAEAtuE,EAAA33G,iBAAA6lL,EAAAI,EAAA,CACA9lL,YAAA,IAGAw3G,EAAAv4G,iBAAAwmL,EAAAC,IAEAN,EAAAr3M,GAAA+3M,EAEG,YAAAC,EACHX,EAAAr3M,GAAA+3M,EACG,WAAAC,GAEHL,IAAAN,EAAAr3M,GAAA,MArTAi4M,CAAAZ,EAAAr3M,EAAA03M,GAyTA,SAAAQ,EAAAR,GACA,IAAAQ,EACA,OAGAA,EAAA5mL,GAAAomL,EAAApmL,GAAA,CACA6mL,EAAAT,EAAA,kBACAS,EAAAT,EAAA,mBAEA,UAAAQ,EAAA1hN,OACA,MAAA0hN,EAAAx5M,QAAAw5M,EAAAx5M,MAAAg5M,EAAAh5M,MAAA,GACA,MAAAw5M,EAAAv5M,SAAAu5M,EAAAv5M,OAAA+4M,EAAA/4M,OAAA,IAnUAy5M,CAAAf,EAAAr3M,GAAA03M,KACKzgN,MAEL,QAAAzC,EAAA6iN,EAAA3iN,OAAA,EAAsCF,GAAA,EAAQA,IAC9C,MAAA6iN,EAAA7iN,GACA6iN,EAAApqM,OAAAzY,EAAA,UAIA6iN,EAAA7iN,GAAAwjN,SAwBAT,SAAA,SAAAc,EAAAjkN,EAAAyjN,GACA/8M,EAAAjF,KAAAwiN,EAAA,SAAAp1M,GACA,GAAAA,EAAA,CAIA40M,IACA50M,EAAA40M,gBAGAzjN,EAAAsE,KAAAuK,GACA,IAAAu/E,EAAAv/E,EAAAu/E,SAEA,UAAAv/E,EAAAzM,MAAAgsF,GACAvrF,KAAAsgN,SAAA/0H,EAAApuF,EAAA6O,UAIAA,EAAAu/E,WACKvrF,OAILqhN,qBAAA,WACA,IAAA19B,EAAA3jL,KAAAmgN,mBAGA,OADAngN,KAAAmgN,mBAAA,KACAx8B,KAsKA,SAAA66B,EAAAv3M,EAAAq6M,EAAA3+G,EAAA/3E,GACA,IAAA2zL,EAAA57G,EAAApjG,KAEAkJ,EAAA,IAAAowD,EADAqzE,EAAAqyE,EAAA9/K,OAAA,GAAAlP,cAAAgvL,EAAA5hN,MAAA,KACAgmG,GACA2+G,EAAAnxM,IAAA1H,GACAmiB,EAAA1qB,IAAA+G,EAAAwB,GACAA,EAAA84M,cAAAt6M,EAGA,SAAAu6M,EAAAC,EAAA72L,GACA,IAAA82L,EAAAD,KAAAz4M,OAEA04M,IACA,UAAAD,EAAAliN,MAAAkiN,EAAAhrM,SAAA,SAAAhO,GACA+4M,EAAA/4M,EAAAmiB,KAEAA,EAAAxqB,UAAAqhN,EAAAF,eACAG,EAAA3rM,OAAA0rM,IAaA,SAAAP,EAAAriN,EAAAqnB,GACA,IAAAy7L,EAIA,OAHA99M,EAAAjF,KAAAsnB,EAAA,SAAA9kB,GACA,MAAAvC,EAAAuC,IAAA,SAAAvC,EAAAuC,KAAAugN,GAAA,KAEAA,EAnMArsL,EAAA/Y,oBAAA,CACAhd,KAAA,UAKA+H,KAAA,SAAAmD,EAAAtC,GAKAnI,KAAA4hN,OAAA/9M,EAAAV,gBAMAnD,KAAA6hN,mBAMAhwM,OAAA,SAAAiwM,EAAAr3M,EAAAtC,GAUA25M,IAAA9hN,KAAA6hN,mBACA7hN,KAAA4tK,SAGA5tK,KAAA6hN,kBAAAC,EAEA9hN,KAAA+hN,gBAAAD,EAAA35M,GAEAnI,KAAAgiN,UAAAF,EAAA35M,IAUA45M,gBAAA,SAAAD,EAAA35M,GACA,IAAAq4M,EAAAsB,EAAAT,uBAEA,GAAAb,EAAA,CAIA,IAAA51L,EAAA5qB,KAAA4hN,OACAK,EAAAjiN,KAAAkH,MAEArD,EAAAjF,KAAA4hN,EAAA,SAAA79G,GACA,IAAAo+G,EAAAp+G,EAAAo+G,QACA95M,EAAA07F,EAAA17F,GACAw6M,EAAA72L,EAAAzqB,IAAA8G,GACAi5M,EAAAv9G,EAAAu9G,SACAoB,EAAA,MAAApB,EAAAt1L,EAAAzqB,IAAA+/M,GAAA+B,EAEA,YAAAt/G,EAAApjG,KAAA,CACA,IAAAs9M,EAAAl6G,EAAA5yF,MAGA4yF,EAAAtoE,IAAAsoE,EAAAtoE,GAAA,KACAwiL,EAAA/3L,kBAAA+3L,EAAArwH,aAAA,OAKAqwH,EAAA9+M,eAAA,aAAA8+M,EAAAr8L,OAAAq8L,EAAA17L,SAAA07L,EAAAr8L,OACAq8L,EAAA9+M,eAAA,eAAA8+M,EAAAt8L,SAAAs8L,EAAAz7L,WAAAy7L,EAAAt8L,QAIA,IAAA2hM,EAmGA,SAAAv/G,GAKA,OAJAA,EAAA9+F,EAAAlD,OAAA,GAA6BgiG,GAC7B9+F,EAAAjF,KAAA,4CAAAS,OAAAmzI,EAAAn6G,iBAAA,SAAA93B,UACAoiG,EAAApiG,KAEAoiG,EAxGAw/G,CAAAx/G,GAEAo+G,GAAA,UAAAA,EAEO,YAAAA,GACPS,EAAAC,EAAA72L,GACA4zL,EAAAv3M,EAAAq6M,EAAAY,EAAAt3L,IACO,WAAAm2L,GACPS,EAAAC,EAAA72L,GALA62L,IAAA96L,KAAAu7L,GAAA1D,EAAAv3M,EAAAq6M,EAAAY,EAAAt3L,GAQA,IAAAniB,EAAAmiB,EAAAzqB,IAAA8G,GAEAwB,IACAA,EAAA25M,iBAAAz/G,EAAAl7F,MACAgB,EAAA45M,kBAAA1/G,EAAAj7F,YAYAs6M,UAAA,SAAAF,EAAA35M,GAKA,IAJA,IAAAm6M,EAAAR,EAAA91M,OAAAg0M,SACAiC,EAAAjiN,KAAAkH,MACA0jB,EAAA5qB,KAAA4hN,OAEArkN,EAAA+kN,EAAA7kN,OAAA,EAAsCF,GAAA,EAAQA,IAAA,CAC9C,IAAAolG,EAAA2/G,EAAA/kN,GACAkL,EAAAmiB,EAAAzqB,IAAAwiG,EAAA17F,IAEA,GAAAwB,EAAA,CAIA,IAAA85M,EAAA95M,EAAAO,OACAw5M,EAAAD,IAAAN,EAAA,CACAx6M,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aACO,CAEPlF,MAAA86M,EAAAH,kBAAA,EACA16M,OAAA66M,EAAAF,mBAAA,GAEA7vE,EAAAr4G,gBAAA1xB,EAAAk6F,EAAA6/G,EAAA,MACAnoL,GAAAsoE,EAAAtoE,GACAC,aAAAqoE,EAAA8/G,cAUA70C,OAAA,WACA,IAAAhjJ,EAAA5qB,KAAA4hN,OACAh3L,EAAAhsB,KAAA,SAAA6J,GACA+4M,EAAA/4M,EAAAmiB,KAEA5qB,KAAA4hN,OAAA/9M,EAAAV,iBAMA2S,QAAA,WACA9V,KAAA4tK,6BCzWAlqK,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBCJRA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBCNR,IAAA4xB,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAER,IAAAg/M,EAAmBh/M,EAAQ,KAE3BovF,EAAgBpvF,EAAQ,KAuBxB4xB,EAAAtb,kBAAA0oM,GACA5vH,EAAA9D,yBAAA,oBAEA,iCCpCA,IAAA15D,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAqBrB,SAAAi/M,EAAAp4M,EAAAkH,EAAAhH,GACA,IAEA44E,EAFAu/H,EAAA,GACAC,EAAA,mBAAAt4M,EAkCA,OA/BAE,EAAAuD,cAAA,kBAAA6kI,GACAgwE,GAAA,MAAAx/H,EAKAwvD,EAAAxvD,EAAA,qBAAA5xE,EAAAlR,OAEAsyI,EAAAtoI,GAAAkH,EAAAlR,MACA8iF,EAAAwvD,EAAAxvD,WAAA5xE,EAAAlR,OAGA,IAAAoxI,EAAAkB,EAAA7hI,UACAnN,EAAAjF,KAAA+yI,EAAA,SAAAlhI,GACA,IAAAlQ,EAAAkQ,EAAAtQ,IAAA,QAEA,UAAAI,GAAA,KAAAA,EAAA,CAIA,IAAAuiN,EAAAjwE,EAAAxvD,WAAA9iF,GAEAqiN,EAAA7kN,eAAAwC,GAEAqiN,EAAAriN,GAAAqiN,EAAAriN,IAAAuiN,EAEAF,EAAAriN,GAAAuiN,OAKA,CACAviN,KAAAkR,EAAAlR,KACA4wG,SAAAyxG,GAYAttL,EAAAlb,eAAA,2CAAAvW,EAAAjC,MAAA+gN,EAAA,mBAQArtL,EAAAlb,eAAA,gCAAAvW,EAAAjC,MAAA+gN,EAAA,WAQArtL,EAAAlb,eAAA,oCAAAvW,EAAAjC,MAAA+gN,EAAA,4BCnDAxqL,EAAA93B,QApBA,SAAAoK,GACA,IAAA04E,EAAA14E,EAAA24E,eAAA,CACAt6E,SAAA,WAGAq6E,KAAA1lF,QACAgN,EAAAwtH,aAAA,SAAA9+G,GAGA,QAAA5b,EAAA,EAAqBA,EAAA4lF,EAAA1lF,OAAyBF,IAC9C,IAAA4lF,EAAA5lF,GAAA8lF,WAAAlqE,EAAA5Y,MACA,SAIA,6BCjCA,IAAAkxI,EAAkB/tI,EAAQ,KAE1B0lC,EAAc1lC,EAAQ,KAEtBm3B,EAAAuO,EAAAvO,iBACAc,EAAAyN,EAAAzN,gBAoBAonL,EAAAtxE,EAAA9wI,OAAA,CACApB,KAAA,gBAKAyjN,mBAAA,SAAAC,GACAjjN,KAAAgM,OAAAi3M,mBAEA38K,cAAA,CACA28K,gBAAA,EACAC,kBAAA,EACAC,cAAA,KACAC,mBAAA,MAEAC,cAAA,oBAEAC,UAAA,CACAzzE,WAAA,8CACAC,SAAA,0CAEAyzE,cAAA,UACAC,sBAAA,OACAC,aAAA,GAEAC,cAAA,CACAvjM,MAAA,QAEAunE,wBAAA,KAMApgF,KAAA,SAAA0E,EAAA+X,EAAAtZ,EAAAi8B,GACA,IAAAG,EAAAlL,EAAA3vB,GACA+2M,EAAAxqJ,UAAAv4D,KAAA,OAAAgM,EAAA+X,EAAAtZ,EAAAi8B,GACAi9K,EAAA3jN,KAAAgM,EAAA66B,IAMAI,YAAA,SAAAj7B,EAAA06B,GACAq8K,EAAAxqJ,UAAAv4D,KAAA,cAAAgM,EAAA06B,GACAi9K,EAAA3jN,UAAAgM,WAEAmwK,UAAA,WACA,mBAAAn8K,KAAAG,IAAA,WACA4I,MAAA,EACAxI,KAAA,YACK,CACLwI,MAAA,EACAxI,KAAA,iBAKA,SAAAojN,EAAA9wE,EAAA50I,EAAA2lN,GACA,IACA5oL,EAAA,MACAA,EAFA63G,EAAAspC,YAEApzK,OAAA,EACA8xB,EAAA58B,EAAA2lN,EAAA,CACArkN,KAAA,MACAy7B,eAIA,IAAAoG,EAAA2hL,EACA5qL,EAAA93B,QAAA+gC,mBC9FA,IAAAv9B,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtB8uI,EAAiB9uI,EAAQ,KAEzBmgN,EAAiBngN,EAAQ,KAyBzBia,EAAA/Y,EAAA+Y,MACA84L,EAAA,mBACAD,EAAA,UACAsN,EAAAD,EAAAljN,OAAA,CACApB,KAAA,gBACAkzI,iBAAA,EACAnrI,KAAA,WACAw8M,EAAAvrJ,UAAAv4D,KAAA,QAMAA,KAAA+jN,cAAA,EAMA/jN,KAAAkH,MAAAiJ,IAAAnQ,KAAAuhL,gBAAA,IAAA5jK,GAEA3d,KAAAuhL,gBAAApxK,IAAAnQ,KAAA4yI,mBAOA5yI,KAAAkH,MAAAiJ,IAAAnQ,KAAAgkN,iBAAA,IAAArmM,GAMA3d,KAAAikN,iBAMAnxE,WAAA,WACAgxE,EAAAvrJ,UAAAv4D,KAAA,cAEAA,KAAAgkN,iBAAA5pJ,YAEAp6D,KAAAuhL,gBAAA5zD,iBAEA3tH,KAAAuhL,gBAAA2iC,WAAA,MAMAlxE,YAAA,SAAAD,EAAAF,EAAApoI,EAAAtC,GACA,IAAAg8M,EAAAnkN,KAEA8jN,EAAAvrJ,UAAAv4D,KAAA,cAAA+yI,EAAAF,EAAApoI,EAAAtC,GACA,IAAAi8M,EAAApkN,KAAAgkN,iBACAP,EAAA5wE,EAAA1yI,IAAA,mBAEA0D,EAAAvF,QAAAmlN,KACAA,EAAA,CAAAA,MAGAY,EAAA,cACA,IAAAC,EAAAzxE,EAAArmI,SAAA,iBAaA,SAAA63M,EAAA9jN,EAAAgkN,GACA,IAAAC,EAAAjkN,EAAA,YACA81M,EAAAzxM,EAAA4mB,WAAAqnH,EAAA1yI,IAAA,gBAAA0yI,EAAAspC,YAAA57K,MAAAgkN,GAAA,CAGAl8B,QAAAxkL,EAAA7E,KAAAmlN,EAAAM,QAAAN,EAAAK,EAAA3xE,EAAA1qI,IACO,CACP6H,GAAAyzM,EAAA,KACAxzM,GAAAwzM,EAAA,KACAh8M,MAAAg8M,EAAA,GACA/7M,OAAA+7M,EAAA,KAEApN,EAAA91M,OACA6jN,EAAAj0M,IAAAkmM,GAzBA+N,EAAAj0M,IAAA,IAAAvL,EAAAgZ,KAAA,CACArd,KAAA,WACAwP,MAAA,CACAoR,SAAAmjM,EAAAr1I,eACA7pB,KAAAk/J,EAAA96L,UACA1E,kBAAA,SACAD,UAAA,UAEA9Z,QAAA,KAEAs5M,EAAA,eAsBAlxE,YAAA,SAAAN,EAAAE,EAAA7f,GACA,IAAAmgB,EAAArzI,KAAA4yI,kBACAmvC,EAAA/hL,KAAAuhL,gBACA6iC,EAAApkN,KAAAgkN,iBACAU,EAAA7xE,EAAAspC,YAAApzK,MACAo7F,EAAAsyG,EAAAiO,GACAC,EAAAlO,EAAA,EAAAiO,GACAE,EAAApO,EAAA,EAAAkO,GAEAlyE,EAAAl5G,IAAAu5G,EAAA1yI,IAAA,UAAAkzI,EAAAR,EAAA1yI,IAAA,WAAAukN,EAAAxxF,EAAAzrH,MAAA,KAAAi9M,EAAA,KAAAxxF,EAAAxrH,QACA8qI,EAAAl5G,IACA,aAAA8qL,EAAAvxE,EAAA1yI,IAAA,yBACA,IAAAi0I,EAAAf,EAAAl0H,kBACA0lM,EAAAT,EAAAjlM,kBACA2lM,EAAA9kN,KAAAikN,gBAAA7vE,EAAAjwC,GAAA+uB,EAAA/uB,GACA4gH,EAAA,EAAA3wE,EAAApkI,GAAAokI,EAAAnkI,GAEA80M,EAAAL,GAAArxE,EAAAzzH,SAAA8kM,GAEA,IAAAM,EAAA,MACAC,EAAA,EAAAJ,EAAA70M,GAAA60M,EAAA50M,GACAkzM,EAAAt/M,EAAA1B,UAAA0wI,EAAA1yI,IAAA,oBAAA0yI,EAAA1yI,IAAA,eAEA2kN,IAGA,QAFAjyE,EAAA1yI,IAAA,yBAGA8kN,EAAAP,IAAAxxF,EAAA/uB,GAAA0gH,EAAA1gH,GAGA6gH,EAAAN,IAAAG,EAAA1gH,GAAAg/G,GAKA8B,EAAA,EAAAP,IAAAtwE,EAAAuwE,GAAA,EAAAE,EAAAF,GAAA,EACAtxE,EAAA1sH,KAAA,WAAAo+L,GACAhjC,EAAAp7J,KAAA,WAAAq+L,GACAZ,EAAAz9L,KAAA,WAAAs+L,GAIA,IAAA/xE,EAAAlzI,KAAAkH,MAAAiY,kBAYA,IAXA+zH,EAAA,CACAljI,EAAA,EACAC,EAAA,IAGAk0F,GAAA2gH,EAAA5xF,EAAA/uB,GAAAiwC,EAAAjwC,GACA+uC,EAAAyxE,GAAAh2M,KAAAG,IAAAslI,EAAAuwE,GAAAE,EAAAF,IAEAzxE,EAAA0xE,GAAAj2M,KAAAC,IAAA,EAAAi2M,EAAAD,GAAAK,EAAA,EAAAP,IACA3iC,EAAAmiC,WAAAhxF,EAAA/uB,GAEA2gH,EAAA,CACA,IAAA9jI,EAAA,CACAhxE,EAAA,EACAC,EAAA,GAEA+wE,EAAAmjB,GAAAx1F,KAAAG,IAAAokH,EAAA/uB,GAAA0gH,EAAA1gH,GAAAg/G,EAAA,GACAniI,EAAA2jI,GAAAzxE,EAAAyxE,GACA5iC,EAAAr0D,YAAA,IAAA9oH,EAAAsZ,KAAA,CACAsJ,MAAAw5D,KAIA+gG,EAAAmiC,WAAAljI,EAAAmjB,QAGAigH,EAAAvrL,UAAA,SAAA7W,GACAA,EAAA2E,KAAA,CACAy3D,WAAA,EACArzE,QAAA,MAMA,IAAAm6M,EAAAllN,KAAAmlN,aAAAtyE,GAUA,OARA,MAAAqyE,EAAAE,WAAAxgN,EAAAgiB,YAAAysH,EAAA,CACAzzH,SAAAslM,EAAAG,mBAGAP,GAAAjyE,GAEA7yI,KAAAslN,oBAAAzyE,EAAAqyE,GAEAhyE,GAEAuxE,QAAA,SAAA7sE,EAAA/E,EAAA1qI,GACA,IAAA86M,EAAAjjN,KAAAmlN,aAAAtyE,GAAA+E,GAEA,MAAAqrE,GAAA96M,EAAA2P,eAAA,CACAvY,KAAA,eACA0jN,kBACAsC,SAAA1yE,EAAA5rI,MAGAq+M,oBAAA,SAAAzyE,EAAAqyE,GACA,IAAAd,EAAApkN,KAAAgkN,iBACAngN,EAAAjF,KAAA,iCAAA2B,GACA,IAAAilN,EAAA,MAAAN,EAAA3kN,EAAA,aACA81M,EAAA+N,EAAA54H,YAAAjrF,GAEA81M,IACAA,EAAAz/L,SAAA,OAAA4uM,EAAA3yE,EAAA1yI,IAAA,oBAAA0yI,EAAA1yI,IAAA,6BACAk2M,EAAA73H,OAAAgnI,EAAA,uBAGA,IAAAC,EAAArB,EAAA54H,YAAA,YACA63H,EAAAxwE,EAAA1yI,IAAA,iBACAilN,EAAAF,EAAAE,UACA7zI,EAAA,MAAA6zI,IAAA,IACAnwF,EAAAiwF,EAAAQ,UACAD,GAAApC,GAAAoC,EAAA7uM,SAAA,OAAA/S,EAAA/B,SAAAuhN,KAAApgN,QAAA,YAA4HsuE,GAAAtuE,QAAA,UAA4BgyH,GAAAouF,EAAA,CACxJ9xI,UACA0jD,YAcAkwF,aAAA,SAAAtyE,GAEA,IASAuyE,EACAO,EACAC,EACAC,EAZAC,EAAAjzE,EAAA1yI,IAAA,sBACAkzI,EAAArzI,KAAA4yI,kBACAwB,EAAAf,EAAAl0H,kBACA4mM,EAAA/lN,KAAAuhL,gBAAA2iC,WACAQ,EAAA7xE,EAAAspC,YAAApzK,MACAo7F,EAAAsyG,EAAAiO,GACAC,EAAAlO,EAAA,EAAAiO,GACAxgH,EAAAsyG,EAAAkO,GACAK,EAAA1xE,EAAAzzH,SAAAjjB,QAMAqD,KAAAikN,gBACA5wE,EAAAx6G,UAAA,SAAA7W,GACAA,EAAAmyH,oBAAA2xE,IACAD,EAAA7jM,KAIA6jM,EAAAxyE,EAAAp6G,QAAA,GAGA,IAAAysL,EAAAK,EAAAp3M,KAAAg2C,KAAAyvF,EAAAjwC,GAAA4hH,GAAA,EAEA,GAAAF,EAAA,CACA,IAAAG,EAAAH,EAAA1mM,kBACA8mM,EAAAJ,EAAAjmM,SAAA8kM,GAAAsB,EAAA9hH,GACA6gH,EAAAL,IAAAuB,EAAA7xE,EAAAlwC,GACAkhH,EAAAz2M,KAAAod,MAAA25L,GAAAO,EAAAD,EAAA9hH,GAAA6hH,EAAA,GAAA3xE,EAAAjwC,IACAihH,EAAAhxE,EAAAjwC,IAAAuhH,EAAA/2M,KAAAG,IAAA,EAAAH,KAAAC,IAAA82M,EAAA,EAAAN,KAAA,EACA,IAOAc,EAPAC,EAAA,CACAn2M,EAAA,EACAC,EAAA,GAEAk2M,EAAAhiH,GAAA4hH,EACAI,EAAAxB,GAAAvwE,EAAAuwE,GACAwB,EAAAjiH,IAAA6gH,EAAAL,GAAAtwE,EAAAlwC,GAEA,IAAA3Y,EAAA8nD,EAAA9nD,WAkBA,GAjBA8nD,EAAAx6G,UAAA,SAAA7W,EAAAjZ,GACA,IAAAi9M,EAAAI,EAAApkM,GAEAgkM,EAAAvlL,UAAA0lL,KACA,MAAAD,MAAAn9M,GAGA68M,EAAA5jM,EAAAmyH,mBAIAprI,IAAAwiF,EAAA9tF,OAAA,GAAAuoN,EAAA9hH,GAAA8hH,EAAA7hH,IAAAgiH,EAAAjiH,GAAAiiH,EAAAhiH,KACAyhH,EAAA,QAKA,MAAAM,EAAA,CACA,IACAG,EAAAD,EADA76H,EAAA26H,IAIA,GAFAC,EAAAjiH,GAAAmiH,EAAAniH,GAAAmiH,EAAAliH,GAAAgiH,EAAAhiH,GAEA+hH,GAAA,GAAAG,EAAAniH,IAAAiiH,EAAAjiH,GACAyhH,EAAA,SACS,CACT,KAAAO,EAAA,GAAAE,EAAA76H,EAAA26H,EAAA,IAAAzlL,UAAA0lL,IACAD,IAGAP,EAAAp6H,EAAA26H,GAAA/xE,oBAKA,OACAkxE,gBAAAN,EACAK,YACAM,YACAC,oBACAC,qBAGA,SAAAQ,EAAA39M,GACA,IAAAu9M,EAAAv9M,EAAA0W,kBAAAliB,QAEA,OADA+oN,EAAA9hH,IAAAz7F,EAAAmX,SAAA8kM,GACAsB,MAIA5kL,EAAA0iL,EACA3rL,EAAA93B,QAAA+gC,mBCjWc19B,EAAQ,KA4BtB0W,eAAA,uCAAA3I,EAAAhH,GACA,IAAAw4M,EAAAxxM,EAAAwxM,gBACA,MAAAA,GAAAx4M,EAAAuD,cAAA,CACAlF,SAAA,SACAwK,QAAA,SACAC,MAAA9B,GACG,SAAAohI,GACHA,EAAAmwE,mBAAAC,wBCnCA,IAAA3tL,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KA+BR4xB,EAAAlb,eAAA,CACA7a,KAAA,UACAwV,MAAA,UACA7J,OAAA,2BAEA,cACAoqB,EAAAlb,eAAA,CACA7a,KAAA,UACAwV,MAAA,UACA7J,OAAA,2BAEA,+BChDA,IAqBAk2B,EArBc19B,EAAQ,KAqBtB4Y,qBAAA,CACA/c,KAAA,UACAyb,aAAA,gBACAsrB,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACAye,MAAA,EAEAsvL,aAAA,EAGAv8M,QAAA,OAEAiiI,UAAA,kBACAu6E,mBAAA,EACAC,YAAA,SAQAC,SAAA,EAGAC,UAAA,EAEAC,UAAA,IAEAC,mBAAA,GACAC,WAAA,EAEA15M,gBAAA,qBAEA6oB,YAAA,OAEAi8G,aAAA,EAEAC,YAAA,EAGAtrF,QAAA,EAEAxnB,aAAA,GAEAlJ,YAAA,CAGA32B,KAAA,OAKAoiD,KAAA,OACAh4C,UAAA,OACA+9E,wBAAA,IACAmtE,sBAAA,iBACAz+H,WAAA,CACAjW,MAAA,OACA1Y,MAAA,EACAlI,KAAA,SAEAqjB,UAAA,KAKAA,UAAA,CACAzC,MAAA,OACAwE,SAAA,OAKAwT,EAAA93B,QAAA+gC,mBChGA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBK,EAAUL,EAAQ,KAElBojN,EAAqBpjN,EAAQ,KAE7B00B,EAAiB10B,EAAQ,KAEzBy5B,EAAiBz5B,EAAQ,KAEzBkB,EAAclB,EAAQ,KAEtB+vM,EAA0B/vM,EAAQ,KAElC8uI,EAAiB9uI,EAAQ,KAEzBsiC,EAAYtiC,EAAQ,KAEpB4yM,EAAqB5yM,EAAQ,KAE7B++F,EAAiB/+F,EAAQ,KAEzBqjN,EAA4BrjN,EAAQ,KAqBpC1E,EAAA6E,EAAA7E,KACAJ,EAAAiF,EAAAjF,KACA2tB,EAAA4Q,EAAA5Q,aACAy6L,EAAA,IAAApiN,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,GAAA,EACAC,GAAA,EACAxI,MAAA,EACAC,OAAA,KAIA05B,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,UACA+H,KAAA,SAAAmD,EAAAtC,GACA,IAAApE,EAAAkT,KAAA,CAIA,IAAAgwM,EAAA,IAAAH,EAAA3+M,EAAA0D,SAAA1D,GACAnI,KAAAknN,gBAAAD,IAEAp1M,OAAA,SAAAkiI,EAAAtpI,EAAAtC,GACA,IAAApE,EAAAkT,OAAAlT,EAAAqhC,IAAA,CAKAplC,KAAAkH,MAAAkzD,YAMAp6D,KAAAmnN,cAAApzE,EAMA/zI,KAAAy6M,SAAAhwM,EAMAzK,KAAAoI,KAAAD,EAOAnI,KAAAonN,oBAAA,KAMApnN,KAAAqnN,mBAAAtzE,EAAA5zI,IAAA,qBACA,IAAA8mN,EAAAjnN,KAAAknN,gBACAD,EAAA/7M,SACA+7M,EAAAK,aAAAvzE,EAAA5zI,IAAA,cAEAH,KAAAunN,sBAEAvnN,KAAAwnN,cAEAD,oBAAA,WACA,IACAv7E,EADAhsI,KAAAmnN,cACAhnN,IAAA,aACAm2M,EAAAv6L,SAAA,cAAA/b,KAAAoI,KAAApJ,EAAA,SAAAkxI,EAAAx3H,EAAAZ,GAEA,SAAAk0H,IACAA,EAAAnrI,QAAAqvI,IAAA,EACAlwI,KAAAynN,SAAA/uM,EAAAZ,GACS,UAAAo4H,GACTlwI,KAAA0nN,MAAA5vM,KAGK9X,QAELwnN,UAAA,WACA,IAAAzzE,EAAA/zI,KAAAmnN,cACA18M,EAAAzK,KAAAy6M,SACAtyM,EAAAnI,KAAAoI,KAEA,SAAApI,KAAAo/I,QAAA,MAAAp/I,KAAAq/I,QAGA,SAAAtL,EAAA5zI,IAAA,cACA,IAAA2N,EAAA9N,KACAonE,aAAApnE,KAAA2nN,uBACA3nN,KAAA2nN,sBAAAtgJ,WAAA,WAIAv5D,EAAA85M,gBAAA7zE,EAAAtpI,EAAAtC,EAAA,CACA6H,EAAAlC,EAAAsxI,OACAnvI,EAAAnC,EAAAuxI,aAsBAuoE,gBAAA,SAAA7zE,EAAAtpI,EAAAtC,EAAAsJ,GACA,GAAAA,EAAA7T,OAAAoC,KAAA0S,MAAA3O,EAAAkT,KAAA,CAIA,IAAAa,EAAA04H,EAAA/+H,EAAAtJ,GAEAnI,KAAA6nN,QAAA,GAEA,IAAAtT,EAAA9iM,EAAA8iM,eAEA,GAAA9iM,EAAAwkB,SAAA,MAAAxkB,EAAAzB,GAAA,MAAAyB,EAAAxB,EAAA,CACA,IAAAxH,EAAAu+M,EACAv+M,EAAAmX,SAAA,CAAAnO,EAAAzB,EAAAyB,EAAAxB,GACAxH,EAAAyC,SACAzC,EAAAwtB,QAAAxkB,EAAAwkB,QAEAj2B,KAAAynN,SAAA,CACA/wJ,QAAAjlD,EAAAzB,EACA8mD,QAAArlD,EAAAxB,EACAhS,OAAAwK,GACOqP,QACF,GAAAy8L,EACLv0M,KAAAynN,SAAA,CACA/wJ,QAAAjlD,EAAAzB,EACA8mD,QAAArlD,EAAAxB,EACA2P,SAAAnO,EAAAmO,SACA7K,MAAA,GACAw/L,eAAA9iM,EAAA8iM,eACA7wF,cAAAjyG,EAAAiyG,eACO5rG,QACF,SAAArG,EAAA2G,YAAA,CACL,GAAApY,KAAA8nN,qBAAA/zE,EAAAtpI,EAAAtC,EAAAsJ,GACA,OAGA,IAAAs2M,EAAAtU,EAAAhiM,EAAAhH,GACA4yC,EAAA0qK,EAAA18L,MAAA,GACAiyB,EAAAyqK,EAAA18L,MAAA,GAEA,MAAAgyB,GAAA,MAAAC,GACAt9C,KAAAynN,SAAA,CACA/wJ,QAAArZ,EACAyZ,QAAAxZ,EACA19B,SAAAnO,EAAAmO,SACA3hB,OAAA8pN,EAAAt/M,GACAsM,MAAA,IACS+C,QAEJ,MAAArG,EAAAzB,GAAA,MAAAyB,EAAAxB,IAGL9H,EAAA2P,eAAA,CACAvY,KAAA,oBACAyQ,EAAAyB,EAAAzB,EACAC,EAAAwB,EAAAxB,IAGAjQ,KAAAynN,SAAA,CACA/wJ,QAAAjlD,EAAAzB,EACA8mD,QAAArlD,EAAAxB,EACA2P,SAAAnO,EAAAmO,SACA3hB,OAAAkK,EAAA2D,QAAAm/E,UAAAx5E,EAAAzB,EAAAyB,EAAAxB,GAAAhS,OACA8W,MAAA,IACO+C,MAGPkwM,gBAAA,SAAAj0E,EAAAtpI,EAAAtC,EAAAsJ,GACA,IAAAw1M,EAAAjnN,KAAAknN,iBAEAlnN,KAAAqnN,oBAAArnN,KAAAmnN,eACAF,EAAAgB,UAAAjoN,KAAAmnN,cAAAhnN,IAAA,cAGAH,KAAAo/I,OAAAp/I,KAAAq/I,OAAA,KAEA5tI,EAAA7T,OAAAoC,KAAA0S,KACA1S,KAAA0nN,MAAAl3E,EAAA/+H,EAAAtJ,KAMA2/M,qBAAA,SAAA/zE,EAAAtpI,EAAAtC,EAAAsJ,GACA,IAAA2G,EAAA3G,EAAA2G,YACAjH,EAAAM,EAAAN,UACAizE,EAAA35E,EAAA5B,aAAA,eAAAu7E,iBAEA,SAAAhsE,GAAA,MAAAjH,GAAA,MAAAizE,EAAA,CAIA,IAAArzE,EAAAtG,EAAA4N,iBAAAD,GAEA,GAAArH,EAOA,aAFAgjI,EAAAm0E,EAAA,CADAn3M,EAAAC,UACA8qC,aAAA3qC,GAAAJ,KAAAL,kBAAA,IAAwHD,MAAAsjI,KAExH5zI,IAAA,WAUA,OANAgI,EAAA2P,eAAA,CACAvY,KAAA,oBACA6Y,cACAjH,YACAyO,SAAAnO,EAAAmO,YAEA,IAEA6nM,SAAA,SAAA/uM,EAAAZ,GACA,IAAArP,EAAAiQ,EAAAza,OAGA,GAFA+B,KAAAmnN,cAEA,CAKAnnN,KAAAo/I,OAAA1mI,EAAAg+C,QACA12D,KAAAq/I,OAAA3mI,EAAAo+C,QACA,IAAAy9I,EAAA77L,EAAA67L,eAEAA,KAAA92M,OACAuC,KAAAmoN,iBAAA5T,EAAA77L,GAEAjQ,GAAA,MAAAA,EAAA0I,WACAnR,KAAAonN,oBAAA,KAEApnN,KAAAooN,uBAAA1vM,EAAAjQ,EAAAqP,IAEArP,KAAAwtB,SACAj2B,KAAAonN,oBAAA,KAEApnN,KAAAqoN,0BAAA3vM,EAAAjQ,EAAAqP,KAEA9X,KAAAonN,oBAAA,KAEApnN,KAAA0nN,MAAA5vM,MAGAwwM,YAAA,SAAAv0E,EAAAj1I,GAKA,IAAA4nE,EAAAqtE,EAAA5zI,IAAA,aACArB,EAAA+E,EAAA7E,KAAAF,EAAAkB,MACAonE,aAAApnE,KAAAuoN,aACA7hJ,EAAA,EAAA1mE,KAAAuoN,YAAAlhJ,WAAAvoE,EAAA4nE,GAAA5nE,KAEAqpN,iBAAA,SAAA5T,EAAA77L,GACA,IAAAjO,EAAAzK,KAAAy6M,SACA9/G,EAAA36F,KAAAmnN,cACA97L,EAAA,CAAA3S,EAAAg+C,QAAAh+C,EAAAo+C,SACA0xJ,EAAA,GACAC,EAAA,GACAC,EAAAR,EAAA,CAAAxvM,EAAAgrG,cAAA/oB,IACA/7F,EAAA21M,EAAA,SAAAoU,GAWA/pN,EAAA+pN,EAAA/T,WAAA,SAAAhlM,GACA,IAAAs0C,EAAAz5C,EAAA5B,aAAA+G,EAAA+zG,QAAA,OAAA/zG,EAAA02E,WACAsiI,EAAAh5M,EAAAtQ,MACAupN,EAAA,GAEA,GAAA3kK,GAAA,MAAA0kK,EAAA,CAIA,IAAAE,EAAA/B,EAAAlkH,cAAA+lH,EAAA1kK,EAAAvC,KAAAl3C,EAAAmF,EAAAuzF,kBAAAvzF,EAAAilM,eACAhxM,EAAAjF,KAAAgR,EAAAuzF,kBAAA,SAAAE,GACA,IAAAlqF,EAAA1O,EAAA4N,iBAAAgrF,EAAAjrF,aACAjH,EAAAkyF,EAAApyF,gBACAqyF,EAAAnqF,KAAAP,cAAAzH,GACAmyF,EAAAqgB,QAAA/zG,EAAA+zG,QACArgB,EAAAhd,UAAA12E,EAAA02E,UACAgd,EAAAv/C,SAAAn0C,EAAAm0C,SACAu/C,EAAAhc,OAAA13E,EAAA03E,OACAgc,EAAAslH,UAAAnmH,EAAA7/C,gBAAAsB,EAAAvC,KAAAinK,GACAtlH,EAAAylH,eAAAD,EAEAxlH,IACAmlH,EAAAhnN,KAAA6hG,GACAulH,EAAApnN,KAAA0X,EAAA+xB,cAAA/5B,GAAA,OAOA,IAAA63M,EAAAF,EACAN,EAAA/mN,MAAAunN,EAAA5wL,EAAAuF,WAAAqrL,GAAA,aAAAH,EAAAn/L,KAAA,eAEK1pB,MAELwoN,EAAA31I,UACA21I,IAAA9+L,KAAA,gBACA,IAAAu/L,EAAAvwM,EAAAkH,SAEA5f,KAAAsoN,YAAAI,EAAA,WACA1oN,KAAAkpN,+BAAA3U,GACAv0M,KAAAmpN,gBAAAT,EAAAO,EAAA59L,EAAA,GAAAA,EAAA,GAAArrB,KAAAknN,gBAAAuB,GAEAzoN,KAAAopN,oBAAAV,EAAAF,EAAAC,EAAA95M,KAAAskB,SAAA5H,EAAA,GAAAA,EAAA,GAAA49L,MAMAb,uBAAA,SAAA1vM,EAAAjQ,EAAAqP,GACA,IAAArN,EAAAzK,KAAAy6M,SAIAriM,EAAA3P,EAAA2P,YACArH,EAAAtG,EAAA4N,iBAAAD,GAEAO,EAAAlQ,EAAAkQ,WAAA5H,EACAI,EAAA1I,EAAA0I,UACA0H,EAAApQ,EAAAoQ,SACArX,EAAAmX,EAAA3H,UACA+iI,EAAAm0E,EAAA,CAAA1mN,EAAAs6C,aAAA3qC,GAAAwH,EAAA5H,MAAAL,kBAAA,IAAqID,MAAAzQ,KAAAmnN,gBACrIkC,EAAAt1E,EAAA5zI,IAAA,WAEA,SAAAkpN,GAAA,SAAAA,EAAA,CAIA,IAAAlxM,EAAAQ,EAAAC,cAAAzH,EAAA0H,GACAywM,EAAA3wM,EAAAuyB,cAAA/5B,GAAA,EAAA0H,GACA0wM,EAAA,QAAA5wM,EAAApY,KAAA,IAAA4Q,EAEAnR,KAAAsoN,YAAAv0E,EAAA,WACA/zI,KAAAopN,oBAAAr1E,EAAAu1E,EAAAnxM,EAAAoxM,EAAA7wM,EAAAg+C,QAAAh+C,EAAAo+C,QAAAp+C,EAAAkH,SAAAlH,EAAAza,UAKA6Z,EAAA,CACAvY,KAAA,UACA0R,gBAAAE,EACAA,UAAA3P,EAAAs2C,YAAA3mC,GACAiH,cACAxa,KAAAoC,KAAA0S,QAGA21M,0BAAA,SAAA3vM,EAAAjQ,EAAAqP,GACA,IAAAk5D,EAAAvoE,EAAAwtB,QAEA,qBAAA+6C,EAAA,CAEAA,EAAA,CACAI,QAFAJ,EAIAK,UAJAL,GAQA,IAAAw4I,EAAA,IAAAxjL,EAAAgrC,EAAAhxE,KAAAmnN,cAAAnnN,KAAAy6M,UACA6O,EAAAE,EAAArpN,IAAA,WACAopN,EAAA56M,KAAAskB,SAIAjzB,KAAAsoN,YAAAkB,EAAA,WACAxpN,KAAAopN,oBAAAI,EAAAF,EAAAE,EAAArpN,IAAA,uBAAyGopN,EAAA7wM,EAAAg+C,QAAAh+C,EAAAo+C,QAAAp+C,EAAAkH,SAAAnX,KAIzGqP,EAAA,CACAvY,KAAA,UACA3B,KAAAoC,KAAA0S,OAGA02M,oBAAA,SAAAr1E,EAAAu1E,EAAAnxM,EAAAoxM,EAAAv5M,EAAAC,EAAAg5M,EAAAxgN,GAIA,GAFAzI,KAAA6nN,QAAA,GAEA9zE,EAAA5zI,IAAA,gBAAA4zI,EAAA5zI,IAAA,SAIA,IAAA8mN,EAAAjnN,KAAAknN,gBACA71I,EAAA0iE,EAAA5zI,IAAA,aACA8oN,KAAAl1E,EAAA5zI,IAAA,YACA,IAAA0mH,EAAAyiG,EAEA,GAAAj4I,GAAA,kBAAAA,EACAw1C,EAAAzuF,EAAAsG,UAAA2yC,EAAAl5D,GAAA,QACK,uBAAAk5D,EAAA,CACL,IAAAgG,EAAAr4E,EAAA,SAAAyqN,EAAA5iG,GACA4iG,IAAAzpN,KAAA6nN,UACAZ,EAAAyC,WAAA7iG,GAEA7mH,KAAAmpN,gBAAAp1E,EAAAk1E,EAAAj5M,EAAAC,EAAAg3M,EAAA9uM,EAAA1P,KAEOzI,MACPA,KAAA6nN,QAAA0B,EACA1iG,EAAAx1C,EAAAl5D,EAAAoxM,EAAAlyI,GAGA4vI,EAAAyC,WAAA7iG,GACAogG,EAAAjwL,KAAA+8G,GAEA/zI,KAAAmpN,gBAAAp1E,EAAAk1E,EAAAj5M,EAAAC,EAAAg3M,EAAA9uM,EAAA1P,KAaA0gN,gBAAA,SAAAp1E,EAAAk1E,EAAAj5M,EAAAC,EAAAmhE,EAAAj5D,EAAA1P,GACA,IAAA21F,EAAAp+F,KAAAoI,KAAAsE,WAEA2xF,EAAAr+F,KAAAoI,KAAAuE,YAEAs8M,KAAAl1E,EAAA5zI,IAAA,YACA,IAAAwpN,EAAAv4I,EAAAklE,UACAvzC,EAAAgxC,EAAA5zI,IAAA,SACAypN,EAAA71E,EAAA5zI,IAAA,iBACA4e,EAAAtW,KAAA0W,kBAAAliB,QAWA,GAVAwL,GAAAsW,EAAAS,eAAA/W,EAAAoe,WAEA,oBAAAoiM,IAEAA,IAAA,CAAAj5M,EAAAC,GAAAkI,EAAAi5D,EAAA3oE,GAAAsW,EAAA,CACAo2J,SAAA,CAAA/2E,EAAAC,GACAsrH,cAAAhtN,WAIAkH,EAAAvF,QAAA2qN,GACAj5M,EAAAuc,EAAA08L,EAAA,GAAA7qH,GACAnuF,EAAAsc,EAAA08L,EAAA,GAAA5qH,QACK,GAAAx6F,EAAA1F,SAAA8qN,GAAA,CACLA,EAAAxhN,MAAAkiN,EAAA,GACAV,EAAAvhN,OAAAiiN,EAAA,GACA,IAAAv2E,EAAAZ,EAAA/4G,cAAAwvL,EAAA,CACAxhN,MAAA22F,EACA12F,OAAA22F,IAEAruF,EAAAojI,EAAApjI,EACAC,EAAAmjI,EAAAnjI,EACA8yF,EAAA,KAGA6mH,EAAA,UAEA,qBAAAX,GAAAxgN,EAAA,CACA,IAAAklE,EA+JA,SAAA/tD,EAAAb,EAAA4qM,GACA,IAAAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEA35M,EAAA,EACAC,EAAA,EACA85M,EAAAhrM,EAAAtX,MACAuiN,EAAAjrM,EAAArX,OAEA,OAAAkY,GACA,aACA5P,EAAA+O,EAAA/O,EAAA+5M,EAAA,EAAAF,EAAA,EACA55M,EAAA8O,EAAA9O,EAAA+5M,EAAA,EAAAF,EAAA,EACA,MAEA,UACA95M,EAAA+O,EAAA/O,EAAA+5M,EAAA,EAAAF,EAAA,EACA55M,EAAA8O,EAAA9O,EAAA65M,EAdA,EAeA,MAEA,aACA95M,EAAA+O,EAAA/O,EAAA+5M,EAAA,EAAAF,EAAA,EACA55M,EAAA8O,EAAA9O,EAAA+5M,EAnBA,EAoBA,MAEA,WACAh6M,EAAA+O,EAAA/O,EAAA65M,EAvBA,EAwBA55M,EAAA8O,EAAA9O,EAAA+5M,EAAA,EAAAF,EAAA,EACA,MAEA,YACA95M,EAAA+O,EAAA/O,EAAA+5M,EA5BA,EA6BA95M,EAAA8O,EAAA9O,EAAA+5M,EAAA,EAAAF,EAAA,EAGA,OAAA95M,EAAAC,GAlMAg6M,CAAAhB,EAAAlqM,EAAA4qM,GACA35M,EAAA29D,EAAA,GACA19D,EAAA09D,EAAA,OACO,CACPA,EAoGA,SAAA39D,EAAAC,EAAAxH,EAAA21F,EAAAC,EAAA6rH,EAAAC,GACA,IAAAprK,EAAAqrK,EAAA3hN,GACAhB,EAAAs3C,EAAAt3C,MACAC,EAAAq3C,EAAAr3C,OAEA,MAAAwiN,IACAl6M,EAAAvI,EAAAyiN,EAAA9rH,EACApuF,GAAAvI,EAAAyiN,EAEAl6M,GAAAk6M,GAIA,MAAAC,IACAl6M,EAAAvI,EAAAyiN,EAAA9rH,EACApuF,GAAAvI,EAAAyiN,EAEAl6M,GAAAk6M,GAIA,OAAAn6M,EAAAC,GAzHAo6M,CAAAr6M,EAAAC,EAAAmhE,EAAA3oE,GAAA21F,EAAAC,EAAA0E,EAAA,QAAA6mH,EAAA,SACA55M,EAAA29D,EAAA,GACA19D,EAAA09D,EAAA,GAMA,GAHAo1B,IAAA/yF,GAAAs6M,EAAAvnH,GAAA4mH,EAAA,eAAA5mH,EAAA4mH,EAAA,MACAC,IAAA35M,GAAAq6M,EAAAV,GAAAD,EAAA,gBAAAC,EAAAD,EAAA,MAEA51E,EAAA5zI,IAAA,YACAwtE,EAmHA,SAAA39D,EAAAC,EAAAxH,EAAA21F,EAAAC,GACA,IAAAt/C,EAAAqrK,EAAA3hN,GACAhB,EAAAs3C,EAAAt3C,MACAC,EAAAq3C,EAAAr3C,OAKA,OAJAsI,EAAArB,KAAAC,IAAAoB,EAAAvI,EAAA22F,GAAA32F,EACAwI,EAAAtB,KAAAC,IAAAqB,EAAAvI,EAAA22F,GAAA32F,EACAsI,EAAArB,KAAAG,IAAAkB,EAAA,GACAC,EAAAtB,KAAAG,IAAAmB,EAAA,GACA,CAAAD,EAAAC,GA3HAs6M,CAAAv6M,EAAAC,EAAAmhE,EAAA3oE,GAAA21F,EAAAC,GACAruF,EAAA29D,EAAA,GACA19D,EAAA09D,EAAA,GAGAyD,EAAA7zB,OAAAvtC,EAAAC,IAIAi5M,+BAAA,SAAA3U,GACA,IAAAiW,EAAAxqN,KAAAonN,oBACAqD,IAAAD,KAAA/sN,SAAA82M,EAAA92M,OAkBA,OAjBAgtN,GAAA7rN,EAAA4rN,EAAA,SAAAE,EAAAC,GACA,IAAAC,EAAAF,EAAA9V,YAAA,GAEAiW,GADAtW,EAAAoW,IAAA,IACA/V,YAAA,IACA6V,GAAAG,EAAAntN,SAAAotN,EAAAptN,SACAmB,EAAAgsN,EAAA,SAAAE,EAAAC,GACA,IAAAn7H,EAAAi7H,EAAAE,IAAA,GACAC,EAAAF,EAAA3nH,mBAAA,GACAvrD,EAAAg4C,EAAAuT,mBAAA,IACAsnH,GAAAK,EAAAxrN,QAAAswF,EAAAtwF,OAAAwrN,EAAA/mK,WAAA6rC,EAAA7rC,UAAA+mK,EAAAxjI,SAAAsI,EAAAtI,QAAA0jI,EAAAvtN,SAAAm6C,EAAAn6C,SACAmB,EAAAosN,EAAA,SAAAC,EAAAt4L,GACA,IAAAu4L,EAAAtzK,EAAAjlB,GACA83L,GAAAQ,EAAA7yM,cAAA8yM,EAAA9yM,aAAA6yM,EAAA95M,YAAA+5M,EAAA/5M,gBAIAnR,KAAAonN,oBAAA7S,IACAkW,GAEA/C,MAAA,SAAA5vM,GAKA9X,KAAAonN,oBAAA,KACAtvM,EAAA,CACAvY,KAAA,UACA3B,KAAAoC,KAAA0S,OAGAoD,QAAA,SAAArL,EAAAtC,GACApE,EAAAkT,MAAAlT,EAAAqhC,MAIAplC,KAAAknN,gBAAAllG,OAEAs0F,EAAAvlE,WAAA,cAAA5oI,OASA,SAAA+/M,EAAAiD,GAGA,IAFA,IAAAC,EAAAD,EAAA72M,MAEA62M,EAAA1tN,QAAA,CACA,IAAAuzE,EAAAm6I,EAAA72M,MAEA08D,IACAhrC,EAAAwP,WAAAw7B,KACAA,IAAA7wE,IAAA,eAQA,kBAAA6wE,IACAA,EAAA,CACAK,UAAAL,IAIAo6I,EAAA,IAAAplL,EAAAgrC,EAAAo6I,IAAA3gN,UAIA,OAAA2gN,EAGA,SAAA56E,EAAA/+H,EAAAtJ,GACA,OAAAsJ,EAAAqG,gBAAAjU,EAAA7E,KAAAmJ,EAAA2P,eAAA3P,GAsCA,SAAAiiN,EAAA3hN,GACA,IAAAhB,EAAAgB,EAAA4iN,YACA3jN,EAAAe,EAAA6iN,aAGA,GAAA5rN,SAAAsrJ,aAAAtrJ,SAAAsrJ,YAAAC,iBAAA,CACA,IAAAF,EAAArrJ,SAAAsrJ,YAAAC,iBAAAxiJ,GAEAsiJ,IACAtjJ,GAAAmhD,SAAAmiG,EAAAwgE,YAAA,IAAA3iK,SAAAmiG,EAAAygE,aAAA,IAAA5iK,SAAAmiG,EAAA0gE,gBAAA,IAAA7iK,SAAAmiG,EAAA2gE,iBAAA,IACAhkN,GAAAkhD,SAAAmiG,EAAA4gE,WAAA,IAAA/iK,SAAAmiG,EAAA6gE,cAAA,IAAAhjK,SAAAmiG,EAAA8gE,eAAA,IAAAjjK,SAAAmiG,EAAA+gE,kBAAA,KAIA,OACArkN,QACAC,UA0CA,SAAA4iN,EAAAvnH,GACA,iBAAAA,GAAA,WAAAA,EAGA5qE,EAAA93B,QAAA+gC,mBC9tBA,IAAAv9B,EAAaH,EAAQ,KAErBiwE,EAAcjwE,EAAQ,KAEtBsrJ,EAAgBtrJ,EAAQ,KAExBK,EAAUL,EAAQ,KAElB00B,EAAiB10B,EAAQ,KAqBzB9E,EAAAiF,EAAAjF,KACA0/B,EAAAlG,EAAAkG,YACAytL,EAAA,8BA0CA,SAAAC,EAAAj4E,GACA,IAAA0S,EAAA,GACAmgE,EAAA7yE,EAAA5zI,IAAA,sBACAgN,EAAA4mI,EAAA5zI,IAAA,mBACA0iB,EAAAkxH,EAAAvnI,SAAA,aACAo6C,EAAAmtF,EAAA5zI,IAAA,WA4BA,OA1BAymN,GAAAngE,EAAAhlJ,KAzCA,SAAA6kB,GACA,IACA2lM,EAAA,QAAA3lM,EAAA,wCAAAA,EAAA,mCACA,OAAAziB,EAAAhH,IAAAkvN,EAAA,SAAAG,GACA,OAAAA,EAAA,cAAAD,IACGviM,KAAA,KAoCHyiM,CAAAvF,IAEAz5M,IACApJ,EAAAkJ,gBACAw5I,EAAAhlJ,KAAA,oBAAA0L,IAGAs5I,EAAAhlJ,KAAA,qBAAAkyE,EAAAxe,MAAAhoD,IACAs5I,EAAAhlJ,KAAA,8BAKA7C,EAAA,oCAAA2B,GACA,IAAA6rN,EAAA,UAAA7rN,EACA8rN,EAAA/tL,EAAA8tL,GACA1pN,EAAAqxI,EAAA5zI,IAAAksN,GACA,MAAA3pN,GAAA+jJ,EAAAhlJ,KAAA2qN,EAAA,IAAA1pN,GAAA,UAAAnC,EAAA,YAGAkmJ,EAAAhlJ,KA/CA,SAAAohB,GACA,IAAA4jI,EAAA,GACA9hI,EAAA9B,EAAA1iB,IAAA,YACAggB,EAAA0C,EAAAosD,eAQA,OAPA9uD,GAAAsmI,EAAAhlJ,KAAA,SAAA0e,GACAsmI,EAAAhlJ,KAAA,QAAAohB,EAAA2G,WACA7E,GAAA8hI,EAAAhlJ,KAAA,eAAAkN,KAAAgQ,MAAA,EAAAgG,EAAA,SACA/lB,EAAA,gCAAA2B,GACA,IAAAmC,EAAAmgB,EAAA1iB,IAAAI,GACAmC,GAAA+jJ,EAAAhlJ,KAAA,QAAAlB,EAAA,IAAAmC,KAEA+jJ,EAAA/8H,KAAA,KAoCA4iM,CAAAzpM,IAEA,MAAA+jC,GACA6/F,EAAAhlJ,KAAA,WAAA22B,EAAA31B,kBAAAmkD,GAAAl9B,KAAA,aAGA+8H,EAAA/8H,KAAA,KAAwB,IAQxB,SAAAo9L,EAAA5tJ,EAAA/wD,GACA,GAAApE,EAAAqhC,IACA,YAGA,IAAA38B,EAAA/I,SAAAC,cAAA,OACAyH,EAAApH,KAAAqH,IAAAc,EAAA2D,QACA9L,KAAAyI,KACAzI,KAAA2hG,GAAAx5F,EAAAuE,WAAA,EACA1M,KAAA4hG,GAAAz5F,EAAAwE,YAAA,EACAusD,EAAA6xD,YAAAtiH,GACAzI,KAAAusN,WAAArzJ,EACAl5D,KAAAwsN,OAAA,EAKAxsN,KAAAysN,aACA,IAAA3+M,EAAA9N,KAEAyI,EAAAikN,aAAA,WAEA5+M,EAAA6+M,aACAvlJ,aAAAt5D,EAAA2+M,cACA3+M,EAAA0+M,OAAA,GAGA1+M,EAAA8+M,YAAA,GAGAnkN,EAAAw6G,YAAA,SAAAvqG,GAGA,GAFAA,KAAA3L,OAAAgI,OAEAjH,EAAA6+M,WAAA,CAGA,IAAAlmN,EAAAW,EAAAX,QACAuoJ,EAAA13F,eAAA4B,EAAAxgD,GAAA,GACAjS,EAAAy5I,SAAA,YAAAxnI,KAIAjQ,EAAAokN,aAAA,WACA/+M,EAAA6+M,YACA7+M,EAAA0+M,OACA1+M,EAAAm6M,UAAAn6M,EAAAg/M,YAIAh/M,EAAA8+M,YAAA,GAIA9F,EAAA5qN,UAAA,CACAyB,YAAAmpN,EAMA6F,YAAA,EAKAzhN,OAAA,WAGA,IAAAguD,EAAAl5D,KAAAusN,WACAxhE,EAAA7xF,EAAA6zJ,cAAArtN,SAAAsrJ,YAAAC,iBAAA/xF,GACA2yF,EAAA3yF,EAAAnpD,MAEA,aAAA87I,EAAAjsI,UAAA,aAAAmrI,EAAAnrI,WACAisI,EAAAjsI,SAAA,aAMAoX,KAAA,SAAA+8G,GACA3sE,aAAApnE,KAAAysN,cACA,IAAAhkN,EAAAzI,KAAAyI,GACAA,EAAAsH,MAAA02I,QApKA,yFAoKAulE,EAAAj4E,GACA,SAAQ/zI,KAAA2hG,GAAA,UAAuB3hG,KAAA4hG,GAAA,OAAsBmyC,EAAA5zI,IAAA,qBACrDsI,EAAAsH,MAAAu6I,QAAA7hJ,EAAAqiH,UAAA,eACA9qH,KAAAwsN,OAAA,GAEA9C,WAAA,SAAAt4I,GACApxE,KAAAyI,GAAAqiH,UAAA,MAAA15C,EAAA,GAAAA,GAEAk2I,aAAA,SAAAT,GACA7mN,KAAA2sN,WAAA9F,GAEAvwE,QAAA,WACA,IAAA7tI,EAAAzI,KAAAyI,GACA,OAAAA,EAAA4iN,YAAA5iN,EAAA6iN,eAEA/tK,OAAA,SAAAvtC,EAAAC,GAIA,IACA+8M,EADA5lN,EAAApH,KAAAqH,IAGAD,KAAAyF,UAAAmgN,EAAA5lN,EAAAyF,QAAAi6I,2BACA92I,GAAAg9M,EAAAhmE,WACA/2I,GAAA+8M,EAAA/lE,WAGA,IAAAl3I,EAAA/P,KAAAyI,GAAAsH,MACAA,EAAAf,KAAAgB,EAAA,KACAD,EAAAb,IAAAe,EAAA,KACAjQ,KAAA2hG,GAAA3xF,EACAhQ,KAAA4hG,GAAA3xF,GAEA+xG,KAAA,WACAhiH,KAAAyI,GAAAsH,MAAAu6I,QAAA,OACAtqJ,KAAAwsN,OAAA,GAEAvE,UAAA,SAAAv3K,IACA1wC,KAAAwsN,OAAAxsN,KAAA4sN,YAAA5sN,KAAA2sN,aACAj8K,GACA1wC,KAAA8sN,WAAAp8K,EAEA1wC,KAAAwsN,OAAA,EACAxsN,KAAAysN,aAAAplJ,WAAAxjE,EAAA7E,KAAAgB,KAAAgiH,KAAAhiH,MAAA0wC,IAEA1wC,KAAAgiH,SAIAykE,OAAA,WACA,OAAAzmL,KAAAwsN,QAGA,IAAAprL,EAAA0lL,EACA3uL,EAAA93B,QAAA+gC,mBC1PA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBupN,EAAevpN,EAAQ,KAEvBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAsBR4xB,EAAAlZ,eAAAvY,EAAAjC,MAAAqrN,EAAA,QAEA33L,EAAA/Y,oBAAA,CACAhd,KAAA,2BCvCA,IAAAsE,EAAaH,EAAQ,KAIrB6oB,EAFc7oB,EAAQ,KAEtB6oB,aAIAiwC,EAFuB94D,EAAQ,KAE/B84D,mBAoBA,SAAA63B,EAAAtjF,GACA,OAAAA,EAAA5Q,IAAA,wBAAA4Q,EAAAqH,YAGA,SAAAk8E,EAAA3yC,GACA,OAAAA,EAAA3V,IA0OA,IAAA5K,EAjOA,SAAAoqC,EAAA/gE,EAAAtC,GACA,IAAAV,EAAAU,EAAAuE,WACAhF,EAAAS,EAAAwE,YACAyqF,EAAA,GACAx1C,EAwHA,SAAA+yC,EAAAxsF,GAEA,IAAAmtF,EAAA,GACAzxF,EAAAjF,KAAA+1F,EAAA,SAAA5jF,EAAAkd,GACA,IAAAzsB,EAAAuP,EAAAC,UACAgzG,EAAAjzG,EAAAL,iBACAmkF,EAAAmvB,EAAA/4E,cACA6W,EAAA+yC,EAAAzzC,YACA0zC,EAAA,aAAAD,EAAAt1F,KAAAs1F,EAAAlxB,eAAAh1D,KAAAyb,IAAA03B,EAAA,GAAAA,EAAA,IAAAtgD,EAAA6rB,QACAmoE,EAAAF,EAAAhB,EAAAO,KAAA,CACAC,YACAW,cAAAX,EACAY,eAAA,EACAC,YAAA,MACAl9D,IAAA,MACAm9D,OAAA,IAEAA,EAAAJ,EAAAI,OACAN,EAAAhB,EAAAO,IAAAW,EACA,IAAAJ,EAAAf,EAAAtjF,GAEA6kF,EAAAR,IACAI,EAAAE,iBAGAE,EAAAR,GAAAQ,EAAAR,IAAA,CACA3tF,MAAA,EACAixB,SAAA,GAEA,IAAAq8D,EAAAxoE,EAAAxb,EAAA5Q,IAAA,YAAA20F,GACAE,EAAAzoE,EAAAxb,EAAA5Q,IAAA,eAAA20F,GACAG,EAAAlkF,EAAA5Q,IAAA,UACA+0F,EAAAnkF,EAAA5Q,IAAA,kBAEA40F,IAAAa,EAAAR,GAAA3tF,QACAstF,EAAApmF,KAAAC,IAAA4mF,EAAAC,cAAAV,GACAa,EAAAR,GAAA3tF,MAAAstF,EACAS,EAAAC,eAAAV,GAGAC,IAAAY,EAAAR,GAAA18D,SAAAs8D,GACA,MAAAC,IAAAO,EAAA/8D,IAAAw8D,GACA,MAAAC,IAAAM,EAAAG,YAAAT,KAEA,IAAA/3F,EAAA,GAsDA,OArDA0G,EAAAjF,KAAA02F,EAAA,SAAAE,EAAAl6B,GACAn+D,EAAAm+D,GAAA,GACA,IAAAs6B,EAAAJ,EAAAI,OACAd,EAAAU,EAAAV,UACAa,EAAAppE,EAAAipE,EAAAG,YAAAb,GACAe,EAAAtpE,EAAAipE,EAAA/8D,IAAA,GACAg9D,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,eACAI,GAAAL,EAAAE,IAAAD,KAAA,GAAAG,GACAC,EAAAnnF,KAAAG,IAAAgnF,EAAA,GAEAjyF,EAAAjF,KAAAg3F,EAAA,SAAAG,EAAA1tB,GACA,IAAA3vC,EAAAq9D,EAAAr9D,SAEAA,KAAAo9D,IACAp9D,EAAA/pB,KAAAC,IAAA8pB,EAAA+8D,GAEAM,EAAAtuF,QACAixB,EAAA/pB,KAAAC,IAAA8pB,EAAAq9D,EAAAtuF,QAGAguF,GAAA/8D,EACAq9D,EAAAtuF,MAAAixB,EACAg9D,OAIAI,GAAAL,EAAAE,IAAAD,KAAA,GAAAG,GACAC,EAAAnnF,KAAAG,IAAAgnF,EAAA,GACA,IACAE,EADAC,EAAA,EAEApyF,EAAAjF,KAAAg3F,EAAA,SAAAG,EAAA9nE,GACA8nE,EAAAtuF,QACAsuF,EAAAtuF,MAAAquF,GAGAE,EAAAD,EACAE,GAAAF,EAAAtuF,OAAA,EAAAouF,KAGAG,IACAC,GAAAD,EAAAvuF,MAAAouF,GAGA,IAAAryF,GAAAyyF,EAAA,EACApyF,EAAAjF,KAAAg3F,EAAA,SAAAG,EAAAX,GACAj4F,EAAAm+D,GAAA85B,GAAAj4F,EAAAm+D,GAAA85B,IAAA,CACA5xF,SACAiE,MAAAsuF,EAAAtuF,OAEAjE,GAAAuyF,EAAAtuF,OAAA,EAAAouF,OAGA14F,EA1NA+vN,CAAArpN,EAAApH,OAAAgO,EAAAitH,gBAAAlsD,GAAA,SAAAz6D,GACA,OAAAtG,EAAAohE,iBAAA96D,MAAAL,kBAAA,UAAAK,EAAAL,iBAAAnR,QAEAkL,EAAA+pF,iBAAAhpB,EAAA,SAAAz6D,GAEA,aAAAA,EAAAL,iBAAAnR,KAAA,CAIA,IAAAiC,EAAAuP,EAAAC,UACAgzG,EAAAjzG,EAAAL,iBACAmkF,EAAAmvB,EAAA/4E,cACAmqD,EAAAf,EAAAtjF,GACAumF,EAAA11C,EAAA0yC,EAAAO,IAAAO,GACAmC,EAAAD,EAAA9zF,OACAg0F,EAAAF,EAAA7vF,MACAqvB,EAAAktF,EAAA5tB,aAAAvB,GACAxI,EAAAt7E,EAAA5Q,IAAA,yBACAk9C,EAAA9wB,EAAA8/D,EAAA,GAAA5kF,GACA61C,EAAA/wB,EAAA8/D,EAAA,GAAA3kF,GACA+vF,EAAA1mF,EAAA5Q,IAAA,mBACA6hI,EAAAjxH,EAAA5Q,IAAA,kBACAi3F,EAAAhC,GAAAgC,EAAAhC,IAAA,GAQA,IAPA,IAAAiB,EAAA70F,EAAA8pC,aAAAxU,EAAAkV,KACAsqD,EAAA90F,EAAA8pC,aAAAupD,EAAA7oD,KACA6qD,EAAAr6B,EAAAh7D,EAAA60F,GAGAM,EAAA7/D,EAAAsqB,YAAA,GAEAnzB,EAAA,EAAAzwB,EAAAgE,EAAA6rB,QAAyCY,EAAAzwB,EAAWywB,IAAA,CACpD,IAAA3uB,EAAAkC,EAAArB,IAAAk2F,EAAApoE,GACA0pE,EAAAn2F,EAAArB,IAAAm2F,EAAAroE,GAEA,IAAAb,MAAA9tB,GAAA,CAIA,IAmBA+kG,EACAzmD,EACA08B,EACAC,EAtBAkJ,EAAAnkF,GAAA,UACAs4F,EAAAjB,EAuBA,GAnBAE,IACAO,EAAAhC,GAAAuC,KACAP,EAAAhC,GAAAuC,GAAA,CACAvkC,EAAAujC,EAEAt3B,EAAAs3B,IAMAiB,EAAAR,EAAAhC,GAAAuC,GAAAlU,IAQA,WAAA3sD,EAAAkV,IAAA,CACA,IAAAmhL,EAAAr2L,EAAAsoL,aAAA9/M,GAAAq3F,EACA94C,EAAAg3C,EAAAwqH,YAAA1nH,GAEAhpF,KAAAyb,IAAA+iM,GAAA11H,IACA01H,KAAA,QAAA11H,GAGA4M,EAAAzM,EACAh6C,EAAAg6C,EAAAu1H,EAEA5yI,GADAD,EAAAz8B,EAAA05C,GACAC,EACAX,IAAAO,EAAAhC,GAAAuC,GAAAlU,GAAA7lC,OAEA,CAEA,IAAAwvK,EAAAt2L,EAAAuoL,YAAA//M,GAAA,GAAAq3F,EACAjc,EAAAma,EAAAuqH,aAAAznH,GAEAhpF,KAAAyb,IAAAgjM,GAAAprF,IACAorF,KAAA,QAAAprF,GAIApkF,GADAymD,EAAA3pB,EAAA6c,GACAC,EACAld,EAAAsd,EACArd,EAAAqd,EAAAw1H,EAWAv2H,IAAAO,EAAAhC,GAAAuC,GAAAlU,GAAAlJ,GAGA/4E,EAAA86C,cAAAruB,EAAA,CACAovB,KACAC,KACA+mD,KACAzmD,IAGA08B,cAAA3rE,KAAA4U,GAAA,IACAg3D,YAAA5rE,KAAA4U,GAAA,UAGGvjB,OA6GHm4B,EAAA93B,QAAA+gC,mBC5QA,IAAAisL,EAAiB3pN,EAAQ,KAEzB4pN,EAAgB5pN,EAAQ,KA+BxBogH,EAAA,SAAAvjH,GAIAP,KAAAO,QAAA,GAMAP,KAAAq9C,GAAA,EAMAr9C,KAAAs9C,GAAA,EAMAt9C,KAAAutN,YAAA,IAAAF,EAMArtN,KAAAwtN,WAAA,IAAAF,EACAttN,KAAAutN,YAAAvpG,MAAAhkH,KAAAwtN,WAAAxpG,MAAAhkH,MAGA8jH,EAAA5nH,UAAA,CACAqD,KAAA,QACAw7F,oBAAA,EACAp9F,YAAAmmH,EAMA3nG,WAAA,mBAKA1L,MAAA,KAOAE,aAAA,SAAA0a,GACA,IAAAo3C,EAAAziE,KAAAytN,aAAApiM,GACA,OAAArrB,KAAAutN,YAAArsL,QAAAuhC,EAAA,KAAAziE,KAAAwtN,WAAAtsL,QAAAuhC,EAAA,KAQAC,YAAA,SAAAlhE,GACA,OAAAxB,KAAAutN,YAAA7qJ,YAAAlhE,EAAA,KAAAxB,KAAAwtN,WAAA9qJ,YAAAlhE,EAAA,KAOAy7F,QAAA,SAAAjxD,GACA,OAAAhsC,KAAA,IAAAgsC,EAAA,SAMAovD,QAAA,WACA,OAAAp7F,KAAAutN,YAAAvtN,KAAAwtN,aAQA5mD,eAAA,SAAA9lH,GACA,IAAA04G,EAAA,GACAv1C,EAAAjkH,KAAAwtN,WACArpG,EAAAnkH,KAAAutN,YAGA,OAFAtpG,EAAAtnF,MAAAp9B,OAAAuhD,GAAA04G,EAAA/3J,KAAAwiH,GACAE,EAAAxnF,MAAAp9B,OAAAuhD,GAAA04G,EAAA/3J,KAAA0iH,GACAq1C,GAMAt1C,aAAA,WACA,OAAAlkH,KAAAwtN,YAMAppG,cAAA,WACA,OAAApkH,KAAAutN,aAOAn3H,aAAA,SAAAz0C,GACA,IAAAsiE,EAAAjkH,KAAAwtN,WACA,OAAA7rK,IAAAsiE,EAAAjkH,KAAAutN,YAAAtpG,GAQAh5E,YAAA,WACA,OAAAjrC,KAAA4mK,eAAA,eAAA5mK,KAAA4mK,eAAA,YAAA5mK,KAAAkkH,gBAOA5oB,eAAA,SAAAtvD,GACA,IAAA6oD,EAAA,MAAA7oD,GAAA,SAAAA,EAAAhsC,KAAAi9F,QAAAjxD,GAAAhsC,KAAAirC,cACA,OACAywD,SAAA,CAAA7G,GACA8G,UAAA,CAAA37F,KAAAo2F,aAAAvB,MAWA/R,YAAA,SAAAthF,EAAA4qB,GACA,OAAApsB,KAAA80K,aAAA,CAAA90K,KAAAutN,YAAAnO,aAAA59M,EAAA,GAAA4qB,GAAApsB,KAAAwtN,WAAAnO,YAAA79M,EAAA,GAAA4qB,MASAy2C,YAAA,SAAAx3C,EAAAe,GACA,IAAAq2C,EAAAziE,KAAAytN,aAAApiM,GACA,OAAArrB,KAAAutN,YAAAG,aAAAjrJ,EAAA,GAAAr2C,GAAApsB,KAAAwtN,WAAAG,YAAAlrJ,EAAA,GAAAr2C,KAQAqhM,aAAA,SAAApiM,GACA,IAAAoP,EAAApP,EAAA,GAAArrB,KAAAq9C,GACA3iB,EAAArP,EAAA,GAAArrB,KAAAs9C,GACA2mE,EAAAjkH,KAAAkkH,eACAvrE,EAAAsrE,EAAA7iE,YACA6uH,EAAAthK,KAAAC,IAAA+pC,EAAA,GAAAA,EAAA,IACAi1K,EAAAj/M,KAAAG,IAAA6pC,EAAA,GAAAA,EAAA,IAGAsrE,EAAA5hD,QAAA4tG,EAAA29C,EAAA,IAAAA,EAAA39C,EAAA,IACA,IAAAv1F,EAAA/rE,KAAAmtB,KAAArB,IAAAC,KACAD,GAAAigD,EACAhgD,GAAAggD,EAKA,IAJA,IAAAzrD,EAAAtgB,KAAAw3F,OAAAzrE,EAAAD,GAAA9rB,KAAA4U,GAAA,IAEAi1G,EAAAvpG,EAAAghJ,EAAA,KAEAhhJ,EAAAghJ,GAAAhhJ,EAAA2+L,GACA3+L,GAAA,IAAAupG,EAGA,OAAA99C,EAAAzrD,IAQA6lJ,aAAA,SAAAryG,GACA,IAAAiY,EAAAjY,EAAA,GACAxzC,EAAAwzC,EAAA,OAAA9zD,KAAA4U,GAIA,OAHA5U,KAAA6gC,IAAAvgB,GAAAyrD,EAAA16E,KAAAq9C,IAEA1uC,KAAA2gC,IAAArgB,GAAAyrD,EAAA16E,KAAAs9C,MAIA,IAAAlc,EAAA0iF,EACA3rF,EAAA93B,QAAA+gC,mBC/OA,IAAAv9B,EAAaH,EAAQ,KAErB0+D,EAAW1+D,EAAQ,KAqBnB,SAAA2pN,EAAA1wL,EAAAipI,GACAxjG,EAAA/kE,KAAA2C,KAAA,SAAA28B,EAAAipI,GAUA5lK,KAAAT,KAAA,WAGA8tN,EAAAnxN,UAAA,CACAyB,YAAA0vN,EAKAxqJ,YAAA,SAAAx3C,EAAAe,GACA,OAAApsB,KAAAgkH,MAAAnhD,YAAAx3C,EAAAe,GAAA,WAAApsB,KAAAgsC,IAAA,MAEAozK,aAAAh9I,EAAAlmE,UAAAymE,YACA+qJ,aAAAtrJ,EAAAlmE,UAAA0mE,aAEA/+D,EAAA9C,SAAAssN,EAAAjrJ,GACA,IAAAhhC,EAAAisL,EACAl1L,EAAA93B,QAAA+gC,mBCnDA,IAAAv9B,EAAaH,EAAQ,KAErB0+D,EAAW1+D,EAAQ,KAqBnB,SAAA4pN,EAAA3wL,EAAAkpI,GACAA,KAAA,QACAzjG,EAAA/kE,KAAA2C,KAAA,QAAA28B,EAAAkpI,GAUA7lK,KAAAT,KAAA,WAGA+tN,EAAApxN,UAAA,CACAyB,YAAA2vN,EAKAzqJ,YAAA,SAAAx3C,EAAAe,GACA,OAAApsB,KAAAgkH,MAAAnhD,YAAAx3C,EAAAe,GAAA,WAAApsB,KAAAgsC,IAAA,MAEAqzK,YAAAj9I,EAAAlmE,UAAAymE,YACAgrJ,YAAAvrJ,EAAAlmE,UAAA0mE,aAEA/+D,EAAA9C,SAAAusN,EAAAlrJ,GACA,IAAAhhC,EAAAksL,EACAn1L,EAAA93B,QAAA+gC,mBCpDA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAqBR,IAAA09B,EAAA9L,EAAAhZ,qBAAA,CACA/c,KAAA,QACAyb,aAAA,0BAKAtK,iBAAA,KAMAg0G,cAAA,SAAA3gE,GACA,IAAA8pK,EAOA,OANA7tN,KAAAyK,QACAuD,cAAA+1C,EAAA,SAAAG,GACAA,EAAAm5B,qBAAAr9E,OACA6tN,EAAA3pK,IAEKlkD,MACL6tN,GAEAvnL,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA8zE,OAAA,cACA3R,OAAA,SAIAviD,EAAA93B,QAAA+gC,mBCtDA,IAAAv9B,EAAaH,EAAQ,KAErBc,EAAqBd,EAAQ,KAE7B28H,EAAuB38H,EAAQ,KAE/B48H,EAA2B58H,EAAQ,KAqBnCoqN,EAAAtpN,EAAA7D,OAAA,CACApB,KAAA,YAKAoiD,KAAA,KAKA07B,iBAAA,WACA,OAAAr9E,KAAAyK,QAAA8oB,gBAAA,CACAzqB,SAAA,QACAC,MAAA/I,KAAAgM,OAAAqsK,WACApxK,GAAAjH,KAAAgM,OAAA+hN,UACK,MAGLlqN,EAAA7F,MAAA8vN,EAAA5xN,UAAAokI,GACA,IAAA0tF,EAWA,CAGA/1L,YAAA,GAIA,SAAAyoG,EAAA/c,EAAA33G,GAEA,OAAAA,EAAAzM,OAAAyM,EAAAxK,KAAA,oBAGA6+H,EAAA,QAAAytF,EAAAptF,EAtBA,CAGApmD,WAAA,GACAgqB,WAAA,EACArsE,YAAA,GACAgpG,UAAA,CACApyF,QAAA,KAgBAwxF,EAAA,SAAAytF,EAAAptF,EAAAstF,oBCvEAtqN,EAAQ,KAERA,EAAQ,sBCFR,IAAAG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBsiC,EAAYtiC,EAAQ,KAEpBkuE,EAAeluE,EAAQ,KAqBvB63L,EAAA,4DAEA,SAAA0yB,EAAAjqG,EAAAkqG,EAAArwK,GACAqwK,EAAA,GAAAA,EAAA,KAAAA,IAAAvxN,QAAAk2E,WACA,IAAA58B,EAAA+tE,EAAA8wD,aAAA,CAAAo5C,EAAA,GAAArwK,IACAhQ,EAAAm2E,EAAA8wD,aAAA,CAAAo5C,EAAA,GAAArwK,IACA,OACAp2B,GAAAwuB,EAAA,GACAtuB,GAAAsuB,EAAA,GACAvuB,GAAAmmB,EAAA,GACAjmB,GAAAimB,EAAA,IAIA,SAAAsgL,EAAAnqG,GAEA,OADAA,EAAAI,gBACA/hD,QAAA,IAIA,SAAA+rJ,EAAA9gN,GACA,IAAA+gN,EAAA/gN,EAAA,GACAw9M,EAAAx9M,IAAA7P,OAAA,GAEA4wN,GAAAvD,GAAAn8M,KAAAyb,IAAAzb,KAAAyb,IAAAikM,EAAA5rJ,MAAAqoJ,EAAAroJ,OAAA,WACAn1D,EAAAgH,MAIA,IAAA8sB,EAAAwwC,EAAAjxE,OAAA,CACApB,KAAA,YACAuyE,iBAAA,mBACAjgE,OAAA,SAAA8yG,EAAAl6G,GAGA,GAFAzK,KAAAkH,MAAAkzD,YAEAuqD,EAAAxkH,IAAA,SAIA,IAAA8jH,EAAAU,EAAAhjE,KACAqiE,EAAAC,EAAAD,MACA4hD,EAAA5hD,EAAAI,gBAAAhjE,YACAktK,EAAArqG,EAAAnhD,iBACAY,EAAA7/D,EAAAhH,IAAAonH,EAAAxgD,gBAAA,SAAAmL,GAGA,OAFAA,EAAA/qE,EAAA5G,MAAA2xE,IACAnM,MAAAwhD,EAAAthD,YAAAiM,EAAAjsB,WACAisB,IAEAw/I,EAAA1qJ,GACA0qJ,EAAAE,GACAzqN,EAAAjF,KAAA28L,EAAA,SAAAh7L,IACAokH,EAAAxkH,IAAAI,EAAA,UAAA0jH,EAAAtnF,MAAAwnB,WAAA,aAAA5jD,GACAP,KAAA,IAAAO,GAAAokH,EAAAX,EAAAsqG,EAAA1oD,EAAAliG,IAEK1jE,QAMLuuN,UAAA,SAAA5pG,EAAAX,EAAAsqG,EAAA1oD,GACA,IAAA73F,EAAA42C,EAAAn4G,SAAA,sBACAiyC,EAAA,IAAA75C,EAAAiZ,OAAA,CACA2J,MAAA,CACA61B,GAAA2mE,EAAA3mE,GACAC,GAAA0mE,EAAA1mE,GACAM,EAAAgoH,EAAAuoD,EAAAnqG,KAEAj0G,MAAAg+D,EAAAV,eACA1rD,GAAA,EACA5W,QAAA,IAEA0zC,EAAA1uC,MAAAyQ,KAAA,KACAxgB,KAAAkH,MAAAiJ,IAAAsuC,IAMA+vK,UAAA,SAAA7pG,EAAAX,EAAAsqG,EAAA1oD,GACA,IAAA7iG,EAAA4hD,EAAAn4G,SAAA,YACAwhE,GAAAjL,EAAA5iE,IAAA,gBAAA4iE,EAAA5iE,IAAA,UACAu6E,EAAAkrF,EAAAuoD,EAAAnqG,IACAj9D,EAAAljD,EAAAhH,IAAAyxN,EAAA,SAAAG,GACA,WAAA7pN,EAAAuZ,KAAA,CACAqJ,MAAAymM,EAAAjqG,EAAA,CAAAtpC,IAAA1M,GAAAygJ,EAAAhsJ,WAGAziE,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAwnC,EAAA,CACAh3C,MAAAlM,EAAArF,SAAAukE,EAAAv2D,SAAA,aAAA6gE,eAAA,CACA9sD,OAAAokG,EAAAxkH,IAAA,kCAQAuuN,WAAA,SAAA/pG,EAAAX,EAAAsqG,EAAA1oD,EAAAliG,GACA,IAAAgL,EAAAi2C,EAAAtjE,eAAA,GACAstK,EAAAhqG,EAAAn4G,SAAA,aACA8hE,EAAAqgJ,EAAAxuN,IAAA,UAEA0D,EAAAjF,KAAA8kE,EAAA,SAAAkL,EAAA3gD,GACA,IAAA3E,EAAAqlM,EACAhsK,EAAAisB,EAAAjsB,UACA/E,EAAAgoH,EAAAuoD,EAAAnqG,IACA5wD,EAAA4wD,EAAA8wD,aAAA,CAAAl3H,EAAA0wB,EAAAM,EAAAnM,QACAplB,EAAA2mE,EAAA3mE,GACAC,EAAA0mE,EAAA1mE,GACAsxK,EAAAjgN,KAAAyb,IAAAgpC,EAAA,GAAA/V,GAAAO,EAAA,YAAAwV,EAAA,GAAA/V,EAAA,eACAwxK,EAAAlgN,KAAAyb,IAAAgpC,EAAA,GAAA9V,GAAAM,EAAA,YAAAwV,EAAA,GAAA9V,EAAA,eAEAoxB,KAAA/rB,IAAA+rB,EAAA/rB,GAAA//B,YACA0G,EAAA,IAAA0c,EAAA0oC,EAAA/rB,GAAA//B,UAAA+rM,IAAAlkN,UAGA,IAAAykE,EAAA,IAAAtqE,EAAAgZ,KAAA,CACA7S,QAAA,IAEA/K,KAAAkH,MAAAiJ,IAAA++D,GACAtqE,EAAA+d,aAAAusD,EAAAn/D,MAAAuZ,EAAA,CACAtZ,EAAAojD,EAAA,GACAnjD,EAAAmjD,EAAA,GACAjyC,SAAAmI,EAAA2lD,gBAAA01C,EAAAxkH,IAAA,4BACAipB,KAAAwlD,EAAAC,eACAhqD,UAAA+pM,EACA9pM,kBAAA+pM,KAEK7uN,OAMLwsK,WAAA,SAAA7nD,EAAAX,EAAAsqG,EAAA1oD,GACA,IACA73F,EADA42C,EAAAn4G,SAAA,aACAA,SAAA,aACAkgK,EAAA3+F,EAAA5tE,IAAA,SACAwsK,EAAA,EACAD,eAAArwK,MAAAqwK,EAAA,CAAAA,GAGA,IAFA,IAAAiK,EAAA,GAEAp5K,EAAA,EAAmBA,EAAA+wN,EAAA7wN,OAAwBF,IAAA,CAC3C,IAAAqvK,EAAAD,IAAAD,EAAAjvK,OACAk5K,EAAA/J,GAAA+J,EAAA/J,IAAA,GACA+J,EAAA/J,GAAAnrK,KAAA,IAAAmD,EAAAuZ,KAAA,CACAqJ,MAAAymM,EAAAjqG,EAAA4hD,EAAA0oD,EAAA/wN,GAAAklE,UAMA,IAAAllE,EAAA,EAAmBA,EAAAo5K,EAAAl5K,OAAuBF,IAC1CyC,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAo3J,EAAAp5K,GAAA,CACAwS,MAAAlM,EAAArF,SAAA,CACA+hB,OAAAmsJ,EAAAnvK,EAAAmvK,EAAAjvK,SACSswE,EAAAV,gBACTtiE,QAAA,EACAwN,EAAAosG,EAAAxkH,IAAA,SAQA0sK,WAAA,SAAAloD,EAAAX,EAAAsqG,EAAA1oD,GACA,GAAA0oD,EAAA7wN,OAAA,CAIA,IACA4pK,EADA1iD,EAAAn4G,SAAA,aACAA,SAAA,aACAugK,EAAA1F,EAAAlnK,IAAA,SACAwsK,EAAA,EACAI,eAAA1wK,MAAA0wK,EAAA,CAAAA,GAQA,IAPA,IAAA6J,EAAA,GACA9Q,EAAAn3J,KAAA4U,GAAA,IACAurM,GAAAR,EAAA,GAAA7rJ,MAAAqjG,EACAzhE,EAAA11F,KAAAC,IAAAg3J,EAAA,GAAAA,EAAA,IACA/wC,EAAAlmH,KAAAG,IAAA82J,EAAA,GAAAA,EAAA,IACAthE,EAAAqgB,EAAAxkH,IAAA,aAEA5C,EAAA,EAAmBA,EAAA+wN,EAAA7wN,OAAwBF,IAAA,CAC3C,IAAAqvK,EAAAD,IAAAI,EAAAtvK,OACAm5K,EAAAhK,GAAAgK,EAAAhK,IAAA,GACAgK,EAAAhK,GAAAnrK,KAAA,IAAAmD,EAAAkZ,OAAA,CACA0J,MAAA,CACA61B,GAAA2mE,EAAA3mE,GACAC,GAAA0mE,EAAA1mE,GACA+mD,KACAzmD,EAAAi3E,EACAv6C,WAAAw0I,EACAv0I,UAAA+zI,EAAA/wN,GAAAklE,MAAAqjG,EACAxhE,aAEAv5F,QAAA,KAEA+jN,GAAAR,EAAA/wN,GAAAklE,MAAAqjG,EAKA,IAAAvoK,EAAA,EAAmBA,EAAAq5K,EAAAn5K,OAAuBF,IAC1CyC,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAq3J,EAAAr5K,GAAA,CACAwS,MAAAlM,EAAArF,SAAA,CACAgiB,KAAAusJ,EAAAxvK,EAAAwvK,EAAAtvK,SACS4pK,EAAAzjE,gBACT74F,QAAA,SAMAotB,EAAA93B,QAAA+gC,mBClPA19B,EAAQ,KAERA,EAAQ,sBCFR,IAAAG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtB6oE,EAAkB7oE,EAAQ,KAE1BkuE,EAAeluE,EAAQ,KAqBvBwoK,EAAA,wCACAC,EAAA,0BAEA/qI,EAAAwwC,EAAAjxE,OAAA,CACApB,KAAA,aACAuyE,iBAAA,mBACAjgE,OAAA,SAAA4yG,EAAAh6G,GAGA,GAFAzK,KAAAkH,MAAAkzD,YAEAqqD,EAAAtkH,IAAA,SAIA,IAAAgkH,EAAAM,EAAA9iE,KACAqiE,EAAAG,EAAAH,MACAC,EAAAD,EAAAE,eACAhhD,EAAAihD,EAAArhD,iBACAisJ,EAAA9qG,EAAA7iE,YAAA,GACAwkH,EAAAzhD,EAAA/iE,YACApiC,EAkGA,SAAAglG,EAAAS,EAAAsqG,GACA,OACAnvM,SAAA,CAAAokG,EAAA3mE,GAAA2mE,EAAA1mE,IACApyB,SAAA6jM,EAAA,IAAApgN,KAAA4U,GACAopD,gBAAA,EACAD,eAAA,EACAD,cAAA,EACAnpD,YAAAmhG,EAAAj4G,SAAA,aAAArM,IAAA,UAEAwhB,GAAA,GA3GAqtM,CAAAhrG,EAAAS,EAAAsqG,GACAjhJ,EAAA,IAAAvB,EAAAk4C,EAAAzlG,GACAnb,EAAAjF,KAAAstK,EAAAp+F,EAAA39D,IAAA29D,GACA9tE,KAAAkH,MAAAiJ,IAAA29D,EAAAb,YACAppE,EAAAjF,KAAAutK,EAAA,SAAA5rK,GACAkkH,EAAAtkH,IAAAI,EAAA,WAAA4jH,EAAAxnF,MAAAwnB,WACAnkD,KAAA,IAAAO,GAAAkkH,EAAAT,EAAA+qG,EAAAnpD,EAAA1iG,IAEKljE,QAMLwsK,WAAA,SAAA/nD,EAAAT,EAAA+qG,EAAAnpD,EAAA1iG,GACA,IACA6K,EADA02C,EAAAj4G,SAAA,aACAA,SAAA,aACAkgK,EAAA3+F,EAAA5tE,IAAA,SACAwsK,EAAA,EACAD,eAAArwK,MAAAqwK,EAAA,CAAAA,GAGA,IAFA,IAAAiK,EAAA,GAEAp5K,EAAA,EAAmBA,EAAA2lE,EAAAzlE,OAAwBF,IAAA,CAC3C,IAAAqvK,EAAAD,IAAAD,EAAAjvK,OACAk5K,EAAA/J,GAAA+J,EAAA/J,IAAA,GACA+J,EAAA/J,GAAAnrK,KAAA,IAAAmD,EAAAiZ,OAAA,CACA2J,MAAA,CACA61B,GAAA2mE,EAAA3mE,GACAC,GAAA0mE,EAAA1mE,GACAM,EAAAslB,EAAA3lE,GAAAklE,OAEA13D,QAAA,KAMA,IAAAxN,EAAA,EAAmBA,EAAAo5K,EAAAl5K,OAAuBF,IAC1CyC,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAo3J,EAAAp5K,GAAA,CACAwS,MAAAlM,EAAArF,SAAA,CACA+hB,OAAAmsJ,EAAAnvK,EAAAmvK,EAAAjvK,QACA+iB,KAAA,MACSutD,EAAAV,gBACTtiE,QAAA,MAQA8hK,WAAA,SAAApoD,EAAAT,EAAA+qG,EAAAnpD,EAAA1iG,GACA,GAAAA,EAAAzlE,OAAA,CAIA,IACA4pK,EADA5iD,EAAAj4G,SAAA,aACAA,SAAA,aACAugK,EAAA1F,EAAAlnK,IAAA,SACAwsK,EAAA,EACAI,eAAA1wK,MAAA0wK,EAAA,CAAAA,GAIA,IAHA,IAAA6J,EAAA,GACAq4C,EAAA/rJ,EAAA,GAAAT,MAEAllE,EAAA,EAAmBA,EAAA2lE,EAAAzlE,OAAwBF,IAAA,CAC3C,IAAAqvK,EAAAD,IAAAI,EAAAtvK,OACAm5K,EAAAhK,GAAAgK,EAAAhK,IAAA,GACAgK,EAAAhK,GAAAnrK,KAAA,IAAAmD,EAAAkZ,OAAA,CACA0J,MAAA,CACA61B,GAAA2mE,EAAA3mE,GACAC,GAAA0mE,EAAA1mE,GACA+mD,GAAA4qH,EACArxK,EAAAslB,EAAA3lE,GAAAklE,MACA6X,WAAA,EACAC,SAAA,EAAA5rE,KAAA4U,IAEAxY,QAAA,KAEAkkN,EAAA/rJ,EAAA3lE,GAAAklE,MAKA,IAAAllE,EAAA,EAAmBA,EAAAq5K,EAAAn5K,OAAuBF,IAC1CyC,KAAAkH,MAAAiJ,IAAAvL,EAAA2a,UAAAq3J,EAAAr5K,GAAA,CACAwS,MAAAlM,EAAArF,SAAA,CACAgiB,KAAAusJ,EAAAxvK,EAAAwvK,EAAAtvK,SACS4pK,EAAAzjE,gBACT74F,QAAA,SAuBAotB,EAAA93B,QAAA+gC,mBC7JA,IAAAhJ,EAAiB10B,EAAQ,KAEzB+8G,EAAsB/8G,EAAQ,KAE9BkB,EAAclB,EAAQ,KAEtBstI,EAAiBttI,EAAQ,KAEzB4Z,EAAa5Z,EAAQ,KAErB6oE,EAAkB7oE,EAAQ,KAE1BkuE,EAAeluE,EAAQ,KAqBvBwrN,EAAAzuG,EAAA9/G,OAAA,CAIAshH,aAAA,SAAAtf,EAAArjG,EAAA4kD,EAAAquB,EAAApqE,GACA,IAAAw5C,EAAAuC,EAAAvC,KAEA,UAAAA,EAAA3V,MACAhsC,KAAA4hH,mBAAAjzG,KAAA4U,GAAA,IAGA,IAGA4rM,EAHAnrG,EAAAriE,EAAAqiE,MAEA1D,EADA0D,EAAA5tB,aAAAz0C,GACAP,YAEA+tK,EAAAxtK,EAAA,SAAAvpB,EAAAuH,aAAAgiB,EAAA3V,MAAA1sC,GACA,IAAAokG,EAAAnxB,EAAApyE,IAAA,QAEA,GAAAujG,GAAA,SAAAA,EAAA,CACA,IAAAzK,EAAA+3C,EAAAvtC,aAAAlxB,GACAswC,EAAAuuB,EAAA1tC,GAAA/hD,EAAAqiE,EAAAmrG,EAAA7uG,EAAArnB,GACA4pB,EAAA9yG,MAAAkpF,EACA0J,EAAAuf,WAAAW,EAAAtjH,KACAojG,EAAAzqE,QAAA2qF,EAGA,IACAjgB,EAMA,SAAAtjG,EAAA4kD,EAAAquB,EAAAyxC,EAAA11C,GACA,IAAA3sB,EAAAuC,EAAAvC,KACA8gB,EAAA9gB,EAAAghB,YAAArjE,GACAyvN,EAAA/qG,EAAAE,eAAA9iE,YAAA,GACA2tK,IAAA,IAAApgN,KAAA4U,GACA,IACA3D,EACAmjF,EACAC,EAHA4iE,EAAA5hD,EAAAI,gBAAAhjE,YAKA,cAAAO,EAAA3V,IAAA,CACA,IAAAnlB,EAAAvJ,EAAA3L,SACA2L,EAAAuxB,OAAAhoB,IAAAkoM,GACAzxM,EAAAkjB,UAAA3Z,IAAA,CAAAm9F,EAAA3mE,GAAA2mE,EAAA1mE,KACA19B,EAAAhb,EAAA4a,eAAA,CAAAijD,GAAA6L,GAAAznD,GACA,IAAA0nD,EAAArqB,EAAA13C,SAAA,aAAArM,IAAA,aACAquE,EAAAjC,EAAAkC,gBAAAsgJ,EAAAxgJ,EAAA5/D,KAAA4U,GAAA,QACAw/E,EAAAv0B,EAAA3pD,UACAm+E,EAAAx0B,EAAA1pD,sBACG,CAEH,IAAA84B,EAAAgoH,EAAA,GACAhmJ,EAAAokG,EAAA8wD,aAAA,CAAAl3H,EAAA0wB,EAAA7L,IACA,IAAAplB,EAAA2mE,EAAA3mE,GACAC,EAAA0mE,EAAA1mE,GACAylD,EAAAp0F,KAAAyb,IAAAxK,EAAA,GAAAy9B,GAAAO,EAAA,YAAAh+B,EAAA,GAAAy9B,EAAA,eACA2lD,EAAAr0F,KAAAyb,IAAAxK,EAAA,GAAA09B,GAAAM,EAAA,YAAAh+B,EAAA,GAAA09B,EAAA,eAGA,OACA19B,WACAmjF,QACAC,iBAtCAosH,CAAA9vN,EAAA4kD,EAAAquB,EAAAyxC,EADAzxC,EAAApyE,IAAA,iBAEA6wI,EAAAtuC,mBAAAC,EAAAz+C,EAAAquB,EAAApqE,EAAAy6F,MAyCA,IAAAwuC,EAAA,CACA95G,KAAA,SAAAqqB,EAAAqiE,EAAAmrG,EAAA7uG,EAAArnB,GACA,gBAAAt3C,EAAA3V,IAAA,CACAzsC,KAAA,OACAioB,MAAAwpH,EAAAjtC,cAAAigB,EAAA8wD,aAAA,CAAAx0D,EAAA,GAAA6uG,IAAAnrG,EAAA8wD,aAAA,CAAAx0D,EAAA,GAAA6uG,MACK,CACL5vN,KAAA,SACAioB,MAAA,CACA61B,GAAA2mE,EAAA3mE,GACAC,GAAA0mE,EAAA1mE,GACAM,EAAAuxK,KAIA39E,OAAA,SAAA7vF,EAAAqiE,EAAAmrG,EAAA7uG,EAAArnB,GACA,IAAAnE,EAAAnmF,KAAAG,IAAA,EAAA6yC,EAAAgiB,gBACA10C,EAAAtgB,KAAA4U,GAAA,IACA,gBAAAo+B,EAAA3V,IAAA,CACAzsC,KAAA,SACAioB,MAAAwpH,EAAA5sC,gBAAA4f,EAAA3mE,GAAA2mE,EAAA1mE,GAAAgjE,EAAA,GAAAA,EAAA,KACA6uG,EAAAr6H,EAAA,GAAA7lE,GAAA6lE,EAAA,EAAAq6H,GAAAlgM,IACK,CACL1vB,KAAA,SACAioB,MAAAwpH,EAAA5sC,gBAAA4f,EAAA3mE,GAAA2mE,EAAA1mE,GAAA6xK,EAAAr6H,EAAA,EAAAq6H,EAAAr6H,EAAA,MAAAnmF,KAAA4U,OAIAquD,EAAAc,yBAAA,mBAAAw8I,GACA,IAAA9tL,EAAA8tL,EACA/2L,EAAA93B,QAAA+gC,mBCnIA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KA6BrB,SAAA2rN,EAAA9oN,EAAA2N,GACAA,EAAAhJ,OAAA,aACAoqB,EAAAlb,eAAAlG,EAAA,SAAAzC,EAAAhH,GACA,IAAA0mG,EAAA,GAWA,OAVA1mG,EAAAuD,cAAA,CACAlF,SAAA,MACAyK,MAAA9B,GACK,SAAAqsF,GACLA,EAAAv3F,GAAAkL,EAAAlR,MACA,IAAAu+F,EAAAhB,EAAAptF,iBACA7M,EAAAjF,KAAAkgG,EAAAumC,QAAA,SAAA3H,GACAvsB,EAAAusB,EAAAn9H,MAAAu9F,EAAAza,WAAAq6C,EAAAn9H,QAAA,MAGA,CACA4wG,WACA5wG,KAAAkR,EAAAlR,QA3CAmD,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KA0CR2rN,EAAA,kBACA9vN,KAAA,kBACAwV,MAAA,qBAEAs6M,EAAA,UACA9vN,KAAA,YACAwV,MAAA,gBAEAs6M,EAAA,YACA9vN,KAAA,cACAwV,MAAA,mCC9DA,IAAAlR,EAAaH,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAExBc,EAAqBd,EAAQ,KAE7BsiC,EAAYtiC,EAAQ,KAEpB4rN,EAAsB5rN,EAAQ,KAE9Bu7F,EAAiBv7F,EAAQ,KAqBzB6rN,EAAA/qN,EAAA7D,OAAA,CACApB,KAAA,MAKAmR,iBAAA,KACA81B,WAAA,MACAl/B,KAAA,SAAA0E,GACAxH,EAAAtI,UAAAoL,KAAAlI,MAAAY,KAAAb,WAEA0F,EAAA+rB,gBAAA5kB,EAAA,mBAEAk7B,cAAA,WACA,IAAAl7B,EAAAhM,KAAAgM,OACA8B,EAAA9N,KACAgM,EAAAq5H,QAAApmC,EAAAY,iBAAA7zF,EAAAq5H,QAAAr5H,EAAAnP,IAAAmP,EAAA6kF,SACA7wF,KAAAwvN,gBAAA3rN,EAAA9G,OAAAiP,EAAAq5H,SAAA,YAAAoqF,EAAAC,GAKA,OAJAA,EAAAnvN,MACAkvN,EAAAvvN,IAAAwvN,EAAAnvN,KAAA,IAAAylC,EAAA0pL,EAAA5hN,IAGA2hN,GACK5rN,EAAAV,iBACLnD,KAAA8wG,kBAAA9kG,EAAAq5H,UAEA/+F,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACAye,MAAA,EACAhoB,KAAA,SACAE,IAAA,SAOAovF,YAAA,IAMAvzF,QAAA,EAEAlO,IAAA,GAGAkhG,eAAA,KAEA1R,OAAA,KACApkB,KAAA,EACAixG,WAAA,KAEAthJ,MAAA,CACAZ,MAAA,EACA7W,MAAA,QAEAsX,UAAA,CAEAy6G,YAAA,GACAl8G,YAAA,OACA7V,MAAA,QAEA2Q,SAAA,CACA8G,MAAA,CACAZ,MAAA,EACA7W,MAAA,gBAEAsX,UAAA,CACAtX,MAAA,wBAGAklH,QAAA,IAQAM,eAAA,SAAAplI,GACA,OAAAP,KAAAwvN,gBAAArvN,IAAAI,IAAA,IAAAylC,EAAA,KAAAhmC,UAAAyK,UASAue,kBAAA,SAAAzoB,EAAA8a,GACA,IACAg2D,EADArxE,KAAA2lI,eAAAplI,GACAJ,IAAA,SAAAkb,EAAA,cACAlD,EAAA,CACA5X,QAGA,0BAAA8wE,GACAl5D,EAAAkD,SACAg2D,EAAAl5D,IACK,kBAAAk5D,EACLA,EAAApuE,QAAA,MAAmC,MAAA1C,IAAA,SAD9B,GAILq+F,QAAA,SAAA32B,GACAjoE,KAAAgM,OAAAi8D,QAEA02B,UAAA,SAAAtS,GACArsF,KAAAgM,OAAAqgF,YAGAxoF,EAAAvC,MAAAiuN,EAAAD,GACA,IAAAluL,EAAAmuL,EACAp3L,EAAA93B,QAAA+gC,mBClJA,IAAAmjG,EAAc7gI,EAAQ,KAuBtB09B,EArBc19B,EAAQ,KAqBtB6Y,oBAAA,CACAhd,KAAA,MACA+H,KAAA,SAAAmD,EAAAtC,GACA,IAAA69H,EAAA,IAAAzB,EAAAp8H,GAAA,GACAnI,KAAA06K,SAAA10C,EACAhmI,KAAAkH,MAAAiJ,IAAA61H,EAAA9+H,QAEA2K,OAAA,SAAAisF,EAAArzF,EAAAtC,EAAAsJ,GAEA,IAAAA,GAAA,oBAAAA,EAAAlS,MAAAkS,EAAA7T,OAAAoC,KAAA0S,IAAA,CAIA,IAAAszH,EAAAhmI,KAAA06K,SAEA58E,EAAA39F,IAAA,QACA6lI,EAAAnB,KAAA/mC,EAAArzF,EAAAtC,EAAAnI,KAAAyR,GAEAzR,KAAA06K,SAAAxzK,MAAAkzD,YAGAp6D,KAAAkH,MAAA6D,OAAA+yF,EAAA39F,IAAA,YAEA2V,QAAA,WACA9V,KAAA06K,UAAA16K,KAAA06K,SAAA3kK,YAIAoiB,EAAA93B,QAAA+gC,mBCnDA,IAAA9L,EAAc5xB,EAAQ,KAEtBsgM,EAAmBtgM,EAAQ,KAE3BA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAyBR4xB,EAAAxb,qBAAAkqL,oBCrCA,IAAAngM,EAAaH,EAAQ,KAqBrBisN,EAAA,kCAwDAx3L,EAAA93B,QAtDA,SAAA2L,EAAAsqJ,GACA,IAAAs5D,EAAA5jN,KAAA41B,MAMA,GAJA/9B,EAAAvF,QAAAsxN,KACAA,IAAA,CAAAA,GAAA,IAGAA,EAAAnyN,OAAA,CAIA,IAAAoyN,EAAA,GACAhsN,EAAAjF,KAAAgxN,EAAA,SAAAE,GACA,IAAAC,EAAAD,EAAA/xN,eAAA,WAAA+xN,EAAAj6L,QAAA,GAEAk6L,aAAA1zN,QACAwzN,IAAAxwN,OAAA0wN,MAGA,IAAAl6L,EAAA7pB,KAAA6pB,QAEAhyB,EAAAvF,QAAAu3B,KACAA,IAAA,IAGAA,IACAA,EAAA,CACAqkI,QAAA,IAEAluJ,EAAA6pB,QAAA,CAAAA,IAGA,IAAAm6L,EAAAn6L,EAAAqkI,UAAArkI,EAAAqkI,QAAA,IACA+1D,EAAAD,EAAApuL,QAAAouL,EAAApuL,MAAA,IACAsuL,EAAAD,EAAA1wN,OAAA0wN,EAAA1wN,KAAA,IACA2wN,EAAAzuN,KAAArC,MAAA8wN,EAAAL,GAQA,SAAA5iM,GACA,IAAApwB,EAAA,GACAgH,EAAAjF,KAAAquB,EAAA,SAAAvqB,GACA7F,EAAA6F,GAAA,IAEAuqB,EAAAxvB,OAAA,EACAoG,EAAAjF,KAAA/B,EAAA,SAAAszN,EAAAztN,GACAuqB,EAAAxrB,KAAAiB,KAdA0tN,CAAAF,GAEA55D,IAAA45D,EAAAzyN,QACAyyN,EAAAzuN,KAAArC,MAAA8wN,EAAAP,sBC9DA,IAAAr6L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErB+a,EAAmB/a,EAAQ,KAE3Bo1I,EAAqBp1I,EAAQ,KAE7B2sN,EAAe3sN,EAAQ,KAEvB88G,EAAmB98G,EAAQ,KAE3BixI,EAAyBjxI,EAAQ,KAqBjC4sN,EAAA,yBACAC,EAAA,kBACAC,EAAA,yBACAC,EAAAn7L,EAAA7vB,SAAAI,OAAAK,MA+KA,SAAAwqN,EAAAvoN,EAAAwoN,GACA,IAAAxoN,EAAA8Q,aAAA,CACA,IAAA7R,EAAAe,EAAA2D,QACA1E,EAAAopN,IAAA,EACAroN,EAAA2P,eAAA,CACAvY,KAAA,cACAkV,MAAAk8M,IAEAvpN,EAAAopN,IAAA,GAIA,SAAAI,EAAAC,EAAAC,EAAAtvN,EAAA2P,GACA,QAAA5T,EAAA,EAAAC,EAAAszN,EAAArzN,OAA6CF,EAAAC,EAASD,IAAA,CACtD,IAAAg4I,EAAAu7E,EAAAvzN,GAEA,GAAAszN,EAAAt7E,EAAAt7B,WAAA9oG,EAAA3P,EAAA+zI,EAAAgvD,UAAAhvD,GACA,UAKA,SAAAw7E,EAAAhgN,GACA,IAAAq8J,EAAAr8J,EAAAq8J,cAEA,GAAAvpK,EAAA/B,SAAAsrK,GAAA,CACA,IAAA4jD,EAAA,GAOA,OANAntN,EAAAjF,KAAAyxN,EAAA,SAAAY,EAAAh3G,GACA+2G,EAAA/2G,GAAA,SAAA9oG,EAAA3P,EAAA+iM,EAAAhvD,GACA,IAAAzP,EAAAtkI,EAAA66C,cAAAlrC,GACA,OAAA8/M,EAAA7jD,GAAAtnC,EAAAy+D,EAAAhvD,MAGAy7E,EACG,GAAAntN,EAAAhC,WAAAurK,GAAA,CACH,IAAA8jD,EAAA,GAIA,OAHArtN,EAAAjF,KAAAyxN,EAAA,SAAAc,EAAAl3G,GACAi3G,EAAAj3G,GAAAmzD,IAEA8jD,EAGA,OAAA9jD,EApNA93I,EAAAlZ,eAAAq0M,EAAA,SAAAhmN,EAAAtC,EAAAsJ,GACAhH,EAAAuD,cAAA,CACAlF,SAAA,SACG,SAAAsoN,GACH3/M,GAAA,qBAAAA,EAAAlS,MAAA6xN,EAAAC,eAAA,UAAA5/M,EAAA3T,IAAA2T,EAAAqoG,YAAA,CACAG,WAAA,KAEAm3G,EAAAE,mBAAA,IAAA38E,EAAAy8E,EAAAplN,OAAAvB,IACAwrI,eAAAm7E,EAAA/1G,MAAA5wG,OAOA6qB,EAAAhb,eAAAm2M,EAAA,SAAAhmN,EAAAtC,EAAAsJ,GACA,IACAg2D,EACA8pJ,EAFAZ,EAAA,GAGAlmN,EAAAuD,cAAA,CACAlF,SAAA,SACG,SAAAsoN,EAAAI,GACH,IAAAC,EAAA,CACAC,QAAAN,EAAAnqN,GACAuqN,aACAG,UAAAP,EAAA7wN,KACA86G,MAAAx3G,EAAA5G,MAAAm0N,EAAA/1G,OACAlK,SAAA,IAIAw/G,EAAAlvN,KAAAgwN,GACA,IAAA33G,EAAAs3G,EAAAplN,OACA4lN,EAAA93G,EAAA83G,UACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,EAEAR,IAEA/pJ,EAAAqyC,EAAAryC,aACA8pJ,EAAAz3G,EAAAy3G,eAIA,IAAAl2G,EAAAx3G,EAAAhH,IAAAu0N,EAAA/1G,MAAA,SAAAk6B,GACA,OA6KA,SAAAA,GACA,IAAAgvD,EAAAhvD,EAAAgvD,UAAA,GAOA,OANA1gM,EAAAjF,KAAAyxN,EAAA96E,EAAAt7B,WAAA,SAAAg4G,EAAAC,GAEA3tB,EAAA2tB,GAAA,SAAApsF,GACA,OAAAmsF,EAAAnsF,EAAAy+D,EAAAhvD,MAGAA,EArLA48E,CAAAtuN,EAAArF,SAAA,CACAiR,aAAA2iN,EAAA78E,EAAAt7B,WAAAs7B,IACOA,MAEP5wC,EAAAm0C,EAAAt0C,qBAAA4sH,EAAAplN,OAAAskN,EAAA,SAAArrH,GACAA,EAAAnxB,cAAA,UAMA,SAAAu+I,EAAAj6M,GACA,cAAAw5M,GAAAC,EAAAz5M,GAKA,SAAAk6M,EAAAxB,GACA,QAAAA,EAAArzN,OAXAoG,EAAAvF,QAAAszN,IAAA/tN,EAAAjF,KAAAgzN,EAAA,SAAAx5M,GACAy5M,EAAAz5M,GAAA,IA2BA3N,EAAA+H,WAAA,SAAAzB,EAAAqH,GACA,IAAA04M,EAAAiB,EAAA35M,GAAA,GACA,aAAArH,EAAAuC,QAGA,SAAAvC,EAAAqH,GACA,IAAAxN,EAAAmG,EAAAL,iBACAshN,GAAApnN,EAAAsvL,iBACAm4B,EAAAj6M,IAAAxN,EAAAmvL,gBAAAhpL,EAAAC,UAAA,SAAAmpL,EAAAhpL,GACA,WAAAgpL,IAAA23B,EAAA3gN,GAAA,KAPAohN,CAAAxhN,EAAAqH,GAWA,SAAArH,EAAAqH,EAAA04M,GACA,IAAAD,EAAAE,EAAAhgN,GAEA,IAAA8/M,GAqHA,SAAAO,EAAAh5M,GACA,IAAA0iI,EAAAs2E,EAAAplN,OAAAoM,YACA,aAAA0iI,GAAA,QAAAA,IAAAj3I,EAAAvF,QAAAw8I,GAAAj3I,EAAAhD,QAAAi6I,EAAA1iI,GAAA,EAAAA,IAAA0iI,GAvHA03E,CAAApB,EAAAh5M,GACA,OAQA,GALAvU,EAAAjF,KAAAy8G,EAAA,SAAAk6B,GACAs7E,EAAAt7E,EAAAt7B,YAAAm3G,EAAAE,mBAAAz6E,cAAAtB,EAAAxkI,EAAAtG,IAAAqmN,EAAArvN,KAAA8zI,GACAy8E,GAAAM,EAAAxB,KAGAuB,EAAAj6M,IAAAk6M,EAAAxB,GAAA,CACA,IAAAtvN,EAAAuP,EAAAC,UACAxP,EAAA5C,KAAA,SAAAuS,GACAy/M,EAAAC,EAAAC,EAAAtvN,EAAA2P,KACA2gN,EAAA3gN,GAAA,MA3BAshN,CAAA1hN,EAAAqH,EAAA04M,KAkCArmN,EAAA+H,WAAA,SAAAzB,EAAAqH,GACA,IAAAs6M,EAAA,CACAlgM,SAAAzhB,EAAA9J,GACAmR,cACAq0B,WAAA17B,EAAAxQ,KACA4Q,UAAA,IAIAsgN,EAAAtgH,SAAA1vG,KAAAixN,GACA,IAAA7B,EAAAE,EAAAhgN,GACA+/M,EAAAiB,EAAA35M,GACA5W,EAAAuP,EAAAC,UACAq0F,EAAAgtH,EAAAj6M,GAAA,SAAAjH,GACA,OAAA2gN,EAAA3gN,IAAAuhN,EAAAvhN,UAAA1P,KAAAD,EAAAs2C,YAAA3mC,IAAA,yBACO,SAAAA,GACP,OAAAy/M,EAAAC,EAAAC,EAAAtvN,EAAA2P,IAAAuhN,EAAAvhN,UAAA1P,KAAAD,EAAAs2C,YAAA3mC,IAAA,0BAGAkhN,EAAAj6M,GAAA45M,EAAAM,EAAAxB,KAAAh4E,EAAA1kE,YAAAk8I,EAAA3rH,EAAAnjG,EAAA6jG,OAMA,SAAAl9F,EAAAs/D,EAAA8pJ,EAAAZ,EAAAl/M,GASA,IAAAA,EACA,OAGA,IAAArK,EAAAe,EAAA2D,QAEA,GAAA1E,EAAAopN,GACA,OAGAppN,EAAAmpN,KACAnpN,EAAAmpN,GAAAG,GAGAlwG,EAAAj5C,eAAAngE,EAAAmpN,EAAAgB,EAAA9pJ,EACAjnE,CAAA2H,EAAAwoN,GA3BA74M,CAAA3P,EAAAs/D,EAAA8pJ,EAAAZ,EAAAl/M,KA2FA,IAAA2gN,EAAA,CACAvqJ,MAAAhkE,EAAAJ,KACAqkE,MAAAjkE,EAAAJ,KACAsb,KAAA,SAAAw2H,GACA,OAAAo9E,EAAAp9E,EAAAppH,QAEAy7C,QAAA,SAAA2tE,GAIA,IAHA,IAAAH,EACAjpH,EAAAopH,EAAAppH,MAEA5uB,EAAA,EAAAC,EAAA2uB,EAAA1uB,OAAuCF,EAAAC,EAASD,IAAA,CAChD63I,KAAA,EAAAnmI,UAAA,CAAAA,WACA,IAAA2jN,EAAAzmM,EAAA5uB,GACAq1N,EAAA,GAAAx9E,EAAA,QAAAA,EAAA,MAAAw9E,EAAA,IACAA,EAAA,GAAAx9E,EAAA,QAAAA,EAAA,MAAAw9E,EAAA,IACAA,EAAA,GAAAx9E,EAAA,QAAAA,EAAA,MAAAw9E,EAAA,IACAA,EAAA,GAAAx9E,EAAA,QAAAA,EAAA,MAAAw9E,EAAA,IAGA,OAAAx9E,GAAAu9E,EAAAv9E,KAIA,SAAAu9E,EAAAv9E,GACA,WAAA32H,EAAA22H,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,yBCxSA,IAAAzX,EAAqBj6H,EAAQ,KAE7B+a,EAAmB/a,EAAQ,KAiE3B,SAAAmvN,EAAAxyG,GACA,IAAAnc,EAAA,UACAC,EAAA,mBACA,OACA94E,MAAA,SAAAy6G,EAAAy+D,EAAAhvD,GACA,GAAAzP,EAAA,CACA,IAAA35G,EAAAopH,EAAAppH,MAEA,OAAA2mM,EADAhtF,EAAAzlB,GACAl0F,KAGApN,KAAA,SAAA+mH,EAAAy+D,EAAAhvD,GACA,GAAAzP,EAAA,CACA,IAAA35G,EAAAopH,EAAAppH,MACA4mM,EAAA,CAAAjtF,EAAA5hC,EAAAmc,IAAAylB,EAAA5hC,EAAAmc,IAAAylB,EAAA3hC,EAAAkc,KAEA,OADA0yG,EAAA,GAAAA,EAAA,IAAAA,EAAAlgJ,UACAigJ,EAAAC,EAAA,GAAA5mM,IAAA2mM,EAAAC,EAAA,GAAA5mM,IAAA2mM,EAAA3mM,EAAA,GAAA4mM,IAAAD,EAAA3mM,EAAA,GAAA4mM,MAMA,SAAAD,EAAA1/J,EAAAjnC,GACA,OAAAA,EAAA,IAAAinC,MAAAjnC,EAAA,GAGA,SAAA6mM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhoM,GACA,QAAA7tB,EAAA,EAAAqhE,EAAAxzC,IAAA3tB,OAAA,GAAiDF,EAAA6tB,EAAA3tB,OAAmBF,IAAA,CACpE,IAAA61D,EAAAhoC,EAAA7tB,GAEA,GAAA81N,EAAAJ,EAAAC,EAAAC,EAAAC,EAAAhgK,EAAA,GAAAA,EAAA,GAAAwL,EAAA,GAAAA,EAAA,IACA,SAGAA,EAAAxL,GAMA,SAAAigK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAsBAnxN,EAtBAizD,EAAAm+J,EAAAN,EAAAF,EAAAI,EAAAE,EAAAH,EAAAF,EAAAI,EAAAE,GAEA,IAoBAnxN,EApBAizD,IAqBA,MAAAjzD,IAAA,KAnBA,SAGA,IAAAqxN,EAAAD,EAAAJ,EAAAJ,EAAAI,EAAAE,EAAAD,EAAAJ,EAAAI,EAAAE,GAAAl+J,EAEA,GAAAo+J,EAAA,GAAAA,EAAA,EACA,SAGA,IAAAC,EAAAF,EAAAN,EAAAF,EAAAI,EAAAJ,EAAAG,EAAAF,EAAAI,EAAAJ,GAAA59J,EAEA,QAAAq+J,EAAA,GAAAA,EAAA,GAWA,SAAAF,EAAA53L,EAAAC,EAAAi3J,EAAA6gC,GACA,OAAA/3L,EAAA+3L,EAAA93L,EAAAi3J,EAGA,IAAAhyJ,EA1GA,CACAymC,MAAAgrJ,EAAA,GACA/qJ,MAAA+qJ,EAAA,GACA9zM,KAAA,CACAsM,MAAA,SAAAy6G,EAAAy+D,EAAAhvD,GACA,OAAAzP,GAAAyP,EAAA9lI,aAAAyxB,QAAA4kG,EAAA,GAAAA,EAAA,KAEA/mH,KAAA,SAAA+mH,EAAAy+D,EAAAhvD,GACA,OAAAzP,GAAAyP,EAAA9lI,aAAAgxB,UAAAqlG,KAGAl+D,QAAA,CACAv8C,MAAA,SAAAy6G,EAAAy+D,EAAAhvD,GACA,OAAAzP,GAAAyP,EAAA9lI,aAAAyxB,QAAA4kG,EAAA,GAAAA,EAAA,KAAAnI,EAAAz8F,QAAAq0G,EAAAppH,MAAA25G,EAAA,GAAAA,EAAA,KAEA/mH,KAAA,SAAA+mH,EAAAy+D,EAAAhvD,GACA,IAAAnqH,EAAAmqH,EAAAppH,MAEA,IAAA25G,GAAA16G,EAAA3tB,QAAA,EACA,SAGA,IAAAuS,EAAA81H,EAAA91H,EACAC,EAAA61H,EAAA71H,EACAxI,EAAAq+H,EAAAr+H,MACAC,EAAAo+H,EAAAp+H,OACA0rD,EAAAhoC,EAAA,GAEA,SAAAuyG,EAAAz8F,QAAA9V,EAAApb,EAAAC,IAAA0tH,EAAAz8F,QAAA9V,EAAApb,EAAAvI,EAAAwI,IAAA0tH,EAAAz8F,QAAA9V,EAAApb,EAAAC,EAAAvI,IAAAi2H,EAAAz8F,QAAA9V,EAAApb,EAAAvI,EAAAwI,EAAAvI,IAAA+W,EAAA9M,OAAAm0H,GAAA5kG,QAAAkyB,EAAA,GAAAA,EAAA,KAAA4/J,EAAAhjN,EAAAC,EAAAD,EAAAvI,EAAAwI,EAAAmb,IAAA4nM,EAAAhjN,EAAAC,EAAAD,EAAAC,EAAAvI,EAAA0jB,IAAA4nM,EAAAhjN,EAAAvI,EAAAwI,EAAAD,EAAAvI,EAAAwI,EAAAvI,EAAA0jB,IAAA4nM,EAAAhjN,EAAAC,EAAAvI,EAAAsI,EAAAvI,EAAAwI,EAAAvI,EAAA0jB,UAAA,KA+EA+M,EAAA93B,QAAA+gC,mBC3Ic19B,EAAQ,KAEtBC,QAFA,IAIA2xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBo1I,EAAqBp1I,EAAQ,KAE7BsiC,EAAYtiC,EAAQ,KAqBpBwwN,EAAA,SAqHA,SAAAC,EAAAnoN,EAAA8tG,GACA,OAAAj2G,EAAA7F,MAAA,CACAi8G,UAAAjuG,EAAAiuG,UACApB,UAAA7sG,EAAA6sG,UACAD,cAAA5sG,EAAA4sG,cACAD,WAAA,IAAA3yE,EAAAh6B,EAAA2sG,YAAAx3B,eACA23B,cAAA9sG,EAAA8sG,cACAvgG,EAAAvM,EAAAuM,GACGuhG,GAAA,GAGH,IAAA14E,EA/HA9L,EAAAhZ,qBAAA,CACA/c,KAAA,QACAyb,aAAA,mDAKAsrB,cAAA,CAGAzQ,QAAA,KAEA+7L,UAAA,KAGAx5M,YAAA,MAEAinF,SAAA,KAEAna,WAAA,KACAC,WAAA,KACA80B,UAAA,OAEApB,UAAA,SAEAD,eAAA,EAEAD,WAAA,CAEAu5B,YAAA,EACA/xH,MAAA,wBACA6V,YAAA,yBAEAyxC,aAAA,UAGA8pJ,cAAA,EAIAz4G,eAAA,EACAvgG,EAAA,KAOA8iG,MAAA,GASApB,UAAA,KAQAH,YAAA,GAMAs6G,cAAA,GACAltL,cAAA,SAAAnM,EAAAqM,GACA,IAAA2sC,EAAA/zE,KAAAgM,QACAo7B,GAAA0xG,EAAA3zC,oBAAApxB,EAAAh5C,EAAA,0BACA,IAAAs5L,EAAAtgJ,EAAAsgJ,QAAAtgJ,EAAAsgJ,SAAA,GAEAtgJ,EAAAugJ,WAAAvgJ,EAAAugJ,YAAA,CACAn0M,MAAA+zM,GAGAG,EAAAt2N,eAAA,WAGAs2N,EAAA99I,MAAA,IASAg+I,SAAA,SAAAl5G,GAIAA,IAIAr7G,KAAAq7G,MAAAx3G,EAAAhH,IAAAw+G,EAAA,SAAAk6B,GACA,OAAA4+E,EAAAn0N,KAAAgM,OAAAupI,IACKv1I,QAOLqxN,eAAA,SAAAv3G,GACA95G,KAAA85G,YAAAq6G,EAAAn0N,KAAAgM,OAAA8tG,GACA95G,KAAAi6G,UAAAj6G,KAAA85G,YAAAG,aAgBA9hF,EAAA93B,QAAA+gC,mBChKA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBs1G,EAAsBt1G,EAAQ,KAqB9B09B,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,QACA+H,KAAA,SAAAmD,EAAAtC,GAKAnI,KAAAyK,UAMAzK,KAAAmI,MAMAnI,KAAAyQ,OAMAzQ,KAAAw7L,iBAAA,IAAAxiF,EAAA7wG,EAAA2D,UAAAlC,GAAA,QAAA/F,EAAA7E,KAAAgB,KAAAy7L,SAAAz7L,OAAAi/G,SAMAptG,OAAA,SAAAu/M,GAEA,OADApxN,KAAAyQ,MAAA2gN,EACAoD,EAAAp1N,MAAAY,KAAAb,YAMAgT,gBAAAqiN,EAKA3hN,WAAA2hN,EAaA1+M,QAAA,WACA9V,KAAAw7L,iBAAA1lL,WAMA2lL,SAAA,SAAApgF,EAAAtjG,GACA,IAAA08M,EAAAz0N,KAAAyQ,MAAAxJ,GACAjH,KAAAyQ,MAAA6gN,mBAAAj8E,gBAAAh6B,EAAAr7G,KAAAyK,WAKAsN,EAAAujG,OAAAvjG,EAAA+gG,gBAAA94G,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,QACAmyN,QAAA+C,EACAp5G,MAAAx3G,EAAA5G,MAAAo+G,GACAq5G,MAAAD,OAKA,SAAAD,EAAApD,EAAA3mN,EAAAtC,EAAAsJ,KAEAA,KAAAijN,QAAAtD,EAAAnqN,KAAAjH,KAAAw7L,iBAAAz8E,UAAAqyG,EAAAE,mBAAA56E,cAAAvuI,IAAAu2G,YAAA0yG,EAAAt3G,aAAAsF,aAAAgyG,EAAA/1G,MAAA1+G,SAGAw7B,EAAA93B,QAAA+gC,mBC9GA,IAAA9L,EAAc5xB,EAAQ,KA8BtB4xB,EAAAlb,eAAA,CACA7a,KAAA,QACAwV,MAAA,SAGC,SAAAtD,EAAAhH,GACDA,EAAAuD,cAAA,CACAlF,SAAA,QACAyK,MAAA9B,GACG,SAAA2/M,GACHA,EAAAmD,SAAA9iN,EAAA4pG,WAyBA/lF,EAAAlb,eAAA,CACA7a,KAAA,cACAwV,MAAA,gBACA7J,OAAA,QACC,+BCrED,IAAArH,EAAaH,EAAQ,KAErBixN,EAAqBjxN,EAAQ,KAuB7BkxN,EArBWlxN,EAAQ,KAqBnBmyB,QAAA+L,MAEA,SAAAizL,EAAApkN,EAAAhG,EAAAtC,GACAnI,KAAAyQ,QACAzQ,KAAAyK,UACAzK,KAAAmI,MAMAnI,KAAAi5G,WAMAj5G,KAAA80N,WAGAD,EAAAvuL,cAAA,CACAtP,MAAA,EACAz3B,KAAA,kDACA82M,KAAA,CACAt3L,KAAA,iQAEA6oD,QAAA,ubAEAC,MAAA,iNAEAC,MAAA,gMAEA7tB,KAAA,4KAEA/gC,MAAA,0MAIAwc,MAAA7xB,EAAA5G,MAAA23N,EAAAl/L,QAEA,IAAAijC,EAAAk8J,EAAA34N,UAEAy8D,EAAA9mD,OAAA8mD,EAAA9lD,WAAA,SAAAkiN,EAAAtqN,EAAAtC,GACA,IAAA8xG,EACApB,EACAm8G,EACAvqN,EAAAuD,cAAA,CACAlF,SAAA,SACG,SAAAsoN,GACHn3G,EAAAm3G,EAAAn3G,UACApB,EAAAu4G,EAAAt3G,YAAAjB,WAAA,SACAm8G,GAAA5D,EAAA/1G,MAAA59G,SAEAuC,KAAAi5G,WAAAgB,EACAj6G,KAAA80N,WAAAj8G,EACAh1G,EAAAjF,KAAAm2N,EAAA50N,IAAA,oBAAAZ,GACAw1N,EAAAE,cAAA11N,GAAA,SAAAA,EAAA,aAAAs5G,EAAA,UAAAt5G,EAAAy1N,EAAAz1N,IAAA06G,GAAA,wBAIAthD,EAAAu8J,SAAA,WACA,IAAAzkN,EAAAzQ,KAAAyQ,MACA0kN,EAAA1kN,EAAAtQ,IAAA,WACAi1N,EAAA,GAMA,OALAvxN,EAAAjF,KAAA6R,EAAAtQ,IAAA,oBAAAZ,GACA41N,EAAA51N,KACA61N,EAAA71N,GAAA41N,EAAA51N,MAGA61N,GAGAz8J,EAAA0vH,QAAA,SAAA59K,EAAAtC,EAAA5I,GACA,IAAA06G,EAAAj6G,KAAAi5G,WACAJ,EAAA74G,KAAA80N,WAEA,UAAAv1N,GAEA4I,EAAA2P,eAAA,CACAvY,KAAA,iBACA67L,UAAA,KAEAjzL,EAAA2P,eAAA,CACAvY,KAAA,QACA81N,QAAA,QAEAh6G,MAAA,MAGAlzG,EAAA2P,eAAA,CACAvY,KAAA,mBACAzB,IAAA,QACAg8G,YAAA,CACAG,UAAA,SAAA16G,EAAA06G,MAAA16G,KACAs5G,UAAA,SAAAt5G,EAAA,aAAAs5G,EAAA,oBAAAA,MAMA87G,EAAA54M,SAAA,QAAA84M,GACA,IAAAzzL,EAAAyzL,EACA18L,EAAA93B,QAAA+gC,mBC/HA19B,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBCJR,IAAAG,EAAaH,EAAQ,KAErBsb,EAAatb,EAAQ,KAErBy5B,EAAiBz5B,EAAQ,KAEzBoY,EAAuBpY,EAAQ,KAiC/B,SAAA4xN,EAAAC,EAAA9qN,EAAAtC,GACAnI,KAAA4I,OAAA2sN,EAuWA,SAAA1yF,EAAAt4H,EAAAE,EAAAD,EAAAlL,GACA,IAAAi2N,EAAA/qN,EAAA+qN,cACAxkN,EAAAvG,EAAAuG,YACAnG,EAAA2qN,IAAA7kN,iBAAAK,IAAAL,iBAAA,KACA,OAAA9F,IAAA5K,KAAA4K,EAAAL,GAAAjL,GAAA,KAxWAg2N,EAAAp5N,UAAA,CACAyB,YAAA23N,EACA/1N,KAAA,WACA4c,WAAA,iBAEAD,kBAAA,WACA,QACA3b,KAAA,OACAhB,KAAA,QACK,UAELggN,aAAA,WACA,OAAAv/M,KAAAw1N,YAEAhpN,SAAA,WACA,OAAAxM,KAAA4I,QAEAo6E,QAAA,WACA,OAAAhjF,KAAA4jC,OAEA67K,aAAA,WACA,OAAAz/M,KAAAy1N,KAEA9V,cAAA,WACA,OAAA3/M,KAAA01N,KAEAv5C,UAAA,WACA,OAAAn8K,KAAA21N,SAYAC,kBAAA,WACA,OAAA51N,KAAA61N,iBAkBAC,YAAA,SAAAv2L,GAEA,IAAAtvB,GADAsvB,EAAApC,EAAA/N,UAAAmQ,IACAqhI,cACAnhJ,EAAA8f,EAAAshI,WAAA,EACAphJ,IAAA,OAAAA,IACA,IAAAqd,EAAAyC,EAAAuhI,UACAhkI,IAAA,OAAAA,IACA,IAAAi5L,EAAAx2L,EAAAy2L,SAEA,OACA/lN,IACAwP,IACAqd,IACAi5L,IALAA,EAAApnN,KAAAyb,KAAA2rM,EAAA,EAAA/1N,KAAA41N,qBAAA,GAMAllL,KAAAnR,EAAA0nC,UACAgvJ,aAAAhmN,EAAA,IAAAwP,EAAA,IAAAqd,EACAyC,SAGA22L,YAAA,SAAA32L,EAAA8/B,GAGA,YAFAA,KAAA,GAGAr/D,KAAA81N,YAAAv2L,KAGAA,EAAA,IAAAh0B,KAAAvL,KAAA81N,YAAAv2L,GAAAmR,OACAylL,QAAA52L,EAAAuhI,UAAAzhG,GACAr/D,KAAA81N,YAAAv2L,KAEAr0B,OAAA,SAAAT,EAAAtC,GACAnI,KAAA61N,iBAAA71N,KAAA4I,OAAA4D,SAAA,YAAArM,IAAA,YACAH,KAAA21N,QAAA31N,KAAA4I,OAAAzI,IAAA,UACAH,KAAAo2N,WAAAp2N,KAAA4I,OAAA4D,SAAA,aAAA20E,eAAAthE,WAAA,EACA7f,KAAAw1N,WAAAx1N,KAAAq2N,cAAAr2N,KAAAs2N,oBACA,IAAA1W,EAAA5/M,KAAAw1N,WAAA5V,OAAA,EACA2W,EAAA,mBAEAC,EAAAx2N,KAAA4I,OAAAzI,IAAA,YAAAxD,QAEA85N,EAAAz2N,KAAA4I,OAAA61F,qBAEAi4H,EAAA,eAAA12N,KAAA21N,QAAA,CAAA/V,EAAA,MAAAA,GACA/7M,EAAAjF,KAAA,eAAAqvB,GACA0oM,EAAAH,EAAAvoM,KACAwoM,EAAAF,EAAAtoM,IAAAuoM,EAAAvoM,GAAAyoM,EAAAzoM,MAGA,IAAA2oM,EAAA,CACAnvN,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aAEAkqN,EAAA72N,KAAA4jC,MAAA5kB,EAAAya,cAAAg9L,EAAAG,GAOA,SAAAD,EAAAH,EAAAvoM,GACA,aAAAuoM,EAAAvoM,IAAA,SAAAuoM,EAAAvoM,GAPApqB,EAAAjF,KAAA,eAAAqvB,GACA0oM,EAAAH,EAAAvoM,KACAuoM,EAAAvoM,GAAA4oM,EAAAN,EAAAtoM,IAAAyoM,EAAAzoM,MAQAjuB,KAAAy1N,IAAAe,EAAA,GACAx2N,KAAA01N,IAAAc,EAAA,IAWA1zI,YAAA,SAAAthF,EAAA4qB,GACAvoB,EAAAvF,QAAAkD,SAAA,IACA,MAAA4qB,OAAA,GACA,IAAA0qM,EAAA92N,KAAA81N,YAAAt0N,GACA2qB,EAAAnsB,KAAAw1N,WACAj2L,EAAAu3L,EAAAb,aAEA,GAAA7pM,KAAA0qM,EAAApmL,MAAAvkB,EAAA8pB,MAAAvF,MAAAomL,EAAApmL,KAAAvkB,EAAA0hB,IAAA6C,KA3JA,OA4JA,OAAA9jB,SAGA,IAAAmqM,EAAAD,EAAAf,IAEAiB,EAAAh3N,KAAAq2N,cAAA,CAAAlqM,EAAA8pB,MAAAvF,KAAAnR,IAAAy3L,QAEA,mBAAAh3N,KAAA21N,QACA,CAAA31N,KAAA4jC,MAAA5zB,EAAA+mN,EAAA/2N,KAAAy1N,IAAAz1N,KAAAy1N,IAAA,EAAAz1N,KAAA4jC,MAAA3zB,EAAA+mN,EAAAh3N,KAAA01N,IAAA11N,KAAA01N,IAAA,GAGA,CAAA11N,KAAA4jC,MAAA5zB,EAAAgnN,EAAAh3N,KAAAy1N,IAAAz1N,KAAAy1N,IAAA,EAAAz1N,KAAA4jC,MAAA3zB,EAAA8mN,EAAA/2N,KAAA01N,IAAA11N,KAAA01N,IAAA,IAUA7yJ,YAAA,SAAAx3C,GACA,IAAAkU,EAAAv/B,KAAAi3N,YAAA5rM,GACA,OAAAkU,KAAAmR,MAUAm7J,WAAA,SAAArqM,EAAA4qB,GACA,IAAAf,EAAArrB,KAAA8iF,YAAAthF,EAAA4qB,GACA,OACA0/K,aAAA,CACA97L,EAAAqb,EAAA,IAAArrB,KAAAy1N,IAAAz1N,KAAAo2N,YAAA,EACAnmN,EAAAob,EAAA,IAAArrB,KAAA01N,IAAA11N,KAAAo2N,YAAA,EACA3uN,MAAAzH,KAAAy1N,IAAAz1N,KAAAo2N,WACA1uN,OAAA1H,KAAA01N,IAAA11N,KAAAo2N,YAEA/pI,OAAAhhE,EACA6rM,GAAA,CAAA7rM,EAAA,GAAArrB,KAAAy1N,IAAA,EAAApqM,EAAA,GAAArrB,KAAA01N,IAAA,GACAyB,GAAA,CAAA9rM,EAAA,GAAArrB,KAAAy1N,IAAA,EAAApqM,EAAA,GAAArrB,KAAA01N,IAAA,GACA0B,GAAA,CAAA/rM,EAAA,GAAArrB,KAAAy1N,IAAA,EAAApqM,EAAA,GAAArrB,KAAA01N,IAAA,GACA2B,GAAA,CAAAhsM,EAAA,GAAArrB,KAAAy1N,IAAA,EAAApqM,EAAA,GAAArrB,KAAA01N,IAAA,KAUAuB,YAAA,SAAA5rM,GACA,IAAAisM,EAAA3oN,KAAAod,OAAAV,EAAA,GAAArrB,KAAA4jC,MAAA5zB,GAAAhQ,KAAAy1N,KAAA,EACA8B,EAAA5oN,KAAAod,OAAAV,EAAA,GAAArrB,KAAA4jC,MAAA3zB,GAAAjQ,KAAA01N,KAAA,EACAvpM,EAAAnsB,KAAAw1N,WAAArpM,MAEA,mBAAAnsB,KAAA21N,QACA31N,KAAAw3N,sBAAAD,EAAAD,EAAA,EAAAnrM,GAGAnsB,KAAAw3N,sBAAAF,EAAAC,EAAA,EAAAprM,IAMA9b,eAAAxM,EAAAjC,MAAAihI,EAAA,eAKAvyH,iBAAAzM,EAAAjC,MAAAihI,EAAA,eAQAyzF,iBAAA,WACA,IAAAnqM,EAAAnsB,KAAA4I,OAAAzI,IAAA,SAEAyyN,EAAAzmM,EAUA,GARAtoB,EAAAvF,QAAAs0N,IAAA,IAAAA,EAAAn1N,SACAm1N,IAAA,IAGA,UAAev4M,KAAAu4M,KACfzmM,EAAA,CAAAymM,EAAA,SAAAA,EAAA,WAGA,uBAA4Bv4M,KAAAu4M,GAAA,CAC5B,IAAA38K,EAAAj2C,KAAA81N,YAAAlD,GACA6E,EAAAxhL,EAAA1W,KACAk4L,EAAAC,SAAAD,EAAA52D,WAAA,GACA,IAAAhzH,EAAA7tC,KAAAk2N,YAAAuB,GAAA,GACAtrM,EAAA,CAAA8pB,EAAAggL,aAAApoL,EAAAooL,cAGA,oCAAyC57M,KAAAu4M,KACzCzmM,EAAA,CAAAymM,MAGA,IAAA3yJ,EAAAjgE,KAAAq2N,cAAAlqM,GAMA,OAJA8zC,EAAAhqB,MAAAvF,KAAAuvB,EAAApyB,IAAA6C,MACAvkB,EAAA0mD,UAGA1mD,GAWAkqM,cAAA,SAAAlqM,GAEA,IAAAwrM,GADAxrM,EAAA,CAAAnsB,KAAA81N,YAAA3pM,EAAA,IAAAnsB,KAAA81N,YAAA3pM,EAAA,MAGA,GAAAukB,KAAAvkB,EAAA,GAAAukB,OACAinL,GAAA,EACAxrM,EAAA0mD,WAGA,IAAAitI,EAAAnxM,KAAAod,MAAAI,EAAA,GAAAukB,KAnSA,OAmSA/hC,KAAAod,MAAAI,EAAA,GAAAukB,KAnSA,OAmSA,EASAnR,EAAA,IAAAh0B,KAAA4gB,EAAA,GAAAukB,MACAknL,EAAAr4L,EAAAuhI,UACA+2D,EAAA1rM,EAAA,GAAAoT,KAAAuhI,UAGA,GAFAvhI,EAAA42L,QAAAyB,EAAA9X,EAAA,GAEAvgL,EAAAuhI,YAAA+2D,EAGA,IAFA,IAAAp0I,EAAAlkD,EAAA0nC,UAAA96C,EAAA,GAAAukB,KAAA,OAEAnR,EAAAuhI,YAAA+2D,IAAAt4L,EAAA0nC,UAAA96C,EAAA,GAAAukB,MAAA+yC,EAAA,GACAq8H,GAAAr8H,EACAlkD,EAAA42L,QAAAyB,EAAA9X,EAAA,GAIA,IAAAF,EAAAjxM,KAAAod,OAAA+zL,EAAA3zL,EAAA,GAAA4pM,IAAA,MACAiB,EAAAW,EAAA,EAAA/X,IAAA,EAEA,OADA+X,GAAAxrM,EAAA0mD,UACA,CACA1mD,MAAA,CAAAA,EAAA,GAAA8pM,aAAA9pM,EAAA,GAAA8pM,cACAhgL,MAAA9pB,EAAA,GACA0hB,IAAA1hB,EAAA,GACA2zL,SACAF,QAEAoX,UACAc,MAAA3rM,EAAA,GAAA4pM,IACAgC,MAAA5rM,EAAA,GAAA4pM,MAaAyB,sBAAA,SAAAR,EAAAjB,EAAA5pM,GACA,IAAAmzL,EAAAt/M,KAAAq2N,cAAAlqM,GAEA,GAAA6qM,EAAA1X,EAAAM,OAAA,IAAAoX,GAAAjB,EAAAzW,EAAAwY,OAAAd,IAAA1X,EAAAM,OAAAmW,EAAAzW,EAAAyY,MACA,SAGA,IAAAC,EAAA,GAAAhB,EAAA,GAAA1X,EAAAwY,MAAA/B,EACAx2L,EAAA,IAAAh0B,KAAA+zM,EAAArpK,MAAAvF,MAEA,OADAnR,EAAA42L,QAAA7W,EAAArpK,MAAAnZ,EAAAk7L,GACAh4N,KAAA81N,YAAAv2L,KAGA+1L,EAAAn5M,WAAAm5M,EAAAp5N,UAAAigB,WACAm5M,EAAAp5M,kBAAAo5M,EAAAp5N,UAAAggB,kBAEAo5M,EAAA3jN,OAAA,SAAAlH,EAAAtC,GACA,IAAA8vN,EAAA,GAYA,OAXAxtN,EAAAuD,cAAA,oBAAAunN,GACA,IAAA37D,EAAA,IAAA07D,EAAAC,EAAA9qN,EAAAtC,GACA8vN,EAAAx2N,KAAAm4J,GACA27D,EAAA7kN,iBAAAkpJ,IAEAnvJ,EAAA+H,WAAA,SAAA0lN,GACA,aAAAA,EAAA/3N,IAAA,sBAEA+3N,EAAAxnN,iBAAAunN,EAAAC,EAAA/3N,IAAA,wBAGA83N,GAUAn8M,EAAAC,SAAA,WAAAu5M,GACA,IAAAl0L,EAAAk0L,EACAn9L,EAAA93B,QAAA+gC,mBCxZA,IAAAv9B,EAAaH,EAAQ,KAErBc,EAAqBd,EAAQ,KAE7B0lC,EAAc1lC,EAAQ,KAEtBi4B,EAAAyN,EAAAzN,gBACAhB,EAAAyO,EAAAzO,eACAE,EAAAuO,EAAAvO,iBAoBAs9L,EAAA3zN,EAAA7D,OAAA,CACApB,KAAA,WAKAmR,iBAAA,KACA41B,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACAvJ,KAAA,GACAE,IAAA,GACAsnN,SAAA,GAEAh+L,OAAA,aAEA3B,UAAA,CACAG,MAAA,EACAb,UAAA,CACAhW,MAAA,OACA1Y,MAAA,EACAlI,KAAA,UAIAk4B,UAAA,CACAtX,MAAA,OACA+xH,YAAA,EACAl8G,YAAA,QAGAoiM,SAAA,CACAphM,MAAA,EAEAygM,SAAA,EAEA73M,SAAA,QACAga,OAAA,MAEAi3D,QAAA,KACA1wE,MAAA,QAGAk4M,WAAA,CACArhM,MAAA,EAEApX,SAAA,QACAga,OAAA,EAEAmpE,MAAA,SAEAlS,QAAA,KACAxf,UAAA,KACAlxD,MAAA,QAGAm4M,UAAA,CACAthM,MAAA,EAEApX,SAAA,KACAga,OAAA,GACAy3C,UAAA,KACAlxD,MAAA,OACAyE,WAAA,aACAF,WAAA,SACAC,SAAA,KAOArd,KAAA,SAAA0E,EAAA+X,EAAAtZ,EAAAi8B,GACA,IAAAG,EAAAlL,EAAA3vB,GACAmsN,EAAA3/J,WAAAx4D,KAAA,OAAAb,WACAwkN,EAAA33M,EAAA66B,IAMAI,YAAA,SAAAj7B,EAAA06B,GACAyxL,EAAA3/J,WAAAx4D,KAAA,cAAAb,WACAwkN,EAAA3jN,KAAAgM,aAIA,SAAA23M,EAAA1lN,EAAA2lN,GAEA,IAAA4S,EAAAv4N,EAAAu4N,SAEA3yN,EAAAvF,QAAAk4N,GAEG,IAAAA,EAAA/4N,SACH+4N,EAAA,GAAAA,EAAA,IAFAA,EAAAv4N,EAAAu4N,SAAA,CAAAA,KAKA,IAAAx7L,EAAAn3B,EAAAhH,IAAA,eAAA+9B,GAQA,OAJAD,EAAAipL,EAAAhpL,KACA47L,EAAA57L,GAAA,QAGA,MAAA47L,EAAA57L,IAAA,SAAA47L,EAAA57L,KAEAC,EAAA58B,EAAA2lN,EAAA,CACArkN,KAAA,MACAy7B,eAIA,IAAAoG,EAAA+2L,EACAhgM,EAAA93B,QAAA+gC,mBC9IA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtB00B,EAAiB10B,EAAQ,KAEzBy5B,EAAiBz5B,EAAQ,KAqBzB60N,EAAA,CACAC,GAAA,0EACAC,GAAA,mMAEAC,EAAA,CACAF,GAAA,8BACAC,GAAA,kEAGAr3L,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,WAMAo5N,UAAA,KAMAC,UAAA,KAMAC,iBAAA,KAMAC,gBAAA,KACAjnN,OAAA,SAAA0jN,EAAA9qN,EAAAtC,GACA,IAAAjB,EAAAlH,KAAAkH,MACAA,EAAAkzD,YACA,IAAAxvD,EAAA2qN,EAAA7kN,iBAEAqoN,EAAAnuN,EAAA20M,eACA/mL,EAAA5tB,EAAAuxK,YAEAn8K,KAAAg5N,eAAAzD,EAAAwD,EAAA7xN,GAGAlH,KAAAi5N,aAAA1D,EAAAwD,EAAAvgM,EAAAtxB,GAEAlH,KAAAk5N,gBAAA3D,EAAAwD,EAAAvgM,EAAAtxB,GAEAlH,KAAAm5N,iBAAA5D,EAAA/8L,EAAAtxB,GAEAlH,KAAAo5N,gBAAA7D,EAAAwD,EAAAvgM,EAAAtxB,IAGA8xN,eAAA,SAAAzD,EAAAwD,EAAA7xN,GAMA,IALA,IAAA0D,EAAA2qN,EAAA7kN,iBACA2oN,EAAA9D,EAAA/oN,SAAA,aAAA20E,eACAo3B,EAAA3tG,EAAA60M,eACA6Z,EAAA1uN,EAAA+0M,gBAEApiN,EAAAw7N,EAAA9iL,MAAAvF,KAAsCnzC,GAAAw7N,EAAAlrL,IAAA6C,KAAyBnzC,EAAAqN,EAAAsrN,YAAA34N,EAAA,GAAAmzC,KAAA,CAC/D,IAAArlB,EAAAzgB,EAAAihM,WAAA,CAAAtuM,IAAA,GAAA25N,GAEAn4M,EAAA,IAAAna,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAAqb,EAAA,GACApb,EAAAob,EAAA,GACA5jB,MAAA8wG,EACA7wG,OAAA4xN,GAEA96I,OAAA,UACAzuE,MAAAspN,IAEAnyN,EAAAiJ,IAAA4O,KAIAk6M,aAAA,SAAA1D,EAAAwD,EAAAvgM,EAAAtxB,GACA,IAAA4G,EAAA9N,KACA4K,EAAA2qN,EAAA7kN,iBACAq9D,EAAAwnJ,EAAA/oN,SAAA,uBAAA6gE,eACAr2C,EAAAu+L,EAAAp1N,IAAA,kBACA0f,EAAAkuD,EAAAluD,UACA7f,KAAA24N,UAAA,GACA34N,KAAA44N,UAAA,GACA54N,KAAA64N,iBAAA,GACA74N,KAAA84N,gBAAA,GAGA,IAFA,IAAArB,EAAAsB,EAAA9iL,MAEA14C,EAAA,EAAmBk6N,EAAA/mL,MAAAqoL,EAAAlrL,IAAA6C,KAAqCnzC,IAAA,CACxDg8N,EAAA9B,EAAAxB,cAEA,IAAA14N,IACAk6N,EAAA7sN,EAAAkrN,YAAAiD,EAAA9iL,MAAAhmC,EAAA,IAAA8oN,EAAA9iL,MAAAx2B,IAGA,IAAA8f,EAAAk4L,EAAAl4L,KACAA,EAAAm4L,SAAAn4L,EAAAshI,WAAA,GACA42D,EAAA7sN,EAAAkrN,YAAAv2L,GAKA,SAAAg6L,EAAAh6L,GACAzxB,EAAA+qN,iBAAAp3N,KAAAmJ,EAAAkrN,YAAAv2L,IAEAzxB,EAAAgrN,gBAAAr3N,KAAAmJ,EAAAihM,WAAA,CAAAtsK,IAAA,GAAA23L,IAEA,IAAA9rM,EAAAtd,EAAA0rN,wBAAAjE,EAAAh2L,EAAA/G,GAEA1qB,EAAA6qN,UAAAl3N,KAAA2pB,EAAA,IAEAtd,EAAA8qN,UAAAn3N,KAAA2pB,IAAA3tB,OAAA,IAEAu5B,GAAAlpB,EAAA2rN,eAAAruM,EAAA2iD,EAAA7mE,GAbAqyN,EAAA3uN,EAAAsrN,YAAA6C,EAAAlrL,IAAA6C,KAAA,GAAAulL,cAiBAj/L,GAAAh3B,KAAAy5N,eAAA3rN,EAAA4rN,gBAAA5rN,EAAA6qN,UAAA94M,EAAA2Y,GAAAu1C,EAAA7mE,GAEA8vB,GAAAh3B,KAAAy5N,eAAA3rN,EAAA4rN,gBAAA5rN,EAAA8qN,UAAA/4M,EAAA2Y,GAAAu1C,EAAA7mE,IAGAwyN,gBAAA,SAAAtuM,EAAAvL,EAAA2Y,GACA,IAAAmhM,EAAA,CAAAvuM,EAAA,GAAAzuB,QAAAyuB,IAAA3tB,OAAA,GAAAd,SACAsxB,EAAA,eAAAuK,EAAA,IAIA,OAFAmhM,EAAA,GAAA1rM,GAAA0rM,EAAA,GAAA1rM,GAAApO,EAAA,EACA85M,EAAA,GAAA1rM,GAAA0rM,EAAA,GAAA1rM,GAAApO,EAAA,EACA85M,GAGAF,eAAA,SAAAruM,EAAA2iD,EAAA7mE,GACA,IAAA0yN,EAAA,IAAAh1N,EAAAqZ,SAAA,CACA0D,GAAA,GACA6F,MAAA,CACA4D,UAEArb,MAAAg+D,IAEA7mE,EAAAiJ,IAAAypN,IAGAJ,wBAAA,SAAAjE,EAAAh2L,EAAA/G,GACA,IAAA5tB,EAAA2qN,EAAA7kN,iBACA6uB,EAAA30B,EAAAkrN,YAAAv2L,GAGA,IAFA,IAAAnU,EAAA,GAEA7tB,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAC1B,IAAAs8N,EAAAjvN,EAAAsrN,YAAA32L,EAAAmR,KAAAnzC,GACA8tB,EAAAzgB,EAAAihM,WAAA,CAAAguB,EAAAnpL,OAAA,GACAtlB,EAAA,EAAAyuM,EAAA9D,KAAA1qM,EAAA6rM,GACA9rM,EAAA,EAAAyuM,EAAA9D,IAAA,GAAA1qM,EAAA,eAAAmN,EAAA,WAGA,OAAApN,GAEA0uM,gBAAA,SAAAzoJ,EAAAl5D,GACA,wBAAAk5D,KACAj5C,EAAA8G,gBAAAmyC,EAAAl5D,GAGA,oBAAAk5D,EACAA,EAAAl5D,GAGAA,EAAA04E,SAEAkpI,yBAAA,SAAA7qJ,EAAA7jD,EAAAmN,EAAA5Y,EAAAga,GACAvO,IAAA1uB,QACA,IAAAq9N,EAAA,oBAEA,WAAAp6M,GACAyL,EAAA,IAAAuO,EACAogM,EAAA,kBACK,SAAAp6M,EACLyL,EAAA,IAAAuO,EACK,UAAAha,GACLyL,EAAA,IAAAuO,EACAogM,EAAA,kBAGA3uM,EAAA,IAAAuO,EAGA,IAAAiV,EAAA,EAMA,MAJA,SAAAjvB,GAAA,UAAAA,IACAivB,EAAAlgC,KAAA4U,GAAA,GAGA,CACA2H,SAAA2jB,EACAjvB,SAAAyL,EACAtb,MAAA,CACA8U,UAAAm1M,EAAA,GACAl1M,kBAAAk1M,EAAA,MAKAd,gBAAA,SAAA3D,EAAAwD,EAAAvgM,EAAAtxB,GACA,IAAAoxN,EAAA/C,EAAA/oN,SAAA,aAEA,GAAA8rN,EAAAn4N,IAAA,SAIA,IAAAy5B,EAAA0+L,EAAAn4N,IAAA,UACAwtE,EAAA2qJ,EAAAn4N,IAAA,YAEAwtE,IACAA,EAAA,eAAAn1C,EAAA,cAGA,IAAApN,EAAA,CAAAprB,KAAA24N,UAAA34N,KAAA24N,UAAAl7N,OAAA,GAAAuC,KAAA44N,UAAA,IACAqB,GAAA7uM,EAAA,MAAAA,EAAA,SACA8uM,GAAA9uM,EAAA,MAAAA,EAAA,SACA6C,EAAA,eAAAuK,EAAA,IACA2hM,EAAA,CACAjrN,IAAA,CAAA+qN,EAAA7uM,EAAA6C,GAAA,IACA7e,OAAA,CAAA6qN,EAAA7uM,EAAA,EAAA6C,GAAA,IACAjf,KAAA,CAAAoc,EAAA,EAAA6C,GAAA,GAAAisM,GACA/qN,MAAA,CAAAic,EAAA6C,GAAA,GAAAisM,IAEA35N,EAAAw4N,EAAA9iL,MAAAhmC,GAEA8oN,EAAAlrL,IAAA59B,GAAA8oN,EAAA9iL,MAAAhmC,IACA1P,IAAA,IAAAw4N,EAAAlrL,IAAA59B,GAGA,IAAAohE,EAAAinJ,EAAAn4N,IAAA,aACAgY,EAAA,CACA89B,MAAA8iL,EAAA9iL,MAAAhmC,EACA49B,IAAAkrL,EAAAlrL,IAAA59B,EACA4gF,QAAAtwF,GAGA6wE,EAAApxE,KAAA85N,gBAAAzoJ,EAAAl5D,GAEAiiN,EAAA,IAAAx1N,EAAAgZ,KAAA,CACA+D,GAAA,KAEA/c,EAAA+d,aAAAy3M,EAAArqN,MAAAuoN,EAAA,CACAlvM,KAAAgoD,IACKgpJ,EAAAzzM,KAAA3mB,KAAA+5N,yBAAAK,EAAAD,EAAAxsJ,GAAAn1C,EAAAm1C,EAAA/zC,IACL1yB,EAAAiJ,IAAAiqN,KAEAC,0BAAA,SAAAhvM,EAAAivM,EAAA9hM,EAAA5Y,EAAAga,GACA,IAAAmpE,EAAA,OACA6mH,EAAA,MACA55M,EAAAqb,EAAA,GACApb,EAAAob,EAAA,GAwBA,MAtBA,eAAAmN,GACAvoB,GAAA2pB,EAEA0gM,IACAv3H,EAAA,UAGA,UAAAnjF,IACAgqM,EAAA,YAGA55M,GAAA4pB,EAEA0gM,IACA1Q,EAAA,UAGA,UAAAhqM,IACAmjF,EAAA,UAIA,CACA/yF,IACAC,IACA4U,UAAAk+E,EACAj+E,kBAAA8kM,IAIAuP,iBAAA,SAAA5D,EAAA/8L,EAAAtxB,GACA,IAAAmxN,EAAA9C,EAAA/oN,SAAA,cAEA,GAAA6rN,EAAAl4N,IAAA,SAIA,IAAA0wF,EAAAwnI,EAAAl4N,IAAA,WACAy5B,EAAAy+L,EAAAl4N,IAAA,UACAwtE,EAAA0qJ,EAAAl4N,IAAA,YACA4iG,EAAAs1H,EAAAl4N,IAAA,SACAo6N,EAAA,CAAAv6N,KAAA24N,UAAA34N,KAAA44N,WAEA/0N,EAAA/B,SAAA+uF,KACAA,EAAA0nI,EAAA1nI,EAAAthE,gBAAA,IAGA,IAAAtB,EAAA,UAAA0/C,EAAA,IACAhsB,EAAA,eAAAnpB,EAAA,IACAoB,EAAA,UAAA+zC,GAAA/zC,IAGA,IAFA,IAAA0gM,EAAA,WAAAv3H,EAEAxlG,EAAA,EAAmBA,EAAAg9N,EAAAtsM,GAAAxwB,OAAA,EAAgCF,IAAA,CACnD,IAAA0iE,EAAAs6J,EAAAtsM,GAAA1wB,GAAAZ,QACA86N,EAAAz3N,KAAA64N,iBAAAt7N,GAEA,GAAA+8N,EAAA,CACA,IAAAE,EAAAx6N,KAAA84N,gBAAAv7N,GACA0iE,EAAAte,IAAA64K,EAAA74K,GAAA44K,EAAA,GAAAh9N,EAAA,GAAAokD,IAAA,EAGA,IAAA0vB,EAAAgnJ,EAAAl4N,IAAA,aACAI,EAAAswF,GAAA4mI,EAAAh4M,EAAA,GACAtH,EAAA,CACAsiN,KAAAhD,EAAAxnN,EACAyqN,IAAAjD,EAAAxnN,EAAA,IAAAtT,MAAA,GACAg+N,GAAAlD,EAAAh4M,EACAggB,GAAAg4L,EAAAh4M,EACAoxE,QAAAtwF,GAGA6wE,EAAApxE,KAAA85N,gBAAAzoJ,EAAAl5D,GAEAyiN,EAAA,IAAAh2N,EAAAgZ,KAAA,CACA+D,GAAA,KAEA9d,EAAAlD,OAAAiE,EAAA+d,aAAAi4M,EAAA7qN,MAAAsoN,EAAA,CACAjvM,KAAAgoD,IACOpxE,KAAAq6N,0BAAAp6J,EAAAq6J,EAAA9hM,EAAAm1C,EAAA/zC,IACP1yB,EAAAiJ,IAAAyqN,MAGAC,yBAAA,SAAAxvM,EAAAmN,EAAA5Y,EAAAga,EAAA48L,GACA,IAAAzzH,EAAA,SACA6mH,EAAA,SACA55M,EAAAqb,EAAA,GACApb,EAAAob,EAAA,GACAyvM,EAAA,UAAAl7M,EAUA,MARA,eAAA4Y,GACAxoB,IAAA4pB,GAAAkhM,EAAA,MAAAtE,EAAA,KACAzzH,EAAA+3H,EAAA,iBAEA7qN,IAAA2pB,GAAAkhM,EAAA,MAAAtE,EAAA,KACA5M,EAAAkR,EAAA,gBAGA,CACA9qN,IACAC,IACA4U,UAAAk+E,EACAj+E,kBAAA8kM,IAIAwP,gBAAA,SAAA7D,EAAAwD,EAAAvgM,EAAAtxB,GACA,IAAAkxN,EAAA7C,EAAA/oN,SAAA,YAEA,GAAA4rN,EAAAj4N,IAAA,SAIA,IAAAyK,EAAA2qN,EAAA7kN,iBACAi9D,EAAAyqJ,EAAAj4N,IAAA,YACA0wF,EAAAunI,EAAAj4N,IAAA,WACAy5B,EAAAw+L,EAAAj4N,IAAA,UACA46N,EAAAnwN,EAAAgrN,oBAEA/xN,EAAA/B,SAAA+uF,KACAA,EAAA6nI,EAAA7nI,EAAAthE,gBAAA,IAGA,IAAA0mB,EAAArrC,EAAAsrN,YAAA6C,EAAAlrL,IAAA6C,KAAA,EAAAqoL,EAAAhB,OAAArnL,KACA8lL,EAAA,CAAA5rN,EAAA60M,eAAA70M,EAAA+0M,iBACA/lL,EAAAuD,EAAA5Q,aAAAqN,EAAA48L,EAAA,eAAAh+L,EAAA,MAEA,UAAAm1C,IACA13B,EAAArrC,EAAAsrN,YAAA6C,EAAA9iL,MAAAvF,OAAA,EAAAqoL,EAAAjB,QAAApnL,KACA9W,MAGA,QAAAr8B,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAC1B,IAEAw4N,EAFA8D,EAAAjvN,EAAAsrN,YAAAjgL,EAAA14C,GACA8tB,EAAAzgB,EAAAihM,WAAA,CAAAguB,EAAAnpL,OAAA,GAAA27C,OAEA0pI,EAAApnN,KAAAyb,KAAA7sB,EAAAw9N,GAAA,GACA,IAAAC,EAAA,IAAAp2N,EAAAgZ,KAAA,CACA+D,GAAA,KAEA9d,EAAAlD,OAAAiE,EAAA+d,aAAAq4M,EAAAjrN,MAAAqoN,EAAA,CACAhvM,KAAAynE,EAAAklI,KACO/1N,KAAA66N,yBAAAxvM,EAAAmN,EAAAm1C,EAAA/zC,EAAA48L,IACPtvN,EAAAiJ,IAAA6qN,QAKA7iM,EAAA93B,QAAA+gC,mBC/aA,IAAA9L,EAAc5xB,EAAQ,KAEtBkB,EAAclB,EAAQ,KAItB+1B,EAFc/1B,EAAQ,KAEtB+1B,cAqBAnE,EAAAhZ,qBAAA,CACA/c,KAAA,QACAinC,WAAA,CACAjnC,KAAA,MACAy7B,YAAA,GAEAsL,cAAA,CAEA9tB,OAAA,EAEAD,EAAA,EACAye,MAAA,EACA5N,KAAA,GAIAnrB,OAAA,QACAg9N,QAAA,GAIAC,UAAA,QAGAlsN,KAAA,EAGAE,IAAA,EAUA/B,gBAAA,gBAEA6oB,YAAA,OAEAk8G,YAAA,EAGAtrF,QAAA,EAEAurF,QAAA,GACAvvH,UAAA,CACA+B,SAAA,GACAD,WAAA,SACAvE,MAAA,QAEAg7M,aAAA,CACAh7M,MAAA,WAKAmV,EAAA/Y,oBAAA,CACAhd,KAAA,QACAsS,OAAA,SAAAilL,EAAArsL,EAAAtC,GAGA,GAFAnI,KAAAkH,MAAAkzD,YAEA08H,EAAA32L,IAAA,SAIA,IAAA+G,EAAAlH,KAAAkH,MACA2b,EAAAi0K,EAAAtqL,SAAA,aACA4uN,EAAAtkC,EAAAtqL,SAAA,gBACAqY,EAAAiyK,EAAA32L,IAAA,aACAqsF,EAAAsqG,EAAA32L,IAAA,gBACA+uE,EAAA,IAAAtqE,EAAAgZ,KAAA,CACA7N,MAAAnL,EAAA+d,aAAA,GAAoCE,EAAA,CACpCuG,KAAA0tK,EAAA32L,IAAA,QACAghB,SAAA0B,EAAAosD,gBACO,CACP9pD,YAAA,IAEAxD,GAAA,KAEAqhC,EAAAksB,EAAA/vD,kBACAk8M,EAAAvkC,EAAA32L,IAAA,WACAm7N,EAAA,IAAA12N,EAAAgZ,KAAA,CACA7N,MAAAnL,EAAA+d,aAAA,GAAoCy4M,EAAA,CACpChyM,KAAAiyM,EACAl6M,SAAAi6M,EAAAnsJ,eACAh/D,EAAA+yC,EAAAt7C,OAAAovL,EAAA32L,IAAA,WACA2kB,kBAAA,OACO,CACPK,YAAA,IAEAxD,GAAA,KAEAwiE,EAAA2yG,EAAA32L,IAAA,QACAo7N,EAAAzkC,EAAA32L,IAAA,WACA+uE,EAAAnkE,QAAAo5E,EACAm3I,EAAAvwN,QAAAwwN,EAEAp3I,GACAjV,EAAAtlE,GAAA,mBACAmD,OAAA83K,KAAA1gG,EAAA,IAAA2yG,EAAA32L,IAAA,aAIAo7N,GACAD,EAAA1xN,GAAA,mBACAmD,OAAA83K,KAAA02C,EAAA,IAAAzkC,EAAA32L,IAAA,gBAIA+G,EAAAiJ,IAAA++D,GACAmsJ,GAAAn0N,EAAAiJ,IAAAmrN,GAEA,IAAAE,EAAAt0N,EAAAiY,kBACAs8M,EAAA3kC,EAAAr4F,qBACAg9H,EAAAh0N,MAAA+zN,EAAA/zN,MACAg0N,EAAA/zN,OAAA8zN,EAAA9zN,OACA,IAAA0rI,EAAA35G,EAAAgiM,EAAA,CACAh0N,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aACKmqL,EAAA32L,IAAA,YAEL0kB,IAIA,YAFAA,EAAAiyK,EAAA32L,IAAA,SAAA22L,EAAA32L,IAAA,YAGA0kB,EAAA,UAIA,UAAAA,EACAuuH,EAAApjI,GAAAojI,EAAA3rI,MACO,WAAAod,IACPuuH,EAAApjI,GAAAojI,EAAA3rI,MAAA,IAIA+kF,IAGA,YAFAA,EAAAsqG,EAAA32L,IAAA,QAAA22L,EAAA32L,IAAA,aAGAqsF,EAAA,UAGA,WAAAA,EACA4mD,EAAAnjI,GAAAmjI,EAAA1rI,OACO,WAAA8kF,IACP4mD,EAAAnjI,GAAAmjI,EAAA1rI,OAAA,GAGA8kF,KAAA,OAGAtlF,EAAAyf,KAAA,YAAAysH,EAAApjI,EAAAojI,EAAAnjI,IACA,IAAAyrN,EAAA,CACA72M,YACAC,kBAAA0nE,GAEAtd,EAAAt4D,SAAA8kN,GACAJ,EAAA1kN,SAAA8kN,GAGAF,EAAAt0N,EAAAiY,kBACA,IAAAynC,EAAAwsF,EAAAx5G,OACA7pB,EAAA+mL,EAAA31G,aAAA,qBACApxE,EAAAyQ,KAAAs2K,EAAA32L,IAAA,mBACA,IAAA4e,EAAA,IAAAna,EAAAsZ,KAAA,CACAsJ,MAAA,CACAxX,EAAAwrN,EAAAxrN,EAAA42C,EAAA,GACA32C,EAAAurN,EAAAvrN,EAAA22C,EAAA,GACAn/C,MAAA+zN,EAAA/zN,MAAAm/C,EAAA,GAAAA,EAAA,GACAl/C,OAAA8zN,EAAA9zN,OAAAk/C,EAAA,GAAAA,EAAA,GACAhJ,EAAAk5I,EAAA32L,IAAA,iBAEA4P,QACAhF,QAAA,IAEAnG,EAAAijB,qBAAA9I,GACA7X,EAAAiJ,IAAA4O,wBC/MArb,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBChBR,IAAAG,EAAaH,EAAQ,KAErBy5B,EAAiBz5B,EAAQ,KAEzB4gF,EAAa5gF,EAAQ,KAqBrB9E,EAAAiF,EAAAjF,KACAouB,EAAAmQ,EAAAnQ,IAWAu3D,EAAA,SAAAhoB,EAAA+pB,EAAA3B,EAAAl6E,GAKAzK,KAAA27N,SAAAp/J,EAKAv8D,KAAA47N,WAAAt1I,EAMAtmF,KAAA67N,aAMA77N,KAAA87N,eAMA97N,KAAAs6I,YAOAt6I,KAAA+7N,YAMA/7N,KAAAyK,UAMAzK,KAAAg8N,eAAAr3I,GAgWA,SAAAs3I,EAAA11I,EAAA21I,GACA,IAAAh4K,EAAAqiC,EAAAuB,eACAq0I,EAAA51I,EAAAu1I,eACAM,EAAA71I,EAAAs1I,aAEA,GAAAM,EAAA,CAKA,IAAAtvM,EAAAsQ,EAAA1P,kBAAA2uM,EAAA,SACAvvM,EAAAle,KAAAC,IAAAie,EAAA,IAEA,IAAAwvM,EAAAH,GAAA,IAAAC,EAAA,UAAAA,EAAA,GACAj4K,EAAAo5B,SAAA++I,EAAA,MAAAD,EAAA,GAAArvM,QAAAF,GAAAwvM,EAAA,MAAAD,EAAA,GAAArvM,QAAAF,KAvWA03D,EAAAroF,UAAA,CACAyB,YAAA4mF,EASAgE,SAAA,SAAA5D,GACA,OAAA3kF,KAAAg8N,iBAAAr3I,GAMA2D,mBAAA,WACA,OAAAtoF,KAAA67N,aAAAl/N,SAMAwrF,qBAAA,WACA,OAAAnoF,KAAA87N,eAAAn/N,SAQAy7I,sBAAA,WACA,IAAA7jD,EAAA,GACA9pF,EAAAzK,KAAAyK,QAeA,OAdAA,EAAA+H,WAAA,SAAAzB,GACA,GAAAuzE,EAAA8gC,iBAAAr0G,EAAA5Q,IAAA,sBACA,IAAAo8D,EAAAv8D,KAAA27N,SACAz3K,EAAAz5C,EAAA8oB,gBAAA,CACAzqB,SAAAyzD,EAAA,OACAxzD,MAAAgI,EAAA5Q,IAAAo8D,EAAA,aACAt1D,GAAA8J,EAAA5Q,IAAAo8D,EAAA,YACS,GAETv8D,KAAA47N,cAAA13K,KAAAtuC,iBACA2+E,EAAA9yF,KAAAsP,KAGK/Q,MACLu0F,GAEAzM,aAAA,WACA,OAAA9nF,KAAAyK,QAAA5B,aAAA7I,KAAA27N,SAAA,OAAA37N,KAAA47N,aAEAU,kBAAA,WACA,IAIAztH,EACA0tH,EAUAC,EAfA74G,EAAA3jH,KAAA27N,SACAlxN,EAAAzK,KAAAyK,QACAy5C,EAAAlkD,KAAA8nF,eAmBA,MAlBA,MAAA67B,GAAA,MAAAA,GAKA44G,EAAA,YACA1tH,EAAA,MAAA8U,EAAA,UAEA44G,EAAA,aACA1tH,EAAA,UAAA8U,EAAA,kBAIAl5G,EAAAuD,cAAA6gG,EAAA,gBAAA4tH,IACAA,EAAAt8N,IAAAo8N,IAAA,MAAAr4K,EAAA/jD,IAAAo8N,IAAA,KACAC,EAAAC,KAGAD,GAEAE,cAAA,WACA,OAAA74N,EAAA5G,MAAA+C,KAAA+7N,cAYAY,oBAAA,SAAA5kN,GACA,IAAA2V,EAAA1tB,KAAAs6I,YAEA39G,EADA38B,KAAA8nF,eACAnmC,KAAAhlB,MAEAkoD,EAAA7kF,KAAAg8N,eAAAxzI,mBAEAo0I,EAAA,QACAT,EAAA,CAAApkN,EAAAk+B,MAAAl+B,EAAA81B,KACAuuL,EAAA,GAsCA,OArCAx9N,EAAA,mCAAAwC,GACAg7N,EAAA36N,KAAA,MAAAsW,EAAA3W,GAAAu7B,EAAA3qB,MAAA+F,EAAA3W,IAAA,QAGAxC,EAAA,eAAAqvB,GACA,IAAA4uM,EAAAT,EAAAnuM,GACA6uM,EAAAX,EAAAluM,GAYA,YAAA42D,EAAA52D,IACA,MAAA6uM,IACAA,EAAAF,EAAA3uM,IAIA4uM,EAAAlgM,EAAA3qB,MAAAmrB,EAAAlR,UAAA6wM,EAAAF,EAAAlvM,GAAA,KAKAovM,EAAA3/L,EAAAlR,UAAA4wM,EAAAnvM,EAAAkvM,GAAA,GAKAR,EAAAnuM,GAAA4uM,EACAV,EAAAluM,GAAA6uM,IAEA,CACAV,YAAApvM,EAAAovM,GACAD,cAAAnvM,EAAAmvM,KAWApyL,MAAA,SAAA46C,GACA,GAAAA,IAAA3kF,KAAAg8N,eAAA,CAIA,IAAAxwB,EAAAxrM,KAAAo4I,wBAEAp4I,KAAAs6I,YAyHA,SAAA/zD,EAAAo9B,EAAApvB,GACA,IAAA7mE,EAAA,CAAAze,UACArQ,EAAA21F,EAAA,SAAAxjF,GACA,IAAAqyF,EAAAryF,EAAAC,UAEAoyF,GACAxkG,EAAAwkG,EAAA93D,aAAAq4E,GAAA,YAAA33E,GACA,IAAA+wL,EAAA35H,EAAA3qD,qBAAAzM,GACA+wL,EAAA,GAAArvM,EAAA,KAAAA,EAAA,GAAAqvM,EAAA,IACAA,EAAA,GAAArvM,EAAA,KAAAA,EAAA,GAAAqvM,EAAA,QAKArvM,EAAA,GAAAA,EAAA,KACAA,EAAA,CAAAd,UAaA,OAGA,SAAA25D,EAAA74D,GACA,IAAAw2B,EAAAqiC,EAAAuB,eACAl5E,EAAAs1C,EAAAnD,QAAA,GAGA4hE,EAAA,aAAAz+D,EAAA/jD,IAAA,QACAwgD,EAAAgiE,GAAAz+D,EAAA7C,gBAAA5jD,OAEA,MAAAmR,GAAA,YAAAA,GAAA,oBAAAA,EACA8e,EAAA,GAAA9e,EACG+zG,IACHj1F,EAAA,GAAAizB,EAAA,IAAA/zB,KAGA,IAAA9d,EAAAo1C,EAAAlD,QAAA,GAEA,MAAAlyC,GAAA,YAAAA,GAAA,oBAAAA,EACA4e,EAAA,GAAA5e,EACG6zG,IACHj1F,EAAA,GAAAizB,EAAA,EAAAA,EAAA,EAAA/zB,KAGAs3B,EAAA/jD,IAAA,cACAutB,EAAA,OAAAA,EAAA,MACAA,EAAA,OAAAA,EAAA,OA5BAsvM,CAAAz2I,EAAA74D,GACAA,EArJAuvM,CAAAj9N,UAAA27N,SAAAnwB,GAUA,IAAA0xB,EAAAl9N,KAAA28N,oBAAAh4I,EAAA34E,QACAhM,KAAA67N,aAAAqB,EAAAd,YACAp8N,KAAA87N,eAAAoB,EAAAf,cA+LA,SAAA51I,GACA,IAAA42I,EAAA52I,EAAAw1I,YAAA,GACAp3I,EAAA4B,EAAAy1I,eACAp9N,EAAA,uBAAAw2I,GACA+nF,EAAA/nF,EAAA,QAAAzwD,EAAAxkF,IAAAi1I,EAAA,QAEA,IAAAgoF,EAAAz4I,EAAAxkF,IAAAi1I,EAAA,aAEA,SAAAgoF,IACAD,EAAA/nF,EAAA,aAAAgoF,EAGA,OAFAA,EAAA72I,EAAAuB,eAAAnmC,KAAAhlB,MAAA3qB,MAAAorN,KAEA,CACA,IAAA1vM,EAAA64D,EAAA+zD,YACA6iF,EAAA/nF,EAAA,QAAAj4G,EAAAlR,UAAAyB,EAAA,GAAA0vM,EAAA1vM,EAAA,eA5MA2vM,CAAAr9N,MAEAi8N,EAAAj8N,QAMAuoE,QAAA,SAAAoc,GACAA,IAAA3kF,KAAAg8N,iBAIAh8N,KAAA67N,aAAA77N,KAAA87N,eAAA,KACAG,EAAAj8N,MAAA,KAMAs4I,WAAA,SAAA3zD,EAAAx8E,GACA,GAAAw8E,IAAA3kF,KAAAg8N,eAAA,CAIA,IAAAr4G,EAAA3jH,KAAA27N,SACApnI,EAAAv0F,KAAAo4I,wBACAhzD,EAAAT,EAAAxkF,IAAA,cACAi8N,EAAAp8N,KAAA67N,aAEA,SAAAz2I,GAwBAxmF,EAAA21F,EAAA,SAAAxjF,GACA,IAAAqyF,EAAAryF,EAAAC,UACAu8B,EAAA61D,EAAA93D,aAAAq4E,GAAA,GAEA,eAAAv+B,EACAge,EAAArpD,WAAA,SAAA5oC,GAKA,IAJA,IAAAmsN,EACAC,EACA9hM,EAEAl+B,EAAA,EAAyBA,EAAAgwC,EAAA9vC,OAAqBF,IAAA,CAC9C,IAAA+B,EAAA8jG,EAAAjjG,IAAAotC,EAAAhwC,GAAA4T,GACAqsN,GAAApwM,MAAA9tB,GACAm+N,EAAAn+N,EAAA88N,EAAA,GACAsB,EAAAp+N,EAAA88N,EAAA,GAEA,GAAAoB,IAAAC,IAAAC,EACA,SAGAF,IAAA/hM,GAAA,GACAgiM,IAAAH,GAAA,GACAI,IAAAH,GAAA,GAIA,OAAA9hM,GAAA6hM,GAAAC,IAGA3+N,EAAA2uC,EAAA,SAAAvB,GACA,aAAAo5C,EACAr0E,EAAA85B,QAAAu4D,EAAAvmG,IAAAmvC,EAAA,SAAA1sC,GACA,OAgBA,SAAAA,GACA,OAAAA,GAAA88N,EAAA,IAAA98N,GAAA88N,EAAA,GAjBAuB,CAAAr+N,KAAAstB,WAEW,CACX,IAAAT,EAAA,GACAA,EAAA6f,GAAAowL,EAEAh5H,EAAAlpD,YAAA/tB,MAKAvtB,EAAA2uC,EAAA,SAAAvB,GACAo3D,EAAA1qD,qBAAA0jL,EAAApwL,UAgHA,IAAA5K,EAAAmjD,EACApsD,EAAA93B,QAAA+gC,mBC1dA,IAuFAA,EAvFoB19B,EAAQ,KAqB5B/C,OAAA,CACApB,KAAA,kBACAinC,WAAA,MAKAF,cAAA,CACAtP,MAAA,EAGA7nB,MAAA,KAEAD,IAAA,KAEAzH,MAAA,KAEAC,OAAA,KAEAsH,KAAA,KAEAI,OAAA,KAEAjC,gBAAA,mBAKAywN,eAAA,CACAznM,UAAA,CACAhW,MAAA,UACA1Y,MAAA,GACA4uE,QAAA,IAEAp/C,UAAA,CACA9W,MAAA,qBACAk2D,QAAA,KAGArgD,YAAA,OAIAQ,YAAA,wBAIAqnM,WAAA,0HAEA5hH,WAAA,OACA6hH,YAAA,CACA39M,MAAA,WAEA49M,eAAA,KACAv7K,eAAA,KACAw7K,YAAA,EACAC,eAAA,OAEAl4I,UAAA,EACAm4I,UAAA,EAEAt7M,UAAA,CACAzC,MAAA,WAKAgY,EAAA93B,QAAA+gC,mBCxFA,IAAAv9B,EAAaH,EAAQ,KAErBu8F,EAAgBv8F,EAAQ,KAExBkB,EAAclB,EAAQ,KAEtBoB,EAAepB,EAAQ,KAEvBy6N,EAAmBz6N,EAAQ,KAE3By5B,EAAiBz5B,EAAQ,KAEzBsb,EAAatb,EAAQ,KAErB60L,EAAiB70L,EAAQ,KAqBzBwa,EAAAtZ,EAAAsZ,KACA+N,EAAAkR,EAAAlR,UACAe,EAAAmQ,EAAAnQ,IACAhuB,EAAA6E,EAAA7E,KACAJ,EAAAiF,EAAAjF,KAKAw/N,EAAA,aAEAC,EAAA,EACAC,EAAA,uCACAC,EAAAJ,EAAAx9N,OAAA,CACApB,KAAA,kBACA+H,KAAA,SAAAmD,EAAAtC,GAKAnI,KAAAsqG,cAAA,GAMAtqG,KAAA21N,QAMA31N,KAAAw+N,OAMAx+N,KAAAy+N,YAOAz+N,KAAA0+N,MAMA1+N,KAAA2+N,aAMA3+N,KAAA4+N,cAKA5+N,KAAA6+N,UAKA7+N,KAAAwhG,UAKAxhG,KAAA8+N,gBACA9+N,KAAAmI,OAMA0J,OAAA,SAAA8yE,EAAAl6E,EAAAtC,EAAAsJ,GACA8sN,EAAA/lK,WAAAx4D,KAAA,SAAAb,WACA2F,EAAAyiE,eAAAvnE,KAAA,sBAAAA,KAAA2kF,cAAAxkF,IAAA,uBACAH,KAAA21N,QAAAhxI,EAAAxkF,IAAA,WAEA,IAAAH,KAAA2kF,cAAAxkF,IAAA,SAQAsR,GAAA,aAAAA,EAAAlS,MAAAkS,EAAA7T,OAAAoC,KAAA0S,KACA1S,KAAA++N,aAGA/+N,KAAAg/N,eAXAh/N,KAAAkH,MAAAkzD,aAiBArkD,OAAA,WACAwoN,EAAA/lK,WAAAx4D,KAAA,SAAAb,WACA2F,EAAAoU,MAAAlZ,KAAA,wBAMA8V,QAAA,WACAyoN,EAAA/lK,WAAAx4D,KAAA,UAAAb,WACA2F,EAAAoU,MAAAlZ,KAAA,wBAEA++N,WAAA,WACA,IAAAlhH,EAAA79G,KAAAkH,MACA22G,EAAAzjD,YAEAp6D,KAAAi/N,iBAEAj/N,KAAAk/N,iBAEA,IAAAC,EAAAn/N,KAAAsqG,cAAA60H,SAAA,IAAAv6N,EAAA+Y,MAEA3d,KAAAo/N,oBAEAp/N,KAAA0iH,gBAEA1iH,KAAAq/N,oBAEAxhH,EAAA1tG,IAAAgvN,GAEAn/N,KAAAs/N,kBAMAL,eAAA,WACA,IAAAt6I,EAAA3kF,KAAA2kF,cACAx8E,EAAAnI,KAAAmI,IAGAo3N,EAAAv/N,KAAAw/N,iBAEAxiF,EAAA,CACAv1I,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aAGA+sB,EAAA15B,KAAA21N,UAAAyI,EAAA,CAGAjvN,MAAA6tI,EAAAv1I,MAAA83N,EAAAvvN,EAAAuvN,EAAA93N,MACAyH,IAAA8tI,EAAAt1I,OAlJA,GAFA,EAqJAD,MAAA83N,EAAA93N,MACAC,OApJA,IAqJK,CAELyH,MAzJA,EA0JAD,IAAAqwN,EAAAtvN,EACAxI,MAzJA,GA0JAC,OAAA63N,EAAA73N,QAIA+uN,EAAAz3M,EAAA2c,gBAAAgpD,EAAA34E,QAEAnI,EAAAjF,KAAA,0CAAA2B,GACA,OAAAk2N,EAAAl2N,KACAk2N,EAAAl2N,GAAAm5B,EAAAn5B,MAGA,IAAA6yI,EAAAp0H,EAAAya,cAAAg9L,EAAAz5E,EAAAr4D,EAAA/9B,SACA5mD,KAAA6+N,UAAA,CACA7uN,EAAAojI,EAAApjI,EACAC,EAAAmjI,EAAAnjI,GAEAjQ,KAAA0+N,MAAA,CAAAtrF,EAAA3rI,MAAA2rI,EAAA1rI,QAxKA,aAyKA1H,KAAA21N,SAAA31N,KAAA0+N,MAAA7rJ,WAMAysJ,eAAA,WACA,IAAAzhH,EAAA79G,KAAAkH,MACAu4N,EAAAz/N,KAAA6+N,UACArmM,EAAAx4B,KAAA21N,QAEA+J,EAAA1/N,KAAA2kF,cAAAgD,0BACAtlB,EAAAq9J,KAAAv/N,IAAA,WACAg/N,EAAAn/N,KAAAsqG,cAAA60H,SACAQ,GAAA3/N,KAAA8+N,iBAAA,IAAsDa,iBAEtDR,EAAAx4M,KAAA6R,IAAA4lM,GAAA/7J,EAEK7pC,IAAA4lM,GAAA/7J,EAAA,CACL1lC,MAAAgjM,EAAA,gBA5LA,aA6LKnnM,GAAA6pC,EAIA,CACL1lC,MAAAgjM,EAAA,eACAz0M,SAAAvc,KAAA4U,GAAA,GANK,CACLoZ,MAAAgjM,EAAA,aACAz0M,SAAAvc,KAAA4U,GAAA,GANA,CACAoZ,MAAAgjM,EAAA,eAYA,IAAA5gN,EAAA8+F,EAAA1+F,gBAAA,CAAAggN,IACAthH,EAAAl3F,KAAA,YAAA84M,EAAAzvN,EAAA+O,EAAA/O,EAAAyvN,EAAAxvN,EAAA8O,EAAA9O,KAMA2vN,eAAA,WACA,SAAA5/N,KAAA0+N,MAAA,KAEAU,kBAAA,WACA,IAAAz6I,EAAA3kF,KAAA2kF,cACA5lC,EAAA/+C,KAAA0+N,MACAS,EAAAn/N,KAAAsqG,cAAA60H,SACAA,EAAAhvN,IAAA,IAAA+N,EAAA,CACAnT,QAAA,EACAyc,MAAA,CACAxX,EAAA,EACAC,EAAA,EACAxI,MAAAs3C,EAAA,GACAr3C,OAAAq3C,EAAA,IAEAhvC,MAAA,CACAyQ,KAAAmkE,EAAAxkF,IAAA,oBAEAwhB,IAAA,MAGAw9M,EAAAhvN,IAAA,IAAA+N,EAAA,CACAsJ,MAAA,CACAxX,EAAA,EACAC,EAAA,EACAxI,MAAAs3C,EAAA,GACAr3C,OAAAq3C,EAAA,IAEAhvC,MAAA,CACAyQ,KAAA,eAEAmB,GAAA,EACA0mK,QAAAxkL,EAAA7E,KAAAgB,KAAA6/N,mBAAA7/N,UAGAq/N,kBAAA,WACA,IAAAvqF,EAAA90I,KAAA8+N,gBAAA9+N,KAAA8/N,yBAEA,GAAAhrF,EAAA,CAIA,IAAA/1F,EAAA/+C,KAAA0+N,MACA3tN,EAAA+jI,EAAA37H,OACA3X,EAAAuP,EAAA05B,aACA41C,EAAAtvE,EAAAuzL,aAAAvzL,EAAAuzL,eACAxvD,EAAAz0D,SAEA,SAAAA,EAAA,CAIA,IAAA0/I,EAAAv+N,EAAA42C,cAAAioC,GAEA2/I,EAAA,IAAAD,EAAA,GAAAA,EAAA,IACAA,EAAA,CAAAA,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GACA,IAQAC,EARAC,EAAA,GAAAnhL,EAAA,IACAohL,EAAA,GAAAphL,EAAA,IACAqhL,EAAA,EAAArhL,EAAA,aACAs4D,EAAA,GACA3yD,EAAAy7K,EAAA,IAAA3+N,EAAA6rB,QAAA,GACAgzM,EAAA,EAEAC,EAAA3xN,KAAAgQ,MAAAnd,EAAA6rB,QAAA0xB,EAAA,IAEAv9C,EAAA5C,KAAA,CAAAyhF,GAAA,SAAA/gF,EAAAyJ,GACA,GAAAu3N,EAAA,GAAAv3N,EAAAu3N,EACAD,GAAA37K,MADA,CASA,IAAA7b,EAAA,MAAAvpC,GAAA8tB,MAAA9tB,IAAA,KAAAA,EAEAihO,EAAA13L,EAAA,EAAA5c,EAAA3sB,EAAAygO,EAAAG,GAAA,GAEAr3L,IAAAo3L,GAAAl3N,GACAq3N,EAAA3+N,KAAA,CAAA2+N,IAAA3iO,OAAA,UACA45G,EAAA51G,KAAA,CAAA41G,IAAA55G,OAAA,YACOorC,GAAAo3L,IACPG,EAAA3+N,KAAA,CAAA4+N,EAAA,IACAhpH,EAAA51G,KAAA,CAAA4+N,EAAA,KAGAD,EAAA3+N,KAAA,CAAA4+N,EAAAE,IACAlpH,EAAA51G,KAAA,CAAA4+N,EAAAE,IACAF,GAAA37K,EACAu7K,EAAAp3L,KAEA,IAAA87C,EAAA3kF,KAAA2kF,cAEA3kF,KAAAsqG,cAAA60H,SAAAhvN,IAAA,IAAAvL,EAAAoZ,QAAA,CACAwJ,MAAA,CACA4D,OAAAg1M,GAEArwN,MAAAlM,EAAArF,SAAA,CACAgiB,KAAAmkE,EAAAxkF,IAAA,wBACOwkF,EAAAn4E,SAAA,4BAAAo3F,gBACP74F,QAAA,EACA4W,IAAA,MAGA3hB,KAAAsqG,cAAA60H,SAAAhvN,IAAA,IAAAvL,EAAAqZ,SAAA,CACAuJ,MAAA,CACA4D,OAAAisF,GAEAtnG,MAAA40E,EAAAn4E,SAAA,4BAAA6gE,eACAtiE,QAAA,EACA4W,IAAA,SAGAm+M,uBAAA,WACA,IAAAn7I,EAAA3kF,KAAA2kF,cACAs5I,EAAAt5I,EAAAxkF,IAAA,kBAEA,QAAA89N,EAAA,CAKA,IAAA9gO,EACAsN,EAAAzK,KAAAyK,QA+BA,OA9BAk6E,EAAAyB,eAAA,SAAAC,EAAAC,GACA,IAAAiO,EAAA5P,EAAAkD,aAAAxB,EAAA9lF,KAAA+lF,GAAA8xD,wBACAv0I,EAAAjF,KAAA21F,EAAA,SAAAxjF,GACA,IAAA5T,MAIA,IAAA8gO,GAAAp6N,EAAAhD,QAAAy9N,EAAAvtN,EAAA5Q,IAAA,aAIA,IAEAw/N,EAFAa,EAAA/1N,EAAA5B,aAAAw9E,EAAA1kC,KAAA2kC,GAAA3kC,KACA0+B,EA8UA,CACArwE,EAAA,IACAC,EAAA,IACAyqE,OAAA,QACA78B,MAAA,UAlVAwoC,EAAA9lF,MAEAqK,EAAAmG,EAAAL,iBAEA,MAAA2vE,GAAAz1E,EAAAwrF,eACAupI,EAAA/0N,EAAAwrF,aAAAoqI,GAAAn+J,SAGAge,EAAAtvE,EAAAC,UAAAs6B,aAAA+0C,GACAljF,EAAA,CACAqjO,WACArnN,OAAApI,EACA0vN,QAAAp6I,EAAA9lF,KACA8/E,WACAs/I,sBAEO3/N,OACFA,MACL7C,IAEAulH,cAAA,WACA,IAAAg+G,EAAA1gO,KAAAsqG,cACAq2H,EAAAD,EAAAC,QAAA,GACAC,EAAAF,EAAAE,aAAA,GACAzB,EAAAn/N,KAAAsqG,cAAA60H,SACApgL,EAAA/+C,KAAA0+N,MACA/5I,EAAA3kF,KAAA2kF,cACAw6I,EAAAhvN,IAAAuwN,EAAAG,OAAA,IAAA3iN,EAAA,CACAmgE,WAAA,EACAG,OAAAsiJ,EAAA9gO,KAAA21N,SACAz9H,MAAAl5F,EAAAgB,KAAA+gO,YAAA/gO,KAAA,OACAijH,YAAA,SAAAvqG,GAEAunF,EAAAhpC,KAAAv+C,EAAA3D,QAEAisN,YAAAhiO,EAAAgB,KAAAihO,cAAAjhO,MAAA,GACA87G,UAAA98G,EAAAgB,KAAAkhO,WAAAlhO,MACAmhO,YAAAniO,EAAAgB,KAAAihO,cAAAjhO,MAAA,GACAohO,WAAApiO,EAAAgB,KAAAihO,cAAAjhO,MAAA,GACA+P,MAAA,CACAyQ,KAAAmkE,EAAAxkF,IAAA,eACAgjB,aAAA,aAIAg8M,EAAAhvN,IAAA,IAAA+N,EAAAtZ,EAAAijB,qBAAA,CACA9c,QAAA,EACAyc,MAAA,CACAxX,EAAA,EACAC,EAAA,EACAxI,MAAAs3C,EAAA,GACAr3C,OAAAq3C,EAAA,IAEAhvC,MAAA,CACAwQ,OAAAokE,EAAAxkF,IAAA,wBAAAwkF,EAAAxkF,IAAA,eACA0f,UAhZA,EAiZAW,KAAA,qBAGA5hB,EAAA,eAAA4kF,GACA,IAAAvkE,EAAAra,EAAA4mB,WAAAm5D,EAAAxkF,IAAA,eACAq+E,OAAAsiJ,EAAA9gO,KAAA21N,SACAt3I,WAAA,EACA6Z,MAAAl5F,EAAAgB,KAAA+gO,YAAA/gO,KAAAwjF,GACAy/B,YAAA,SAAAvqG,GAEAunF,EAAAhpC,KAAAv+C,EAAA3D,QAEA+mG,UAAA98G,EAAAgB,KAAAkhO,WAAAlhO,MACAmhO,YAAAniO,EAAAgB,KAAAihO,cAAAjhO,MAAA,GACAohO,WAAApiO,EAAAgB,KAAAihO,cAAAjhO,MAAA,IACO,CACPgQ,GAAA,EACAC,EAAA,EACAxI,MAAA,EACAC,OAAA,IAEA25N,EAAApiN,EAAAE,kBACAnf,KAAA4+N,cAAAzhM,EAAA5Q,aAAAo4D,EAAAxkF,IAAA,cAAAH,KAAA0+N,MAAA,IACA1+N,KAAA2+N,aAAA0C,EAAA55N,MAAA45N,EAAA35N,OAAA1H,KAAA4+N,cACA3/M,EAAArI,SAAA+tE,EAAAn4E,SAAA,eAAA20E,gBACA,IAAA1qD,EAAAkuD,EAAAxkF,IAAA,eAEA,MAAAs2B,IACAxX,EAAAlP,MAAAyQ,KAAAiW,GAGA0oM,EAAAhvN,IAAAwwN,EAAAn9I,GAAAvkE,GACA,IAAA4D,EAAA8hE,EAAA9hE,eACA7iB,KAAAkH,MAAAiJ,IAAAywN,EAAAp9I,GAAA,IAAA5+E,EAAAgZ,KAAA,CACA7S,QAAA,EACAqzE,WAAA,EACAruE,MAAA,CACAC,EAAA,EACAC,EAAA,EACAmZ,KAAA,GACAtE,kBAAA,SACAD,UAAA,SACA1D,SAAA0B,EAAAosD,eACA1lB,SAAA1mC,EAAA2G,WAEA7H,GAAA,OAEK3hB,OAMLk/N,eAAA,WACA,IAAA/yM,EAAAnsB,KAAAw+N,OAAAx+N,KAAA2kF,cAAAsD,kBAEAq5I,EAAAthO,KAAA4/N,iBAEA5/N,KAAAy+N,YAAA,CAAAxyM,EAAAE,EAAA,WAAAm1M,GAAA,GAAAr1M,EAAAE,EAAA,WAAAm1M,GAAA,KASAC,gBAAA,SAAA/9I,EAAA7tB,GACA,IAAAgvB,EAAA3kF,KAAA2kF,cACApB,EAAAvjF,KAAAy+N,YAEA+C,EAAAxhO,KAAA4/N,iBAEAzC,EAAAx4I,EAAAuD,8BAAAw0I,gBACAE,EAAA,QACArkC,EAAA5iI,EAAA4tB,EAAAi+I,EAAA78I,EAAAxkF,IAAA,kBAAAqjF,EAAA,MAAA25I,EAAAx5I,QAAA13D,EAAAkxM,EAAAx5I,QAAAi5I,EAAA4E,GAAA,cAAArE,EAAAv5I,QAAA33D,EAAAkxM,EAAAv5I,QAAAg5I,EAAA4E,GAAA,SACA,IAAAC,EAAAzhO,KAAAw+N,OACAryM,EAAAnsB,KAAAw+N,OAAAxxM,EAAA,CAAAf,EAAAs3D,EAAA,GAAAi+I,EAAA5E,GAAA,GAAA3wM,EAAAs3D,EAAA,GAAAi+I,EAAA5E,GAAA,KACA,OAAA6E,KAAA,KAAAt1M,EAAA,IAAAs1M,EAAA,KAAAt1M,EAAA,IAMA6yM,YAAA,SAAA0C,GACA,IAAAhB,EAAA1gO,KAAAsqG,cACA/mB,EAAAvjF,KAAAy+N,YACAkD,EAAA30M,EAAAu2D,EAAA5mF,SACAoiD,EAAA/+C,KAAA0+N,MACA9/N,EAAA,eAAA4kF,GAEA,IAAAu+B,EAAA2+G,EAAAC,QAAAn9I,GACAo+I,EAAA5hO,KAAA4+N,cACA78G,EAAAp7F,KAAA,CACAgW,MAAA,CAAAilM,EAAA,EAAAA,EAAA,GACAhiN,SAAA,CAAA2jE,EAAAC,GAAAzkC,EAAA,KAAA6iL,EAAA,MAEK5hO,MAEL0gO,EAAAG,OAAAh8L,SAAA,CACA70B,EAAA2xN,EAAA,GACA1xN,EAAA,EACAxI,MAAAk6N,EAAA,GAAAA,EAAA,GACAj6N,OAAAq3C,EAAA,KAGA/+C,KAAA6hO,gBAAAH,IAMAG,gBAAA,SAAAH,GACA,IAAA/8I,EAAA3kF,KAAA2kF,cACA+7I,EAAA1gO,KAAAsqG,cACAs2H,EAAAF,EAAAE,aACApoM,EAAAx4B,KAAA21N,QACAmM,EAAA,QAGA,GAAAn9I,EAAAxkF,IAAA,eACA,IAAAomF,EAAA5B,EAAAuD,8BAEA,GAAA3B,EAAA,CACA,IAAA5kC,EAAA4kC,EAAAuB,eAAAnmC,KACAx1B,EAAAnsB,KAAAw+N,OACAuD,EAAAL,EACAn7I,EAAAo2I,oBAAA,CACA1mL,MAAA9pB,EAAA,GACA0hB,IAAA1hB,EAAA,KACSiwM,YAAA71I,EAAA+B,qBACTw5I,EAAA,CAAA9hO,KAAAgiO,aAAAD,EAAA,GAAApgL,GAAA3hD,KAAAgiO,aAAAD,EAAA,GAAApgL,KAIA,IAAAsgL,EAAAj1M,EAAAhtB,KAAAy+N,YAAA9hO,SAIA,SAAA0lI,EAAA7+C,GAIA,IAAA0+I,EAAAt9N,EAAAglB,aAAA82M,EAAAC,QAAAn9I,GAAAx6E,OAAAhJ,KAAAkH,OACAgjB,EAAAtlB,EAAAqlB,mBAAA,IAAAu5D,EAAA,eAAA0+I,GACA1+N,EAAAxD,KAAA2+N,aAAA,EAAAN,EACA8D,EAAAv9N,EAAA4a,eAAA,CAAAyiN,EAAAz+I,IAAA,IAAAA,GAAAhgF,KAAAxD,KAAA0+N,MAAA,MAAAwD,GACAtB,EAAAp9I,GAAA5sE,SAAA,CACA5G,EAAAmyN,EAAA,GACAlyN,EAAAkyN,EAAA,GACAr9M,kBAAA0T,IAAA4lM,EAAA,SAAAl0M,EACArF,UAAA2T,IAAA4lM,EAAAl0M,EAAA,SACAd,KAAA04M,EAAAt+I,KAhBA6+C,EAAAhlI,KAAA2C,KAAA,GACAqiI,EAAAhlI,KAAA2C,KAAA,IAuBAgiO,aAAA,SAAA1iO,EAAAqiD,GACA,IAAAgjC,EAAA3kF,KAAA2kF,cACAniC,EAAAmiC,EAAAxkF,IAAA,kBACA49N,EAAAp5I,EAAAxkF,IAAA,kBAEA,MAAA49N,GAAA,SAAAA,IACAA,EAAAp8K,EAAAl0B,qBAGA,IAAA20M,EAAA,MAAA9iO,GAAA8tB,MAAA9tB,GAAA,GACA,aAAAqiD,EAAApiD,MAAA,SAAAoiD,EAAApiD,KAAAoiD,EAAAhlB,MAAAmmB,SAAAn0C,KAAAgQ,MAAArf,IACAA,EAAAytB,QAAApe,KAAAC,IAAAmvN,EAAA,KACA,OAAAl6N,EAAAhC,WAAA2gD,KAAAljD,EAAA8iO,GAAAv+N,EAAA/B,SAAA0gD,KAAAv/C,QAAA,UAAkJm/N,MAOlJnB,cAAA,SAAAoB,GAEAA,EAAAriO,KAAAwhG,WAAA6gI,EACA,IAAAzB,EAAA5gO,KAAAsqG,cAAAs2H,aACAA,EAAA,GAAAj6M,KAAA,aAAA07M,GACAzB,EAAA,GAAAj6M,KAAA,aAAA07M,IAEAtB,YAAA,SAAAv9I,EAAA/oD,EAAAC,GACA16B,KAAAwhG,WAAA,EAEA,IAAA0gI,EAAAliO,KAAAsqG,cAAA60H,SAAAp4M,oBAEAuD,EAAA1lB,EAAA4a,eAAA,CAAAib,EAAAC,GAAAwnM,GAAA,GAEAI,EAAAtiO,KAAAuhO,gBAAA/9I,EAAAl5D,EAAA,IAEAy7D,EAAA/lF,KAAA2kF,cAAAxkF,IAAA,YAEAH,KAAAg/N,aAAAj5I,GAIAu8I,GAAAv8I,GAAA/lF,KAAAuiO,uBAEArB,WAAA,WACAlhO,KAAAwhG,WAAA,EAEAxhG,KAAAihO,eAAA,IAIAjhO,KAAA2kF,cAAAxkF,IAAA,aACAH,KAAAuiO,uBAEA1C,mBAAA,SAAAnnN,GACA,IAAAqmC,EAAA/+C,KAAA0+N,MAEA8D,EAAAxiO,KAAAsqG,cAAA60H,SAAA/6L,sBAAA1rB,EAAAg+C,QAAAh+C,EAAAo+C,SAEA,KAAA0rK,EAAA,MAAAA,EAAA,GAAAzjL,EAAA,IAAAyjL,EAAA,MAAAA,EAAA,GAAAzjL,EAAA,KAIA,IAAAwkC,EAAAvjF,KAAAy+N,YACApyI,GAAA9I,EAAA,GAAAA,EAAA,MAEA++I,EAAAtiO,KAAAuhO,gBAAA,MAAAiB,EAAA,GAAAn2I,GAEArsF,KAAAg/N,cAEAsD,GAAAtiO,KAAAuiO,wBAOAA,oBAAA,WACA,IAAAp2M,EAAAnsB,KAAAw+N,OACAx+N,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,WACA3B,KAAAoC,KAAA0S,IACAgrI,WAAA19I,KAAA2kF,cAAA19E,GACAgvC,MAAA9pB,EAAA,GACA0hB,IAAA1hB,EAAA,MAOAqzM,eAAA,WAEA,IAAAzgN,EAQA,GAPAngB,EAAAoB,KAAAyoF,qBAAA,SAAA2rI,GACA,IAAAr1M,GAAAq1M,EAAA32N,OAAA,CACA,IAAAmN,EAAAwpN,EAAA,GAAA3jN,MAAAC,iBACAqO,EAAAnU,EAAAo4E,SAAAp4E,EAAAo4E,cAIAjkE,EAAA,CACA,IAAAtX,EAAAzH,KAAAmI,IAAAuE,WACAhF,EAAA1H,KAAAmI,IAAAwE,YACAoS,EAAA,CACA/O,EAAA,GAAAvI,EACAwI,EAAA,GAAAvI,EACAD,MAAA,GAAAA,EACAC,OAAA,GAAAA,GAIA,OAAAqX,KAgBA,SAAA+hN,EAAAtoM,GACA,mBAAAA,EAAA,wBAGA,IAAA4I,EAAAm9L,EACApmM,EAAA93B,QAAA+gC,mBC/tBA,IAqBAA,EArBoB19B,EAAQ,KAqB5B/C,OAAA,CACApB,KAAA,kBAKA+mC,cAAA,CACAm8L,UAAA,EAEAvE,UAAA,EAEA98H,kBAAA,EAEAC,iBAAA,EAEAC,yBAAA,KAIAnpE,EAAA93B,QAAA+gC,mBCxCA,IAAAv9B,EAAaH,EAAQ,KAErBy6N,EAAmBz6N,EAAQ,KAE3B60L,EAAiB70L,EAAQ,KAEzBg/N,EAAYh/N,EAAQ,KAqBpB1E,EAAA6E,EAAA7E,KACA2jO,EAAAxE,EAAAx9N,OAAA,CACApB,KAAA,kBAKA+H,KAAA,SAAAmD,EAAAtC,GAOAnI,KAAAw+N,QAMA3sN,OAAA,SAAA8yE,EAAAl6E,EAAAtC,EAAAsJ,GACAkxN,EAAAnqK,WAAAx4D,KAAA,SAAAb,WAIAa,KAAAw+N,OAAA75I,EAAAsD,kBAEApkF,EAAAjF,KAAAoB,KAAAyoF,qBAAA,SAAA2rI,EAAA94J,GACA,IAAAsnK,EAAA/+N,EAAAhH,IAAAu3N,EAAA,SAAAyO,GACA,OAAAH,EAAAI,gBAAAD,EAAApyN,SAEA5M,EAAAjF,KAAAw1N,EAAA,SAAAyO,GACA,IAAAl6I,EAAAk6I,EAAApyN,MACAsyN,EAAAp+I,EAAA34E,OACA02N,EAAA3mN,SAAA5T,EAAA,CACA66N,QAAAN,EAAAI,gBAAAn6I,GACAi6I,cACAK,cAAA,SAAAvqN,EAAA1I,EAAAC,GACA,OAAA04E,EAAAj4E,iBAAAC,aAAA,CAAAX,EAAAC,KAEAytI,WAAA/4D,EAAA19E,GACAi8N,aAAAv+I,EAAAxkF,IAAA,eACAgjO,YAAAnkO,EAAAgB,KAAAokL,OAAApkL,KAAA6iO,EAAAvnK,GACA8nK,aAAApkO,EAAAgB,KAAAqkL,QAAArkL,KAAA6iO,EAAAvnK,GACA4iK,SAAA6E,EAAA7E,SACAuE,SAAAM,EAAAN,SACAY,kBAAA,CACAjiI,iBAAA2hI,EAAA3hI,iBACAC,gBAAA0hI,EAAA1hI,gBACAC,wBAAAyhI,EAAAzhI,4BAGOthG,OACFA,OAML8V,QAAA,WACA4sN,EAAA3xF,WAAA/wI,KAAAmI,IAAAnI,KAAA2kF,cAAA19E,IACA07N,EAAAnqK,WAAAx4D,KAAA,UAAAb,WACAa,KAAAw+N,OAAA,MAMAp6C,OAAA,SAAAy+C,EAAAvnK,EAAAu+C,EAAAp/E,EAAAC,EAAAsnE,EAAAC,EAAAqhI,EAAAC,GACA,IAAA9B,EAAAzhO,KAAAw+N,OACAryM,EAAAs1M,EAAA9kO,QAEAunD,EAAA2+K,EAAAz7I,WAAA,GAEA,GAAAljC,EAAA,CAIA,IAAAs/K,EAAAC,EAAAnoK,GAAA,CAAA0mC,EAAAC,GAAA,CAAAqhI,EAAAC,GAAAr/K,EAAA21D,EAAAgpH,GACAa,EAAAF,EAAAG,QAAAx3M,EAAA,GAAAA,EAAA,IAAAq3M,EAAAI,MAAAJ,EAAAK,YAIA,OAHAtrC,EAAAmrC,EAAAv3M,EAAA,eACAnsB,KAAAw+N,OAAAryM,EAEAs1M,EAAA,KAAAt1M,EAAA,IAAAs1M,EAAA,KAAAt1M,EAAA,GACAA,OADA,IAQAk4J,QAAA,SAAAw+C,EAAAvnK,EAAAu+C,EAAAl9E,EAAA0pG,EAAAC,GACA,IAAAm7F,EAAAzhO,KAAAw+N,OACAryM,EAAAs1M,EAAA9kO,QAEAunD,EAAA2+K,EAAAz7I,WAAA,GAEA,GAAAljC,EAAA,CAIA,IAAAs/K,EAAAC,EAAAnoK,GAAA,MAAA+qE,EAAAC,GAAApiF,EAAA21D,EAAAgpH,GACAiB,GAAAN,EAAAG,OAAA,EAAAH,EAAAO,WAAAP,EAAAK,YAAAL,EAAAI,MAAAJ,EAAAI,MAAAJ,EAAAO,YAAAP,EAAAK,aAAA13M,EAAA,GAAAA,EAAA,IAAAA,EAAA,GACAwQ,EAAAhuB,KAAAG,IAAA,EAAA6tB,EAAA,GACAxQ,EAAA,IAAAA,EAAA,GAAA23M,GAAAnnM,EAAAmnM,EACA33M,EAAA,IAAAA,EAAA,GAAA23M,GAAAnnM,EAAAmnM,EAEA,IAAA3G,EAAAn9N,KAAA2kF,cAAAuD,8BAAAw0I,gBAIA,OAHAnkC,EAAA,EAAApsK,EAAA,UAAAgxM,EAAAx5I,QAAAw5I,EAAAv5I,SACA5jF,KAAAw+N,OAAAryM,EAEAs1M,EAAA,KAAAt1M,EAAA,IAAAs1M,EAAA,KAAAt1M,EAAA,GACAA,OADA,MAKAs3M,EAAA,CACA/sM,KAAA,SAAAstM,EAAAC,EAAA//K,EAAA21D,EAAAgpH,GACA,IAAAlhL,EAAAuC,EAAAvC,KACA0W,EAAA,GACAt5C,EAAA8jN,EAAApyN,MAAAC,iBAAAsyE,UAgBA,OAfAghJ,KAAA,MAEA,MAAAriL,EAAA3V,KACAqsB,EAAAurK,MAAAK,EAAA,GAAAD,EAAA,GACA3rK,EAAAwrK,YAAA9kN,EAAAtX,MACA4wD,EAAA0rK,WAAAhlN,EAAA/O,EACAqoD,EAAAsrK,OAAAhiL,EAAA0gB,QAAA,OAGAhK,EAAAurK,MAAAK,EAAA,GAAAD,EAAA,GACA3rK,EAAAwrK,YAAA9kN,EAAArX,OACA2wD,EAAA0rK,WAAAhlN,EAAA9O,EACAooD,EAAAsrK,OAAAhiL,EAAA0gB,SAAA,KAGAhK,GAEA2rD,MAAA,SAAAggH,EAAAC,EAAA//K,EAAA21D,EAAAgpH,GACA,IAAAlhL,EAAAuC,EAAAvC,KACA0W,EAAA,GACA2rD,EAAA6+G,EAAApyN,MAAAC,iBACAk1J,EAAA5hD,EAAAI,gBAAAhjE,YACAykH,EAAA7hD,EAAAE,eAAA9iE,YAqBA,OApBA4iL,IAAAhgH,EAAAypG,aAAAuW,GAAA,MACAC,EAAAjgH,EAAAypG,aAAAwW,GAEA,eAAA//K,EAAAp7C,UACAuvD,EAAAurK,MAAAK,EAAA,GAAAD,EAAA,GAGA3rK,EAAAwrK,YAAAj+D,EAAA,GAAAA,EAAA,GACAvtG,EAAA0rK,WAAAn+D,EAAA,GACAvtG,EAAAsrK,OAAAhiL,EAAA0gB,QAAA,OAGAhK,EAAAurK,MAAAK,EAAA,GAAAD,EAAA,GAGA3rK,EAAAwrK,YAAAh+D,EAAA,GAAAA,EAAA,GACAxtG,EAAA0rK,WAAAl+D,EAAA,GACAxtG,EAAAsrK,OAAAhiL,EAAA0gB,SAAA,KAGAhK,GAEA2uB,WAAA,SAAAg9I,EAAAC,EAAA//K,EAAA21D,EAAAgpH,GACA,IAAAlhL,EAAAuC,EAAAvC,KACA5iC,EAAA8jN,EAAApyN,MAAAC,iBAAAsyE,UACA3qB,EAAA,GAgBA,OAfA2rK,KAAA,MAEA,eAAAriL,EAAAnpB,QACA6/B,EAAAurK,MAAAK,EAAA,GAAAD,EAAA,GACA3rK,EAAAwrK,YAAA9kN,EAAAtX,MACA4wD,EAAA0rK,WAAAhlN,EAAA/O,EACAqoD,EAAAsrK,OAAAhiL,EAAA0gB,QAAA,OAGAhK,EAAAurK,MAAAK,EAAA,GAAAD,EAAA,GACA3rK,EAAAwrK,YAAA9kN,EAAArX,OACA2wD,EAAA0rK,WAAAhlN,EAAA9O,EACAooD,EAAAsrK,OAAAhiL,EAAA0gB,SAAA,KAGAhK,IAGAj3B,EAAAuhM,EACAxqM,EAAA93B,QAAA+gC,mBCxNA,IAAAv9B,EAAaH,EAAQ,KAErBy8F,EAAqBz8F,EAAQ,KAE7B88G,EAAmB98G,EAAQ,KA0B3B9B,EAAAiC,EAAAjC,MACA4kI,EAAA,uBAuFA,SAAAgX,EAAAr1I,GAGA,IAAAf,EAAAe,EAAA2D,QACA,OAAA1E,EAAAo/H,KAAAp/H,EAAAo/H,GAAA,IAUA,SAAA09F,EAAAt7I,GACA/kF,EAAAjF,KAAAgqF,EAAA,SAAAonD,EAAAgzF,GACAhzF,EAAA3iH,QACA2iH,EAAAn2B,WAAA/jG,iBACA8yE,EAAAo6I,MAKA,SAAAmB,EAAAn0F,EAAAv1G,EAAAC,EAAAsnE,EAAAC,EAAAqhI,EAAAC,GACAa,EAAAp0F,EAAA,SAAA8E,GACA,OAAAA,EAAAquF,YAAAnzF,EAAAn2B,WAAAp/E,EAAAC,EAAAsnE,EAAAC,EAAAqhI,EAAAC,KAIA,SAAAc,EAAAr0F,EAAArzG,EAAA0pG,EAAAC,GACA89F,EAAAp0F,EAAA,SAAA8E,GACA,OAAAA,EAAAsuF,aAAApzF,EAAAn2B,WAAAl9E,EAAA0pG,EAAAC,KAIA,SAAA89F,EAAAp0F,EAAAs0F,GACA,IAAA7vN,EAAA,GACA5Q,EAAAjF,KAAAoxI,EAAAu0F,cAAA,SAAAzvF,GACA,IAAA3oH,EAAAm4M,EAAAxvF,IACAA,EAAA2tF,UAAAt2M,GAAA1X,EAAAhT,KAAA,CACAi8I,WAAA5I,EAAA4I,WACAznG,MAAA9pB,EAAA,GACA0hB,IAAA1hB,EAAA,OAGA1X,EAAAhX,QAAAuyI,EAAAl4H,eAAArD,GAOA,SAAAqD,EAAA3P,EAAAsM,GACAtM,EAAA2P,eAAA,CACAvY,KAAA,WACAkV,UAoCApU,EAAA0b,SAlKA,SAAA5T,EAAAq8N,GACA,IAAA57I,EAAA40D,EAAAr1I,GACAs8N,EAAAD,EAAA9mF,WACAgnF,EAAAF,EAAAxB,QAGAn/N,EAAAjF,KAAAgqF,EAAA,SAAAonD,EAAAgzF,GACA,IAAAuB,EAAAv0F,EAAAu0F,cAEAA,EAAAE,IAAA5gO,EAAAhD,QAAA2jO,EAAA5B,YAAA8B,GAAA,WACAH,EAAAE,GACAz0F,EAAA3iH,WAGA62M,EAAAt7I,GACA,IAAAonD,EAAApnD,EAAA87I,GAEA10F,KACAA,EAAApnD,EAAA87I,GAAA,CACA1B,QAAA0B,EACAH,cAAA,GACAl3M,MAAA,IAEAwsF,WAuDA,SAAA1xG,EAAAw8N,GACA,IAAA9qH,EAAA,IAAA1Z,EAAAh4F,EAAA2D,SAGA,OAFA+tG,EAAAjwG,GAAA,MAAAhI,EAAAuiO,EAAAQ,IACA9qH,EAAAjwG,GAAA,OAAAhI,EAAAyiO,EAAAM,IACA9qH,EA3DA+qH,CAAAz8N,EAAA6nI,GACAA,EAAAl4H,eAAAjU,EAAAjC,MAAAkW,EAAA3P,KAIA6nI,EAAAu0F,cAAAE,IAAAz0F,EAAA3iH,QACA2iH,EAAAu0F,cAAAE,GAAAD,EACA,IAAAK,EAwGA,SAAAN,GACA,IAAArjI,EACAnpF,EAAA,GAIA+sN,EAAA,CACAC,UAAA,EACAC,UAAA,EACAC,WAAA,EACAC,gBAAA,GAYA,OAVArhO,EAAAjF,KAAA2lO,EAAA,SAAAC,GACA,IAAAW,GAAAX,EAAA/B,YAAA+B,EAAAtG,UAAA,QAEA4G,EAVA,QAUAK,GAAAL,EAVA,QAUA5jI,KACAA,EAAAikI,GAIAthO,EAAAlD,OAAAoX,EAAAysN,EAAAnB,qBAEA,CACAniI,cACAnpF,OAhIAqtN,CAAAp1F,EAAAu0F,eACAv0F,EAAAn2B,WAAA5Y,OAAA4jI,EAAA3jI,YAAA2jI,EAAA9sN,KAEAi4H,EAAAn2B,WAAA7Y,kBAAAwjI,EAAAvB,eAEAziH,EAAAj5C,eAAAyoE,EAAA,iBAAAw0F,EAAAtB,aAAA,YAgIA7iO,EAAA0wI,WAvHA,SAAA5oI,EAAAu1I,GACA,IAAA90D,EAAA40D,EAAAr1I,GACAtE,EAAAjF,KAAAgqF,EAAA,SAAAonD,GACAA,EAAAn2B,WAAA/jG,UACA,IAAAyuN,EAAAv0F,EAAAu0F,cAEAA,EAAA7mF,YACA6mF,EAAA7mF,GACA1N,EAAA3iH,WAGA62M,EAAAt7I,IA6GAvoF,EAAAyiO,gBAtGA,SAAAn6I,GACA,OAAAA,EAAAppF,KAAA,MAAAopF,EAAA1hF,qBC9GAvD,EAAQ,KAERA,EAAQ,sBCFR,IAAA4xB,EAAc5xB,EAAQ,KAEtBsgM,EAAmBtgM,EAAQ,KAE3BA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAyBR4xB,EAAAxb,qBAAAkqL,oBCrCA,IAAAngM,EAAaH,EAAQ,KAErB2hO,EAAqB3hO,EAAQ,KAE7By5B,EAAiBz5B,EAAQ,KAsBzB4hO,EAAA,SACAC,EAAAF,EAAA1kO,OAAA,CACApB,KAAA,uBAKA+mC,cAAA,CACAy8D,MAAA,OAEA81C,YAAA,EAGA1sH,MAAA,KAIA45D,UAAA,EAEAqsD,WAAA,KAEAx8G,UAAA,KAEA4vM,WAAA,EAEAC,kBAAA,KAEAC,kBAAA,MAQAx+L,cAAA,SAAAnM,EAAAqM,GACAm+L,EAAA/sK,WAAAx4D,KAAA,gBAAAb,WACAa,KAAAo7I,cACAp7I,KAAA26I,YAAA,SAAA11C,GACAA,EAAAnxB,cAAA,SACAmxB,EAAAv3E,WAAA1tB,KAAAohD,cAGAphD,KAAA2lO,eAOAlrF,cAAA,WACA8qF,EAAA/sK,WAAAx4D,KAAA,gBAAAb,WACA,IAAAq7I,EAAAx6I,KAAAw6I,SACA,eAAAx6I,KAAA21N,SAAAn7E,EAAA3nE,WACA,MAAA2nE,EAAA,IAAAptH,MAAAotH,EAAA,OAAAA,EAAA,GAAA8qF,EAAA,KACA,MAAA9qF,EAAA,IAAAptH,MAAAotH,EAAA,OAAAA,EAAA,GAAA8qF,EAAA,KAMAK,YAAA,WACA,IAAAj4M,EAAA1tB,KAAAohD,YACAj1B,EAAAnsB,KAAAgM,OAAAmgB,OAEAA,KAAAy5M,MAGAl4M,EAAAk4M,KAAA,EACA5lO,KAAAgM,OAAAmgB,MAAAuB,GACK7pB,EAAAvF,QAAA6tB,KACLA,EAAA,GAAAA,EAAA,IACAA,EAAA0mD,UAGA1mD,EAAA,GAAAxd,KAAAG,IAAAqd,EAAA,GAAAuB,EAAA,IACAvB,EAAA,GAAAxd,KAAAC,IAAAud,EAAA,GAAAuB,EAAA,MAQAgtH,qBAAA,WACA2qF,EAAAnpO,UAAAw+I,qBAAAt7I,MAAAY,KAAAb,WACA0E,EAAAjF,KAAAoB,KAAAykG,UAAA,SAAAhqC,GACA,IAAApjC,EAAAr3B,KAAAgM,OAAA6tG,WAAAp/C,GAAApjC,WAEAA,KAAA,KAAAA,EAAA,KACAA,EAAA,OAEKr3B,OAMLg8I,YAAA,SAAA7qC,GACAnxG,KAAAgM,OAAAmgB,MAAAglF,EAAAx0G,QAEAqD,KAAA2lO,eAMAE,YAAA,WACA,IAAAn4M,EAAA1tB,KAAAohD,YACA2gL,EAAA5kM,EAAAnQ,KAAAhtB,KAAAG,IAAA,cAAAxD,SAMA,OAJAolO,EAAA,GAAAr0M,EAAA,KAAAq0M,EAAA,GAAAr0M,EAAA,IACAq0M,EAAA,GAAAr0M,EAAA,KAAAq0M,EAAA,GAAAr0M,EAAA,IACAq0M,EAAA,GAAAr0M,EAAA,KAAAq0M,EAAA,GAAAr0M,EAAA,IACAq0M,EAAA,GAAAr0M,EAAA,KAAAq0M,EAAA,GAAAr0M,EAAA,IACAq0M,GAMA18H,cAAA,SAAA/lG,GACA,IAAA6sB,EAAAnsB,KAAAgM,OAAAmgB,MACAuB,EAAA1tB,KAAAohD,YAGA,OAAAj1B,EAAA,IAAAuB,EAAA,IAAAvB,EAAA,IAAA7sB,KAAA6sB,EAAA,IAAAuB,EAAA,IAAApuB,GAAA6sB,EAAA,4BAOA25M,sBAAA,SAAA35M,GACA,IAAAhvB,EAAA,GAYA,OAXA6C,KAAA+6I,iBAAA,SAAAhqI,GACA,IAAA0hB,EAAA,GACAjxB,EAAAuP,EAAAC,UACAxP,EAAA5C,KAAAoB,KAAAw5I,iBAAAh4I,GAAA,SAAAlC,EAAA6R,GACAgb,EAAA,IAAA7sB,MAAA6sB,EAAA,IAAAsG,EAAAhxB,KAAA0P,IACOnR,MACP7C,EAAAsE,KAAA,CACA+wB,SAAAzhB,EAAA9J,GACAkK,UAAAshB,KAEKzyB,MACL7C,GAMAw8I,cAAA,SAAAX,GACA,IAAA+sF,EAAAC,EAAAhmO,KAAA,aAAAA,KAAAohD,aACA6kL,EAAAD,EAAAhmO,KAAA,UAAAA,KAAAgM,OAAAmgB,MAAAxvB,SACAi9I,EAAA,GAEA,SAAAssF,EAAA5mO,EAAAomG,GACAk0C,EAAAn4I,KAAA,CACAnC,QACA6gB,MAAA64H,EAAA15I,EAAAomG,KAUA,IALA,IAAAygI,EAAA,EACAC,EAAA,EACAC,EAAAJ,EAAAxoO,OACA6oO,EAAAP,EAAAtoO,OAEU2oO,EAAAE,KAAAL,EAAAxoO,QAAAsoO,EAAAK,IAAAH,EAAA,IAA2DG,IAErEL,EAAAK,GAAAH,EAAAE,IACAD,EAAAH,EAAAK,GAAA,cAIA,QAAAG,EAAA,EAAuBJ,EAAAE,EAAaF,IAAAI,EAAA,EAGpCA,GAAA3sF,EAAAn8I,QAAAyoO,EAAAD,EAAAE,GAAA,cACAD,EAAAD,EAAAE,GAAA,WAGA,IAAAI,EAAA,EAAuBH,EAAAE,EAAaF,MACpCH,EAAAxoO,QAAAwoO,IAAAxoO,OAAA,GAAAsoO,EAAAK,MAEAG,IACA3sF,EAAAn8I,QAAAyoO,EAAAtsF,IAAAn8I,OAAA,GAAA6B,MAAA,cACAinO,EAAA,GAGAL,EAAAH,EAAAK,GAAA,eAIA,IAAAI,EAAA5sF,EAAAn8I,OACA,OACAm8I,QACAC,YAAA,CAAA2sF,EAAA5sF,EAAA,GAAAz5H,MAAA,cAAAqmN,EAAA5sF,EAAA4sF,EAAA,GAAArmN,MAAA,mBAKA,SAAA6lN,EAAA/sF,EAAAvzC,EAAAh4E,GACA,GAAAA,EAAA,KAAAA,EAAA,GACA,OAAAA,EAAA/wB,QAYA,IALA,IACA+nD,GAAAh3B,EAAA,GAAAA,EAAA,IADA,IAEApuB,EAAAouB,EAAA,GACA+4M,EAAA,GAEAlpO,EAAA,EAAiBA,GALjB,KAKiB+B,EAAAouB,EAAA,GAAqCnwB,IACtDkpO,EAAAhlO,KAAAnC,GACAA,GAAAolD,EAIA,OADA+hL,EAAAhlO,KAAAisB,EAAA,IACA+4M,EAGA,IAAArlM,EAAAmkM,EACAptM,EAAA93B,QAAA+gC,mBC9PA,IAAAv9B,EAAaH,EAAQ,KAErB6a,EAAqB7a,EAAQ,KAE7Bu8F,EAAgBv8F,EAAQ,KAExBgjO,EAAoBhjO,EAAQ,KAE5BkB,EAAclB,EAAQ,KAEtBy5B,EAAiBz5B,EAAQ,KAEzB60L,EAAiB70L,EAAQ,KAEzB4gF,EAAa5gF,EAAQ,KAErBmB,EAAgBnB,EAAQ,KAqBxBuoB,EAAAkR,EAAAlR,UACArtB,EAAAiF,EAAAjF,KACA8P,EAAAC,KAAAC,IACAC,EAAAF,KAAAG,IAEA63N,EAAA,GACAC,EAAA,EAQAC,EAAAH,EAAA/lO,OAAA,CACApB,KAAA,uBAKA+H,KAAA,WACAu/N,EAAAruK,WAAAx4D,KAAA,OAAAb,WAKAa,KAAA8mO,QAAA,GAKA9mO,KAAA+mO,cAAA,GAKA/mO,KAAAy+N,YAAA,GAKAz+N,KAAA21N,QAKA31N,KAAAgnO,WAKAhnO,KAAAinO,sBAAA,GAKAjnO,KAAAwhG,UAKAxhG,KAAAknO,WAOA9qF,SAAA,SAAAnD,EAAAxuI,EAAAtC,EAAAsJ,GACAA,GAAA,oBAAAA,EAAAlS,MAAAkS,EAAA7T,OAAAoC,KAAA0S,KACA1S,KAAA++N,cAOAA,WAAA,WACA/+N,KAAAkH,MAAAkzD,YACA,IAAA6+E,EAAAj5I,KAAAi5I,eACAp7B,EAAA79G,KAAAkH,MACAlH,KAAA21N,QAAA18E,EAAA94I,IAAA,UACAH,KAAAgnO,WAAA/tF,EAAA94I,IAAA,cAEAH,KAAAk/N,iBAEAl/N,KAAAmnO,WAAAtpH,GAEA,IAAAupH,EAAAnuF,EAAA94I,IAAA,QAEAH,KAAAqnO,gBAAAxpH,EAAAupH,EAAA,GAEApnO,KAAAqnO,gBAAAxpH,EAAAupH,EAAA,GAGApnO,KAAAg/N,aAAA,GAIAh/N,KAAAq8I,iBAAAx+B,GAEA79G,KAAAg/N,cAEAh/N,KAAAsnO,2BAEAtnO,KAAAunO,6BAEAvnO,KAAA68I,cAAAh/B,IAMAwpH,gBAAA,SAAAngO,EAAAkgO,EAAAI,GACA,GAAAJ,EAAA,CAKA,IAAAh+M,EAAAg+M,EAAA,EAAAI,GACAp+M,EAAA,MAAAA,IAAA,MACA,IAAA6vH,EAAAj5I,KAAAi5I,eACAoB,EAAApB,EAAA94I,IAAA,WACAq6I,EAAAvB,EAAAuB,SACA2kF,EAAAn/N,KAAA8mO,QAAA3H,SAEAv/M,EAAA5f,KAAAynO,gBAAA,CAAAjtF,EAAA,SAAAgtF,GAAAntF,EAAAG,EAAA,GAAAH,GAAA8kF,GAEAp8H,EAAA/iG,KAAAynO,gBAAA,IAAAD,EAAA,eAAArI,GAEA3mM,EAAAx4B,KAAA21N,QACA9yM,EAAA7iB,KAAAi5I,eAAAp2H,eACA7iB,KAAAkH,MAAAiJ,IAAA,IAAAvL,EAAAgZ,KAAA,CACA7N,MAAA,CACAC,EAAA4P,EAAA,GACA3P,EAAA2P,EAAA,GACAkF,kBAAA,eAAA0T,EAAA,SAAAuqE,EACAl+E,UAAA,eAAA2T,EAAAuqE,EAAA,SACA35E,OACAmgC,SAAA1mC,EAAA2G,UACArI,SAAA0B,EAAAosD,qBAQAk4J,WAAA,SAAAO,GACA,IAAAzuF,EAAAj5I,KAAAi5I,eACA0uF,EAAA3nO,KAAA8mO,QACAtsF,EAAAvB,EAAAuB,SACAhiH,EAAAx4B,KAAA21N,QACAn5H,EAAAx8F,KAAAgnO,WACAj0F,EAAAzuD,EAAAw4D,aAAA7D,EAAAj5I,KAAAmI,IAAAqyI,GAEA2kF,EAAAwI,EAAAxI,SAAAn/N,KAAA4nO,gBAAA70F,GAGAosF,EAAAhvN,IAAAw3N,EAAAxtF,WAAA0tF,KACA1I,EAAAhvN,IAAAw3N,EAAAztF,QAAA2tF,EAAA,KAAArrI,EAAAskI,EAAA9gO,KAAA21N,SAAA,KAAA9xN,EAAA7E,KAAAgB,KAAA8nO,YAAA9nO,KAAA,UAAA6D,EAAA7E,KAAAgB,KAAA8nO,YAAA9nO,KAAA,YACA,IAAAgjD,EAAAi2F,EAAAp2H,eAAAub,YAAA,UACA2pM,EAAAl5N,EAAAm0C,EAAAv7C,MAAAu7C,EAAAt7C,QAEA80F,IACAmrI,EAAAK,aAAA,GACAL,EAAA/G,aAAA,GACA+G,EAAAM,kBAAA,GAEAjoO,KAAAkoO,cAAA/I,EAAA,EAAA3kF,EAAAutF,EAAAvvM,EAAAu6G,GAEA/yI,KAAAkoO,cAAA/I,EAAA,EAAA3kF,EAAAutF,EAAAvvM,EAAAu6G,IAGA/yI,KAAAmoO,iBAAAhJ,EAAA3kF,EAAAutF,EAAAvvM,GAEAkvM,EAAAv3N,IAAAgvN,IAMA+I,cAAA,SAAA/I,EAAA37I,EAAAg3D,EAAAutF,EAAAvvM,GACA,IAAA4vM,EAAAvkO,EAAA7E,KAAAgB,KAAA8nO,YAAA9nO,KAAAwjF,GAAA,GACA6kJ,EAAAxkO,EAAA7E,KAAAgB,KAAA8nO,YAAA9nO,KAAAwjF,GAAA,GACA8kJ,EAAAT,EA2gBA,SAAArkJ,EAAAukJ,GACA,WAAAvkJ,EAAA,QAAAukJ,EAAA,IAAAA,OAAA,QAAAA,EAAA,IAAAA,MA5gBAQ,CAAA/kJ,EAAAukJ,GAAAjH,EAAA9gO,KAAA21N,SAAAyS,EAAAC,GACAC,EAAA1oN,SAAA,GAAA46H,EAAA,GACA2kF,EAAAhvN,IAAAm4N,GAKA,IAAAzlN,EAAA7iB,KAAAi5I,eAAAp2H,eACA2lN,EAAA,IAAA5jO,EAAAgZ,KAAA,CACAygE,WAAA,EACA6Z,MAAAkwI,EACAnlH,YAAA,SAAAvqG,GAEAunF,EAAAhpC,KAAAv+C,EAAA3D,QAEA+mG,UAAAusH,EACAt4N,MAAA,CACAC,EAAA,EACAC,EAAA,EACAmZ,KAAA,GACAmgC,SAAA1mC,EAAA2G,UACArI,SAAA0B,EAAAosD,kBAGAjvE,KAAAkH,MAAAiJ,IAAAq4N,GACA,IAAAC,EAAA,gBAAAjwM,EAAAuvM,EAAA,MAAAA,EAAA,eAAAvvM,EAAA,IAAAgrD,GAAA,IAAAukJ,EAAA,IAAAA,EAAA,IAAAvkJ,GAAAukJ,EAAA,EAAAA,EAAA,GACAJ,EAAA3nO,KAAA8mO,QACAa,EAAAK,aAAAxkJ,GAAA8kJ,EACAX,EAAAM,kBAAAzkJ,GAAAilJ,EACAd,EAAA/G,aAAAp9I,GAAAglJ,GAMAL,iBAAA,SAAAhJ,EAAA3kF,EAAAutF,EAAAvvM,GACA,IAAA29I,EAAA0xD,EAAA,gBACA1xD,EAAAv2J,SAAA,GAAA46H,EAAA,GACA27B,EAAAxvJ,KAAA,CACAy3D,WAAA,EACArzE,QAAA,IAEAo0N,EAAAhvN,IAAAgmK,GACA,IAAAtzJ,EAAA7iB,KAAAi5I,eAAAp2H,eACA6lN,EAAA,IAAA9jO,EAAAgZ,KAAA,CACA7S,QAAA,EACAqzE,WAAA,EACAruE,MAAA,CACAC,EAAA,EACAC,EAAA,EACAmZ,KAAA,GACAmgC,SAAA1mC,EAAA2G,UACArI,SAAA0B,EAAAosD,kBAGAjvE,KAAAkH,MAAAiJ,IAAAu4N,GACA,IAAAC,EAAA,gBAAAnwM,EAAAuvM,EAAA,EAAAnB,EAAA,KACAe,EAAA3nO,KAAA8mO,QACAa,EAAAxxD,YACAwxD,EAAAe,iBACAf,EAAAgB,uBAMAb,YAAA,SAAAtkJ,EAAA83B,EAAA7gF,EAAAC,GACA,GAAA16B,KAAAgnO,WAAA,CAMA,GAFAhnO,KAAAwhG,WAAA8Z,GAEAA,EAAA,CAEA,IAAAhxF,EAAAtqB,KAAAynO,gBAAA,CAAAhtM,EAAAC,GAAA16B,KAAA8mO,QAAA3H,UAAA,GAEAn/N,KAAAuhO,gBAAA/9I,EAAAl5D,EAAA,IAIAtqB,KAAAg/N,cAIA1jH,KAAAt7G,KAAAi5I,eAAA94I,IAAA,aAEAH,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,kBACA3B,KAAAoC,KAAA0S,IACAk2N,YAAA5oO,KAAAi5I,eAAAhyI,GACAkqG,SAAAnxG,KAAA+mO,cAAApqO,UAIA2+G,GACAt7G,KAAAknO,WAAAlnO,KAAA6oO,0BACKC,EAAA9oO,KAAAi5I,iBACLj5I,KAAA+oO,qBAAA/oO,KAAAy+N,YAAAj7I,IAAA,KAOA07I,eAAA,WACA,IAAAjmF,EAAAj5I,KAAAi5I,eACA8oF,EAAA/hO,KAAA+mO,cAAA9tF,EAAA4sF,cACAn4M,EAAAurH,EAAA73F,YACAu2I,EAAA,GAAA1+C,EAAAuB,SAAA,IACAx6I,KAAAy+N,YAAA,CAAAxyM,EAAA81M,EAAA,GAAAr0M,EAAAiqK,GAAA,GAAA1rK,EAAA81M,EAAA,GAAAr0M,EAAAiqK,GAAA,KASA4pC,gBAAA,SAAA/9I,EAAA7tB,GACAA,KAAA,EACA,IAAAsjF,EAAAj5I,KAAAi5I,eACA11D,EAAAvjF,KAAAy+N,YACA9mC,EAAA,GAAA1+C,EAAAuB,SAAA,IACA+9C,EAAA5iI,EAAA4tB,EAAAo0G,EAAAn0G,EACA,GACA,IAAA91D,EAAAurH,EAAA73F,YAEAphD,KAAA+mO,cAAA,CAAA96M,EAAAs3D,EAAA,GAAAo0G,EAAAjqK,GAAA,GAAAzB,EAAAs3D,EAAA,GAAAo0G,EAAAjqK,GAAA,KAMAsxM,YAAA,SAAAgK,GACA,IAAA/vF,EAAAj5I,KAAAi5I,eACAvrH,EAAAurH,EAAA73F,YACAumL,EAAA3nO,KAAA8mO,QACAmC,EAAA,GAAAhwF,EAAAuB,SAAA,IACA0uF,EAAAF,EAAAC,EAAAjpO,KAAAy+N,YAEA0K,EAAAnpO,KAAAopO,iBAAAppO,KAAA+mO,cAAAr5M,EAAAw7M,EAAA,WAEAG,EAAArpO,KAAAopO,iBAAA17M,IAAAu7M,EAAA,cAEAtB,EAAAztF,QAAAtjI,SAAA,CACA4J,KAAA2oN,EAAAG,SACAjzJ,QAAA8yJ,EAAA9yJ,UACKxxC,SAAA,SAAAskM,EAAAI,WACL5B,EAAAxtF,WAAAvjI,SAAA,CACA4J,KAAA6oN,EAAAC,SACAjzJ,QAAAgzJ,EAAAhzJ,UACKxxC,SAAA,SAAAwkM,EAAAE,WAELvpO,KAAAwpO,cAAAN,EAAAC,IAMAC,iBAAA,SAAArH,EAAAr0M,EAAA61D,EAAAk5D,GACA,IAAA11I,EAAA,CACA01I,aACAG,uBAAA,GAGA16G,EAAAliC,KAAAypO,mBAAA1H,EAAAh7N,GAEA2iO,EAAA,CAAA1pO,KAAAs8I,oBAAAylF,EAAA,gBAAAh7N,GAAA/G,KAAAs8I,oBAAAylF,EAAA,gBAAAh7N,IAEAwiO,EAAAvpO,KAAA2pO,iBAAApmJ,EAAAmmJ,GAEA,OACAJ,SAAA,IAAA/qN,EAAA,QAAA2jB,GACAqnM,YACAK,aAAA,CAAA1nM,EAAA,GAAA/hB,MAAA+hB,IAAAzkC,OAAA,GAAA0iB,SAOAspN,mBAAA,SAAA1H,EAAAh7N,GAIA,IAEAm7B,EAAA,GACAwiB,GAAAq9K,EAAA,GAAAA,EAAA,IAHA,IAIA7/L,EAAAzgC,KAAA,CACA0e,MAAAngB,KAAAs8I,oBAAAylF,EAAA,WAAAh7N,GACAvD,OAAA,IAGA,QAAAjG,EAAA,EAAmBA,EATnB,IASqCA,IAAA,CACrC,IAAAssO,EAAA9H,EAAA,GAAAr9K,EAAAnnD,EAEA,GAAAssO,EAAA9H,EAAA,GACA,MAGA7/L,EAAAzgC,KAAA,CACA0e,MAAAngB,KAAAs8I,oBAAAutF,EAAA,QAAA9iO,GACAvD,OAAAjG,EAlBA,MA0BA,OAJA2kC,EAAAzgC,KAAA,CACA0e,MAAAngB,KAAAs8I,oBAAAylF,EAAA,WAAAh7N,GACAvD,OAAA,IAEA0+B,GAMAynM,iBAAA,SAAApmJ,EAAAmmJ,GACA,IAAAlvF,EAAAx6I,KAAAi5I,eAAAuB,SACA,QAAAA,EAAA,GAAAkvF,EAAA,GAAAnmJ,EAAA,KAAAi3D,EAAA,GAAAj3D,EAAA,KAAAi3D,EAAA,GAAAj3D,EAAA,KAAAi3D,EAAA,GAAAkvF,EAAA,GAAAnmJ,EAAA,MAMAqkJ,gBAAA,SAAA70F,GACA,IAAAv6G,EAAAx4B,KAAA21N,QACAtzJ,EAAAriE,KAAAi5I,eAAA94I,IAAA,WACA,WAAAyE,EAAA+Y,MAAA,eAAA6a,GAAA6pC,EAGK,eAAA7pC,GAAA6pC,EAAA,CACL1lC,MAAA,WAAAo2G,EAAA,aACA7nH,UAAAvc,KAAA4U,GAAA,GACK,aAAAiV,GAAA6pC,EAEA,CACL1lC,MAAA,SAAAo2G,EAAA,cAHK,CACLp2G,MAAA,SAAAo2G,EAAA,gBAPA,CACAp2G,MAAA,WAAAo2G,EAAA,aACA7nH,SAAAvc,KAAA4U,GAAA,KAcAimN,cAAA,SAAAjmJ,EAAA4lJ,GACA,GAAAnpO,KAAAgnO,WAAA,CAIA,IAAAW,EAAA3nO,KAAA8mO,QACA7tF,EAAAj5I,KAAAi5I,eACA+uF,EAAAL,EAAAK,aACApH,EAAA+G,EAAA/G,aACAhiO,EAAA,eAAA4kF,GACA,IAAA8kJ,EAAAN,EAAAxkJ,GACA8kJ,EAAA1xN,SAAA,OAAAuyN,EAAAS,aAAApmJ,IACA8kJ,EAAA1oN,SAAA,GAAA2jE,EAAAC,GAEA,IAAA2+I,EAAAv9N,EAAA4a,eAAAmoN,EAAAM,kBAAAzkJ,GAAA5+E,EAAAglB,aAAA0+M,EAAAtoO,KAAAkH,QACA05N,EAAAp9I,GAAA5sE,SAAA,CACA5G,EAAAmyN,EAAA,GACAlyN,EAAAkyN,EAAA,GACA/4M,KAAA6vH,EAAA+B,gBAAAh7I,KAAA+mO,cAAAvjJ,IACA1+D,kBAAA,SACAD,UAAA7kB,KAAAynO,gBAAA,eAAAznO,KAAA21N,QAAA,IAAAnyI,EAAA,sBAAAmkJ,EAAAxI,aAEKn/N,QAUL8pO,eAAA,SAAAC,EAAA5uF,EAAA6uF,EAAAC,GACA,IAAAhxF,EAAAj5I,KAAAi5I,eACAvrH,EAAAurH,EAAA73F,YACAo5F,EAAAvB,EAAAuB,SACAm9C,EAAA,GAAAn9C,EAAA,IACA7sE,EAAA1hD,EAAA89M,EAAAr8M,EAAAiqK,GAAA,GACAgwC,EAAA3nO,KAAA8mO,QACA3wD,EAAAwxD,EAAAxxD,UAEA,GAAAA,EAAA,CAIAA,EAAAv2J,SAAA,GAAA+tD,EACAwoG,EAAAxvJ,KAAA,gBACAwvJ,EAAAtxI,SAAA,SA2OA,SAAAqlM,EAAAD,EAAAt8J,EAAAw8J,GACA,OAAAD,EAAA,CACA,IAAAx7N,EAAAu7N,EAAAp7N,EAAA8+D,EAAA,MAAAi5J,EAAA,MAAAl4N,EAAAu7N,EAAAp7N,EAAAs7N,EAAAx8J,EAAA,OACA,oBA9OAy8J,GAAAJ,EAAAC,EAAAt8J,EAAA6sE,EAAA,KACA,IAGAr6H,EAAAngB,KAAAs8I,oBAAAytF,EAAA,QAHA,CACAntF,uBAAA,IAGAu5B,EAAAv/J,SAAA,OAAAuJ,GAEA,IAAAgiN,EAAAv9N,EAAA4a,eAAAmoN,EAAAgB,oBAAA/jO,EAAAglB,aAAAusJ,EAAAn2K,KAAAkH,QACAwhO,EAAAf,EAAAe,eACAA,EAAA/hN,KAAA,gBAEA,IAAAo8E,EAAA/iG,KAAAynO,gBAAA,OAAAE,EAAAxI,UAEA3mM,EAAAx4B,KAAA21N,QACA+S,EAAA9xN,SAAA,CACAwS,MAAA4gN,GAAA,IAAA/wF,EAAA+B,gBAAAG,GACAr2H,kBAAA,eAAA0T,EAAAuqE,EAAA,SACAl+E,UAAA,eAAA2T,EAAA,SAAAuqE,EACA/yF,EAAAmyN,EAAA,GACAlyN,EAAAkyN,EAAA,OAOAmF,yBAAA,WACA,IAAAx5N,EAAA9N,KAEAA,KAAA8mO,QAAA3H,SAAAv1N,GAAA,qBAAA8O,GAGA,GAFA5K,EAAAo5N,WAAA,GAEAp5N,EAAA0zF,UAAA,CACA,IAAAg5C,EAAA1sI,EAAAmrI,eAAAuB,SAEA7sE,EAAA7/D,EAAA25N,gBAAA,CAAA/uN,EAAAg+C,QAAAh+C,EAAAo+C,SAAAhpD,EAAAg5N,QAAA3H,UAAA,MAIAxxJ,EAAA,GAAAj/D,EAAAG,EAAA,EAAA8+D,EAAA,IAAA6sE,EAAA,IAEA1sI,EAAAi7N,qBAAAp7J,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAA6sE,EAAA,OAEK5wI,GAAA,sBAGLkE,EAAAo5N,WAAA,GACAp5N,EAAA0zF,WAAA1zF,EAAA+6N,6BAOAtB,2BAAA,WACA,IAAAngO,EAAApH,KAAAmI,IAAA2D,QAEA9L,KAAAi5I,eAAAjtI,OAAAw5N,WACAp+N,EAAAwC,GAAA,YAAA5J,KAAAqqO,8BAAArqO,MACAoH,EAAAwC,GAAA,WAAA5J,KAAAsqO,eAAAtqO,OAEAA,KAAAuqO,6BAOAxB,qBAAA,SAAAyB,EAAAC,GACA,IAAAxxF,EAAAj5I,KAAAi5I,eACAuB,EAAAvB,EAAAuB,SAEA,GAAAvB,EAAAjtI,OAAAw5N,UAAA,CAIA,IAAA7tC,EAAA,GAAAn9C,EAAA,IACA9sH,EAAAurH,EAAA73F,YAEAopL,EAAA97N,EAAAG,EAAA8oL,EAAA,GAAA6yC,GAAA7yC,EAAA,IACA,IAAAsyC,EAiKA,SAAAhxF,EAAAvrH,EAAAiqK,GACA,IAAAsyC,EAAAtD,EAAA,EACAlB,EAAAxsF,EAAA94I,IAAA,qBAEAslO,IACAwE,EAAAh+M,EAAAw5M,EAAA/3M,EAAAiqK,GAAA,MAGA,OAAAsyC,EAzKAS,CAAAzxF,EAAAvrH,EAAAiqK,GACAgzC,EAAA,CAAAH,EAAAP,EAAAO,EAAAP,GACAF,EAAA99M,EAAAu+M,EAAA7yC,EAAAjqK,GAAA,GACA8qH,EAAA,CAAAvsH,EAAA0+M,EAAA,GAAAhzC,EAAAjqK,GAAA,GAAAzB,EAAA0+M,EAAA,GAAAhzC,EAAAjqK,GAAA,IAGAi9M,EAAA,GAAAhzC,EAAA,KAAAn/C,EAAA,IAAAvpI,KACA07N,EAAA,GAAAhzC,EAAA,KAAAn/C,EAAA,GAAAvpI,KAGAw7N,IACAjyF,EAAA,MAAAvpI,IACAjP,KAAA8pO,eAAAC,EAAAvxF,EAAA,QAAAyxF,GACOzxF,EAAA,KAAAvpI,IACPjP,KAAA8pO,eAAAC,EAAAvxF,EAAA,QAAAyxF,GAEAjqO,KAAA8pO,eAAAC,IAAA,UAAAE,IAUA,IAAAW,EAAA5qO,KAAAinO,sBACA4D,EAAA,IAEAJ,GAAA3B,EAAA7vF,MACA4xF,EAAA7qO,KAAAinO,sBAAAhuF,EAAA6sF,sBAAAttF,IAGA,IAAAsyF,EAAAjmO,EAAAktB,gBAAA64M,EAAAC,GAEA7qO,KAAA+qO,kBAAA,WAAAzmJ,EAAAi5D,iBAAAutF,EAAA,KAEA9qO,KAAA+qO,kBAAA,YAAAzmJ,EAAAi5D,iBAAAutF,EAAA,OAMAT,8BAAA,SAAA3xN,GACA,IAAAjQ,EAAAiQ,EAAAza,OACAg7I,EAAAj5I,KAAAi5I,eAEA,GAAAxwI,GAAA,MAAAA,EAAA0I,UAAA,CAIA,IAAAwH,EAAA3Y,KAAAyK,QAAA4N,iBAAA5P,EAAA2P,aAEA,GAAA6gI,EAAAM,eAAA5gI,GAAA,CAIA,IAAAnX,EAAAmX,EAAA3H,QAAAvI,EAAAoQ,UACAvZ,EAAAkC,EAAArB,IAAA84I,EAAAO,iBAAAh4I,GAAAiH,EAAA0I,WAAA,GAEAic,MAAA9tB,IACAU,KAAA8pO,eAAAxqO,QAOAgrO,eAAA,WACA,IAAA3C,EAAA3nO,KAAA8mO,QACAa,EAAAxxD,WAAAwxD,EAAAxxD,UAAAxvJ,KAAA,gBACAghN,EAAAe,gBAAAf,EAAAe,eAAA/hN,KAAA,iBAMAkiN,wBAAA,WACA7oO,KAAAsqO,iBAEA,IAAA5yL,EAAA13C,KAAAinO,sBAEAjnO,KAAA+qO,kBAAA,WAAAzmJ,EAAAi5D,iBAAA7lG,IAEAA,EAAAj6C,OAAA,GAMA8sO,0BAAA,WACAvqO,KAAAsqO,iBAEA,IAAAljO,EAAApH,KAAAmI,IAAA2D,QACA1E,EAAA+C,IAAA,YAAAnK,KAAAqqO,+BACAjjO,EAAA+C,IAAA,WAAAnK,KAAAsqO,iBAMA7C,gBAAA,SAAAn9M,EAAAkiG,EAAAnqD,EAAA7uC,GACA,IAAA3M,EAAAjiB,EAAAglB,aAAA4iG,EAAAh5F,EAAA,KAAAxzB,KAAAkH,OACA,OAAAtC,EAAAf,EAAAvF,QAAAgsB,GAAA,uCAAAA,EAAAzD,EAAAw7C,IAMA0oK,kBAAA,SAAAxrO,EAAAkV,GACAA,KAAAhX,QAAAuC,KAAAmI,IAAA2P,eAAA,CACAvY,OACAkV,WAOAqB,QAAA,WACA9V,KAAAuqO,4BAEAvqO,KAAA6oO,2BAMA9yN,OAAA,WACA/V,KAAAuqO,4BAEAvqO,KAAA6oO,6BAIA,SAAAhB,EAAAz8M,EAAAozD,EAAA4pJ,EAAAC,GACA,WAAAzjO,EAAAoZ,QAAA,CACAwJ,MAAA,CACA4D,UAEAizD,YAAA+pJ,EACA5pJ,SACA0Z,MAAAkwI,EACAnlH,YAAA,SAAAvqG,GAEAunF,EAAAhpC,KAAAv+C,EAAA3D,QAEA+mG,UAAAusH,IAyBA,SAAAS,EAAA7vF,GACA,IAAAysF,EAAAzsF,EAAA94I,IAAA,qBACA,eAAAulO,EAAAzsF,EAAA94I,IAAA,YAAAulO,GAGA,SAAA5E,EAAAtoM,GACA,mBAAAA,EAAA,wBAGA,IAAA4I,EAAAylM,EACA1uM,EAAA93B,QAAA+gC,mBCxwBA,IAAA9L,EAAc5xB,EAAQ,KAEtBsgM,EAAmBtgM,EAAQ,KAE3BA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAyBR4xB,EAAAxb,qBAAAkqL,oBCrCctgM,EAAQ,KAEtBC,QAFA,IAIAE,EAAaH,EAAQ,KAErB2hO,EAAqB3hO,EAAQ,KAE7BmwE,EAAoBnwE,EAAQ,KAE5Bq2I,EAAoBr2I,EAAQ,KAI5BosB,EAFcpsB,EAAQ,KAEtBosB,gBAoBAk7M,EAAA3F,EAAA1kO,OAAA,CACApB,KAAA,sBAyBA+mC,cAAA,CACA6qE,SAAA,KAKA85H,SAAA,EAEAC,SAAA,EAEAnoI,MAAA,OAEAntE,UAAA,GAGAw8G,WAAA,GAGA+4F,WAAA,YACA32J,UAAA,KAMAzgC,WAAA,KAGA9b,YAAA,EAKAq6G,aAAA,WAEAH,QAAA,GAEAqzF,WAAA,EAEA/tH,UAAA,MAQAvwE,cAAA,SAAAnM,EAAAqM,GACA4jM,EAAAxyK,WAAAx4D,KAAA,gBAAAb,WAQAa,KAAAorO,WAAA,GACAprO,KAAAo7I,cAMA,IAAAiwF,EAAArrO,KAAAsrO,MAAAtrO,KAAAurO,iBAEAC,EAAAxrO,KAAAsrO,OAAAjuO,KAAA2C,MAEAA,KAAAyrO,eAAA1wM,EAAAqM,GAEA,IAAA2M,EAAA/zC,KAAAgM,OAAA+nC,WACA/zC,KAAA26I,YAAA,SAAA11C,EAAAxqC,GACA,eAAA4wK,GACApmI,EAAAnxB,cAAA,WACAmxB,EAAAlxD,WAAAlwC,EAAA5G,MAAA82C,KAEAkxD,EAAAv3E,WAAA1tB,KAAAohD,YACA6jD,EAAAnxB,cAAA,YACAmxB,EAAAzwB,UAAA3wE,EAAAhH,IAAAmD,KAAAorO,WAAA,SAAA12J,GACAA,EAAA7wE,EAAA5G,MAAAy3E,GAQA,MANA,YAAAja,IAGAia,EAAAz4B,OAAA,MAGAy4B,QAUAgmE,qBAAA,WAQA,IAAA1uI,EAAAhM,KAAAgM,OACA0/N,EAAA,GACAz0J,EAAApD,EAAAmD,kBACA1yB,EAAAtkD,KAAAskD,aAkBA,SAAA3zB,EAAA9xB,EAAA47D,EAAA5pD,GACA,OAAAhS,KAAA47D,KAAA52D,EAAA1F,SAAAU,EAAA47D,IAAA57D,EAAA47D,GAAA18D,eAAA8S,GAAAhS,EAAA47D,KAAA5pD,GAlBAhN,EAAAjF,KAAAoN,EAAA2sI,OAAA,SAAAjkE,GACA7wE,EAAAjF,KAAAq4E,EAAA,SAAApmE,GACA6jE,EAAA32E,eAAA8S,KACA66N,EAAA76N,GAAA,OAIAhN,EAAAjF,KAAA8sO,EAAA,SAAAp7M,EAAAzf,GACA,IAAAwgB,EAAA,EACAxtB,EAAAjF,KAAAoB,KAAAykG,UAAA,SAAAhqC,GACAppC,GAAAV,EAAA3kB,EAAAyuD,EAAA5pD,IAAA8f,EAAA3kB,EAAA/N,OAAAw8D,EAAA5pD,IACO7Q,OACPqxB,GAAAxtB,EAAAjF,KAAAoB,KAAAykG,UAAA,SAAAhqC,IACAzuD,EAAAyuD,KAAAzuD,EAAAyuD,GAAA,KAA6C5pD,GAAAkpI,EAAA55I,IAAA0Q,EAAA,YAAA4pD,EAAA,oBAAAnW,MAExCtkD,MAOLqlO,EAAAnpO,UAAAw+I,qBAAAt7I,MAAAY,KAAAb,YAEAssO,eAAA,SAAA1wM,EAAAqM,GACA,IAAA2sC,EAAA/zE,KAAAgM,OACAwoE,EAAAx0E,KAAAorO,WAEAj6H,GAAA/pE,EAAA2sC,EAAAh5C,GAAAo2E,UAAA,GAWA,GAVAp9B,EAAAo9B,WAEAttG,EAAAjF,KAAA41E,EAAA,SAAAE,EAAA3rE,GACA,IAAAjL,EAAAkC,KAAA2rO,kBAAAj3J,GAEAy8B,EAAApzG,eAAAD,KACAqzG,EAAArzG,IAAA,IAEKkC,MAEL,WAAA+zE,EAAAu+D,aAAA,CAEA,IAAAs5F,GAAA,EACA/nO,EAAAjF,KAAA41E,EAAA,SAAAE,EAAA3rE,GACA,IAAAjL,EAAAkC,KAAA2rO,kBAAAj3J,GAEAy8B,EAAArzG,KACA8tO,EAAAz6H,EAAArzG,IAAA,EAAA8tO,GAAA,IAEO5rO,QAQP2rO,kBAAA,SAAAj3J,GACA,qBAAA10E,KAAAsrO,MAAA52J,EAAAp1E,MAAA,GAAAo1E,EAAA3rE,MAAA,IAMA0jM,aAAA,WACA,OAAAzsM,KAAAorO,YAOAG,eAAA,WACA,IAAAv/N,EAAAhM,KAAAgM,OACA,OAAAA,EAAA2sI,QAAA3sI,EAAA2sI,OAAAl7I,OAAA,WAAAuC,KAAAgM,OAAA+nC,WAAA,4BAOAioG,YAAA,SAAA7qC,GACAnxG,KAAAgM,OAAAmlG,SAAAttG,EAAA5G,MAAAk0G,IAOA9L,cAAA,SAAA/lG,GACA,IAAAyJ,EAAA8qE,EAAAiD,eAAAx3E,EAAAU,KAAAorO,YACA,aAAAriO,GAAA/I,KAAAgM,OAAAmlG,SAAAnxG,KAAA2rO,kBAAA3rO,KAAAorO,WAAAriO,KAAA,wBAQA+8N,sBAAA,SAAA/uJ,GACA,IAAA55E,EAAA,GAcA,OAbA6C,KAAA+6I,iBAAA,SAAAhqI,GACA,IAAA0hB,EAAA,GACAjxB,EAAAuP,EAAAC,UACAxP,EAAA5C,KAAAoB,KAAAw5I,iBAAAh4I,GAAA,SAAAlC,EAAA6R,GAEA0iE,EAAAiD,eAAAx3E,EAAAU,KAAAorO,cACAr0J,GAAAtkD,EAAAhxB,KAAA0P,IACOnR,MACP7C,EAAAsE,KAAA,CACA+wB,SAAAzhB,EAAA9J,GACAkK,UAAAshB,KAEKzyB,MACL7C,GAQA0uO,kBAAA,SAAAn3J,GACA,IAAAo3J,EAEA,GAAA9rO,KAAAskD,aACAwnL,EAAAp3J,EAAAp1E,WAEA,SAAAo1E,EAAAp1E,MACAwsO,EAAAp3J,EAAAp1E,UACO,CACP,IAAAysO,EAAAr3J,EAAAzkD,UAAA,GACA67M,EAAAC,EAAA,MAAA98N,KAAA88N,EAAA,KAAA98N,IAAA,GAAA88N,EAAA,GAAAA,EAAA,MAIA,OAAAD,GAEAnyF,cAAA,SAAAX,GAEA,IAAAh5I,KAAAskD,aAAA,CAIA,IAAAs1F,EAAA,GACAC,EAAA,GACAZ,EAAAj5I,KA6BAw0E,EAAAx0E,KAAAorO,WAAAzuO,QAEA,GAAA63E,EAAA/2E,OAIK,CACL,IAAAkoC,EAAA6uC,EAAA,GAAAvkD,SAAA,GACA0V,KAAA12B,KAAAulE,EAAAzsC,QAAA,CACA9X,SAAA,EAAAhhB,IAAA02B,MAEAA,EAAA6uC,IAAA/2E,OAAA,GAAAwyB,SAAA,MACAhhB,KAAAulE,EAAA/yE,KAAA,CACAwuB,SAAA,CAAA0V,EAAA12B,YAVAulE,EAAA/yE,KAAA,CACAwuB,SAAA,EAAAhhB,WAaA,IAAAkhB,GAAAlhB,IAWA,OAVApL,EAAAjF,KAAA41E,EAAA,SAAAE,GACA,IAAAzkD,EAAAykD,EAAAzkD,SAEAA,IAEAA,EAAA,GAAAE,GAAA+1M,EAAA,CAAA/1M,EAAAF,EAAA,kBACAi2M,EAAAj2M,EAAAtzB,SACAwzB,EAAAF,EAAA,KAEKjwB,MACL,CACA45I,QACAC,eAzDA,SAAAqsF,EAAAj2M,EAAAy1E,GACA,IAAAomI,EAAA7yF,EAAA4yF,kBAAA,CACA57M,aAGAy1E,IACAA,EAAAuzC,EAAA5zC,cAAAymI,IAGA,IAAA3rN,EAAA64H,EAAA8yF,EAAApmI,GAEAz1E,EAAA,MAAAhhB,IACA4qI,EAAA,GAAA15H,EACO8P,EAAA,KAAAhhB,IACP4qI,EAAA,GAAA15H,EAEAy5H,EAAAn4I,KAAA,CACAnC,MAAA2wB,EAAA,GACA9P,SACS,CACT7gB,MAAA2wB,EAAA,GACA9P,cA8CAqrN,EAAA,CACAvzM,YAAA,WACA,IAAA87C,EAAA/zE,KAAAgM,OACAwoE,EAAAx0E,KAAAorO,WACAv+M,EAAAle,KAAAC,IAAAmlE,EAAAlnD,UAAA,IACAa,EAAA1tB,KAAAohD,YACAnpB,EAAA87C,EAAA97C,YACAA,EAAAtpB,KAAAG,IAAA85C,SAAA3wB,EAAA,OACA87C,EAAA97C,cAGA,IAFA,IAAA+zM,GAAAt+M,EAAA,GAAAA,EAAA,IAAAuK,GAEA+zM,EAAAj/M,QAAAF,KAAAm/M,GAAAn/M,EAAA,GACAA,IAGAknD,EAAAlnD,YACAm/M,KAAAj/M,QAAAF,GACA,IAAA9jB,EAAA,EAEAgrE,EAAAk3J,SACAz2J,EAAA/yE,KAAA,CACAsH,UACAknB,SAAA,EAAAhhB,IAAAye,EAAA,IACAwC,MAAA,QAIA,QAAAC,EAAAzC,EAAA,GAAAlwB,EAAAuL,EAAAkvB,EAA6DlvB,EAAAvL,EAAa2yB,GAAA67M,EAAA,CAC1E,IAAAl9N,EAAA/F,IAAAkvB,EAAA,EAAAvK,EAAA,GAAAyC,EAAA67M,EACAx3J,EAAA/yE,KAAA,CACAsH,UACAknB,SAAA,CAAAE,EAAArhB,GACAohB,MAAA,QAIA6jD,EAAAm3J,SACA12J,EAAA/yE,KAAA,CACAsH,UACAknB,SAAA,CAAAvC,EAAA,GAAAze,KACAihB,MAAA,QAIAJ,EAAA0kD,GACA3wE,EAAAjF,KAAA41E,EAAA,SAAAE,GACAA,EAAAtrD,KAAAppB,KAAAg7I,gBAAAtmE,EAAAzkD,WACKjwB,OAEL+zC,WAAA,WACA,IAAAggC,EAAA/zE,KAAAgM,OACAnI,EAAAjF,KAAAm1E,EAAAhgC,WAAA,SAAA+gC,GAGA90E,KAAAorO,WAAA3pO,KAAA,CACA2nB,KAAAppB,KAAAg7I,gBAAAlmE,GAAA,GACAx1E,MAAAw1E,KAEK90E,MAELisO,EAAAl4J,EAAA/zE,KAAAorO,aAEAzyF,OAAA,WACA,IAAA5kE,EAAA/zE,KAAAgM,OACAwoE,EAAAx0E,KAAAorO,WACAvnO,EAAAjF,KAAAm1E,EAAA4kE,OAAA,SAAAuzF,EAAAnjO,GACAlF,EAAA1F,SAAA+tO,KACAA,EAAA,CACA5sO,MAAA4sO,IAIA,IAAAt8N,EAAA,CACAwZ,KAAA,GACArgB,SAOA,GAJA,MAAAmjO,EAAAt0M,QACAhoB,EAAAwZ,KAAA8iN,EAAAt0M,OAGAs0M,EAAAnuO,eAAA,UACA,IAAAuB,EAAAsQ,EAAAtQ,MAAA4sO,EAAA5sO,MACAsQ,EAAAqgB,SAAA,CAAA3wB,KACAsQ,EAAAsgB,MAAA,UACO,CASP,IANA,IAAAD,EAAArgB,EAAAqgB,SAAA,GACAC,EAAAtgB,EAAAsgB,MAAA,MACAi8M,EAAA,QACAC,EAAA,EAAAn9N,SACAo9N,EAAA,GAEAr8M,EAAA,EAAwBA,EAAA,EAAQA,IAAA,CAGhC,IAFA,IAAAmL,EAAA,wCAAAnL,GAEAzyB,EAAA,EAAyBA,EAAA,SAAA0yB,EAAAD,GAA+BzyB,IACxD0yB,EAAAD,GAAAk8M,EAAA/wM,EAAA59B,IACA2yB,EAAAF,GAAAm8M,EAAA5uO,GACA8uO,EAAAr8M,GAAA,IAAAzyB,EAGA,MAAA0yB,EAAAD,KAAAC,EAAAD,GAAAo8M,EAAAp8M,IAGAq8M,EAAA,IAAAp8M,EAAA,KAAAhhB,MAAAihB,EAAA,MACAm8M,EAAA,IAAAp8M,EAAA,MAAAhhB,MAAAihB,EAAA,MAEAD,EAAA,KAAAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,KAGAtgB,EAAAtQ,MAAA2wB,EAAA,IAIArgB,EAAAqsC,OAAA43B,EAAA6D,gBAAAw0J,GACA13J,EAAA/yE,KAAAmO,IACK5P,MAELisO,EAAAl4J,EAAAS,GAEA1kD,EAAA0kD,GACA3wE,EAAAjF,KAAA41E,EAAA,SAAAE,GACA,IAAAxkD,EAAAwkD,EAAAxkD,MACA+qH,EAAA,gBAAA/qH,EAAA,mBAAAA,EAAA,KACAwkD,EAAAtrD,KAAAsrD,EAAAtrD,MAAAppB,KAAAg7I,gBAAA,MAAAtmE,EAAAp1E,MAAAo1E,EAAAp1E,MAAAo1E,EAAAzkD,UAAA,EAAAgrH,IACKj7I,QAIL,SAAAisO,EAAAl4J,EAAAS,GACA,IAAAnS,EAAA0R,EAAA1R,SAEA,aAAA0R,EAAAv7C,QAAA6pC,MACAmS,EAAA3B,UAIA,IAAAzxC,EAAA4pM,EACA7yM,EAAA93B,QAAA+gC,mBC1gBA,IAAAv9B,EAAaH,EAAQ,KAErBgjO,EAAoBhjO,EAAQ,KAE5BkB,EAAclB,EAAQ,KAItBg8C,EAFch8C,EAAQ,KAEtBg8C,aAEA1gC,EAAatb,EAAQ,KAErB4gF,EAAa5gF,EAAQ,KA8MrB09B,EAzLAslM,EAAA/lO,OAAA,CACApB,KAAA,sBAMA68I,SAAA,WACA,IAAAv+B,EAAA79G,KAAAkH,MACA22G,EAAAzjD,YACA,IAAA6+E,EAAAj5I,KAAAi5I,eACAoB,EAAApB,EAAA94I,IAAA,WACA0iB,EAAAo2H,EAAAp2H,eACA0mC,EAAA1mC,EAAA2G,UACArI,EAAA0B,EAAAosD,eAEA8jE,EAAA/yI,KAAAssO,gBAEA9xF,EAAAvB,EAAAuB,SAEA+xF,EAAAvsO,KAAAwsO,eAEAC,EAAAF,EAAAE,SACAh1H,EAAA5zG,EAAA5B,SAAAg3I,EAAA94I,IAAA,iBAAAssO,GACAA,GAAAzsO,KAAAqnO,gBAAAxpH,EAAA4uH,EAAA,GAAAjyF,EAAA/iC,EAAAs7B,GACAlvI,EAAAjF,KAAA2tO,EAAAG,cAMA,SAAA98N,GACA,IAAA8kE,EAAA9kE,EAAA8kE,MACAm/D,EAAA,IAAAjvI,EAAA+Y,MACAk2H,EAAAw0C,QAAAxkL,EAAA7E,KAAAgB,KAAA2sO,aAAA3sO,KAAA00E,GAEA10E,KAAA4sO,iBAAA/4F,EAAAjkI,EAAAi9N,uBAEA,IAAAf,EAAA7yF,EAAA4yF,kBAAAn3J,GAIA,GAFA10E,KAAA8sO,kBAAAj5F,EAAAi4F,EAAA,KAAAtxF,EAAA,GAAAA,EAAA,KAEA/iC,EAAA,CACA,IAAAs1H,EAAA/sO,KAAAi5I,eAAA5zC,cAAAymI,GACAj4F,EAAA1jI,IAAA,IAAAvL,EAAAgZ,KAAA,CACA7N,MAAA,CACAC,EAAA,UAAA+iI,GAAAsH,EAAAG,EAAA,GAAAH,EACApqI,EAAAuqI,EAAA,KACApxH,KAAAsrD,EAAAtrD,KACAtE,kBAAA,SACAD,UAAAkuH,EACAxpF,WACApoC,WACAk1D,QAAA,eAAA02J,EAAA,SAKAlvH,EAAA1tG,IAAA0jI,IAjCA7zI,MACAysO,GAAAzsO,KAAAqnO,gBAAAxpH,EAAA4uH,EAAA,GAAAjyF,EAAA/iC,EAAAs7B,GACA/zH,EAAAsa,IAAA2/G,EAAA94I,IAAA,UAAA09G,EAAAo7B,EAAA94I,IAAA,YACAH,KAAAq8I,iBAAAx+B,GACA79G,KAAA68I,cAAAh/B,IAoCA+uH,iBAAA,SAAA/4F,EAAA98D,GAGA,SAAAi2J,EAAAzmO,GACA,IAAA0yI,EAAAj5I,KAAAi5I,eACAA,EAAAjtI,OAAAw5N,WAAAxlO,KAAAmI,IAAA2P,eAAA,CACAvY,KAAAgH,EACAkO,MAAA6vE,EAAAi5D,iBAAAtE,EAAA6sF,sBAAA/uJ,MANA88D,EAAAjqI,GAAA,YAAA/F,EAAA7E,KAAAguO,EAAAhtO,KAAA,cAAA4J,GAAA,WAAA/F,EAAA7E,KAAAguO,EAAAhtO,KAAA,cAcAssO,cAAA,WACA,IAAArzF,EAAAj5I,KAAAi5I,eACA8D,EAAA9D,EAAAjtI,OAEA,gBAAA+wI,EAAAvkH,OACA,OAAA8rD,EAAAw4D,aAAA7D,EAAAj5I,KAAAmI,IAAA8wI,EAAAuB,UAGA,IAAAz3C,EAAAg6C,EAAAh6C,MAMA,OAJAA,GAAA,SAAAA,IACAA,EAAA,QAGAA,GAOAskI,gBAAA,SAAAngO,EAAAkiB,EAAAoxH,EAAA/iC,EAAAs7B,GACA,GAAA3pH,EAAA,CAIA,IAAAyqH,EAAA,IAAAjvI,EAAA+Y,MACAkF,EAAA7iB,KAAAi5I,eAAAp2H,eACAgxH,EAAA1jI,IAAA,IAAAvL,EAAAgZ,KAAA,CACA7N,MAAA,CACAC,EAAAynG,EAAA,UAAAs7B,EAAAyH,EAAA,KAAAA,EAAA,KACAvqI,EAAAuqI,EAAA,KACA11H,kBAAA,SACAD,UAAA4yF,EAAAs7B,EAAA,SACA3pH,OACAmgC,SAAA1mC,EAAA2G,UACArI,SAAA0B,EAAAosD,mBAGA/nE,EAAAiJ,IAAA0jI,KAOA24F,aAAA,WACA,IAAAvzF,EAAAj5I,KAAAi5I,eACAyzF,EAAA7oO,EAAAhH,IAAAo8I,EAAAwzD,eAAA,SAAA/3H,EAAA3rE,GACA,OACA2rE,QACAm4J,sBAAA9jO,KAGA0jO,EAAAxzF,EAAA94I,IAAA,QAEAq4B,EAAAygH,EAAA94I,IAAA,UACAkiE,EAAA42E,EAAA94I,IAAA,WASA,OAPA,eAAAq4B,EAAA6pC,MACAqqK,EAAA75J,UAEA45J,IACAA,IAAA9vO,QAAAk2E,WAGA,CACA65J,gBACAD,aAOAK,kBAAA,SAAA5lO,EAAA4kO,EAAAmB,GACA/lO,EAAAiJ,IAAAuvC,EAAA1/C,KAAAs8I,oBAAAwvF,EAAA,UAAAmB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAjtO,KAAAs8I,oBAAAwvF,EAAA,YAMAa,aAAA,SAAAj4J,GACA,IAAAukE,EAAAj5I,KAAAi5I,eACAjtI,EAAAitI,EAAAjtI,OACAmlG,EAAAttG,EAAA5G,MAAA+O,EAAAmlG,UACA+7H,EAAAj0F,EAAA0yF,kBAAAj3J,GAEA,WAAA1oE,EAAAsmI,cACAnhC,EAAA+7H,IAAA,EACArpO,EAAAjF,KAAAuyG,EAAA,SAAA73C,EAAAx7D,GACAqzG,EAAArzG,OAAAovO,KAGA/7H,EAAA+7H,IAAA/7H,EAAA+7H,GAGAltO,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,kBACA3B,KAAAoC,KAAA0S,IACAk2N,YAAA5oO,KAAAi5I,eAAAhyI,GACAkqG,gBAKAh5E,EAAA93B,QAAA+gC,mBC3NA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAsBR4xB,EAAAxb,qBAAA,SAAA/B,GAEAA,EAAAihJ,UAAAjhJ,EAAAihJ,WAAA,sBC5BA,IAqBA53H,EArBkB19B,EAAQ,KAqB1B/C,OAAA,CACApB,KAAA,YACA+mC,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA6e,OAAA,MACAC,WAAA,GAGApB,QAAA,CACAlsB,QAAA,QAEA6tB,MAAA,CACAZ,MAAA,EACApX,SAAA,UAEA6X,UAAA,CACAy6G,YAAA,GAEAphH,SAAA,CACA8G,MAAA,CACAZ,MAAA,OAMAmB,EAAA93B,QAAA+gC,mBChDA,IAAAv9B,EAAaH,EAAQ,KAErBg9E,EAAiBh9E,EAAQ,KAEzBy5B,EAAiBz5B,EAAQ,KAEzB+tC,EAAW/tC,EAAQ,KAEnBypO,EAAmBzpO,EAAQ,KAuB3B,SAAA0pO,EAAAh0E,EAAAroJ,EAAA5I,GACA,IAAAyC,EAAAmG,EAAAL,iBACA0oJ,EAAAx6J,KAAA,SAAAqvB,GACA,IACA5C,EADA4gD,EAAAmtF,EAAAt9G,aAAA7tB,GAEAo/M,EAAAlwM,EAAA5Q,aAAA0/C,EAAA9rE,IAAA,KAAAgI,EAAAuE,YACA4gO,EAAAnwM,EAAA5Q,aAAA0/C,EAAA9rE,IAAA,KAAAgI,EAAAwE,aAEA,GAAAygB,MAAAigN,IAAAjgN,MAAAkgN,IAGA,GAAAv8N,EAAA8wH,kBAEAx2G,EAAAta,EAAA8wH,kBAAAu3B,EAAAjhH,UAAAihH,EAAAj9I,WAAA8R,SACO,GAAArjB,EAAA,CACP,IAAAoF,EAAAopJ,EAAAj5J,IAAAyK,EAAAuR,WAAA,GAAA8R,GACAhe,EAAAmpJ,EAAAj5J,IAAAyK,EAAAuR,WAAA,GAAA8R,GACA5C,EAAAzgB,EAAAk4E,YAAA,CAAA9yE,EAAAC,UARAob,EAAA,CAAAgiN,EAAAC,GAYAlgN,MAAAigN,KACAhiN,EAAA,GAAAgiN,GAGAjgN,MAAAkgN,KACAjiN,EAAA,GAAAiiN,GAGAl0E,EAAA98G,cAAAruB,EAAA5C,KAIA,IAAA+V,EAtDiB19B,EAAQ,KAsDzB/C,OAAA,CACApB,KAAA,YAUA4S,gBAAA,SAAAo7N,EAAA9iO,EAAAtC,GACAsC,EAAA+H,WAAA,SAAAzB,GACA,IAAAy8N,EAAAz8N,EAAAw8N,eAEAC,IACAJ,EAAAI,EAAAx8N,UAAAD,EAAA5I,GACAnI,KAAAioH,eAAA9nH,IAAA4Q,EAAA9J,IAAA+L,aAAAw6N,KAEKxtO,OAEL4L,aAAA,SAAAmF,EAAAy8N,EAAA/iO,EAAAtC,GACA,IAAAyC,EAAAmG,EAAAL,iBACA8hB,EAAAzhB,EAAA9J,GACAm8F,EAAAryF,EAAAC,UACAy8N,EAAAztO,KAAAioH,eACAi/C,EAAAumE,EAAAttO,IAAAqyB,IAAAi7M,EAAAvtO,IAAAsyB,EAAA,IAAAkuD,GACA04E,EAyCA,SAAAxuJ,EAAAmG,EAAAy8N,GACA,IAAAE,EAGAA,EADA9iO,EACA/G,EAAAhH,IAAA+N,KAAAuR,WAAA,SAAA4wB,GACA,IAAA+nG,EAAA/jI,EAAAC,UAAA66B,iBAAA96B,EAAAC,UAAAs6B,aAAAyB,KAAA,GAEA,OAAAlpC,EAAArF,SAAA,CACA+B,KAAAwsC,GACO+nG,KAGP,EACAv0I,KAAA,QACAhB,KAAA,UAIA,IAAA65J,EAAA,IAAA3nH,EAAAi8L,EAAAF,GACAl4C,EAAAzxL,EAAAhH,IAAA2wO,EAAArtO,IAAA,QAAA0D,EAAAjC,MAAAurO,EAAAtlH,cAAA92G,IAEAnG,IACA0qL,EAAAzxL,EAAApH,OAAA64L,EAAAzxL,EAAAjC,MAAAurO,EAAAplH,WAAAn9G,KAMA,OAHAwuJ,EAAA/jH,SAAAigJ,EAAA,KAAA1qL,EAAAuiO,EAAA53L,eAAA,SAAA3lC,GACA,OAAAA,EAAAtQ,QAEA85J,EArEA0G,CAAAl1J,EAAAmG,EAAAy8N,GAEAA,EAAA3iM,QAAAuuH,GACAg0E,EAAAI,EAAAx8N,UAAAD,EAAA5I,GACAixJ,EAAAx6J,KAAA,SAAAqvB,GACA,IAAAg+C,EAAAmtF,EAAAt9G,aAAA7tB,GACAoJ,EAAA40C,EAAA7oD,WAAA,cAEA,oBAAAiU,IAEAA,IAAAm2M,EAAAhiM,YAAAvd,GAAAu/M,EAAA50N,cAAAqV,KAGAmrI,EAAA38G,cAAAxuB,EAAA,CACAoJ,aACAlX,MAAA8rD,EAAA9rE,IAAA,oBAAAijG,EAAAxyF,UAAA,SACAwmB,OAAA60C,EAAA7oD,WAAA,cAIA8jJ,EAAAxlF,WAAA03E,GACAp5J,KAAAkH,MAAAiJ,IAAA+2J,EAAAhgK,OAGAkyJ,EAAAt8G,kBAAA,SAAAr0C,GACAA,EAAAgO,SAAA,SAAAuL,GACAA,EAAArJ,UAAA60N,MAGAtmE,EAAAh/C,QAAA,EACAg/C,EAAAhgK,MAAA6D,OAAAyiO,EAAArtO,IAAA,WAAA4Q,EAAA5Q,IAAA,aA0CAg4B,EAAA93B,QAAA+gC,mBCnKA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAqBR4xB,EAAAxb,qBAAA,SAAA/B,GAEAA,EAAAkhJ,SAAAlhJ,EAAAkhJ,UAAA,sBC3BA,IAqBA73H,EArBkB19B,EAAQ,KAqB1B/C,OAAA,CACApB,KAAA,WACA+mC,cAAA,CACA9tB,OAAA,EACAD,EAAA,EACA6e,OAAA,mBACAC,WAAA,OAEAxK,UAAA,EACAoJ,QAAA,CACAlsB,QAAA,QAEA6tB,MAAA,CACAZ,MAAA,EACApX,SAAA,OAEAuW,UAAA,CACA52B,KAAA,UAEAuxB,SAAA,CACA8G,MAAA,CACAZ,MAAA,GAEAb,UAAA,CACA1uB,MAAA,IAGA8e,gBAAA,YAIA4R,EAAA93B,QAAA+gC,mBCpDA,IAAAv9B,EAAaH,EAAQ,KAErB+tC,EAAW/tC,EAAQ,KAEnBy5B,EAAiBz5B,EAAQ,KAEzBypO,EAAmBzpO,EAAQ,KAE3B6wG,EAAe7wG,EAAQ,KAEvBiqO,EAAiBjqO,EAAQ,KAqBzBkqO,EAAA,SAAA78N,EAAAnG,EAAAijO,EAAAj+N,GACA,IAAApO,EAAAuP,EAAAC,UAEA+1G,EAAAn3G,EAAArQ,KAEA,IAAAsE,EAAAvF,QAAAsR,KAAA,QAAAm3G,GAAA,QAAAA,GAAA,YAAAA,GAAA,WAAAA,GAIA,MAAAn3G,EAAAqzE,OAAA,MAAArzE,EAAAszE,OAAA,CACA,IACAwkC,EACApoH,EAEA,SAAAsQ,EAAAszE,OAAA,MAAAtzE,EAAAqzE,MACAykC,EAAA,MAAA93G,EAAAszE,MAAA,QACAt4E,EAAAqyF,QAAAyqB,GACApoH,EAAAuE,EAAA5B,SAAA2N,EAAAszE,MAAAtzE,EAAAqzE,WACK,CACL,IAAAsZ,EAAA4wI,EAAA9yI,YAAAzqF,EAAApO,EAAAoJ,EAAAmG,GACA22G,EAAAnrB,EAAAmrB,aACAnrB,EAAAzlE,UACAx3B,EAAA6tO,EAAA7lH,aAAA9lH,EAAAkmH,EAAAX,GAGA,IAAAU,EAAA,MAAAC,EAAA,IACA2+C,EAAA,EAAA5+C,EACAqmH,EAAAjqO,EAAA5G,MAAA2S,GACAm+N,EAAA,GACAD,EAAAvuO,KAAA,KACAuuO,EAAArrK,MAAA,GACAsrK,EAAAtrK,MAAA,GACAqrK,EAAArrK,MAAA4jG,IAAAp3J,IACA8+N,EAAAtrK,MAAA4jG,GAAAp3J,IACA,IAAA4d,EAAAghN,EAAA1tO,IAAA,aAEA0sB,GAAA,qBAAAvtB,IACAA,KAAAytB,QAAApe,KAAAC,IAAAie,EAAA,MAGAihN,EAAArrK,MAAAglD,GAAAsmH,EAAAtrK,MAAAglD,GAAAnoH,EACAsQ,EAAA,CAAAk+N,EAAAC,EAAA,CAEAxuO,KAAAwnH,EACAU,WAAA73G,EAAA63G,WAEAnoH,UAUA,OANAsQ,EAAA,CAAAu9N,EAAAtlH,cAAA92G,EAAAnB,EAAA,IAAAu9N,EAAAtlH,cAAA92G,EAAAnB,EAAA,IAAA/L,EAAAlD,OAAA,GAA8HiP,EAAA,MAE9H,GAAArQ,KAAAqQ,EAAA,GAAArQ,MAAA,GAEAsE,EAAA7F,MAAA4R,EAAA,GAAAA,EAAA,IACA/L,EAAA7F,MAAA4R,EAAA,GAAAA,EAAA,IACAA,GAGA,SAAAo+N,EAAAtrO,GACA,OAAA0qB,MAAA1qB,KAAAorB,SAAAprB,GAIA,SAAAurO,EAAAz6L,EAAA06L,EAAAC,EAAAvjO,GACA,IAAAwjO,EAAA,EAAA56L,EACA+oB,EAAA3xD,EAAAuR,WAAAq3B,GACA,OAAAw6L,EAAAE,EAAAE,KAAAJ,EAAAG,EAAAC,KAAAF,EAAA16L,KAAA26L,EAAA36L,IAAA5oC,EAAAqyF,QAAA1gC,GAAAmG,YAAAwrK,EAAA16L,IAGA,SAAA66L,EAAAzjO,EAAAgF,GACA,mBAAAhF,EAAArL,KAAA,CACA,IAAA2uO,EAAAt+N,EAAA,GAAA6yD,MACA0rK,EAAAv+N,EAAA,GAAA6yD,MAOA,GAAAyrK,GAAAC,IAAAF,EAAA,EAAAC,EAAAC,EAAAvjO,IAAAqjO,EAAA,EAAAC,EAAAC,EAAAvjO,IACA,SAIA,OAAAuiO,EAAAplH,WAAAn9G,EAAAgF,EAAA,KAAAu9N,EAAAplH,WAAAn9G,EAAAgF,EAAA,IAGA,SAAA0+N,EAAA9sO,EAAAysB,EAAAsgN,EAAAx9N,EAAA5I,GACA,IAEAkjB,EAFAzgB,EAAAmG,EAAAL,iBACAu7D,EAAAzqE,EAAAs6C,aAAA7tB,GAEAo/M,EAAAlwM,EAAA5Q,aAAA0/C,EAAA9rE,IAAA,KAAAgI,EAAAuE,YACA4gO,EAAAnwM,EAAA5Q,aAAA0/C,EAAA9rE,IAAA,KAAAgI,EAAAwE,aAEA,GAAAygB,MAAAigN,IAAAjgN,MAAAkgN,GAEG,CAEH,GAAAv8N,EAAA8wH,kBAEAx2G,EAAAta,EAAA8wH,kBAAArgI,EAAA22C,UAAA32C,EAAA2a,WAAA8R,QACK,CACL,IAAAmnB,EAAAxqC,EAAAuR,WACAnM,EAAAxO,EAAArB,IAAAi1C,EAAA,GAAAnnB,GACAhe,EAAAzO,EAAArB,IAAAi1C,EAAA,GAAAnnB,GACA5C,EAAAzgB,EAAAk4E,YAAA,CAAA9yE,EAAAC,IAYA,mBAAArF,EAAArL,KAAA,CACA,IAAA0jF,EAAAr4E,EAAAqyF,QAAA,KACA/Z,EAAAt4E,EAAAqyF,QAAA,KACA7nD,EAAAxqC,EAAAuR,WAEA6xN,EAAAxsO,EAAArB,IAAAi1C,EAAA,GAAAnnB,IACA5C,EAAA,GAAA43D,EAAA8T,cAAA9T,EAAA7hC,YAAAmtL,EAAA,MACOP,EAAAxsO,EAAArB,IAAAi1C,EAAA,GAAAnnB,MACP5C,EAAA,GAAA63D,EAAA6T,cAAA7T,EAAA9hC,YAAAmtL,EAAA,OAKAnhN,MAAAigN,KACAhiN,EAAA,GAAAgiN,GAGAjgN,MAAAkgN,KACAjiN,EAAA,GAAAiiN,QAxCAjiN,EAAA,CAAAgiN,EAAAC,GA4CA9rO,EAAA86C,cAAAruB,EAAA5C,GAGA,IAAA+V,EAAAusM,EAAAhtO,OAAA,CACApB,KAAA,WAwBA4S,gBAAA,SAAAq8N,EAAA/jO,EAAAtC,GACAsC,EAAA+H,WAAA,SAAAzB,GACA,IAAA88N,EAAA98N,EAAAy9N,cAEA,GAAAX,EAAA,CACA,IAAAx0E,EAAAw0E,EAAA78N,UACAy9N,EAAAZ,EAAApmF,OACAinF,EAAAb,EAAAc,KAEAF,EAAA7vO,KAAA,SAAAqvB,GACAqgN,EAAAG,EAAAxgN,GAAA,EAAAld,EAAA5I,GACAmmO,EAAAI,EAAAzgN,GAAA,EAAAld,EAAA5I,KAGAkxJ,EAAAz6J,KAAA,SAAAqvB,GACAorI,EAAA/8G,cAAAruB,EAAA,CAAAwgN,EAAApyL,cAAApuB,GAAAygN,EAAAryL,cAAApuB,OAEAjuB,KAAAioH,eAAA9nH,IAAA4Q,EAAA9J,IAAA+L,iBAEKhT,OAEL4L,aAAA,SAAAmF,EAAA88N,EAAApjO,EAAAtC,GACA,IAAAyC,EAAAmG,EAAAL,iBACA8hB,EAAAzhB,EAAA9J,GACAm8F,EAAAryF,EAAAC,UACA49N,EAAA5uO,KAAAioH,eACAjT,EAAA45H,EAAAzuO,IAAAqyB,IAAAo8M,EAAA1uO,IAAAsyB,EAAA,IAAA+hF,GACAv0G,KAAAkH,MAAAiJ,IAAA6kG,EAAA9tG,OACA,IAAAmyJ,EAqEA,SAAAzuJ,EAAAmG,EAAA88N,GACA,IAAAH,EAGAA,EADA9iO,EACA/G,EAAAhH,IAAA+N,KAAAuR,WAAA,SAAA4wB,GACA,IAAA+nG,EAAA/jI,EAAAC,UAAA66B,iBAAA96B,EAAAC,UAAAs6B,aAAAyB,KAAA,GAEA,OAAAlpC,EAAArF,SAAA,CACA+B,KAAAwsC,GACO+nG,KAGP,EACAv0I,KAAA,QACAhB,KAAA,UAIA,IAAAkvO,EAAA,IAAAh9L,EAAAi8L,EAAAG,GACAa,EAAA,IAAAj9L,EAAAi8L,EAAAG,GAEAn5H,EAAA,IAAAjjE,EAAA,GAAAo8L,GACAgB,EAAAhrO,EAAAhH,IAAAgxO,EAAA1tO,IAAA,QAAA0D,EAAAjC,MAAAgsO,EAAA78N,EAAAnG,EAAAijO,IAEAjjO,IACAikO,EAAAhrO,EAAApH,OAAAoyO,EAAAhrO,EAAAjC,MAAAysO,EAAAzjO,KAGA,IAAA2qC,EAAA3qC,EAAAuiO,EAAA53L,eAAA,SAAA3lC,GACA,OAAAA,EAAAtQ,OAYA,OAVAmvO,EAAAp5L,SAAAxxC,EAAAhH,IAAAgyO,EAAA,SAAAj/N,GACA,OAAAA,EAAA,KACG,KAAA2lC,GACHm5L,EAAAr5L,SAAAxxC,EAAAhH,IAAAgyO,EAAA,SAAAj/N,GACA,OAAAA,EAAA,KACG,KAAA2lC,GACHm/D,EAAAr/D,SAAAxxC,EAAAhH,IAAAgyO,EAAA,SAAAj/N,GACA,OAAAA,EAAA,MAEA8kG,EAAA5/D,eAAA,EACA,CACAl3C,KAAA6wO,EACA72F,GAAA82F,EACAp3M,KAAAo9E,GAjHAorD,CAAAl1J,EAAAmG,EAAA88N,GACAY,EAAAp1E,EAAAz7J,KACA8wO,EAAAr1E,EAAAzhB,GACAljC,EAAA2kD,EAAA/hI,KACAu2M,EAAApmF,OAAAgnF,EACAZ,EAAAc,KAAAD,EAEAb,EAAAhjM,QAAA6pE,GACA,IAAAx1D,EAAA2uL,EAAA1tO,IAAA,UACAk3B,EAAAw2M,EAAA1tO,IAAA,cAsCA,SAAA2uO,EAAAttO,EAAAysB,EAAAsgN,GACA,IAAAtiK,EAAAzqE,EAAAs6C,aAAA7tB,GACAqgN,EAAA9sO,EAAAysB,EAAAsgN,EAAAx9N,EAAA5I,GACA3G,EAAAi7C,cAAAxuB,EAAA,CACAoJ,WAAA40C,EAAA9rE,IAAA,eAAAk3B,EAAAk3M,EAAA,KACAn3M,OAAA60C,EAAA9rE,IAAA,cAAA++C,EAAAqvL,EAAA,KACApuN,MAAA8rD,EAAA9rE,IAAA,oBAAAijG,EAAAxyF,UAAA,WA1CA/M,EAAAvF,QAAA4gD,KACAA,EAAA,CAAAA,MAGA,kBAAA7nB,IACAA,EAAA,CAAAA,MAIAgiI,EAAAz7J,KAAAgB,KAAA,SAAAqvB,GACA6gN,EAAAL,EAAAxgN,GAAA,GACA6gN,EAAAJ,EAAAzgN,GAAA,KAGAymF,EAAA91G,KAAA,SAAAqvB,GACA,IAAA8gN,EAAAr6H,EAAA54D,aAAA7tB,GAAA9tB,IAAA,mBACAu0G,EAAAj4D,cAAAxuB,EAAA,CACA9N,MAAA4uN,GAAAN,EAAAr9N,cAAA6c,EAAA,WAEAymF,EAAAp4D,cAAAruB,EAAA,CAAAwgN,EAAApyL,cAAApuB,GAAAygN,EAAAryL,cAAApuB,KACAymF,EAAAj4D,cAAAxuB,EAAA,CACA+gN,eAAAP,EAAAr9N,cAAA6c,EAAA,cACA0lK,WAAA86C,EAAAr9N,cAAA6c,EAAA,UACAghN,aAAAP,EAAAt9N,cAAA6c,EAAA,cACA2lK,SAAA86C,EAAAt9N,cAAA6c,EAAA,cAGA+mF,EAAAtzB,WAAAgzB,GAGA2kD,EAAA/hI,KAAAwlB,kBAAA,SAAAr0C,EAAAwlB,GACAxlB,EAAAgO,SAAA,SAAAuL,GACAA,EAAArJ,UAAAk1N,MAcA74H,EAAAkT,QAAA,EACAlT,EAAA9tG,MAAA6D,OAAA8iO,EAAA1tO,IAAA,WAAA4Q,EAAA5Q,IAAA,aA2DAg4B,EAAA93B,QAAA+gC,mBCxVA,IAAA9L,EAAc5xB,EAAQ,KAEtBA,EAAQ,KAERA,EAAQ,KAqBR4xB,EAAAxb,qBAAA,SAAA/B,GAEAA,EAAAmhJ,SAAAnhJ,EAAAmhJ,UAAA,sBC3BA,IAqBA93H,EArBkB19B,EAAQ,KAqB1B/C,OAAA,CACApB,KAAA,WACA+mC,cAAA,CACA9tB,OAAA,EAEAD,EAAA,EACA0d,QAAA,CACAlsB,QAAA,QAGAJ,WAAA,EACAiuB,MAAA,CACAZ,MAAA,EACApX,SAAA,OAEA6X,UAAA,CAIAy6G,YAAA,GAEAphH,SAAA,CACA8G,MAAA,CACAZ,MAAA,EACApX,SAAA,WAMAuY,EAAA93B,QAAA+gC,mBCnDA,IAAAv9B,EAAaH,EAAQ,KAErBwrO,EAAgBxrO,EAAQ,KAExB+tC,EAAW/tC,EAAQ,KAEnBy5B,EAAiBz5B,EAAQ,KAEzBkB,EAAclB,EAAQ,KAEtBypO,EAAmBzpO,EAAQ,KAE3BiqO,EAAiBjqO,EAAQ,KAsBzByrO,EAAA,SAAAp+N,EAAAnG,EAAAwkO,EAAAx/N,GACA,IAAAowB,EAAAmtM,EAAAtlH,cAAA92G,EAAAnB,EAAA,IACAqwB,EAAAktM,EAAAtlH,cAAA92G,EAAAnB,EAAA,IACA3N,EAAA4B,EAAA5B,SAEAotO,EAAArvM,EAAAyiC,MACA6sK,EAAArvM,EAAAwiC,MACA4sK,EAAA,GAAAptO,EAAAotO,EAAA,IAAApgO,KACAogO,EAAA,GAAAptO,EAAAotO,EAAA,IAAApgO,KACAqgO,EAAA,GAAArtO,EAAAqtO,EAAA,GAAArgO,KACAqgO,EAAA,GAAArtO,EAAAqtO,EAAA,GAAArgO,KAEA,IAAA9R,EAAA0G,EAAApD,SAAA,IAAkCu/B,EAAAC,IAMlC,OALA9iC,EAAAslE,MAAA,CAAAziC,EAAAyiC,MAAAxiC,EAAAwiC,OACAtlE,EAAA0jE,GAAA7gC,EAAAhwB,EACA7S,EAAA2jE,GAAA9gC,EAAA/vB,EACA9S,EAAAsqB,GAAAwY,EAAAjwB,EACA7S,EAAAwqB,GAAAsY,EAAAhwB,EACA9S,GAGA,SAAA6wO,EAAAtrO,GACA,OAAA0qB,MAAA1qB,KAAAorB,SAAAprB,GAIA,SAAAurO,EAAAz6L,EAAA06L,EAAAC,EAAAvjO,GACA,IAAAwjO,EAAA,EAAA56L,EACA,OAAAw6L,EAAAE,EAAAE,KAAAJ,EAAAG,EAAAC,IAGA,SAAAmB,EAAA3kO,EAAAgF,GACA,IAAAs+N,EAAAt+N,EAAA6yD,MAAA,GACA0rK,EAAAv+N,EAAA6yD,MAAA,GAEA,wBAAA73D,EAAArL,OAOA2uO,IAAAC,IAAAF,EAAA,EAAAC,EAAAC,KAAAF,EAAA,EAAAC,EAAAC,MAKAhB,EAAAplH,WAAAn9G,EAAA,CACA63D,MAAAyrK,EACAl+N,EAAAJ,EAAAixD,GACA5wD,EAAAL,EAAAkxD,MACGqsK,EAAAplH,WAAAn9G,EAAA,CACH63D,MAAA0rK,EACAn+N,EAAAJ,EAAA6X,GACAxX,EAAAL,EAAA+X,MAKA,SAAA6nN,EAAAhuO,EAAAysB,EAAAmnB,EAAArkC,EAAA5I,GACA,IAEAkjB,EAFAzgB,EAAAmG,EAAAL,iBACAu7D,EAAAzqE,EAAAs6C,aAAA7tB,GAEAo/M,EAAAlwM,EAAA5Q,aAAA0/C,EAAA9rE,IAAAi1C,EAAA,IAAAjtC,EAAAuE,YACA4gO,EAAAnwM,EAAA5Q,aAAA0/C,EAAA9rE,IAAAi1C,EAAA,IAAAjtC,EAAAwE,aAEA,GAAAygB,MAAAigN,IAAAjgN,MAAAkgN,GAEG,CAEH,GAAAv8N,EAAA8wH,kBAEAx2G,EAAAta,EAAA8wH,kBAAArgI,EAAA22C,UAAA/C,EAAAnnB,QACK,CACL,IAEA4mF,EAAA,CAFA7kG,EAAAxO,EAAArB,IAAAi1C,EAAA,GAAAnnB,GACAhe,EAAAzO,EAAArB,IAAAi1C,EAAA,GAAAnnB,IAEArjB,EAAAk3H,WAAAl3H,EAAAk3H,UAAAjtB,KACAxpF,EAAAzgB,EAAAk4E,YAAA+xB,GAAA,GAGA,mBAAAjqG,EAAArL,KAAA,CACA,IAAA0jF,EAAAr4E,EAAAqyF,QAAA,KACA/Z,EAAAt4E,EAAAqyF,QAAA,KACAjtF,EAAAxO,EAAArB,IAAAi1C,EAAA,GAAAnnB,GACAhe,EAAAzO,EAAArB,IAAAi1C,EAAA,GAAAnnB,GAEA+/M,EAAAh+N,GACAqb,EAAA,GAAA43D,EAAA8T,cAAA9T,EAAA7hC,YAAA,OAAAhM,EAAA,SACO44L,EAAA/9N,KACPob,EAAA,GAAA63D,EAAA6T,cAAA7T,EAAA9hC,YAAA,OAAAhM,EAAA,UAKAhoB,MAAAigN,KACAhiN,EAAA,GAAAgiN,GAGAjgN,MAAAkgN,KACAjiN,EAAA,GAAAiiN,QAjCAjiN,EAAA,CAAAgiN,EAAAC,GAqCA,OAAAjiN,EAGA,IAAAokN,EAAA,kDACA9B,EAAAhtO,OAAA,CACApB,KAAA,WAkBA4S,gBAAA,SAAAu9N,EAAAjlO,EAAAtC,GACAsC,EAAA+H,WAAA,SAAAzB,GACA,IAAAq+N,EAAAr+N,EAAA2+N,cAEA,GAAAN,EAAA,CACA,IAAAO,EAAAP,EAAAp+N,UACA2+N,EAAA/wO,KAAA,SAAAqvB,GACA,IAAA7C,EAAAvnB,EAAAhH,IAAA4yO,EAAA,SAAAzjM,GACA,OAAAwjM,EAAAG,EAAA1hN,EAAA+d,EAAAj7B,EAAA5I,KAGAwnO,EAAArzL,cAAAruB,EAAA7C,GACAukN,EAAA9yL,iBAAA5uB,GACA4W,SAAA,SAAAzZ,OAGKprB,OAEL4L,aAAA,SAAAmF,EAAAq+N,EAAA3kO,EAAAtC,GACA,IAAAyC,EAAAmG,EAAAL,iBACA8hB,EAAAzhB,EAAA9J,GACAm8F,EAAAryF,EAAAC,UACA4+N,EAAA5vO,KAAAioH,eACA4nH,EAAAD,EAAAzvO,IAAAqyB,IAAAo9M,EAAA1vO,IAAAsyB,EAAA,CACAtrB,MAAA,IAAAtC,EAAA+Y,QAEA3d,KAAAkH,MAAAiJ,IAAA0/N,EAAA3oO,OACA2oO,EAAA3nH,QAAA,EACA,IAAAynH,EAoEA,SAAA/kO,EAAAmG,EAAAq+N,GACA,IAAA1B,EACAiC,EAGA/kO,GACA8iO,EAAA7pO,EAAAhH,IAAA+N,KAAAuR,WAAA,SAAA4wB,GACA,IAAAvrC,EAAAuP,EAAAC,UACA8jI,EAAAtzI,EAAAqqC,iBAAArqC,EAAA8pC,aAAAyB,KAAA,GAEA,OAAAlpC,EAAArF,SAAA,CACA+B,KAAAwsC,GACO+nG,KAEP66F,EAAA,IAAAl+L,EAAA5tC,EAAAhH,IAXA,sBAWA,SAAAmvC,EAAA/d,GACA,OACA1tB,KAAAyrC,EACAzsC,KAAAmuO,EAAAz/M,EAAA,GAAA1uB,QAEK6vO,IAMLO,EAAA,IAAAl+L,EAJAi8L,EAAA,EACAntO,KAAA,QACAhB,KAAA,UAEA6vO,GAGA,IAAAP,EAAAhrO,EAAAhH,IAAAuyO,EAAAjvO,IAAA,QAAA0D,EAAAjC,MAAAutO,EAAAp+N,EAAAnG,EAAAwkO,IAEAxkO,IACAikO,EAAAhrO,EAAApH,OAAAoyO,EAAAhrO,EAAAjC,MAAA2tO,EAAA3kO,KAGA,IAAA2qC,EAAA3qC,EAAA,SAAAgF,EAAA2sD,EAAAprD,EAAAqiC,GACA,OAAA5jC,EAAA6yD,MAAA9zD,KAAAod,MAAAynB,EAAA,IAAAA,EAAA,IACG,SAAA5jC,GACH,OAAAA,EAAAtQ,OAIA,OAFAqwO,EAAAt6L,SAAAw5L,EAAA,KAAAt5L,GACAo6L,EAAA76L,eAAA,EACA66L,EA7GA7vE,CAAAl1J,EAAAmG,EAAAq+N,GAEAA,EAAAvkM,QAAA8kM,GAEAA,EAAA/wO,KAAA,SAAAqvB,GAEA0hN,EAAArzL,cAAAruB,EAAApqB,EAAAhH,IAAA4yO,EAAA,SAAAzjM,GACA,OAAAwjM,EAAAG,EAAA1hN,EAAA+d,EAAAj7B,EAAA5I,MAGAwnO,EAAAlzL,cAAAxuB,EAAA,CACA9N,MAAAijF,EAAAxyF,UAAA,aAGA++N,EAAAh2L,KAAAk2L,EAAAC,QAAA3/N,IAAA,SAAA8d,GACA,IAAA25C,EAAA,IAAAhjE,EAAAoZ,QAAA,CACAwJ,MAAA,CACA4D,OAAAukN,EAAAtzL,cAAApuB,MAGA0hN,EAAA/yL,iBAAA3uB,EAAA25C,GACAioK,EAAA3oO,MAAAiJ,IAAAy3D,KACK18D,OAAA,SAAA42E,EAAAE,GACL,IAAApa,EAAAioK,EAAAC,OAAAjzL,iBAAAmlC,GAEAp9E,EAAAgiB,YAAAghD,EAAA,CACApgD,MAAA,CACA4D,OAAAukN,EAAAtzL,cAAAylC,KAEOstJ,EAAAttJ,GACP+tJ,EAAA3oO,MAAAiJ,IAAAy3D,GACA+nK,EAAA/yL,iBAAAklC,EAAAla,KACK7xD,OAAA,SAAAkY,GACL,IAAA25C,EAAAioK,EAAAC,OAAAjzL,iBAAA5uB,GAEA4hN,EAAA3oO,MAAA6O,OAAA6xD,KACKwD,UACLukK,EAAA7yL,kBAAA,SAAA8qB,EAAA35C,GACA,IAAAg+C,EAAA0jK,EAAA7zL,aAAA7tB,GACA3E,EAAA2iD,EAAAz/D,SAAA,SACA2kK,EAAAllG,EAAAz/D,SAAA,kBACA2T,EAAAwvN,EAAAv+N,cAAA6c,EAAA,SACA25C,EAAAkX,SAAAj7E,EAAArF,SAAAytE,EAAAz/D,SAAA,aAAA20E,eAAA,CACA3gE,KAAA0uN,EAAAj5K,YAAA91C,EAAA,IACAI,OAAAJ,KAEAynD,EAAAnnD,WAAAwrD,EAAAz/D,SAAA,sBAAA20E,eACAv8E,EAAAwjB,cAAAw/C,EAAA73D,MAAA63D,EAAAnnD,WAAA6I,EAAA6nJ,EAAA,CACAxoJ,aAAAymN,EACAxmN,eAAAqF,EACAhF,YAAA0mN,EAAAnjM,QAAAve,IAAA,GACA/K,YAAA,EACAxB,UAAAvB,IAEAvb,EAAAsjB,cAAA0/C,EAAA,IACAA,EAAAjvD,UAAAy2N,IAEAS,EAAAC,OAAAH,EACAE,EAAA3oO,MAAA6D,OAAAqkO,EAAAjvO,IAAA,WAAA4Q,EAAA5Q,IAAA,8BCvPA,IAAAm1B,EAAc5xB,EAAQ,KAEtBsgM,EAAmBtgM,EAAQ,KAE3BA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAyBR4xB,EAAAxb,qBAAAkqL,oBCnCA,IAAAngM,EAAaH,EAAQ,KA8ErB,SAAAqsO,EAAAh4N,GACA,IAAA0f,EAAA1f,EAAA0f,YAAA1f,EAAA0f,UAAA,IACAu4M,EAAAv4M,EAAA3G,WAAA2G,EAAA3G,SAAA,IAEA8G,EAAA7f,EAAA6f,OAAA7f,EAAA6f,OAAA,GACAq4M,EAAAr4M,EAAA7B,SAAA6B,EAAA7B,OAAA,IACAm6M,EAAA,CACAn6M,OAAA,EACAjF,SAAA,GAEAjtB,EAAAjF,KAAAg5B,EAAA,SAAAt4B,EAAAiB,GACA2vO,EAAA3vO,IAAAowB,EAAAs/M,EAAA1vO,KACA0vO,EAAA1vO,GAAAjB,KAIA0wO,EAAAp4M,QAAAjH,EAAAiH,EAAA,cACAA,EAAA9G,SAAAk/M,EAAAp4M,aACAo4M,EAAAp4M,OAIA,SAAAjH,EAAA9xB,EAAA8nB,GACA,OAAA9nB,EAAAd,eAAA4oB,GAGAwR,EAAA93B,QAnFA,SAAA2L,GACA,IAAA0qJ,EAAA1qJ,KAAAkrB,SAEArzB,EAAAvF,QAAAo4J,KACAA,IAAA,CAAAA,GAAA,IAGA7yJ,EAAAjF,KAAA83J,EAAA,SAAA3+I,GACAA,GAQA,SAAAA,GACA,IAAAxY,EAAAwY,EAAAxY,KACA4wO,EAAA,CACA1/L,OAAA,QACAC,KAAA,QAUA,GAPAy/L,EAAA5wO,KACAwY,EAAAgsC,SAAAosL,EAAA5wO,UACAwY,EAAAxY,MAGAwwO,EAAAh4N,GAEA4Y,EAAA5Y,EAAA,oBACA,IAAAof,EAAApf,EAAAof,eAAApf,EAAAof,aAAA,IAEAxG,EAAAwG,EAAA,cACAA,EAAAvX,SAAA7H,EAAAq4N,iBAGA,SAAAj5M,EAAAvX,UAAA+Q,EAAAwG,EAAA,UACAA,EAAAH,MAAA,SACAG,EAAAvX,iBAGA7H,EAAAq4N,gBAGAvsO,EAAAjF,KAAAmZ,EAAAvW,MAAA,YAAA0vB,GACArtB,EAAA1F,SAAA+yB,KAAArtB,EAAAvF,QAAA4yB,MACAP,EAAAO,EAAA,UAAAP,EAAAO,EAAA,UAEAA,EAAA5xB,MAAA4xB,EAAA3wB,MAGAwvO,EAAA7+M,MAxCAm/M,CAAAt4N,uBCjCgBrU,EAAQ,KAqBxBsrF,yBAAA,sBAEA,kCCvBA,IAAA15D,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAqBrB4xB,EAAAlb,eAAA,CACA7a,KAAA,iBACAwV,MAAA,kBACA7J,OAAA,oBACC,SAAAuG,EAAAhH,GACD,IAAAysJ,EAAAzsJ,EAAA5B,aAAA,YAYA,OAVAquJ,GAAA,MAAAzlJ,EAAA6+N,eACAp5E,EAAAq5E,gBAAA9+N,EAAA6+N,eAEAp5E,EAAA/2J,IAAA,YAAA+2J,EAAAs5E,cACAt5E,EAAAu5E,cAAA,IAKAhmO,EAAA8M,YAAA,YACA1T,EAAArF,SAAA,CACA8xO,aAAAp5E,EAAAlrJ,OAAAskO,cACG7+N,KAEH6jB,EAAAlb,eAAA,CACA7a,KAAA,qBACAwV,MAAA,sBACA7J,OAAA,UACC,SAAAuG,EAAAhH,GACD,IAAAysJ,EAAAzsJ,EAAA5B,aAAA,YAEAquJ,GAAA,MAAAzlJ,EAAAi/N,WACAx5E,EAAAu5E,aAAAh/N,EAAAi/N,8BCpDA,IAAA7sO,EAAaH,EAAQ,KAErBitO,EAAoBjtO,EAAQ,KAE5BylC,EAAsBzlC,EAAQ,KAqB9BktO,EAAAD,EAAAhwO,OAAA,CACApB,KAAA,kBAKA+mC,cAAA,CACAn5B,gBAAA,gBAEA6oB,YAAA,OAEAk8G,YAAA,EAEA15G,OAAA,aAEA6pC,SAAA,EACApsC,QAAA,CAEAlsB,QAAA,QAGAqtB,OAAA,cACAC,WAAA,GACAlB,UAAA,CACAa,MAAA,EACAvvB,MAAA,EACA0Y,MAAA,WAEAyX,MAAA,CAEAhY,SAAA,OAKAoX,MAAA,EACA/G,SAAA,OACA4e,OAAA,EAGA1uB,MAAA,WAEAsX,UAAA,CACAtX,MAAA,UACA+xH,YAAA,GAEA2+F,gBAAA,CACAz5M,OAAA,SACAC,WAAA,GACAlX,MAAA,UACA+xH,YAAA,EACAl8G,YAAA,uBACArsB,WAAA,EACAirJ,kBAAA,IACAruI,gBAAA,gBAEA4Q,aAAA,CACAH,MAAA,EACA85M,aAAA,EACAC,aAAA,EACAC,aAAA,EACAx2F,SAAA,GACArI,QAAA,GACAvyH,SAAA,OAEAqxN,SAAA,4UAEAC,SAAA,idAEAC,SAAA,sTAEAC,SAAA,iTAEAjxN,MAAA,UACA6V,YAAA,UACAk8G,YAAA,GAEAphH,SAAA,CACA8G,MAAA,CACAZ,MAAA,EAEA7W,MAAA,WAEAsX,UAAA,CACAtX,MAAA,WAEAgX,aAAA,CACAhX,MAAA,UACA6V,YAAA,UACAk8G,YAAA,IAGA1wI,KAAA,MAGAqC,EAAAvC,MAAAsvO,EAAAznM,GACA,IAAA/H,EAAAwvM,EACAz4M,EAAA93B,QAAA+gC,mBC1HA,IAAAv9B,EAAaH,EAAQ,KAErBc,EAAqBd,EAAQ,KAE7B+tC,EAAW/tC,EAAQ,KAEnBmB,EAAgBnB,EAAQ,KAqBxBitO,EAAAnsO,EAAA7D,OAAA,CACApB,KAAA,WACAinC,WAAA,MAKAF,cAAA,CACA9tB,OAAA,EAEAD,EAAA,EAEAye,MAAA,EACA+sB,SAAA,OAEAgiC,UAAA,EACA/2E,KAAA,MACAE,IAAA,KACAC,MAAA,MACAC,OAAA,EACA3H,MAAA,KACAC,OAAA,GACAk/C,QAAA,EACAwpL,gBAAA,OAEAiB,UAAA,EACAC,QAAA,EAEA5sM,MAAA,EACA6sM,aAAA,IAEAjB,aAAA,EACA74M,UAAA,GACAG,MAAA,CACAzX,MAAA,QAEA3e,KAAA,IAMA8F,KAAA,SAAA0E,EAAA+X,EAAAtZ,GAKAzK,KAAA2kE,MAMA3kE,KAAAwxO,OACAxxO,KAAA4mC,qBAAA56B,EAAAvB,GAEAzK,KAAAyxO,aAMAxqM,YAAA,SAAAj7B,GACA2kO,EAAAn4K,WAAAx4D,KAAA,cAAAb,WAEAa,KAAAyxO,aAMAlB,gBAAA,SAAAD,GACA,MAAAA,IACAA,EAAAtwO,KAAAgM,OAAAskO,cAGA,IAAAjjN,EAAArtB,KAAA2kE,MAAAt3C,QAEArtB,KAAAgM,OAAA04B,KACA4rM,KAAAjjN,QAEAijN,GAAAjjN,IAAAijN,EAAAjjN,EAAA,GACAijN,EAAA,IAAAA,EAAA,IAGAtwO,KAAAgM,OAAAskO,gBAMAn5E,gBAAA,WACA,OAAAn3J,KAAAgM,OAAAskO,cAMAE,WAAA,WACA,OAAAxwO,KAAAm3J,mBAAAn3J,KAAA2kE,MAAAt3C,QAAA,GAMAojN,aAAA,SAAAh2K,GACAz6D,KAAAgM,OAAAqlO,WAAA52K,GAMAi3K,aAAA,WACA,QAAA1xO,KAAAgM,OAAAqlO,UAMAI,UAAA,WACA,IAAA19J,EAAA/zE,KAAAgM,OACA2lO,EAAA59J,EAAAvyE,MAAA,GACAuiD,EAAAgwB,EAAAhwB,SACA5oB,EAAAn7B,KAAAwxO,OAAA,GAEA,gBAAAztL,EAAA,CACA,IAAA6tL,EAAA,GACA/tO,EAAAjF,KAAA+yO,EAAA,SAAA/hO,EAAA7G,GACA,IACAilI,EADA1uI,EAAAuF,EAAAosB,iBAAArhB,GAGA/L,EAAA1F,SAAAyR,IACAo+H,EAAAnqI,EAAA5G,MAAA2S,IACAtQ,MAAAyJ,EAEAilI,EAAAjlI,EAGA6oO,EAAAnwO,KAAAusI,GAEAnqI,EAAA/B,SAAAxC,IAAA,MAAAA,IAAA8tB,MAAA9tB,KACAA,EAAA,IAGA67B,EAAA15B,KAAAnC,EAAA,MAEAqyO,EAAAC,EAGA,IAAAzlM,EAAA,CACAwpC,SAAA,UACAjlC,KAAA,QACKqT,IAAA,UACL/jD,KAAA2kE,MAAA,IAAAlzB,EAAA,EACAlxC,KAAA,QACAhB,KAAA4sC,IACKnsC,OACLq1C,SAAAs8L,EAAAx2M,IAEAnqB,QAAA,WACA,OAAAhR,KAAA2kE,OAOAtjB,cAAA,WACA,gBAAArhD,KAAAG,IAAA,YACA,OAAAH,KAAAwxO,OAAA70O,WAIAykC,EAAAuvM,EACAx4M,EAAA93B,QAAA+gC,mBCzMA,IAAAv9B,EAAaH,EAAQ,KAErB+a,EAAmB/a,EAAQ,KAE3B4Z,EAAa5Z,EAAQ,KAErBkB,EAAclB,EAAQ,KAEtBsb,EAAatb,EAAQ,KAErBmuO,EAAmBnuO,EAAQ,KAE3BouO,EAAmBpuO,EAAQ,KAI3Bg8C,EAFch8C,EAAQ,KAEtBg8C,aAEA+iD,EAAiB/+F,EAAQ,KAEzBy5B,EAAiBz5B,EAAQ,KAIzBi6B,EAFcj6B,EAAQ,KAEtBi6B,WAoBA3+B,EAAA6E,EAAA7E,KACAJ,EAAAiF,EAAAjF,KACA2kB,EAAA5U,KAAA4U,GAEA6d,EAAAywM,EAAAlxO,OAAA,CACApB,KAAA,kBACA+H,KAAA,SAAAmD,EAAAtC,GACAnI,KAAAmI,MAMAnI,KAAAizM,MAMAjzM,KAAA8iI,UAKA9iI,KAAA+xO,OAKA/xO,KAAAgyO,gBAKAhyO,KAAAs8K,WAKAt8K,KAAAiyO,aAMApgO,OAAA,SAAAqlJ,EAAAzsJ,EAAAtC,EAAAsJ,GAMA,GALAzR,KAAAyQ,MAAAymJ,EACAl3J,KAAAmI,MACAnI,KAAAyK,UACAzK,KAAAkH,MAAAkzD,YAEA88F,EAAA/2J,IAAA,YACA,IAAAqjG,EAAAxjG,KAAAopC,QAAA8tH,EAAA/uJ,GAEA+pO,EAAAlyO,KAAAmyO,aAAA,aAEAC,EAAApyO,KAAAmyO,aAAA,cAOAxwL,EAAA3hD,KAAAizM,MAAAjzM,KAAAqyO,YAAA7uI,EAAA0zD,GAEAA,EAAAhsH,cAAA,SAAA/5B,GACA,OAAAwsB,EAAAgkB,EAAAhlB,MAAAmmB,SAAA3xC,KAGAvS,EAAA,4DAAA2B,GACAP,KAAA,UAAAO,GAAAijG,EAAA0uI,EAAAvwL,EAAAu1G,IACOl3J,MAEPA,KAAAsyO,iBAAA9uI,EAAA4uI,EAAAzwL,EAAAu1G,GAEAl3J,KAAAuyO,UAAA/uI,EAAA0zD,GAGAl3J,KAAAwyO,eAMAz8N,OAAA,WACA/V,KAAAyyO,cAEAzyO,KAAAkH,MAAAkzD,aAMAtkD,QAAA,WACA9V,KAAAyyO,eAEArpM,QAAA,SAAA8tH,EAAA/uJ,GACA,IAAAuqO,EAAAx7E,EAAA/2J,IAAA,kBACAq4B,EAAA0+H,EAAA/2J,IAAA,UACAq+F,EAkZA,SAAA/tF,EAAAtI,GACA,OAAA6W,EAAAya,cAAAhpB,EAAAguF,qBAAA,CACAh3F,MAAAU,EAAAuE,WACAhF,OAAAS,EAAAwE,aACG8D,EAAAtQ,IAAA,YAtZH2jI,CAAAozB,EAAA/uJ,GAEA,MAAAuqO,GAAA,SAAAA,EACAA,EAAA,eAAAl6M,EAAAgmE,EAAAvuF,EAAAuuF,EAAA92F,OAAA,EAAAS,EAAAwE,YAAA,UAAA6xF,EAAAxuF,EAAAwuF,EAAA/2F,MAAA,EAAAU,EAAAuE,WAAA,UACK0gB,MAAAslN,KACLA,EAAA,CACA7iG,WAAA,CACA3gI,IAAA,IACAE,OAAA,KAEA0gI,SAAA,CACA9gI,KAAA,IACAG,MAAA,MAEOqpB,GAAAk6M,IAGP,IAuBAC,EACAC,EACAC,EACA/wL,EA1BAgxL,EAAA,CACAjjG,WAAA,SACAC,SAAA4iG,GAAA,SAAAA,EAAA,gBAEAK,EAAA,CACAljG,WAAA6iG,GAAA,SAAAA,EAAA,eACA5iG,SAAA,UAEAkjG,EAAA,CACAnjG,WAAA,EACAC,SAAAvsH,EAAA,GAGA0vN,EAAA,aAAAz6M,EAAAgmE,EAAA92F,OAAA82F,EAAA/2F,MACAyrO,EAAAh8E,EAAA1qJ,SAAA,gBACA2mO,EAAAD,EAAA/yO,IAAA,WACAizO,EAAAD,EAAAD,EAAA/yO,IAAA,cACAkzO,EAAAF,EAAAD,EAAA/yO,IAAA,aACAmzO,EAAAF,EAAAC,EAEA9kK,EAAA2oF,EAAA/2J,IAAA,mBACAouE,IAAAhrD,EAAA,IAMA,IAAA6sN,EAAA8C,EAAA/yO,IAAA,eACA2wO,EAAAqC,GAAAD,EAAA/yO,IAAA,kBACA4wO,EAAAoC,GAAAD,EAAA/yO,IAAA,kBACA6wO,EAAAmC,GAAAD,EAAA/yO,IAAA,kBACA8tF,EAAA,EACAC,EAAA+kJ,EAmBA,MAjBA,SAAA7C,GAAA,WAAAA,GACAU,IAAA6B,EAAA,MAAA1kJ,GAAAqlJ,GACAvC,IAAA6B,EAAA,CAAA3kJ,EAAA,GAAAA,GAAAqlJ,GACAtC,IAAA6B,EAAA,CAAA3kJ,EAAAklJ,EAAA,GAAAllJ,GAAAolJ,KAGAxC,IAAA6B,EAAA,CAAAzkJ,EAAAklJ,EAAA,GAAAllJ,GAAAolJ,GACAvC,IAAA6B,EAAA,MAAA3kJ,GAAAqlJ,GACAtC,IAAA6B,EAAA,CAAA3kJ,EAAAklJ,EAAA,GAAAllJ,GAAAolJ,IAGAxxL,EAAA,CAAAmsC,EAAAC,GAEAgpE,EAAA/2J,IAAA,YACA2hD,EAAA+wB,UAGA,CACA2rB,WACAy0I,aACAz6M,SACAtN,SAAA8nN,EAAAx6M,GACA+1C,gBACAmkK,cACAa,WAAAr8E,EAAA/2J,IAAA,gBAAA2yO,EAAAt6M,GACAg7M,cAAAt8E,EAAA/2J,IAAA,wBAAA+2J,EAAA/2J,IAAA,mBAAA4yO,EAAAv6M,GAEAm6M,eACAC,kBACAC,kBACA/wL,aACAsxL,cACAC,eAGAd,UAAA,SAAA/uI,EAAA0zD,GAMA,IAAAg7E,EAAAlyO,KAAAs8K,WACA81D,EAAApyO,KAAAiyO,YACAzzI,EAAAgF,EAAAhF,SAEA,gBAAAgF,EAAAhrE,OAAA,CAEA,IAAA/Y,EAAAnC,EAAA3L,SACA8hO,EAAAj1I,EAAAxuF,EACA0jO,EAAAl1I,EAAAvuF,EAAAuuF,EAAA92F,OACA4V,EAAAkjB,UAAA/gB,IAAA,EAAAg0N,GAAAC,IACAp2N,EAAAuxB,OAAApvB,KAAA8D,EAAA,GACAjG,EAAAkjB,UAAA/gB,IAAA,CAAAg0N,EAAAC,KACAl1I,IAAAvhG,SACAuiB,eAAAC,GAGA,IAAAk0N,EAAAC,EAAAp1I,GACAq1I,EAAAD,EAAA1B,EAAA/yN,mBACA20N,EAAAF,EAAAxB,EAAAjzN,mBACA40N,EAAA7B,EAAAtyN,SACAo0N,EAAA5B,EAAAxyN,SACAo0N,EAAA,GAAAD,EAAA,GAAAJ,EAAA,MACA,IAQAM,EARAvB,EAAAlvI,EAAAkvI,YAEAtlN,MAAAslN,IAGAwB,EAAAH,EAAAF,EAAAF,EAAA,EADAM,EAAA,MAAAvB,EAAA,KAEAwB,EAAAF,EAAAF,EAAAH,EAAA,IAAAM,KAGAC,EAAAH,EAAAF,EAAAF,EAAA,EADAM,EAAAvB,GAAA,OAEAsB,EAAA,GAAAD,EAAA,GAAArB,GASA,SAAAyB,EAAAzM,GACA,IAAA/5J,EAAA+5J,EAAA9nN,SACA8nN,EAAAxqJ,OAAA,CAAAy2J,EAAA,MAAAhmK,EAAA,GAAAgmK,EAAA,MAAAhmK,EAAA,IAGA,SAAAimK,EAAA70N,GAEA,QAAAA,EAAA/O,EAAA+O,EAAA/O,EAAA+O,EAAAtX,OAAA,CAAAsX,EAAA9O,EAAA8O,EAAA9O,EAAA8O,EAAArX,SAGA,SAAAwsO,EAAAz9H,EAAA74G,EAAAg6I,EAAA+rD,EAAAywC,GACA39H,EAAAktF,IAAA/rD,EAAA+rD,GAAAywC,GAAAx2O,EAAA+lM,GAAAywC,GAjBAlC,EAAAvrN,KAAA,WAAAotN,GACA3B,EAAAzrN,KAAA,WAAAqtN,GACA9B,EAAAhnN,SAAAknN,EAAAlnN,SAAAs4E,EAAAt4E,SACAipN,EAAAjC,GACAiC,EAAA/B,IAgBAC,YAAA,SAAA7uI,EAAA0zD,GACA,IAAA11J,EAAA01J,EAAAlmJ,UACA+yC,EAAAmzG,EAAA/2J,IAAA,YACAw8B,EAAA8lE,EAAA3+C,mBAAAozG,EAAAnzG,GAEApnB,EAAA6nB,SAAA,WACA,OAAAhjD,EAAAo5C,SAAA,mBAAAt7C,GACA,OAAAA,KAIA,IAAAouB,EAAAlsB,EAAA42C,cAAA,SACAzb,EAAA8mB,UAAA/1B,EAAA,GAAAA,EAAA,IACAiP,EAAAm3D,YACA,IAAAnyC,EAAA,IAAAmwL,EAAA,QAAAn1M,EAAA6mE,EAAA1hD,WAAAiC,GAEA,OADApC,EAAAlxC,MAAAymJ,EACAv1G,GAEAwwL,aAAA,SAAA5xO,GACA,IAAA8zO,EAAAr0O,KAAA,IAAAO,GAAA,IAAAqE,EAAA+Y,MAEA,OADA3d,KAAAkH,MAAAiJ,IAAAkkO,GACAA,GAEAC,gBAAA,SAAA9wI,EAAAt8F,EAAAy6C,EAAAu1G,GACA,IAAAp1G,EAAAH,EAAAP,YAEA81G,EAAA/2J,IAAA,mBAIA+G,EAAAiJ,IAAA,IAAAvL,EAAAuZ,KAAA,CACAqJ,MAAA,CACAC,GAAAq6B,EAAA,GACAn6B,GAAA,EACAD,GAAAo6B,EAAA,GACAl6B,GAAA,GAEA7X,MAAAlM,EAAAlD,OAAA,CACAysE,QAAA,SACO8pF,EAAA1qJ,SAAA,aAAA6gE,gBACPtiE,QAAA,EACA4W,GAAA,MAOA4yN,gBAAA,SAAA/wI,EAAAt8F,EAAAy6C,EAAAu1G,GACA,IAAA11J,EAAA01J,EAAAlmJ,UAEAiyD,EAAAthB,EAAAhlB,MAAA6nB,WAEA5lD,EAAAqkE,EAAA,SAAA3jE,GACA,IAAA2uE,EAAAtsB,EAAAghB,YAAArjE,GACA2sE,EAAAzqE,EAAAs6C,aAAAx8C,GACAmmI,EAAAx5D,EAAAz/D,SAAA,aACAgoO,EAAAvoK,EAAAz/D,SAAA,sBACAioO,EAAA,CACA70N,SAAA,CAAAquD,EAAA,GACAo6G,QAAArpL,EAAAgB,KAAA00O,gBAAA10O,KAAAV,IAEAmJ,EAAAksO,EAAA1oK,EAAAw5D,EAAAv+H,EAAAutO,GACA7vO,EAAAsjB,cAAAzf,EAAA+rO,EAAArzJ,gBAEAlV,EAAA9rE,IAAA,YACAsI,EAAA0I,UAAA7R,EACAmJ,EAAAkQ,UAAAu+I,GAEAzuJ,EAAA0I,UAAA1I,EAAAkQ,UAAA,MAEK3Y,OAMLsyO,iBAAA,SAAA9uI,EAAAt8F,EAAAy6C,EAAAu1G,GAGA,GAFAv1G,EAAAc,gBAEAtiD,IAAA,SAIA,IAAAqB,EAAA01J,EAAAlmJ,UACA0yD,EAAA/hB,EAAA8hB,gBACA7kE,EAAA8kE,EAAA,SAAAkL,GAEA,IAAAz9D,EAAAy9D,EAAAjsB,UACAspB,EAAAzqE,EAAAs6C,aAAA3qC,GACAo1K,EAAAt6G,EAAAz/D,SAAA,SACAg1E,EAAAvV,EAAAz/D,SAAA,kBACAyhE,EAAAtsB,EAAAghB,YAAAiM,EAAAjsB,WACAusB,EAAA,IAAAtqE,EAAAgZ,KAAA,CACAgC,SAAA,CAAAquD,EAAA,GACA/iD,SAAAs4E,EAAAj1B,cAAAi1B,EAAAt4E,SACAm9J,QAAArpL,EAAAgB,KAAA00O,gBAAA10O,KAAAmR,GACApG,QAAA,IAEAnG,EAAA+d,aAAAusD,EAAAn/D,MAAAw2K,EAAA,CACAn9J,KAAAwlD,EAAAC,eACAhqD,UAAA2+E,EAAA+vI,WACAzuN,kBAAA0+E,EAAAgwI,gBAEAtsO,EAAAiJ,IAAA++D,GACAtqE,EAAAsjB,cAAAgnD,EAAAtqE,EAAA+d,aAAA,GAA2D6+D,KACtDxhF,QAML40O,eAAA,SAAApxI,EAAAt8F,EAAAy6C,EAAAu1G,GACA,IAAAk8E,EAAA5vI,EAAA4vI,YACAloN,EAAAs4E,EAAAt4E,SACAuM,EAAAy/H,EAAA1qJ,SAAA,gBAAA20E,eACA1gE,EAAAy2I,EAAA1qJ,SAAA,yBAAA20E,eACApiE,EAAA,IAAAq0N,EAAA,EAAAA,KACA1C,EAAAx5E,EAAAw6E,eACArvK,EAAA60F,EAAA/2J,IAAA,cAKA,SAAA00O,EAAAj1N,EAAAk1N,EAAAzsD,EAAA0sD,GACA,GAAAn1N,EAAA,CAIA,IAQAo1N,EA6HA,SAAA99E,EAAA+9E,EAAAl2N,EAAAhY,GAEA,OADAnC,EAAAia,SAAAq4I,EAAA/2J,IAAA80O,GAAAhyO,QAAA,iBAAAY,EAAA5G,MAAA8J,GAAA,IAA2G,IAAA0X,EAAAM,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,cA9H3Gm2N,CAAAh+E,EAAA49E,EAAA/1N,EARA,CACAa,WACAs9D,OAAA,CAAAk2J,EAAA,KACAloN,SAAA6pN,GAAA7pN,EAAA,EACAQ,WAAA,EACA3b,MAAA0nB,EACA4wJ,YAGAnhL,EAAAiJ,IAAA6kO,GACApwO,EAAAsjB,cAAA8sN,EAAAv0N,IAnBAo0N,EAAArxI,EAAAqvI,gBAAA,wBAAA7zO,EAAAgB,KAAA00O,gBAAA10O,KAAAqiE,EAAA,UACAwyK,EAAArxI,EAAAovI,gBAAA,wBAAA5zO,EAAAgB,KAAA00O,gBAAA10O,KAAAqiE,EAAA,UACAwyK,EAAArxI,EAAAmvI,aAAA,iBAAAjC,EAAA,uBAAA1xO,EAAAgB,KAAAm1O,iBAAAn1O,MAAA0wO,IAAA,IAoBA0E,sBAAA,SAAA5xI,EAAAt8F,EAAAy6C,EAAAu1G,GACA,IAAA11J,EAAA01J,EAAAlmJ,UACAs/N,EAAAp5E,EAAAC,kBACA0/B,EAAAr1L,EAAAs6C,aAAAw0L,GAAA9jO,SAAA,mBACA23M,EAAAnkN,KACAq3E,EAAA,CACAg+J,SAAA,SAAAn9M,GACAA,EAAAmmD,WAAA,EACAnmD,EAAAggE,MAAAl5F,EAAAmlN,EAAAmxB,mBAAAnxB,GACAjsL,EAAA4jF,UAAA98G,EAAAmlN,EAAAoxB,sBAAApxB,GACAqxB,EAAAt9M,EAAAo4M,EAAA3uL,EAAAu1G,GAAA,IAEAzqC,SAAA,SAAAv0F,GACAs9M,EAAAt9M,EAAAo4M,EAAA3uL,EAAAu1G,KAIAl3J,KAAAgyO,gBAAA2C,EAAA99C,IAAA72L,KAAAs8K,WAAA,GAAqFt8K,KAAAgyO,gBAAA36J,IAErF89J,iBAAA,SAAAM,GACAz1O,KAAAyyO,cAEAzyO,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,qBACAmxO,UAAA+E,EACA73O,KAAAoC,KAAA0S,OAGA4iO,mBAAA,SAAA76M,EAAAC,EAAAhiB,GACA1Y,KAAAyyO,cAEAzyO,KAAA01O,uBAAA,CAAAh9N,EAAAg+C,QAAAh+C,EAAAo+C,WAEAy+K,sBAAA,SAAA78N,GACA1Y,KAAA01O,uBAAA,CAAAh9N,EAAAg+C,QAAAh+C,EAAAo+C,UAAA,IAEA4+K,uBAAA,SAAAC,EAAA5rO,GACA,IAAAokO,EAAAnuO,KAAA41O,aAAAD,GAAA,GAEAh0L,EAAA3hD,KAAAizM,MACAnxJ,EAAA3kB,EAAAnQ,IAAA20B,EAAAP,YAAAzkD,SACAwxO,EAAArsL,EAAA,KAAAqsL,EAAArsL,EAAA,IACAqsL,EAAArsL,EAAA,KAAAqsL,EAAArsL,EAAA,IACA9hD,KAAAgyO,gBAAApyN,SAAA,GAAAuuN,EAEAnuO,KAAAgyO,gBAAA37N,QAEA,IAAAw/N,EAAA71O,KAAA81O,iBAAA3H,GAEAj3E,EAAAl3J,KAAAyQ,OAEA1G,GAAA8rO,IAAA3+E,EAAAC,mBAAAD,EAAA/2J,IAAA,cACAH,KAAA00O,gBAAAmB,IAGArD,YAAA,WACAxyO,KAAAyyO,cAEAzyO,KAAAyQ,MAAAihO,iBACA1xO,KAAA+xO,OAAA1qK,WAAAroE,EAGA,WAEA,IAAAk4J,EAAAl3J,KAAAyQ,MAEAzQ,KAAA00O,gBAAAx9E,EAAAC,mBAAAD,EAAA/2J,IAAA,qBAPAH,WAAAyQ,MAAAtQ,IAAA,mBAUAy1O,aAAA,SAAAtrN,GACA,IAAA82F,EAAAphH,KAAAs8K,WAAAv1J,oBAEA,OAAAniB,EAAA4a,eAAA8K,EAAA82F,GAAA,IAEA00H,iBAAA,SAAAC,GACA,IAEAF,EAFAr0O,EAAAxB,KAAAyQ,MAAAO,UACAorB,EAAAntB,IAEA0yC,EAAA3hD,KAAAizM,MAUA,OATAzxM,EAAA5C,KAAA,mBAAAU,EAAA6R,GACA,IAAAsxD,EAAA9gB,EAAAghB,YAAArjE,GACAw9B,EAAAnuB,KAAAyb,IAAAq4C,EAAAszK,GAEAj5M,EAAAV,IACAA,EAAAU,EACA+4M,EAAA1kO,KAGA0kO,GAEApD,YAAA,WACAzyO,KAAA+xO,SACA3qK,aAAApnE,KAAA+xO,QACA/xO,KAAA+xO,OAAA,OAGA2C,gBAAA,SAAAsB,GACA,IAAA1F,EAAAtwO,KAAAyQ,MAAA0mJ,kBAEA,MAAA6+E,EACAA,EAAA1F,EAAA,EACK,MAAA0F,IACLA,EAAA1F,EAAA,GAGAtwO,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,iBACA+wO,aAAA0F,EACAp4O,KAAAoC,KAAA0S,SAsBA,SAAAiiO,EAAAjjM,EAAA+zF,EAAAv+H,EAAA6Q,EAAAqf,EAAAigD,GACA,IAAAl3D,EAAAslH,EAAAtlI,IAAA,SAEA,GAAAi3B,EAOAA,EAAAyoB,SAAA1/B,GACAjZ,EAAAiJ,IAAAinB,GAEAigD,KAAAo1C,SAAAr1F,OAVA,CACA,IAAA8nB,EAAAxN,EAAAvxC,IAAA,WACAi3B,EAAAsoB,EAAAR,GAAA,SAAA/+B,IACAvJ,SAAA,oBACA1P,EAAAiJ,IAAAinB,GACAigD,KAAAg+J,SAAAj+M,GASA,IAAAK,EAAAguG,EAAAtkD,aAAA,iCACA/pD,EAAAxgB,SAAA6gB,GAEA1f,EAAAlU,EAAA7F,MAAA,CACA0tB,WAAA,EACA/J,GAAA,KACG5J,GAAA,GACH,IAAAsf,EAAAqa,EAAAvxC,IAAA,eACAk3B,eAAAh7B,MAAAg7B,EAAA16B,QAAA,EAAA06B,OACA,MACAA,EAAA,MACAtf,EAAA4kB,MAAAtF,EACA,IAAAiqD,EAAA5vC,EAAAvxC,IAAA,gBAEA,GAAAmhF,EAAA,CACA,IAAA3T,EAAA51D,EAAA6H,SAAA7H,EAAA6H,UAAA,MACA+tD,EAAA,IAAAxwC,EAAA5Q,aAAA+0D,EAAA,GAAAjqD,EAAA,IACAs2C,EAAA,IAAAxwC,EAAA5Q,aAAA+0D,EAAA,GAAAjqD,EAAA,IAGA,IAAAgqD,EAAA3vC,EAAAvxC,IAAA,gBAUA,OATA4X,EAAAmT,UAAAm2D,GAAA,GAAA1yE,KAAA4U,GAAA,OACA6T,EAAAzQ,KAAA5O,GAOAqf,EAAAjlB,kBACAilB,EAGA,SAAAo+M,EAAAt9M,EAAA/mB,EAAAwwC,EAAAu1G,EAAA++E,GACA,IAAA/9M,EAAAomD,SAAA,CAIA,IAAAu4G,EAAA3/B,EAAA1qJ,SAAA,mBACA2hO,EAAAxsL,EAAAghB,YAAAu0F,EAAAlmJ,UAAA7Q,IAAA,UAAAgR,IAEA8kO,IAAAp/C,EAAA12L,IAAA,gBACA+3B,EAAAvR,KAAA,CACA/G,SAAA,CAAAuuN,EAAA,MAGAj2M,EAAAzqB,eAAA,GACAyqB,EAAAxR,UAAA,CACA9G,SAAA,CAAAuuN,EAAA,IACKt3C,EAAA12L,IAAA,wBAAA02L,EAAA12L,IAAA,yBAILg4B,EAAA93B,QAAA+gC,mBCxnBA,IAqBAA,EArBoB19B,EAAQ,KAqB5B/C,OAAA,CACApB,KAAA,aAGA44B,EAAA93B,QAAA+gC,mBCzBA,IAAAv9B,EAAaH,EAAQ,KAErB0+D,EAAW1+D,EAAQ,KAgCnBouO,EAAA,SAAA9lM,EAAArP,EAAAqvI,EAAAjoH,GACAqe,EAAA/kE,KAAA2C,KAAAgsC,EAAArP,EAAAqvI,GAUAhsK,KAAAT,KAAAwkD,GAAA,QAMA/jD,KAAAyQ,MAAA,MAGAqhO,EAAA51O,UAAA,CACAyB,YAAAm0O,EAKArvL,cAAA,WACA,OAAAziD,KAAAyQ,MAAAjE,SAAA,UAMAo3D,aAAA,WACA,qBAAA5jE,KAAAyQ,MAAAtQ,IAAA,YAGA0D,EAAA9C,SAAA+wO,EAAA1vK,GACA,IAAAhhC,EAAA0wM,EACA35M,EAAA93B,QAAA+gC,mBCzEA19B,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBCZR,IAAA4xB,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBixN,EAAqBjxN,EAAQ,KAqB7BwyO,EAAA5gN,EAAAhZ,qBAAA,CACA/c,KAAA,UACAinC,WAAA,CACAjnC,KAAA,MACAy7B,YAAA,GAEAkM,cAAA,WACAgvM,EAAA19K,WAAAx4D,KAAA,gBAAAb,WACA0E,EAAAjF,KAAAoB,KAAAgM,OAAAkuJ,QAAA,SAAAC,EAAAg8E,GACA,IAAAC,EAAAzhB,EAAAx0N,IAAAg2O,GACAC,GAAAvyO,EAAA7F,MAAAm8J,EAAAi8E,EAAA9vM,kBAGAA,cAAA,CACAtP,MAAA,EACAze,EAAA,EACAC,OAAA,EACAggB,OAAA,aACAxpB,KAAA,QACAE,IAAA,MAGA/B,gBAAA,cACA6oB,YAAA,OACAi8G,aAAA,EACAC,YAAA,EACAtrF,QAAA,EACA4zF,SAAA,GACArI,QAAA,EACAkkG,WAAA,EACAvgN,UAAA,CACAE,YAAA,OACA7V,MAAA,QAEA2Q,SAAA,CACAgF,UAAA,CACAE,YAAA,eAOAoL,EAAA80M,EACA/9M,EAAA93B,QAAA+gC,mBCrEA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBw5B,EAAkBx5B,EAAQ,KAE1BixN,EAAqBjxN,EAAQ,KAE7BkB,EAAclB,EAAQ,KAEtBsiC,EAAYtiC,EAAQ,KAEpBksC,EAAiBlsC,EAAQ,KAEzB4yO,EAA0B5yO,EAAQ,KAqBlC09B,EAAA9L,EAAA/Y,oBAAA,CACAhd,KAAA,UACAsS,OAAA,SAAA0kO,EAAA9rO,EAAAtC,EAAAsJ,GACA,IAAAvK,EAAAlH,KAAAkH,MAGA,GAFAA,EAAAkzD,YAEAm8K,EAAAp2O,IAAA,SAIA,IAAAq6I,GAAA+7F,EAAAp2O,IAAA,YACAq2O,EAAAD,EAAAp2O,IAAA,eACA6c,EAAAhd,KAAAy2O,YAAAz2O,KAAAy2O,UAAA,IACAC,EAAA,GACA7yO,EAAAjF,KAAA43O,EAAA,SAAAz+N,EAAAxX,GACAm2O,EAAAj1O,KAAAlB,KAEA,IAAAqvC,EAAA5vC,KAAA22O,eAAA,GAAAD,GAAAvmO,IAAAymO,GAAA1rO,OAAA0rO,GAAA7gO,OAAAlS,EAAAjC,MAAAg1O,EAAA,OAAAxrK,UAEAprE,KAAA22O,cAAAD,EAiIAJ,EAAAt3N,OAAA9X,EAAAqvO,EAAApuO,GAGAjB,EAAAiJ,IAAAmmO,EAAA/jG,eAAArrI,EAAAiY,kBAAAo3N,IAEArvO,EAAA2xB,UAAA,SAAAw9K,GACA,IAAAwgC,EAAAxgC,EAAAygC,QACAr2N,EAAA41L,EAAA51L,WAEA,GAAAA,GAAAo2N,EAAA,CACA,IAAA93N,EAAAme,EAAA/d,gBAAA03N,EAAA35M,EAAAosB,SAAA7oC,IACAi2C,EAAA2/I,EAAAz2L,SAAA,GAAA1Y,EAAA0Y,SAAA,GAEAm3N,GAAA,EADA1gC,EAAAz2L,SAAA,GAAA1Y,EAAA0Y,SAAA,GAAA46H,EAGAz7H,EAAArX,OAAAS,EAAAwE,cACA8T,EAAA0C,aAAA,MACA4zN,GAAA,GAGA,IAAAC,EAAAD,GAAA,EAAAh4N,EAAArX,OAAA8yI,EAAA,EAEA9jF,EAAA33C,EAAAtX,MAAA,EAAAU,EAAAuE,YACA+T,EAAA0C,aAAA,QAAA6zN,GACAv2N,EAAAoE,UAAA,SACS6xC,EAAA33C,EAAAtX,MAAA,MACTgZ,EAAA0C,aAAA,GAAA6zN,GACAv2N,EAAAoE,UAAA,WA1JA,SAAA+xN,EAAAh3H,EAAAD,GACA,IAIAu6C,EAJAi8E,EAAAO,EAAA92H,GACAq3H,EAAAP,EAAA/2H,GACAw6C,EAAAq8E,EAAAL,GACAphB,EAAA,IAAA/uL,EAAAm0H,EAAAo8E,IAAA9rO,SAGA,GAAA0rO,IAAAc,EAAA,CAEA,GA6KA,SAAAd,GACA,WAAAA,EAAAt1O,QAAA,MA9KAq2O,CAAAf,GACAj8E,EAAA,CACAzpJ,MAAAskN,EACA1sC,QAAA0sC,EAAA/oN,OAAAq8K,QACA8tD,mBAES,CACT,IAAAC,EAAAzhB,EAAAx0N,IAAAg2O,GAEA,IAAAC,EACA,OAGAl8E,EAAA,IAAAk8E,EAAArhB,EAAAtqN,EAAAtC,GAGA6U,EAAAm5N,GAAAj8E,MACO,CAGP,KAFAA,EAAAl9I,EAAAi6N,IAGA,OAGA/8E,EAAAzpJ,MAAAskN,EACA76D,EAAAzvJ,UACAyvJ,EAAA/xJ,MAGAguO,IAAAc,EAKAliB,EAAA50N,IAAA,UAAA+5J,EAAAi9E,WAqBA,SAAApiB,EAAA76D,EAAAi8E,GACA,IAAAiB,EAAAriB,EAAAvoN,SAAA,aACA6qO,EAAAtiB,EAAAvoN,SAAA,sBAYA4oN,EAAAl7D,EAAAg7D,SAAAh7D,EAAAg7D,WAAAH,EAAA50N,IAAA,QACAm3O,EAAAviB,EAAA50N,IAAA,aAEA,qBAAAi1N,EAAA,CACA,IAAA/e,EAAA+e,EACA1/L,EAAA4hN,EAEAA,EAAA,IADAliB,EAAA,IAEA+gB,GAAA9/B,EACAihC,EAAAnB,GAAAzgN,EAGA,IAAA6hN,EAAAxiB,EAAAwiB,UAAA,GACA1zO,EAAAjF,KAAAw2N,EAAA,SAAA3pM,EAAA+rN,GACA,IAAAv4N,EAAAra,EAAA4mB,WAAAC,EAAA,GAAiD,CACjDzb,GAAAwqI,EAAA,EACAvqI,GAAAuqI,EAAA,EACA/yI,MAAA+yI,EACA9yI,OAAA8yI,IAEAv7H,EAAArI,SAAAwgO,EAAAj2J,gBACAliE,EAAAwB,WAAA42N,EAAAl2J,eACAv8E,EAAAsjB,cAAAjJ,GAEAs3N,EAAAp2O,IAAA,eACA8e,EAAA63N,QAAAQ,EAAAE,GACAv4N,EAAArV,GAAA,uBAEA,IAAA6W,EAAA42N,EAAAl2J,eACAliE,EAAArI,SAAA,CACAwS,KAAAkuN,EAAAE,GACAr0N,aAAA1C,EAAA0C,cAAA,SACAhC,SAAAV,EAAAD,MAAAC,EAAAF,QAAA,OACAsE,UAAApE,EAAAoE,WAAA,aAEWjb,GAAA,sBACXqV,EAAArI,SAAA,CACAuK,SAAA,UAKAlC,EAAAlV,QAAAgrN,EAAA50N,IAAA,cAAAq3O,IAAA,UACAtwO,EAAAiJ,IAAA8O,GACAA,EAAArV,GAAA,QAAA/F,EAAA7E,KAAAk7J,EAAAmuB,QAAAnuB,EAAAzvJ,EAAAtC,EAAAqvO,IACAD,EAAAC,GAAAv4N,IA3EAw4N,CAAA1iB,EAAA76D,EAAAi8E,GAEAphB,EAAAE,cAAA,SAAAuiB,EAAAn8N,GACA,IAAArP,EAAAhM,KAAAgM,OACAurO,EAAAv3O,KAAAu3O,UACAvrO,EAAA0rO,WAAA1rO,EAAA0rO,YAAA,GACA1rO,EAAA0rO,WAAAF,GAAAn8N,EAEAk8N,EAAAC,IAAAD,EAAAC,GAAAztO,QAAAsR,IAGA6+I,EAAAroJ,QACAqoJ,EAAAroJ,OAAAkjN,EAAAtqN,EAAAtC,EAAAsJ,IAhBAyoJ,EAAAnkJ,QAAAmkJ,EAAAnkJ,OAAAtL,EAAAtC,GALA+xJ,EAAApkJ,SAAAokJ,EAAApkJ,QAAArL,EAAAtC,KAwHA0K,WAAA,SAAA0jO,EAAA9rO,EAAAtC,EAAAsJ,GACA5N,EAAAjF,KAAAoB,KAAAy2O,UAAA,SAAAv8E,GACAA,EAAArnJ,YAAAqnJ,EAAArnJ,WAAAqnJ,EAAAzpJ,MAAAhG,EAAAtC,EAAAsJ,MAQAsE,OAAA,SAAAtL,EAAAtC,GACAtE,EAAAjF,KAAAoB,KAAAy2O,UAAA,SAAAv8E,GACAA,EAAAnkJ,QAAAmkJ,EAAAnkJ,OAAAtL,EAAAtC,KAEAnI,KAAAkH,MAAAkzD,aAEAtkD,QAAA,SAAArL,EAAAtC,GACAtE,EAAAjF,KAAAoB,KAAAy2O,UAAA,SAAAv8E,GACAA,EAAApkJ,SAAAokJ,EAAApkJ,QAAArL,EAAAtC,QASAgwB,EAAA93B,QAAA+gC,mBClPA,IAAAr9B,EAAUL,EAAQ,KAElBskE,EAAWtkE,EAAQ,KAEnBixN,EAAqBjxN,EAAQ,KAqB7Bi0O,EAAA3vK,EAAAnyC,QAAA2yC,YAEA,SAAAovK,EAAAnnO,GACAzQ,KAAAyQ,QAGAmnO,EAAAtxM,cAAA,CACAtP,MAAA,EACAq/K,KAAA,mFACA3gL,MAAAiiN,EAAAjiN,MACAn2B,KAAA,MAGAgB,KAAA,GACAqN,kBAAA,YACAV,WAAA,EACA86D,KAAA2vK,EAAA3vK,KAAArrE,SAEAi7O,EAAA17O,UAAAi7O,UAAApzO,EAAAkJ,gBACA2qO,EAAA17O,UAEAmsL,QAAA,SAAA59K,EAAAtC,GACA,IAAAsI,EAAAzQ,KAAAyQ,MACAilB,EAAAjlB,EAAAtQ,IAAA,SAAAsK,EAAAtK,IAAA,2BACA03O,EAAAn4O,SAAAC,cAAA,KACAJ,EAAAkR,EAAAtQ,IAAA,kBACA03O,EAAAC,SAAApiN,EAAA,IAAAn2B,EACAs4O,EAAA55O,OAAA,SACA,IAAAoQ,EAAAlG,EAAAqG,oBAAA,CACAjP,OACA4N,gBAAAsD,EAAAtQ,IAAA,uBAAAsK,EAAAtK,IAAA,2BACAyN,kBAAA6C,EAAAtQ,IAAA,qBACA+M,WAAAuD,EAAAtQ,IAAA,gBAIA,GAFA03O,EAAAE,KAAA1pO,EAEA,oBAAA2pO,YAAAj0O,EAAAiU,QAAA0tB,IAAA3hC,EAAAiU,QAAA2tB,KASA,GAAA54B,OAAAw4B,UAAA0yM,iBAAA,CAKA,IAJA,IAAAC,EAAAC,KAAA9pO,EAAA+F,MAAA,SACAirD,EAAA64K,EAAAz6O,OACA26O,EAAA,IAAAC,WAAAh5K,GAEAA,KACA+4K,EAAA/4K,GAAA64K,EAAAzxL,WAAA4Y,GAGA,IAAAi5K,EAAA,IAAAC,KAAA,CAAAH,IACArrO,OAAAw4B,UAAA0yM,iBAAAK,EAAA5iN,EAAA,IAAAn2B,OACO,CACP,IAAAyoE,EAAAv3D,EAAAtQ,IAAA,QACA0mH,EAAA,qCAA+Cx4G,EAAA,qCAAoD25D,KAAA,sBACnGj7D,OAAA83K,OACAnlL,SAAA84O,MAAA3xH,OAxBA,CACA,IAAA4xH,EAAA,IAAAT,WAAA,SACA9pO,KAAAnB,OACA2rO,SAAA,EACAC,YAAA,IAEAd,EAAAe,cAAAH,KAuBA9jB,EAAA54M,SAAA,cAAA67N,GACA,IAAAx2M,EAAAw2M,EACAz/M,EAAA93B,QAAA+gC,mBC5FA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBskE,EAAWtkE,EAAQ,KAEnBixN,EAAqBjxN,EAAQ,KAqB7Bm1O,EAAA7wK,EAAAnyC,QAAAsyC,UAEA,SAAA2wK,EAAAroO,GACAzQ,KAAAyQ,QAGAqoO,EAAAxyM,cAAA,CACAtP,MAAA,EACAz3B,KAAA,GAEA82M,KAAA,CACA/+K,KAAA,+DACA8wC,IAAA,kFACAC,MAAA,mYAEAC,MAAA,sGAGA5yC,MAAA7xB,EAAA5G,MAAA47O,EAAAnjN,OACA1pB,OAAA,GACAoM,YAAA,IAEA,IAAAugD,EAAAmgL,EAAA58O,UAEAy8D,EAAAu8J,SAAA,WACA,IAAAzkN,EAAAzQ,KAAAyQ,MACA0kN,EAAA1kN,EAAAtQ,IAAA,QACAi1N,EAAA,GAMA,OALAvxN,EAAAjF,KAAA6R,EAAAtQ,IAAA,iBAAAZ,GACA41N,EAAA51N,KACA61N,EAAA71N,GAAA41N,EAAA51N,MAGA61N,GAGA,IAAA2jB,EAAA,CACAzhN,KAAA,SAAAk0C,EAAAh5C,EAAAzhB,EAAAN,GACA,WAAA+6D,EACA,OAAA3nE,EAAA7F,MAAA,CACAiJ,GAAAurB,EACAjzB,KAAA,OAEAiC,KAAAuP,EAAA5Q,IAAA,QACAkoE,MAAAt3D,EAAA5Q,IAAA,SACA64J,UAAAjoJ,EAAA5Q,IAAA,aACA84J,SAAAloJ,EAAA5Q,IAAA,aACOsQ,EAAAtQ,IAAA,oBAAgC,IAGvCioE,IAAA,SAAAoD,EAAAh5C,EAAAzhB,EAAAN,GACA,YAAA+6D,EACA,OAAA3nE,EAAA7F,MAAA,CACAiJ,GAAAurB,EACAjzB,KAAA,MAEAiC,KAAAuP,EAAA5Q,IAAA,QACAkoE,MAAAt3D,EAAA5Q,IAAA,SACA64J,UAAAjoJ,EAAA5Q,IAAA,aACA84J,SAAAloJ,EAAA5Q,IAAA,aACOsQ,EAAAtQ,IAAA,mBAA+B,IAGtCkoE,MAAA,SAAAmD,EAAAh5C,EAAAzhB,EAAAN,GACA,YAAA+6D,GAAA,QAAAA,EACA,OAAA3nE,EAAA7F,MAAA,CACAiJ,GAAAurB,EACA61C,MAAA,0BACO53D,EAAAtQ,IAAA,qBAAiC,IAGxCmoE,MAAA,SAAAkD,EAAAh5C,EAAAzhB,EAAAN,GACA,YAAA+6D,GAAA,QAAAA,EACA,OAAA3nE,EAAA7F,MAAA,CACAiJ,GAAAurB,EACA61C,MAAA,IACO53D,EAAAtQ,IAAA,qBAAiC,KAIxC64O,EAAA,mCAEArgL,EAAA0vH,QAAA,SAAA59K,EAAAtC,EAAA5I,GACA,IAAAkR,EAAAzQ,KAAAyQ,MACA2H,EAAA3H,EAAAtQ,IAAA,eAAAZ,GAEA,GAAAw5O,EAAAx5O,GAAA,CAIA,IAAAw7B,EAAA,CACA5hB,OAAA,IAwCAtV,EAAAjF,KAAAo6O,EAAA,SAAAC,GACAp1O,EAAAhD,QAAAo4O,EAAA15O,IAAA,GACAsE,EAAAjF,KAAAq6O,EAAA,SAAArpO,GACAa,EAAAwkN,cAAArlN,EAAA,cAIAa,EAAAwkN,cAAA11N,EAAA,YACAkL,EAAAuD,cAAA,CACAlF,SAAA,SACAyK,MAAA,MAAA6E,EAAA,MACAA,gBAhDA,SAAArH,GACA,IAAAy6D,EAAAz6D,EAAAuC,QACAkf,EAAAzhB,EAAA9J,GACAiyO,EAAAH,EAAAx5O,GAAAisE,EAAAh5C,EAAAzhB,EAAAN,GAEAyoO,IAEAr1O,EAAArF,SAAA06O,EAAAnoO,EAAA/E,QACA+uB,EAAA5hB,OAAA1X,KAAAy3O,IAIA,IAAAtuO,EAAAmG,EAAAL,iBAEA,GAAA9F,GAAA,gBAAAA,EAAArL,OAAA,SAAAA,GAAA,QAAAA,GAAA,CACA,IAAAo3B,EAAA/rB,EAAAg8J,eAAA,cAEA,GAAAjwI,EAAA,CACA,IACAotB,EADAptB,EAAAqV,IACA,OAMAs6C,EALA77E,EAAA8oB,gBAAA,CACAzqB,SAAAi7C,EACAh7C,MAAAgI,EAAA5Q,IAAAI,KAAA,SACA0G,GAAA8J,EAAA5Q,IAAAI,KAAA,QACS,GACTqV,eACAmlB,EAAAgpB,GAAAhpB,EAAAgpB,IAAA,GAEA,QAAAxmD,EAAA,EAAuBA,GAAA+oF,EAAgB/oF,IACvCw9B,EAAAgpB,GAAAuiC,GAAAvrD,EAAAgpB,GAAAuiC,IAAA,GAGAvrD,EAAAgpB,GAAAuiC,GAAA1lC,YAAA,QAAArhD,MAmBA4I,EAAA2P,eAAA,CACAvY,KAAA,kBACA45O,YAAA55O,EACAw7B,gBAIAzF,EAAAlb,eAAA,CACA7a,KAAA,kBACAwV,MAAA,mBACA7J,OAAA,oBACC,SAAAuG,EAAAhH,GACDA,EAAAw8B,YAAAx1B,EAAAspB,aAEA45L,EAAA54M,SAAA,YAAA+8N,GACA,IAAA13M,EAAA03M,EACA3gN,EAAA93B,QAAA+gC,mBC5LA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBu8F,EAAgBv8F,EAAQ,KAExBskE,EAAWtkE,EAAQ,KAEnBixN,EAAqBjxN,EAAQ,KAqB7B01O,EAAApxK,EAAAnyC,QAAAkyC,SACAsxK,EAAA,IAAAh9O,MAAA,IAAAqtB,KAAA,KACA4vN,EAAA,KAyDA,SAAAC,EAAApgO,GACA,IAAAqgO,EAAA,GA6BA,OA5BA31O,EAAAjF,KAAAua,EAAA,SAAAjS,EAAApJ,GACA,IAAA64B,EAAAzvB,EAAAyvB,aAEA2nG,EADAp3H,EAAA4vB,UACAkV,IACAytM,EAAA,MAAAp6O,OAAAwE,EAAAhH,IAAAqK,EAAAiS,OAAA,SAAAA,GACA,OAAAA,EAAA5Y,QAEAm5O,EAAA,CAAA/iN,EAAAlmB,MAAA4wC,iBACAx9C,EAAAjF,KAAAsI,EAAAiS,OAAA,SAAAA,GACAugO,EAAAj4O,KAAA0X,EAAAsxB,aAAAmQ,SAAA0jF,EAAA,SAAA57H,GACA,OAAAA,OAMA,IAFA,IAAAqkD,EAAA,CAAA0yL,EAAA/vN,KAAA4vN,IAEA/7O,EAAA,EAAmBA,EAAAm8O,EAAA,GAAAj8O,OAAuBF,IAAA,CAG1C,IAFA,IAAAo8O,EAAA,GAEAhnN,EAAA,EAAqBA,EAAA+mN,EAAAj8O,OAAoBk1B,IACzCgnN,EAAAl4O,KAAAi4O,EAAA/mN,GAAAp1B,IAGAwpD,EAAAtlD,KAAAk4O,EAAAjwN,KAAA4vN,IAGAE,EAAA/3O,KAAAslD,EAAAr9B,KAAA,SAEA8vN,EAAA9vN,KAAA,OAAA2vN,EAAA,QA8CA,SAAAt2O,EAAAC,GACA,OAAAA,EAAAC,QAAA,aAAAA,QAAA,aAgBA,IAAA22O,EAAA,IAAAzoF,OAAA,IAAAmoF,EAAA,UAqFA,SAAAO,EAAA72O,EAAA82O,GACA,IAAAC,EAAA/2O,EAAAoR,MAAA,IAAA+8I,OAAA,MAAAkoF,EAAA,YACAt+M,EAAA,CACA5hB,OAAA,IAoBA,OAlBAtV,EAAAjF,KAAAm7O,EAAA,SAAAlxL,EAAA56B,GACA,GApGA,SAAA46B,GAIA,GAFAA,EAAAlsD,MAAA,EAAAksD,EAAAhoD,QAAA,OAEAA,QAAAy4O,IAAA,EACA,SA+FAU,CAAAnxL,GAAA,CACA,IAAA1rD,EAtFA,SAAA88O,GAWA,IAVA,IAAAC,EAAAD,EAAA7lO,MAAA,QACAqlO,EAAA12O,EAAAm3O,EAAA/kO,SAAAf,MAAAwlO,GACA7lM,EAAA,GACA56B,EAAAtV,EAAAhH,IAAA48O,EAAA,SAAAU,GACA,OACA55O,KAAA45O,EACA34O,KAAA,MAIAjE,EAAA,EAAiBA,EAAA28O,EAAAz8O,OAAqBF,IAAA,CACtC,IAAAo8O,EAAA52O,EAAAm3O,EAAA38O,IAAA6W,MAAAwlO,GACA7lM,EAAAtyC,KAAAk4O,EAAAxkO,SAEA,QAAAwd,EAAA,EAAmBA,EAAAgnN,EAAAl8O,OAAkBk1B,IACrCxZ,EAAAwZ,KAAAxZ,EAAAwZ,GAAAnxB,KAAAjE,GAAAo8O,EAAAhnN,IAIA,OACAxZ,SACA46B,cAgEAqmM,CAAAvxL,GACAwxL,EAAAP,EAAA7rN,GACAknE,EAAAklJ,EAAA12H,QAAA,OAEA02H,IACAt/M,EAAAo6D,GAAAp6D,EAAAo6D,IAAA,GACAp6D,EAAAo6D,GAAAklJ,EAAA/zJ,WAAA,CACA9kF,KAAArE,EAAA42C,YAEAhZ,EAAA5hB,OAAA4hB,EAAA5hB,OAAA9Z,OAAAlC,EAAAgc,aAEK,CACLhc,EAlEA,SAAA6F,GAKA,IAJA,IAAA+jD,EAAA/jD,EAAAoR,MAAA,QACAq4B,EAAA1pC,EAAAgkD,EAAA5xC,SACA3T,EAAA,GAEAjE,EAAA,EAAiBA,EAAAwpD,EAAAtpD,OAAkBF,IAAA,CACnC,IAEA+B,EAFAq6O,EAAA52O,EAAAgkD,EAAAxpD,IAAA6W,MAAAwlO,GACAr5O,EAAA,GAEA+5O,GAAA,EAEAltN,MAAAusN,EAAA,KAEAW,GAAA,EACA/5O,EAAAo5O,EAAA,GACAA,IAAAh9O,MAAA,GACA6E,EAAAjE,GAAA,CACAgD,OACAjB,MAAA,IAEAA,EAAAkC,EAAAjE,GAAA+B,OAEAA,EAAAkC,EAAAjE,GAAA,GAGA,QAAAo1B,EAAA,EAAmBA,EAAAgnN,EAAAl8O,OAAkBk1B,IACrCrzB,EAAAmC,MAAAk4O,EAAAhnN,IAGA,IAAArzB,EAAA7B,SACA68O,EAAA94O,EAAAjE,GAAA+B,QAAA,GAAAkC,EAAAjE,GAAA+B,EAAA,IAIA,OACAiB,KAAAksC,EACAjrC,QA8BA+4O,CAAA1xL,GACA9tB,EAAA5hB,OAAA1X,KAAAtE,MAGA49B,EASA,SAAAy/M,EAAA/pO,GACAzQ,KAAAmH,KAAA,KACAnH,KAAAyQ,QA8IA,SAAAgqO,EAAA70K,EAAAkzG,GACA,OAAAj1K,EAAAhH,IAAA+oE,EAAA,SAAA6R,EAAAxpD,GACA,IAAAqmB,EAAAwkI,KAAA7qJ,GAEA,OAAApqB,EAAA1F,SAAAm2C,KAAAzwC,EAAAvF,QAAAg2C,IACAzwC,EAAA1F,SAAAs5E,KAAA5zE,EAAAvF,QAAAm5E,KACAA,IAAAn4E,OAIAuE,EAAArF,SAAA,CACAc,MAAAm4E,GACOnjC,IAEPmjC,IAzJA+iK,EAAAl0M,cAAA,CACAtP,MAAA,EACA0jN,UAAA,EACAC,gBAAA,KACAC,gBAAA,KACAvkC,KAAA,8GACA3gL,MAAA7xB,EAAA5G,MAAAm8O,EAAA1jN,OACAsyC,KAAAnkE,EAAA5G,MAAAm8O,EAAApxK,MACA76D,gBAAA,OACA6hE,UAAA,OACA6rK,cAAA,OACAC,oBAAA,OACAC,YAAA,UACAC,gBAAA,QAGAR,EAAAt+O,UAAAmsL,QAAA,SAAA59K,EAAAtC,GACA,IAAA+wD,EAAA/wD,EAAA0D,SACA4E,EAAAzQ,KAAAyQ,MAEAzQ,KAAAmH,MACA+xD,EAAA+xD,YAAAjrH,KAAAmH,MAGA,IAAA6rE,EAAAtzE,SAAAC,cAAA,OACAqzE,EAAAjjE,MAAA02I,QAAA,2DACAzzE,EAAAjjE,MAAA5C,gBAAAsD,EAAAtQ,IAAA,2BAEA,IAAAg6O,EAAAz6O,SAAAC,cAAA,MACAqoE,EAAAv3D,EAAAtQ,IAAA,YACAg6O,EAAArvH,UAAA9iD,EAAA,IAAAv3D,EAAAtQ,IAAA,SACAg6O,EAAApqO,MAAA02I,QAAA,qBACA0zF,EAAApqO,MAAAoQ,MAAA1P,EAAAtQ,IAAA,aACA,IAAA86O,EAAAv7O,SAAAC,cAAA,OACAu7O,EAAAx7O,SAAAC,cAAA,YACAs7O,EAAAlrO,MAAA02I,QAAA,0CACA,IAAAk0F,EAAAlqO,EAAAtQ,IAAA,mBACAy6O,EAAAnqO,EAAAtQ,IAAA,mBACAhD,EA3LA,SAAAsN,GACA,IA3BA0O,EA2BAhc,EAlHA,SAAAsN,GACA,IAAA0wO,EAAA,GACAC,EAAA,GACAC,EAAA,GA8BA,OA7BA5wO,EAAAqtH,cAAA,SAAA/mH,GACA,IAAAnG,EAAAmG,EAAAL,iBAEA,IAAA9F,GAAA,gBAAAA,EAAArL,MAAA,UAAAqL,EAAArL,KAuBA67O,EAAA35O,KAAAsP,OAvBA,CACA,IAAA8jF,EAAAjqF,EAAAqgC,cAEA,gBAAA4pD,EAAAt1F,KAAA,CACA,IAAAzB,EAAA+2F,EAAA7oD,IAAA,IAAA6oD,EAAA9rF,MAEAoyO,EAAAr9O,KACAq9O,EAAAr9O,GAAA,CACA64B,aAAAk+D,EACA/9D,UAAAlsB,EAAAwrF,aAAAvB,GACA17E,OAAA,IAEAkiO,EAAA55O,KAAA,CACAkiH,QAAA9uB,EAAA7oD,IACAs6C,UAAAuO,EAAA9rF,SAIAoyO,EAAAr9O,GAAAqb,OAAA1X,KAAAsP,QAEAqqO,EAAA35O,KAAAsP,MAMA,CACAoqO,4BACAp7M,MAAAq7M,EACAC,QA8EAC,CAAA7wO,GACA,OACAnL,MAAAuE,EAAApH,OAAA,CAAA88O,EAAAp8O,EAAAg+O,4BA7BAhiO,EA6BAhc,EAAA4iC,MA5BAl8B,EAAAhH,IAAAsc,EAAA,SAAAA,GACA,IAAA3X,EAAA2X,EAAAsxB,aACAsc,EAAA,CAAA5tC,EAAA5Y,MACAwtG,EAAA,GAYA,OAXAvsG,EAAA5C,KAAA4C,EAAA2a,WAAA,WAKA,IAJA,IAAAioD,EAAAjlE,UAAA1B,OACA0T,EAAAhS,UAAAilE,EAAA,GACA7jE,EAAAiB,EAAAgrC,QAAAr7B,GAEA5T,EAAA,EAAqBA,EAAA6mE,EAAA,EAAgB7mE,IACrCwwG,EAAAxwG,GAAA4B,UAAA5B,GAGAwpD,EAAAtlD,MAAAlB,IAAA+4O,EAAA,IAAAvrI,EAAArkF,KAAA4vN,MAEAvyL,EAAAr9B,KAAA,QACGA,KAAA,OAAA2vN,EAAA,UAYH,SAAAr2O,GACA,OAAAA,EAAAC,QAAA,kBACKymB,KAAA,OAAA2vN,EAAA,QACLgC,KAAAl+O,EAAAk+O,MAqLAE,CAAA9wO,GAEA,uBAAAkwO,EAAA,CACA,IAAAa,EAAAb,EAAAxyO,EAAAsE,aAEA,kBAAA+uO,EACAP,EAAAnwH,UAAA0wH,EACK33O,EAAAhG,MAAA29O,IACLP,EAAAlwH,YAAAywH,QAIAP,EAAAlwH,YAAAmwH,GACAA,EAAAR,SAAAjqO,EAAAtQ,IAAA,YACA+6O,EAAAnrO,MAAA02I,QAAA,kFACAy0F,EAAAnrO,MAAAoQ,MAAA1P,EAAAtQ,IAAA,aACA+6O,EAAAnrO,MAAAimB,YAAAvlB,EAAAtQ,IAAA,uBACA+6O,EAAAnrO,MAAA5C,gBAAAsD,EAAAtQ,IAAA,iBACA+6O,EAAA57O,MAAAnC,EAAAmC,MAGA,IAAAw6O,EAAA38O,EAAAk+O,KACAI,EAAA/7O,SAAAC,cAAA,OACA87O,EAAA1rO,MAAA02I,QAAA,6CACA,IAAAi1F,EAAA,4GACAC,EAAAj8O,SAAAC,cAAA,OACAi8O,EAAAl8O,SAAAC,cAAA,OACA+7O,GAAA,qBAAmBjrO,EAAAtQ,IAAA,eACnBu7O,GAAA,UAAmBjrO,EAAAtQ,IAAA,mBACnB,IAAA2N,EAAA9N,KAEA,SAAAkwB,IACAgpC,EAAA+xD,YAAAj4C,GACAllE,EAAA3G,KAAA,KAGA84F,EAAA7pC,iBAAAulL,EAAA,QAAAzrN,GACA+vE,EAAA7pC,iBAAAwlL,EAAA,mBACA,IAAA7gN,EAEA,IAEAA,EADA,oBAAA6/M,EACAA,EAAAK,EAAA9yO,EAAAsE,aAEAotO,EAAAqB,EAAA57O,MAAAw6O,GAEK,MAAAphO,GAEL,MADAwX,IACA,IAAAptB,MAAA,0BAAA4V,GAGAqiB,GACA5yB,EAAA2P,eAAA,CACAvY,KAAA,iBACAw7B,cAIA7K,MAEAyrN,EAAA7wH,UAAA9iD,EAAA,GACA4zK,EAAA9wH,UAAA9iD,EAAA,GACA4zK,EAAA7rO,MAAA02I,QAAAi1F,EACAC,EAAA5rO,MAAA02I,QAAAi1F,GACAjrO,EAAAtQ,IAAA,aAAAs7O,EAAA1wH,YAAA6wH,GACAH,EAAA1wH,YAAA4wH,GAEA17I,EAAA7pC,iBAAA8kL,EAAA,mBAAAxiO,GACA,QAAAA,EAAAmjO,SAAAnjO,EAAAo/C,OAAA,CAEA,IAAAp1D,EAAA1C,KAAAV,MACA22C,EAAAj2C,KAAA87O,eACAjuM,EAAA7tC,KAAA+7O,aAEA/7O,KAAAV,MAAAoD,EAAA+kD,UAAA,EAAAxR,GAAAqjM,EAAA52O,EAAA+kD,UAAA5Z,GAEA7tC,KAAA87O,eAAA97O,KAAA+7O,aAAA9lM,EAAA,EAEAgqD,EAAAhpC,KAAAv+C,MAGAs6D,EAAA+3C,YAAAovH,GACAnnK,EAAA+3C,YAAAkwH,GACAjoK,EAAA+3C,YAAA0wH,GACAR,EAAAlrO,MAAArI,OAAAwxD,EAAAoyJ,aAAA,QACApyJ,EAAA6xD,YAAA/3C,GACAhzE,KAAAmH,KAAA6rE,GAGAwnK,EAAAt+O,UAAA6Z,OAAA,SAAAtL,EAAAtC,GACAnI,KAAAmH,MAAAgB,EAAA0D,SAAAo/G,YAAAjrH,KAAAmH,OAGAqzO,EAAAt+O,UAAA4Z,QAAA,SAAArL,EAAAtC,GACAnI,KAAA+V,OAAAtL,EAAAtC,IA0BAwsN,EAAA54M,SAAA,WAAAy+N,GACAllN,EAAAlb,eAAA,CACA7a,KAAA,iBACAwV,MAAA,kBACA7J,OAAA,oBACC,SAAAuG,EAAAhH,GACD,IAAAuxO,EAAA,GACAn4O,EAAAjF,KAAA6S,EAAAspB,UAAA5hB,OAAA,SAAAw+I,GACA,IAAA5mJ,EAAAtG,EAAA+sH,gBAAAmgC,EAAAp3J,MAAA,GAEA,GAAAwQ,EAOK,CACL,IAAA+nK,EAAA/nK,EAAA5Q,IAAA,QACA67O,EAAAv6O,KAAA,CACAlB,KAAAo3J,EAAAp3J,KACAiB,KAAAi5O,EAAA9iF,EAAAn2J,KAAAs3K,UARAkjE,EAAAv6O,KAAAoC,EAAAlD,OAAA,CAEApB,KAAA,WACOo4J,MASPltJ,EAAAw8B,YAAApjC,EAAArF,SAAA,CACA2a,OAAA6iO,GACGvqO,EAAAspB,cAEH,IAAAqG,EAAAo5M,EACAriN,EAAA93B,QAAA+gC,mBC3eA,IAAA9L,EAAc5xB,EAAQ,KAEtBG,EAAaH,EAAQ,KAErBs1G,EAAsBt1G,EAAQ,KAE9BixI,EAAyBjxI,EAAQ,KAEjCu4O,EAAcv4O,EAAQ,KAEtB60L,EAAiB70L,EAAQ,KAEzBskE,EAAWtkE,EAAQ,KAEnBixN,EAAqBjxN,EAAQ,KAE7BA,EAAQ,KAsBR,IAAAw4O,EAAAl0K,EAAAnyC,QAAAS,SACA13B,EAAAiF,EAAAjF,KAEAu9O,EAAA,4BAEA,SAAAC,EAAA3rO,EAAAhG,EAAAtC,IAKAnI,KAAAw7L,iBAAA,IAAAxiF,EAAA7wG,EAAA2D,UAAAlC,GAAA,QAAA/F,EAAA7E,KAAAgB,KAAAy7L,SAAAz7L,OAAAi/G,QAMAj/G,KAAAq8O,cAGAD,EAAA91M,cAAA,CACAtP,MAAA,EAEAq/K,KAAA,CACApuI,KAAA,wDACAC,KAAA,6DAGAxyC,MAAA7xB,EAAA5G,MAAAi/O,EAAAxmN,QAEA,IAAAijC,EAAAyjL,EAAAlgP,UAEAy8D,EAAA9mD,OAAA,SAAAkjN,EAAAtqN,EAAAtC,EAAAsJ,GACAzR,KAAAyQ,MAAAskN,EACA/0N,KAAAyK,UACAzK,KAAAmI,MAwIA,SAAA4sN,EAAAtqN,EAAAyD,EAAAuD,EAAAtJ,GACA,IAAAm0O,EAAApuO,EAAAmuO,cAEA5qO,GAAA,qBAAAA,EAAAlS,OACA+8O,EAAA,mBAAA7qO,EAAA3T,KAAA2T,EAAA8qO,sBAGAruO,EAAAmuO,cAAAC,EACAvnB,EAAAE,cAAA,OAAAqnB,EAAA,qBACA,IAAAhrB,EAAA,IAAA38E,EAAA6nG,EAAAznB,EAAA/oN,QAAAvB,EAAA,CACAyqI,QAAA,WAGAhnI,EAAAstL,iBAAAz8E,UAAAuyG,EAAA56E,cAAAvuI,EAAA,SAAA2tI,GACA,OAAAA,EAAA0B,gBAAA1B,EAAA2B,cAAA,SAAA3B,EAAA0B,eAAA1B,EAAA2B,cAAA,kBACG/4B,cAAA49H,GAAA,CACHriI,UAAA,OACAtB,WAAA,CAEA94F,UAAA,EACAW,KAAA,qBA3JAi8N,CAAA1nB,EAAAtqN,EAAAzK,KAAAyR,EAAAtJ,GAmIA,SAAA4sN,EAAAtqN,GACAsqN,EAAAE,cAAA,OAAAgnB,EAAA5uN,MAAA5iB,GAAA,uBAnIAiyO,CAAA3nB,EAAAtqN,IAGAkuD,EAAA0vH,QAAA,SAAA59K,EAAAtC,EAAA5I,GACAgsI,EAAAhsI,GAAAlC,KAAA2C,OAGA24D,EAAA5iD,OAAA,SAAAtL,EAAAtC,GACAnI,KAAAw7L,iBAAA17E,WAGAnnD,EAAA7iD,QAAA,SAAArL,EAAAtC,GACAnI,KAAAw7L,iBAAA1lL,WAOA,IAAAy1H,EAAA,CACAtjE,KAAA,WACA,IAAA00K,GAAA38O,KAAAq8O,cACAr8O,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,mBACAzB,IAAA,iBACAy+O,qBAAAI,KAGAz0K,KAAA,WACAloE,KAAAuiO,oBAAA0Z,EAAA3nO,IAAAtU,KAAAyK,YA0FA,SAAA+xO,EAAAxwO,GACA,IAAAgnF,EAAA,GAOA,OALAnvF,EAAAjF,KAAA,qCAAA2B,GACAyyF,EAAAzyF,GAAAyL,EAAAzL,GACA,MAAAyyF,EAAAzyF,KAAAyyF,EAAAzyF,GAAA,SACA,IAAAyyF,EAAAzyF,IAAA,SAAAyyF,EAAAzyF,MAAAyyF,EAAAzyF,GAAA,MAEAyyF,EA3FAr6B,EAAA8iI,SAAA,SAAApgF,EAAAtjG,GACA,GAAAA,EAAAujG,OAAAD,EAAA59G,OAAA,CAIA,IAAAkgJ,EAAA,GACAlzI,EAAAzK,KAAAyK,QAEAzK,KAAAw7L,iBAAAp8E,aAAA,IAGA,IAAAu1B,EAAA6nG,EAAAx8O,KAAAyQ,MAAAzE,QAAAvB,EAAA,CACAyqI,QAAA,WAEAI,kBAAAj6B,EAAA5wG,EAAA,SAAA8qI,EAAAC,EAAA5qI,GACA,mBAAAA,EAAArL,KAAA,CAIA,IAAA06G,EAAAs7B,EAAAt7B,UAEA,SAAAA,GACA2iI,EAAA,IAAAhyO,EAAA4qI,EAAA,IACAonG,EAAA,IAAAhyO,EAAA4qI,EAAA,KAEAonG,EAAA,CACA/0K,MAAA,IACAC,MAAA,KACOmyC,GAAArvG,EAAA4qI,MAGPymG,EAAAx6O,KAAAgJ,EAAAkzI,GAEA39I,KAAAuiO,oBAAA5kF,GAEA,SAAAi/F,EAAArgL,EAAA3xD,EAAAwqI,GACA,IAAAzzF,EAAA/2C,EAAAqyF,QAAA1gC,GACArY,EAAAvC,EAAAlxC,MACAk0E,EAeA,SAAApoB,EAAArY,EAAAz5C,GACA,IAAAoyO,EAQA,OAPApyO,EAAAuD,cAAA,CACAlF,SAAA,WACAwK,QAAA,UACK,SAAAwpO,GACLA,EAAAh1J,aAAAvrB,EAAArY,EAAAtuC,kBACAinO,EAAAC,KAEAD,EAxBAE,CAAAxgL,EAAArY,EAAAz5C,GAEA0yN,EAAAx4I,EAAAuD,4BAAAhkC,GAAAw4K,gBAEA,MAAAS,EAAA53I,cAAA,MAAA43I,EAAA33I,eACA4vD,EAAAmjD,EAAA,EAAAnjD,EAAAz4I,QAAAglD,EAAAhlB,MAAAykB,YAAA,EAAA+7K,EAAA53I,aAAA43I,EAAA33I,eAGAb,IAAAg5D,EAAAh5D,EAAA19E,IAAA,CACAy2I,WAAA/4D,EAAA19E,GACAo+E,WAAA+vD,EAAA,GACA9vD,SAAA8vD,EAAA,OAqBAz8E,EAAA4pK,oBAAA,SAAA5kF,GACA,IAAAlpI,EAAA,GAEA7V,EAAA++I,EAAA,SAAA9oI,EAAA6oI,GACAjpI,EAAAhT,KAAAoC,EAAA5G,MAAA4X,MAEAJ,EAAAhX,QAAAuC,KAAAmI,IAAA2P,eAAA,CACAvY,KAAA,WACA3B,KAAAoC,KAAA0S,IACA+B,WA4CAkgN,EAAA54M,SAAA,WAAAqgO,GAGA9mN,EAAAxb,qBAAA,SAAA9N,GACA,GAAAA,EAAA,CAIA,IAAAgxO,EAAAhxO,EAAAsqB,WAAAtqB,EAAAsqB,SAAA,IAEAzyB,EAAAvF,QAAA0+O,KACAhxO,EAAAsqB,SAAA0mN,EAAA,CAAAA,IAGA,IAAA/iF,EAAAjuJ,EAAA6pB,QAEA,GAAAokI,IAEAp2J,EAAAvF,QAAA27J,KACAA,IAAA,IAGAA,KAAAC,SAAA,CACA,IAAA+iF,EAAAhjF,EAAAC,QAAA5jI,SAGA4mN,EAAA,QAAAD,GACAC,EAAA,QAAAD,IAIA,SAAAC,EAAA/sK,EAAA8sK,GACA,GAAAA,EAAA,CAKA,IAAAE,EAAAhtK,EAAA,QACAitK,EAAAH,EAAAE,GAEA,MAAAC,GAAA,OAAAA,GAAAv5O,EAAAvF,QAAA8+O,KACAA,GAAA,IAAAA,GAAA,SAAAA,EAAA,IAAAA,IAqBA,SAAAt0O,EAAAhK,GACA,IAAAiI,EAAAiF,EAAAlD,GAEAjF,EAAAvF,QAAAyI,KACAA,IAAA,CAAAA,GAAA,IAGAnI,EAAAmI,EAAAjI,GAzBAu+O,CAAAltK,EAAA,SAAAspF,EAAAnzE,GACA,SAAA82J,GAAA,OAAAA,IAAA,IAAAv5O,EAAAhD,QAAAu8O,EAAA92J,GAAA,CAIA,IAAAmgC,EAAA,CACAlnH,KAAA,SACA+9O,cAAA,EAEAr2O,GAAAk1O,EAAAhsK,EAAAmW,GAIAmgC,EAAA02H,GAAA72J,EACA02J,EAAAv7O,KAAAglH,UAcA,IAAArlF,EAAAg7M,EACAjkN,EAAA93B,QAAA+gC,mBClTA19B,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,sBCZR,IAqBA09B,EArBoB19B,EAAQ,KAqB5B/C,OAAA,CACApB,KAAA,oBAGA44B,EAAA93B,QAAA+gC,mBCzBA,IAqBAA,EArBmB19B,EAAQ,KAqB3B/C,OAAA,CACApB,KAAA,oBAGA44B,EAAA93B,QAAA+gC,mBCzBA,IAAA9L,EAAc5xB,EAAQ,KAEtBu4O,EAAcv4O,EAAQ,KAEtBskE,EAAWtkE,EAAQ,KAEnBixN,EAAqBjxN,EAAQ,KAqB7B65O,EAAAv1K,EAAAnyC,QAAA0yC,QAEA,SAAAi1K,EAAA/sO,GACAzQ,KAAAyQ,QAGA+sO,EAAAl3M,cAAA,CACAtP,MAAA,EACAq/K,KAAA,kLACA3gL,MAAA6nN,EAAA7nN,OAEA8nN,EAAAthP,UAEAmsL,QAAA,SAAA59K,EAAAtC,EAAA5I,GACA08O,EAAA/iO,MAAAzO,GACAtC,EAAA2P,eAAA,CACAvY,KAAA,UACA3B,KAAAoC,KAAA0S,OAIAiiN,EAAA54M,SAAA,UAAAyhO,GACAloN,EAAAlb,eAAA,CACA7a,KAAA,UACAwV,MAAA,UACA7J,OAAA,oBACC,SAAAuG,EAAAhH,GACDA,EAAA8M,YAAA,cAEA,IAAA6pB,EAAAo8M,EACArlN,EAAA93B,QAAA+gC,mBCzDA19B,EAAQ,OAQR0nF,EANe1nF,EAAQ,KAEvB0nF,iBAIA,MAFc1nF,EAAQ,wBCNtB,IAAAK,EAAUL,EAAQ,KAIlB8b,EAFc9b,EAAQ,KAEtB8b,eAEAf,EAAmB/a,EAAQ,KAE3BI,EAAgBJ,EAAQ,KAExBw5B,EAAkBx5B,EAAQ,KAE1Bq7E,EAAiBr7E,EAAQ,KAEzBw6E,EAAex6E,EAAQ,KAEvB29B,EAAkB39B,EAAQ,KAE1Bga,EAAaha,EAAQ,KAErBka,EAAWla,EAAQ,KAEnB8Z,EAAW9Z,EAAQ,KAEnB49B,EAAgB59B,EAAQ,KAExBmrF,EAAenrF,EAAQ,KAEvB+5O,EAAc/5O,EAAQ,KAItBi1E,EAAAr3C,EAAAq3C,IACAh6D,EAAAhQ,KAAAgQ,MACAmd,EAAAntB,KAAAmtB,KACA1R,EAAAzb,KAAAyb,IACAolB,EAAA7gC,KAAA6gC,IACAF,EAAA3gC,KAAA2gC,IACAzgC,EAAAF,KAAAG,IAEA,IAAA/K,EAAAkJ,gBAAA,CACA,IAEA4rE,EAAA,MACA6kK,EAAA7kK,EAAA,EAIA8kK,EAAA,SAAAl1O,GACAA,EAAAsH,MAAA02I,QAAA,uDACAh+I,EAAAm1O,UAAA/kK,EAAA,IAAAA,EACApwE,EAAAo1O,YAAA,OAOAC,EAAA,SAAAlgM,EAAAjzB,EAAArnB,GACA,cAAAs6C,EAAAjzB,EAAArnB,GAAAomB,KAAA,UAGAq0N,EAAA,SAAA/0O,EAAAgZ,GACAA,GAAAhZ,GAAAgZ,EAAA4wD,aAAA5pE,GACAA,EAAA+hH,YAAA/oG,IAIAjM,EAAA,SAAA/M,EAAAgZ,GACAA,GAAAhZ,GAAAgZ,EAAA4wD,aAAA5pE,GACAA,EAAAiiH,YAAAjpG,IAIAg8N,EAAA,SAAAxlO,EAAAD,EAAAoJ,GAEA,OA/BA,KA+BAgL,WAAAnU,IAAA,GA9BA,KA8BAmU,WAAApU,IAAA,GAAAoJ,GAGA4K,EAAA,SAAAjtB,EAAAquF,GACA,wBAAAruF,EACAA,EAAAsuF,YAAA,QACAjhE,WAAArtB,GAAA,IAAAquF,EAGAhhE,WAAArtB,GAGAA,GAOA2+O,EAAA,SAAAx1O,EAAA0X,EAAAk2D,GACA,IAAAtkE,EAAAjO,EAAAkO,MAAAmO,GACAk2D,KAEAjpD,MAAAipD,KACAA,EAAA,GAGAtkE,IACAtJ,EAAA0X,MAAA29N,EAAA/rO,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAtJ,EAAA4tE,UAAAtkE,EAAA,KAIAmsO,EAAA,SAAA/9N,GACA,IAAApO,EAAAjO,EAAAkO,MAAAmO,GACA,OAAA29N,EAAA/rO,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAuIAosO,EAAA,SAAAC,EAAA7+O,EAAAwQ,EAAAsuO,GACA,IAAAC,EAAA,QAAA/+O,EACAkJ,EAAA21O,EAAA/xH,qBAAA9sH,GAAA,GAEA,MAAAwQ,EAAAxQ,IAAA,SAAAwQ,EAAAxQ,KAAA++O,OAAAvuO,EAAA8P,YACAu+N,EAAAE,EAAA,2BAEAvuO,EAAAxQ,aAAAsvF,GACA94E,EAAAqoO,EAAA31O,GAGAA,IACAA,EAAAg1O,EAAAt/F,WAAA5+I,IAGA++O,EAnJA,SAAA71O,EAAAsH,EAAAsuO,GAEA,IAAA79N,EAAAzQ,EAAAyQ,KAEA,SAAAA,EAEA,GAAAA,aAAAquE,EAAA,CACA,IAAA0vJ,EACA1gM,EAAA,EACA2gM,EAAA,MAEArpO,EAAA,EAEAspO,EAAA,EACA1/N,EAAAs/N,EAAAl/N,kBACA4qM,EAAAhrM,EAAAtX,MACAuiN,EAAAjrM,EAAArX,OAEA,cAAA8Y,EAAAjhB,KAAA,CACAg/O,EAAA,WACA,IAAA13N,EAAAw3N,EAAAx3N,UACA63C,EAAA,CAAAl+C,EAAAxQ,EAAA+5M,EAAAvpM,EAAAvQ,EAAA+5M,GACArrJ,EAAA,CAAAn+C,EAAAkH,GAAAqiM,EAAAvpM,EAAAoH,GAAAoiM,GAEAnjM,IACArH,EAAAk/C,IAAA73C,GACArH,EAAAm/C,IAAA93C,IAGA,IAAA4T,EAAAkkC,EAAA,GAAAD,EAAA,GACAhkC,EAAAikC,EAAA,GAAAD,EAAA,IACA7gB,EAAA,IAAAlvC,KAAAw3F,MAAA1rE,EAAAC,GAAA/rB,KAAA4U,IAEA,IACAs6B,GAAA,KAKAA,EAAA,OACAA,EAAA,OAES,CACT0gM,EAAA,iBACA7/K,EAAA,CAAAl+C,EAAAxQ,EAAA+5M,EAAAvpM,EAAAvQ,EAAA+5M,GACAnjM,EAAAw3N,EAAAx3N,UADA,IAEA8V,EAAA0hN,EAAA1hN,MACAl1B,EAAAsiN,EACAriN,EAAAsiN,EACAw0B,EAAA,EACA9/K,EAAA,GAAA3/C,EAAA/O,GAAAvI,GAAAi3D,EAAA,GAAA3/C,EAAA9O,GAAAvI,GAEAmf,GACArH,EAAAk/C,IAAA73C,GAGApf,GAAAk1B,EAAA,GAAAk8C,EACAnxE,GAAAi1B,EAAA,GAAAk8C,EACA,IAAA39B,EAAArsC,EAAApH,EAAAC,GACAyN,EAAA,EAAA+lC,EACAujM,EAAA,EAAAj+N,EAAAo9B,EAAA1C,EAAA/lC,EAKA,IAAAykI,EAAAp5H,EAAA0hB,WAAAvlC,QACAi9I,EAAA1sH,KAAA,SAAAwxN,EAAAC,GACA,OAAAD,EAAAl7O,OAAAm7O,EAAAn7O,SAOA,IALA,IAAA/F,EAAAm8I,EAAAn8I,OAEAmhP,EAAA,GACApqL,EAAA,GAEAj3D,EAAA,EAAuBA,EAAAE,EAAYF,IAAA,CACnC,IAAA05D,EAAA2iF,EAAAr8I,GACAshP,EAAAX,EAAAjnL,EAAA92C,OACAq0C,EAAA/yD,KAAAw1D,EAAAzzD,OAAAi7O,EAAAtpO,EAAA,IAAA0pO,EAAA,IAEA,IAAAthP,OAAAE,EAAA,GACAmhP,EAAAn9O,KAAAo9O,GAIA,GAAAphP,GAAA,GACA,IAAAqhP,EAAAF,EAAA,MACAG,EAAAH,EAAA,MACAI,EAAAJ,EAAA,MAAA7uO,EAAAsmE,QACA4oK,EAAAL,EAAA,MAAA7uO,EAAAsmE,QACA5tE,EAAAlJ,KAAAg/O,EACA91O,EAAAlC,OAAA,OACAkC,EAAA+1O,MAAA,OACA/1O,EAAAo1C,QACAp1C,EAAA0X,MAAA2+N,EACAr2O,EAAAs2O,SACAt2O,EAAA+rD,SAAA9qC,KAAA,KAGAjhB,EAAA4tE,QAAA4oK,EAEAx2O,EAAAw2O,SAAAD,EAGA,WAAAT,IACA91O,EAAAy2O,cAAAV,EAAA90N,KAAA,WAIAu0N,EAAAx1O,EAAA+X,EAAAzQ,EAAAsmE,SAuCA8oK,CAAA12O,EAAAsH,EAAAsuO,GAlCA,SAAA51O,EAAAsH,GAUA,MAAAA,EAAA8yB,WACAp6B,EAAA22O,UAAArvO,EAAA8yB,SAAAnZ,KAAA,MAGA,MAAA3Z,EAAAwQ,QAAAxQ,EAAAwQ,kBAAAsuE,GACAovJ,EAAAx1O,EAAAsH,EAAAwQ,OAAAxQ,EAAAsmE,SAmBAgpK,CAAA52O,EAAAsH,GACAguO,EAAAK,EAAA31O,KAEA21O,EAAAE,EAAA,4BACAvoO,EAAAqoO,EAAA31O,KAIA2iB,EAAA,WAwLA5N,EAAAthB,UAAAojP,SAAA,SAAAC,GACA,IAAAxvO,EAAA/P,KAAA+P,MACAquO,EAAAp+O,KAAAw/O,OAEApB,IACAA,EAAAX,EAAAt/F,WAAA,SACAw/F,EAAAS,GACAp+O,KAAAw/O,OAAApB,GAGAD,EAAAC,EAAA,OAAAruO,EAAA/P,MACAm+O,EAAAC,EAAA,SAAAruO,EAAA/P,MACA,IAAAyf,EAAAzf,KAAA6mB,UACA44N,EAAA,MAAAhgO,EACAigO,EAAAtB,EAAA/xH,qBAAA,aAEA,GAAAqzH,EAAA,CACA,IAAA7/N,EAAA9P,EAAA8P,UAKA,GAAA4/N,IAAA1vO,EAAA4b,cAAA,CACA,IAAAgkB,EAAAlwB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAI,GAAAic,EAAA1R,EAAAulB,IAGA+vM,EAAAC,OAAA9/N,EAAA,KAGA,IAAAZ,EAAAjf,KAAAif,OAAAjf,KAAAif,KAAA,IAAAqiB,GAEAthC,KAAA0hC,cACAziB,EAAAkkB,YACAnjC,KAAAqjC,UAAApkB,EAAAjf,KAAAwnB,OACAvI,EAAA07D,WACA36E,KAAA0hC,aAAA,GAGA08M,EAAAn/N,KA7NA,SAAAA,EAAAQ,GACA,IAMAozI,EACAzpC,EACApuC,EACAz9E,EACAi+E,EACAC,EAXAh8C,EAAAk5C,EAAAl5C,EACA2/B,EAAAuZ,EAAAvZ,EACAxJ,EAAA+iB,EAAA/iB,EACAuJ,EAAAwZ,EAAAxZ,EACAyZ,EAAAD,EAAAC,EACA51E,EAAA,GAOAxB,EAAAyd,EAAAzd,KACA2nH,EAAAlqG,EAAAzhB,MAEA,IAAAD,EAAA,EAAeA,EAAA4rH,GAAgB,CAK/B,OAHAC,EAAA,GACAypC,EAAA,EAFA73E,EAAAx5E,EAAAjE,MAKA,KAAAkiC,EACA2pF,EAAA,MACAypC,EAAA,EACAr3E,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA6tB,EAAA,MAAAowD,EACApwD,EAAA,MAAAqwD,EACA,MAEA,KAAA7lB,EACAwzD,EAAA,MACAypC,EAAA,EACAr3E,EAAAh6E,EAAAjE,KACAk+E,EAAAj6E,EAAAjE,KACA6tB,EAAA,MAAAowD,EACApwD,EAAA,MAAAqwD,EACA,MAEA,KAAA7C,EACA,KAAAxZ,EACAgqD,EAAA,MACAypC,EAAA,EACA,IAIA9xF,EACAC,EALAv5C,EAAAjmB,EAAAjE,KACAoqB,EAAAnmB,EAAAjE,KACAmqB,EAAAlmB,EAAAjE,KACAqqB,EAAApmB,EAAAjE,KAIAy9E,IAAApC,GAEA7X,EAAAr5C,EACAs5C,EAAAp5C,EACAF,KAAA,EAAAD,GAAA,EACAG,KAAA,EAAAD,GAAA,EACAF,GAAA+zD,EAAA,EAAA/zD,GAAA,EACAE,GAAA8zD,EAAA,EAAA9zD,GAAA,IAEAo5C,EAAAv/D,EAAAjE,KACAyjE,EAAAx/D,EAAAjE,MAGA6tB,EAAA,MAAA3D,EACA2D,EAAA,MAAAzD,EACAyD,EAAA,MAAA1D,EACA0D,EAAA,MAAAxD,EACAwD,EAAA,MAAA21C,EACA31C,EAAA,MAAA41C,EACAwa,EAAAza,EACA0a,EAAAza,EACA,MAEA,KAAA7B,EACA,IAAAnvD,EAAA,EACAC,EAAA,EACAqwB,EAAA,EACAC,EAAA,EACAsd,EAAA,EAEAp+B,IAEAzP,EAAAyP,EAAA,GACAxP,EAAAwP,EAAA,GACA6gB,EAAAxE,EAAArc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA8gB,EAAAzE,EAAArc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAo+B,EAAAlvC,KAAAw3F,OAAA1mF,EAAA,GAAA8gB,EAAA9gB,EAAA,GAAA6gB,IAGA,IAAA+c,EAAA77C,EAAAjE,KACA+/C,EAAA97C,EAAAjE,KACAs+E,EAAAr6E,EAAAjE,KACAu+E,EAAAt6E,EAAAjE,KACA+8E,EAAA94E,EAAAjE,KAAAsgD,EACA08B,EAAA/4E,EAAAjE,KAAA+8E,EAAAz8B,EAGAtgD,IACA,IAAA+mG,EAAA9iG,EAAAjE,KACAsjE,EAAAxjB,EAAA7N,EAAA8qC,GAAAuB,EACA/a,EAAAxjB,EAAAhO,EAAAgrC,GAAAwB,EAGAv8E,GAFAkoB,EAAA41B,EAAA7N,EAAA+qC,GAAAsB,EACAl0D,EAAA21B,EAAAhO,EAAAirC,GAAAuB,EACAwoB,EAAA,eAEA31F,KAAAyb,IAAAy2C,EAAAp5C,GAAA,OAEA9Y,KAAAyb,IAAAmwD,EAAAD,GAAA,IAGAgqB,IACAzjC,GAAA,OAIAlyD,KAAAyb,IAAA02C,EAAAxjB,GAAA,KACAgnD,GAAAzjC,EAAAxjB,IAAAinD,GAAAzjC,EAAAxjB,EACA11B,GAAA,MAEAA,GAAA,MAEe28E,GAAAxjC,EAAAxjB,IAAAgnD,GAAAxjC,EAAAxjB,EACf71B,GAAA,MAEAA,GAAA,OAKAzkB,EAAAvB,KAAAlC,EAAAof,IAAA0+B,EAAAw+B,GAAAv7C,EAAAtwB,GAAA6oE,EAAA6kK,GAxWA,IAwWA/+N,IAAA2+B,EAAAw+B,GAAAv7C,EAAAtwB,GAAA4oE,EAAA6kK,GAxWA,IAwWA/+N,IAAA0+B,EAAAw+B,GAAAv7C,EAAAtwB,GAAA6oE,EAAA6kK,GAxWA,IAwWA/+N,IAAA2+B,EAAAw+B,GAAAv7C,EAAAtwB,GAAA4oE,EAAA6kK,GAxWA,IAwWA/+N,GAAAkiD,EAAAvgC,EAAAtwB,GAAA6oE,EAAA6kK,GAxWA,IAwWA/+N,GAAAmiD,EAAAvgC,EAAAtwB,GAAA4oE,EAAA6kK,GAxWA,IAwWA/+N,GAAA8I,EAAA6Y,EAAAtwB,GAAA6oE,EAAA6kK,GAxWA,IAwWA/+N,GAAAgJ,EAAA4Y,EAAAtwB,GAAA4oE,EAAA6kK,IACAliK,EAAA/zD,EACAg0D,EAAA9zD,EACA,MAEA,KAAAgxD,EAAArjB,EACA,IAAAoJ,EAAAtzC,EAAA,GACAuzC,EAAAvzC,EAAA,GAEAszC,EAAA,GAAAl9D,EAAAjE,KACAmhE,EAAA,GAAAl9D,EAAAjE,KAEAohE,EAAA,GAAAD,EAAA,GAAAl9D,EAAAjE,KACAohE,EAAA,GAAAD,EAAA,GAAAl9D,EAAAjE,KAEAkiB,IACAD,EAAAk/C,IAAAj/C,GACAD,EAAAm/C,IAAAl/C,IAGAi/C,EAAA,GAAA//C,EAAA+/C,EAAA,GAAAma,EAAA6kK,GACA/+K,EAAA,GAAAhgD,EAAAggD,EAAA,GAAAka,EAAA6kK,GACAh/K,EAAA,GAAA//C,EAAA+/C,EAAA,GAAAma,EAAA6kK,GACA/+K,EAAA,GAAAhgD,EAAAggD,EAAA,GAAAka,EAAA6kK,GACA16O,EAAAvB,KACA,MAAAi9D,EAAA,GAjYA,IAiYAA,EAAA,GACA,MAAAC,EAAA,GAlYA,IAkYAD,EAAA,GACA,MAAAC,EAAA,GAnYA,IAmYAA,EAAA,GACA,MAAAD,EAAA,GApYA,IAoYAC,EAAA,IACA,MAEA,KAAAga,EAAAE,EAEA71E,EAAAvB,KAAA,OAGA,GAAAoxJ,EAAA,GACA7vJ,EAAAvB,KAAA2nH,GAEA,QAAAnqF,EAAA,EAAuBA,EAAA4zH,EAAY5zH,IAAA,CACnC,IAAAm0B,EAAAhoC,EAAA6T,GACAxf,GAAAD,EAAA4zC,IAAA3zC,GAEAzc,EAAAvB,KAAAkd,EAAAy0C,EAAA,GAAAylB,EAAA6kK,GAnZA,IAmZA/+N,EAAAy0C,EAAA,GAAAylB,EAAA6kK,GAAAz+M,EAAA4zH,EAAA,EAnZA,IAmZA,MAKA,OAAA7vJ,EAAA0mB,KAAA,IA2CA8/F,CAAAvqG,EAAAjf,KAAA6mB,WACAu3N,EAAAruO,MAAA6vO,OAAA5B,EAAAh+O,KAAAwY,OAAAxY,KAAAuY,EAAAvY,KAAA2hB,IAEAo8N,EAAAwB,EAAAnB,GAEA,MAAAruO,EAAAqZ,KACAppB,KAAAwjC,aAAA+7M,EAAAv/O,KAAAmf,mBAEAnf,KAAA6/O,eAAAN,IAIA/hO,EAAAthB,UAAA4jP,SAAA,SAAAP,GACAxpO,EAAAwpO,EAAAv/O,KAAAw/O,QACAx/O,KAAA6/O,eAAAN,IAGA/hO,EAAAthB,UAAA6jP,MAAA,SAAAR,GACAxB,EAAAwB,EAAAv/O,KAAAw/O,QACAx/O,KAAAggP,eAAAT,IAaA7hO,EAAAxhB,UAAAojP,SAAA,SAAAC,GACA,IAGAU,EACAC,EAXArwO,EAOAE,EAAA/P,KAAA+P,MACAG,EAAAH,EAAAG,MAKA,GAXA,kBAFAL,EAaAK,IAXAL,EAAAi9G,SAAA,QAAAj9G,EAAAi9G,QAAAv9F,cAWA,CACA,IAAAmuD,EAAAxtE,EAAAwtE,IAEA,GAAAA,IAAA19E,KAAAmgP,UACAF,EAAAjgP,KAAAogP,YACAF,EAAAlgP,KAAAqgP,iBACO,CACP,IAAAC,EAAApwO,EAAAqwO,aACAC,EAAAF,EAAA74O,MACAg5O,EAAAH,EAAA54O,OACA44O,EAAA74O,MAAA,OACA64O,EAAA54O,OAAA,OAEAu4O,EAAA/vO,EAAAzI,MACAy4O,EAAAhwO,EAAAxI,OAEA44O,EAAA74O,MAAA+4O,EACAF,EAAA54O,OAAA+4O,EAEAzgP,KAAAmgP,UAAAziK,EACA19E,KAAAogP,YAAAH,EACAjgP,KAAAqgP,aAAAH,EAGAhwO,EAAAwtE,OAEAxtE,IAAAlQ,KAAAmgP,YACAF,EAAAjgP,KAAAogP,YACAF,EAAAlgP,KAAAqgP,cAIA,GAAAnwO,EAAA,CAIA,IAAAF,EAAAD,EAAAC,GAAA,EACAC,EAAAF,EAAAE,GAAA,EACA25G,EAAA75G,EAAAtI,MACAoiH,EAAA95G,EAAArI,OACA6wG,EAAAxoG,EAAA8tE,OACAy7I,EAAAvpN,EAAA+tE,QACAx9C,EAAAvwB,EAAAuwB,IAAA,EACAC,EAAAxwB,EAAAwwB,IAAA,EACAmgN,EAAAnoI,GAAA+gH,EACA8kB,EAAAp+O,KAAAw/O,OAEApB,IAGAA,EAAAX,EAAAz/F,IAAAr+I,cAAA,OACAg+O,EAAAS,GACAp+O,KAAAw/O,OAAApB,GAGA,IAEA3+N,EAFAkhO,EAAAvC,EAAAruO,MACA6wO,GAAA,EAEAvkK,EAAA,EACAC,EAAA,EASA,GAPAt8E,KAAA6mB,YACApH,EAAAzf,KAAA6mB,UACAw1D,EAAAvgD,EAAArc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA68D,EAAAxgD,EAAArc,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAmhO,EAAAnhO,EAAA,IAAAA,EAAA,IAGAmhO,EAAA,CAMA,IAAAliL,EAAA,CAAA1uD,EAAAC,GACA0uD,EAAA,CAAA3uD,EAAA45G,EAAA35G,GACA2uD,EAAA,CAAA5uD,EAAAC,EAAA45G,GACAhrD,EAAA,CAAA7uD,EAAA45G,EAAA35G,EAAA45G,GACArqG,EAAAk/C,IAAAj/C,GACAD,EAAAm/C,IAAAl/C,GACAD,EAAAo/C,IAAAn/C,GACAD,EAAAq/C,IAAAp/C,GACA,IAAA2gB,EAAAvxB,EAAA6vD,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAx+B,EAAAxxB,EAAA6vD,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAgiL,EAAA,GACAA,EAAAp/O,KAAA,OAAAge,EAAA,GAAA48D,EA/jBA,IA+jBA,OAAA58D,EAAA,GAAA68D,EA/jBA,IA+jBA,OAAA78D,EAAA,GAAA48D,EA/jBA,IA+jBA,OAAA58D,EAAA,GAAA68D,EA/jBA,IA+jBA,MAAA39D,EAAA3O,EAAAqsE,EAAA58D,EAAA,IA/jBA,IA+jBA,MAAAd,EAAA1O,EAAAqsE,EAAA78D,EAAA,KACAkhO,EAAA/5L,QAAA,KAAAjoC,EAAAyhB,GAAA,MAAAzhB,EAAA0hB,GAAA,OAEAsgN,EAAAlkP,OAAAqkP,4CAAAD,EAAAn3N,KAAA,gCAEAjK,IACAzP,IAAAqsE,EAAA58D,EAAA,GACAxP,IAAAqsE,EAAA78D,EAAA,IAGAkhO,EAAAlkP,OAAA,GACAkkP,EAAA3xO,KAAA2P,EAAA3O,GAAA,KACA2wO,EAAAzxO,IAAAyP,EAAA1O,GAAA,KAGA,IAAA8wO,EAAA/gP,KAAAghP,SACAC,EAAAjhP,KAAAkhP,QAEAH,IACAA,EAAAtD,EAAAz/F,IAAAr+I,cAAA,OACAK,KAAAghP,SAAAD,GAGA,IAAAI,EAAAJ,EAAAhxO,MAEA,GAAA2wO,EAAA,CAEA,GAAAT,GAAAC,EAmBAiB,EAAA15O,MAAAkX,EAAA09D,EAAA4jK,EAAAr2H,EAAArR,GAAA,KACA4oI,EAAAz5O,OAAAiX,EAAA29D,EAAA4jK,EAAAr2H,EAAAyvG,GAAA,SApBA,CACA,IAAA8nB,EAAA,IAAAtxO,MACAhC,EAAA9N,KAEAohP,EAAA/5N,OAAA,WACA+5N,EAAA/5N,OAAA,KACA44N,EAAAmB,EAAA35O,MACAy4O,EAAAkB,EAAA15O,OAEAy5O,EAAA15O,MAAAkX,EAAA09D,EAAA4jK,EAAAr2H,EAAArR,GAAA,KACA4oI,EAAAz5O,OAAAiX,EAAA29D,EAAA4jK,EAAAr2H,EAAAyvG,GAAA,KAEAxrN,EAAAsyO,YAAAH,EACAnyO,EAAAuyO,aAAAH,EACApyO,EAAAqyO,UAAAjwO,GAGAkxO,EAAA1jK,IAAAxtE,EAMA+wO,KACAA,EAAAxD,EAAAz/F,IAAAr+I,cAAA,QACAoQ,MAAAsxO,SAAA,SACArhP,KAAAkhP,QAAAD,GAGA,IAAAK,EAAAL,EAAAlxO,MACAuxO,EAAA75O,MAAAkX,GAAAirG,EAAAtpF,EAAAspF,EAAArR,GAAAl8B,GACAilK,EAAA55O,OAAAiX,GAAAkrG,EAAAtpF,EAAAspF,EAAAyvG,GAAAh9I,GACAglK,EAAA7kP,OAAAqkP,gDAAAxgN,EAAAspF,EAAArR,EAAAl8B,EAAA,QAAA97C,EAAAspF,EAAAyvG,EAAAh9I,EAAA,IAEA2kK,EAAAruK,YACAwrK,EAAArzH,YAAAk2H,GAGAF,EAAAnuK,YAAAquK,GACAA,EAAAl2H,YAAAg2H,QAGAI,EAAA15O,MAAAkX,EAAA09D,EAAAutC,GAAA,KACAu3H,EAAAz5O,OAAAiX,EAAA29D,EAAAutC,GAAA,KACAu0H,EAAArzH,YAAAg2H,GAEAE,KAAAruK,aACAwrK,EAAAnzH,YAAAg2H,GACAjhP,KAAAkhP,QAAA,MAIA,IAAAK,EAAA,GACArtL,EAAAnkD,EAAAsmE,QAEAniB,EAAA,IACAqtL,GAAA,kBAAA5iO,EAAA,IAAAu1C,GAAA,MAGAqtL,GAAAT,0DAAA5wO,EAAA,wBACAixO,EAAA1kP,OAAA8kP,EACAnD,EAAAruO,MAAA6vO,OAAA5B,EAAAh+O,KAAAwY,OAAAxY,KAAAuY,EAAAvY,KAAA2hB,IAEAo8N,EAAAwB,EAAAnB,GAEA,MAAAruO,EAAAqZ,MACAppB,KAAAwjC,aAAA+7M,EAAAv/O,KAAAmf,qBAIAzB,EAAAxhB,UAAA4jP,SAAA,SAAAP,GACAxpO,EAAAwpO,EAAAv/O,KAAAw/O,QACAx/O,KAAAw/O,OAAA,KACAx/O,KAAAkhP,QAAA,KACAlhP,KAAAghP,SAAA,KACAhhP,KAAA6/O,eAAAN,IAGA7hO,EAAAxhB,UAAA6jP,MAAA,SAAAR,GACAxB,EAAAwB,EAAAv/O,KAAAw/O,QACAx/O,KAAAggP,eAAAT,IAOA,IAsCAiC,EArCAC,EAAA,GACAC,EAAA,EAEAC,EAAAjiP,SAAAC,cAAA,OAoCAu9B,EAAA58B,UAAA,uBAAA8oB,EAAAmgC,GACA,IAAAy0F,EAAAy/F,EAAAz/F,IAEAwjG,KACAA,EAAAxjG,EAAAr+I,cAAA,QACAoQ,MAAA02I,QAAA,wFACAg3F,EAAAz/F,IAAA4jG,KAAA72H,YAAAy2H,IAGA,IACAA,EAAAzxO,MAAAq1C,KAAAmE,EACK,MAAAs4L,IAML,OAHAL,EAAA12H,UAAA,GAEA02H,EAAAz2H,YAAAizB,EAAAhzB,eAAA5hG,IACA,CACA3hB,MAAA+5O,EAAAM,eAmMA,IAhMA,IAAA/1J,EAAA,IAAAttE,EAEA+kB,EAAA,SAAA+7M,EAAAxgO,EAAAikC,EAAA++L,GACA,IAAAhyO,EAAA/P,KAAA+P,MAEA/P,KAAAuiC,SAAAw8C,EAAAC,mBAAAjvE,GAAA,GACA,IAAAqZ,EAAArZ,EAAAqZ,KAIA,GAFA,MAAAA,OAAA,IAEAA,EAAA,CAMA,GAAArZ,EAAA+T,KAAA,CACA,IAAAujC,EAAAnqB,EAAAkqB,cAAAh+B,EAAArZ,GACAqZ,EAAA,GAEA,QAAA7rB,EAAA,EAAqBA,EAAA8pD,EAAAN,MAAAtpD,OAA+BF,IAAA,CAIpD,IAHA,IAAAwqD,EAAAV,EAAAN,MAAAxpD,GAAAwqD,OACA1B,EAAA,GAEA1zB,EAAA,EAAuBA,EAAAo1B,EAAAtqD,OAAmBk1B,IAC1C0zB,EAAA5kD,KAAAsmD,EAAAp1B,GAAAvJ,MAGAA,EAAA3nB,KAAA4kD,EAAA38B,KAAA,KAGAN,IAAAM,KAAA,MAGA,IAAA1Z,EACAC,EACA8yF,EAAAhzF,EAAA8U,UACAm+E,EAAAjzF,EAAA+U,kBACAL,EA7FA,SAAAu9N,GACA,IAAAv9N,EAAAg9N,EAAAO,GAEA,IAAAv9N,EAAA,CAEAi9N,EARA,MASAA,EAAA,EACAD,EAAA,IAGA,IACA78N,EADA7U,EAAA4xO,EAAA5xO,MAGA,IACAA,EAAAq1C,KAAA48L,EACAp9N,EAAA7U,EAAA6U,WAAAxQ,MAAA,QACO,MAAAsE,IAEP+L,EAAA,CACA1U,QAAA0U,WAzBA,SA0BAw9N,QAAAlyO,EAAAmyO,aA1BA,SA2BAvC,OAAA5vO,EAAA2U,YA3BA,SA4BAq6B,KAAA,EAAApyB,WAAA5c,EAAA4U,UAAA,IACAw9N,OAAAv9N,GAAA,mBAEA68N,EAAAO,GAAAv9N,EACAi9N,IAGA,OAAAj9N,EAgEA29N,CAAAryO,EAAAq1C,MAEAA,EAAA3gC,EAAA1U,MAAA,IAAA0U,EAAAw9N,QAAA,IAAAx9N,EAAAk7N,OAAA,IAAAl7N,EAAAs6B,KAAA,OAAAt6B,EAAA09N,OAAA,IACAn/L,KAAA9lB,EAAA/d,gBAAAiK,EAAAg8B,EAAA29C,EAAAC,GAEA,IAAAvjF,EAAAzf,KAAA6mB,UAQA,GANApH,IAAAsiO,IACAh2J,EAAArwD,KAAA3c,GACAgtE,EAAAvsE,eAAAC,GACAV,EAAAgtE,GAGAg2J,EAiBA/xO,EAAA+O,EAAA/O,EACAC,EAAA8O,EAAA9O,MAlBA,CACA,IAAAkT,EAAApT,EAAAoT,aACA8Y,EAAAlsB,EAAA0T,aAEA,GAAAN,aAAA9mB,MACA2T,EAAA+O,EAAA/O,EAAAuc,EAAApJ,EAAA,GAAApE,EAAAtX,OACAwI,EAAA8O,EAAA9O,EAAAsc,EAAApJ,EAAA,GAAApE,EAAArX,QACAq7F,KAAA,WACO,CACP,IAAA7lD,EAAAhgB,EAAAksB,yBAAAjmC,EAAApE,EAAAkd,GACAjsB,EAAAktC,EAAAltC,EACAC,EAAAitC,EAAAjtC,EAEA8yF,KAAA7lD,EAAAr4B,UACAm+E,KAAA9lD,EAAAp4B,mBAOA9U,EAAAktB,EAAAsoB,YAAAx1C,EAAAgzC,EAAAv7C,MAAAs7F,GACA9yF,EAAAitB,EAAAuoB,YAAAx1C,EAAA+yC,EAAAt7C,OAAAs7F,GAEA/yF,GAAA+yC,EAAAt7C,OAAA,EAoCA,IAEAkqJ,EACAywF,EACAC,EAJAnkG,EAAAs/F,EAAAt/F,WACAokG,EAAAviP,KAAAwiP,WAKAD,EAqBAF,GADAzwF,GADA0wF,EAAAC,EAAAh2H,YACA5gC,aACAA,aApBA42J,EAAApkG,EAAA,QACAyT,EAAAzT,EAAA,QACAkkG,EAAAlkG,EAAA,YACAmkG,EAAAnkG,EAAA,QAGAkkG,EAAAtyO,MAAA,uBACA4tO,EAAA4E,GACA3wF,EAAA6wF,YAAA,EACAJ,EAAAz4O,IAAA,EACA24O,EAAA3kP,KAAA,MACA2kP,EAAA3qG,GAAA,YACAmmG,EAAAwE,EAAAD,GACAvE,EAAAwE,EAAA3wF,GACAmsF,EAAAwE,EAAAF,GACAriP,KAAAwiP,WAAAD,GAQA,IAAA35C,EAAA,CAAA54L,EAAAC,GACAyyO,EAAAH,EAAAxyO,MAEA0P,GAAAsiO,GACAviO,EAAAopL,IAAAnpL,GACA6iO,EAAA14O,IAAA,EACA04O,EAAAhlO,OAAAmC,EAAA,GAAAsN,QAAA,GAj4BA,IAi4BAtN,EAAA,GAAAsN,QAAA,GAj4BA,IAi4BAtN,EAAA,GAAAsN,QAAA,GAj4BA,IAi4BAtN,EAAA,GAAAsN,QAAA,UAEAu1N,EAAA9+O,QAAAmb,EAAAiqL,EAAA,aAAAjqL,EAAAiqL,EAAA,QAEA05C,EAAAplK,OAAA,MACAwlK,EAAA1zO,KAAA,MACA0zO,EAAAxzO,IAAA,QAEAozO,EAAA14O,IAAA,EACA84O,EAAA1zO,KAAA2P,EAAA3O,GAAA,KACA0yO,EAAAxzO,IAAAyP,EAAA1O,GAAA,MAGAoyO,EAAAM,OAh4BAC,OAg4BAx5N,GAh4BAnmB,QAAA,cAAyCA,QAAA,eAk4BzC,IACAo/O,EAAAtyO,MAAAq1C,OAEA,MAAA1sC,IAEAylO,EAAAoE,EAAA,QACA/hO,KAAAzQ,EAAAoR,SACAk1D,QAAAtmE,EAAAsmE,SACKr2E,MACLm+O,EAAAoE,EAAA,UACAhiO,OAAAxQ,EAAAqR,WACAi1D,QAAAtmE,EAAAsmE,QACAxzC,SAAA9yB,EAAA8yB,UACK7iC,MACLuiP,EAAAxyO,MAAA6vO,OAAA5B,EAAAh+O,KAAAwY,OAAAxY,KAAAuY,EAAAvY,KAAA2hB,IAEAo8N,EAAAwB,EAAAgD,KAGA1C,EAAA,SAAAN,GACAxpO,EAAAwpO,EAAAv/O,KAAAwiP,YACAxiP,KAAAwiP,WAAA,MAGAxC,EAAA,SAAAT,GACAxB,EAAAwB,EAAAv/O,KAAAwiP,aAGAl1O,EAAA,CAAA4wE,EAAA78C,EAAA3jB,EAAAF,EAAAI,GAEArgB,EAAA,EAAiBA,EAAA+P,EAAA7P,OAAiBF,IAAA,CAClC,IAAAo7D,EAAArrD,EAAA/P,GAAArB,UACAy8D,EAAAn1B,eACAm1B,EAAAknL,iBACAlnL,EAAAqnL,iBAGApiO,EAAA1hB,UAAAojP,SAAA,SAAAC,GACA,IAAAxvO,EAAA/P,KAAA+P,MAEA,MAAAA,EAAAqZ,KACAppB,KAAAwjC,aAAA+7M,EAAA,CACAvvO,EAAAD,EAAAC,GAAA,EACAC,EAAAF,EAAAE,GAAA,EACAxI,MAAA,EACAC,OAAA,GACO1H,KAAAmf,mBAAA,GAEPnf,KAAA6/O,eAAAN,IAIA3hO,EAAA1hB,UAAA4jP,SAAA,SAAAP,GACAv/O,KAAA6/O,eAAAN,IAGA3hO,EAAA1hB,UAAA6jP,MAAA,SAAAR,GACAv/O,KAAAggP,eAAAT,sBCl/BA,IAAAsD,EAAYn/O,EAAQ,KAEpB+5O,EAAc/5O,EAAQ,KAItB9E,EAFY8E,EAAQ,KAEpB9E,KAOA,SAAAymJ,EAAA3iJ,GACA,OAAAkmD,SAAAlmD,EAAA,IAOA,SAAAogP,EAAA9vK,EAAAzlE,GACAkwO,EAAAr/F,UACAp+I,KAAAgzE,OACAhzE,KAAAuN,UACA,IAAAw1O,EAAArjP,SAAAC,cAAA,OACA4/O,EAAA7/O,SAAAC,cAAA,OACAojP,EAAAhzO,MAAA02I,QAAA,mFACA84F,EAAAxvO,MAAA02I,QAAA,kCACAzzE,EAAA+3C,YAAAg4H,GACA/iP,KAAAgjP,SAAAzD,EACAv/O,KAAAijP,aAAAF,EACA/iP,KAAAyJ,SAEA,IAAAqgF,EAAAv8E,EAAAw8E,eACAC,EAAAz8E,EAAA08E,aAEA18E,EAAAw8E,eAAA,SAAAthF,GACAqhF,EAAAzsF,KAAAkQ,EAAA9E,GAEAA,GACAA,EAAAq3O,UAAAr3O,EAAAq3O,SAAAP,IAIAhyO,EAAA08E,aAAA,SAAAxhF,GAEAA,EAAAs3O,OAAAt3O,EAAAs3O,MAAAR,GACAv1J,EAAA3sF,KAAAkQ,EAAA9E,IAGAzI,KAAAkjP,aAAA,EAGAJ,EAAA5mP,UAAA,CACAyB,YAAAmlP,EACAx0O,QAAA,WACA,aAMAq7E,gBAAA,WACA,OAAA3pF,KAAAijP,cAEAn8F,sBAAA,WACA,IAAAC,EAAA/mJ,KAAA2pF,kBAEA,GAAAo9D,EACA,OACAC,WAAAD,EAAAC,YAAA,EACAC,UAAAF,EAAAE,WAAA,IAQA1iH,QAAA,WACA,IAAAj3B,EAAAtN,KAAAuN,QAAAC,gBAAA,MAEAxN,KAAAonJ,WAAA95I,IAEA85I,WAAA,SAAA95I,GAGA,IAFA,IAAAiyO,EAAAv/O,KAAAgjP,SAEAzlP,EAAA,EAAmBA,EAAA+P,EAAA7P,OAAiBF,IAAA,CACpC,IAAAkL,EAAA6E,EAAA/P,GAEAkL,EAAA21E,WAAA31E,EAAA2F,QACA3F,EAAA06O,qBACA16O,EAAAq3O,SAAAP,GAIA92O,EAAA06O,qBAAA,IAEA16O,EAAA06O,qBACA16O,EAAAs3O,MAAAR,GAGA92O,EAAA06O,qBAAA,EAEA16O,EAAA85B,UACA95B,EAAA02C,aAAA12C,EAAA02C,eACA12C,EAAA62O,UAAA72O,EAAAm5B,OAAAvkC,KAAAoL,EAAA82O,GACA92O,EAAAk2E,YAAAl2E,EAAAk2E,eAIAl2E,EAAA85B,SAAA,EAGAviC,KAAAkjP,cAIAljP,KAAAijP,aAAAl4H,YAAAw0H,GAEAv/O,KAAAkjP,aAAA,IAGAz5O,OAAA,SAAAhC,EAAAC,GACAD,EAAA,MAAAA,EAAAzH,KAAAojP,YAAA37O,EACAC,EAAA,MAAAA,EAAA1H,KAAAqjP,aAAA37O,EAEA,GAAA1H,KAAAimJ,QAAAx+I,GAAAzH,KAAAkmJ,SAAAx+I,EAAA,CACA1H,KAAAimJ,OAAAx+I,EACAzH,KAAAkmJ,QAAAx+I,EACA,IAAA47O,EAAAtjP,KAAAijP,aAAAlzO,MACAuzO,EAAA77O,QAAA,KACA67O,EAAA57O,SAAA,OAGAoO,QAAA,WACA9V,KAAAgzE,KAAA83C,UAAA,GACA9qH,KAAAgjP,SAAAhjP,KAAAijP,aAAAjjP,KAAAuN,QAAA,MAEAb,SAAA,WACA,OAAA1M,KAAAimJ,QAEAt5I,UAAA,WACA,OAAA3M,KAAAkmJ,SAEAhtI,MAAA,WACAlZ,KAAAijP,cACAjjP,KAAAgzE,KAAAi4C,YAAAjrH,KAAAijP,eAGAG,UAAA,WACA,IAAApwK,EAAAhzE,KAAAgzE,KACA+3E,EAAA/3E,EAAA+5I,aACA,OAAA/5I,EAAAq4I,aAAAhmE,EAAA0F,EAAAtjJ,QAAA49I,EAAA0F,EAAAwgE,aAAAlmE,EAAA0F,EAAAygE,cAAA,GAEA63B,WAAA,WACA,IAAArwK,EAAAhzE,KAAAgzE,KACA+3E,EAAA/3E,EAAA+5I,aACA,OAAA/5I,EAAAs4I,cAAAjmE,EAAA0F,EAAArjJ,SAAA29I,EAAA0F,EAAA4gE,YAAAtmE,EAAA0F,EAAA6gE,eAAA,IAWAhtN,EAAA,6JAAA2B,GAPA,IAAAgG,EAQAu8O,EAAA5mP,UAAAqE,IARAgG,EAQAhG,EAPA,WACAsiP,EAAA,iDAAAt8O,EAAA,SAQA,IAAA66B,EAAA0hN,EACA3qN,EAAA93B,QAAA+gC,mBC9KA19B,EAAQ,MAQR0nF,EANe1nF,EAAQ,KAEvB0nF,iBAIA,MAFc1nF,EAAQ,wBCNtB,IAEA/D,EAFY+D,EAAQ,KAEpB/D,cAEAi7H,EAAWl3H,EAAQ,KAEnB9E,EAAAg8H,EAAAh8H,KAEAikP,EAAYn/O,EAAQ,KAEpB8Z,EAAW9Z,EAAQ,KAEnBga,EAAaha,EAAQ,KAErB0nH,EAAY1nH,EAAQ,KAEpB6/O,EAAgB7/O,EAAQ,MAExB8/O,EAAsB9/O,EAAQ,MAE9B+/O,EAAsB//O,EAAQ,MAE9BggP,EAAoBhgP,EAAQ,MAE5B2nH,EAAe3nH,EAAQ,KAEvBslH,EAAAqC,EAAApsG,KACAyqG,EAAA2B,EAAAn7G,MACA+5G,EAAAoB,EAAAjiG,KAMA,SAAAi8H,EAAA3iJ,GACA,OAAAkmD,SAAAlmD,EAAA,IAeA,SAAAihP,EAAA36O,EAAAgZ,GACA,OAAAA,GAAAhZ,GAAAgZ,EAAA4wD,aAAA5pE,EAGA,SAAA46O,EAAA56O,EAAAgZ,EAAA6hO,GACA,GAAAF,EAAA36O,EAAAgZ,IAAA6hO,EAAA,CACA,IAAAl4J,EAAAk4J,EAAAl4J,YACAA,EAAA3iF,EAAAsjH,aAAAtqG,EAAA2pE,GAAA3iF,EAAA+hH,YAAA/oG,IAIA,SAAA8hO,EAAA96O,EAAAgZ,GACA,GAAA2hO,EAAA36O,EAAAgZ,GAAA,CACA,IAAAuqG,EAAAvjH,EAAAujH,WACAA,EAAAvjH,EAAAsjH,aAAAtqG,EAAAuqG,GAAAvjH,EAAA+hH,YAAA/oG,IAUA,SAAAjM,EAAA/M,EAAAgZ,GACAA,GAAAhZ,GAAAgZ,EAAA4wD,aAAA5pE,GACAA,EAAAiiH,YAAAjpG,GAIA,SAAAqrG,EAAAv2G,GACA,OAAAA,EAAAqzG,YAGA,SAAAmD,EAAAx2G,GACA,OAAAA,EAAAmyG,QAWA,IAAA86H,EAAA,SAAA/wK,EAAAzlE,EAAAxG,EAAAwkH,GACAvrH,KAAAgzE,OACAhzE,KAAAuN,UACAvN,KAAAwlJ,MAAAz+I,EAAA6zH,EAAAj6H,OAAA,GAAoCoG,GAAA,IACpC,IAAAykH,EAAA7rH,EAAA,OACA6rH,EAAApyG,aAAA,sCACAoyG,EAAApyG,aAAA,iBACAoyG,EAAApyG,aAAA,sBACAoyG,EAAAz7G,MAAA02I,QAAA,mDACAzmJ,KAAAgkP,gBAAA,IAAAR,EAAAj4H,EAAAC,GACAxrH,KAAAikP,gBAAA,IAAAR,EAAAl4H,EAAAC,GACAxrH,KAAAkkP,cAAA,IAAAR,EAAAn4H,EAAAC,GACA,IAAA24H,EAAAzkP,SAAAC,cAAA,OACAwkP,EAAAp0O,MAAA02I,QAAA,oCACAzmJ,KAAA6rH,SAAAL,EACAxrH,KAAAokP,UAAAD,EACAnxK,EAAA+3C,YAAAo5H,GACAA,EAAAp5H,YAAAS,GACAxrH,KAAAyJ,OAAA1C,EAAAU,MAAAV,EAAAW,QACA1H,KAAAqkP,aAAA,IAGAN,EAAA7nP,UAAA,CACAyB,YAAAomP,EACAz1O,QAAA,WACA,aAEAq7E,gBAAA,WACA,OAAA3pF,KAAAokP,WAEAt9F,sBAAA,WACA,IAAAC,EAAA/mJ,KAAA2pF,kBAEA,GAAAo9D,EACA,OACAC,WAAAD,EAAAC,YAAA,EACAC,UAAAF,EAAAE,WAAA,IAIA1iH,QAAA,WACA,IAAAj3B,EAAAtN,KAAAuN,QAAAC,gBAAA,GAEAxN,KAAAonJ,WAAA95I,IAEAwE,mBAAA,SAAA3E,GAEAnN,KAAAokP,UAAAr0O,MAAA0xK,WAAAt0K,GAEAi6I,WAAA,SAAA95I,GACAtN,KAAAgkP,gBAAAh3H,gBACAhtH,KAAAikP,gBAAAj3H,gBACAhtH,KAAAkkP,cAAAl3H,gBACA,IAIAzvH,EAnHAkL,EA+GA+iH,EAAAxrH,KAAA6rH,SACAy4H,EAAAtkP,KAAAqkP,aACAE,EAAAj3O,EAAA7P,OACA+mP,EAAA,GAGA,IAAAjnP,EAAA,EAAeA,EAAAgnP,EAAahnP,IAAA,CAC5B,IAAAuZ,EAAAxJ,EAAA/P,GACAknP,GAvHAh8O,EAuHAqO,aAtHA0G,EACAwrG,EACGvgH,aAAAiV,EACHgsG,EACGjhH,aAAA2iH,EACHnB,EAEAjB,EAgHA07H,EAAAp3H,EAAAx2G,IAAAu2G,EAAAv2G,GAEAA,EAAAsnE,YACAtnE,EAAAyrB,UACAkiN,KAAA7iN,MAAA9qB,GAEA9W,KAAAikP,gBAAA/4O,OAAA4L,GAEAA,EAAA/G,QACA/P,KAAAgkP,gBAAA94O,OAAA4L,EAAA/G,MAAAyQ,MACAxgB,KAAAgkP,gBAAA94O,OAAA4L,EAAA/G,MAAAwQ,QACAvgB,KAAAkkP,cAAAh5O,OAAAw5O,EAAA5tO,IAGAA,EAAAyrB,SAAA,GAGAiiN,EAAA/iP,KAAAqV,IAIA,IACA6tO,EADAhrM,EAAA4pM,EAAAe,EAAAE,GAIA,IAAAjnP,EAAA,EAAeA,EAAAo8C,EAAAl8C,OAAiBF,IAAA,CAGhC,IAFAqS,EAAA+pC,EAAAp8C,IAEAi2H,QACA,QAAAv0F,EAAA,EAAuBA,EAAArvB,EAAAyd,MAAgB4R,IAAA,CAEvCylN,EAAAp3H,EADAx2G,EAAAwtO,EAAA10O,EAAA8nC,QAAAzY,KAAA,IAEA2lN,EAAAv3H,EAAAv2G,GACAf,EAAAy1G,EAAAk5H,GACA3uO,EAAAy1G,EAAAo5H,IAKA,IAAArnP,EAAA,EAAeA,EAAAo8C,EAAAl8C,OAAiBF,IAAA,CAChC,IAAAqS,EAEA,IAFAA,EAAA+pC,EAAAp8C,IAEAsnP,MACA,IAAA5lN,EAAA,EAAuBA,EAAArvB,EAAAyd,MAAgB4R,IAAA,CAEvCylN,EAAAp3H,EADAx2G,EAAA0tO,EAAA50O,EAAA8nC,QAAAzY,KAEA2lN,EAAAv3H,EAAAv2G,GACA6tO,EAAAf,EAAAp4H,EAAAk5H,EAAAC,GAAAb,EAAAt4H,EAAAk5H,GAEAA,EACAd,EAAAp4H,EAAAo5H,EAAAF,GACWC,EACXf,EAAAp4H,EAAAo5H,EAAAD,GAEAb,EAAAt4H,EAAAo5H,GAIAhB,EAAAp4H,EAAAo5H,EAAAF,GACAC,EAAAC,GAAAF,GAAAC,EACA3kP,KAAAgkP,gBAAAc,iBAAAJ,EAAA5tO,GACA9W,KAAAkkP,cAAAY,iBAAAH,EAAA7tO,GACA9W,KAAAikP,gBAAA/2H,SAAAp2G,QAEO,IAAAlH,EAAA4jH,QACP,IAAAv0F,EAAA,EAAuBA,EAAArvB,EAAAyd,MAAgB4R,IAAA,CAEvC0lN,EAAAD,EAAAr3H,EADAv2G,EAAA0tO,EAAA50O,EAAA8nC,QAAAzY,MACAquF,EAAAx2G,IAAA6tO,EACA3kP,KAAAgkP,gBAAA92H,SAAAp2G,GACA9W,KAAAgkP,gBAAAc,iBAAAJ,EAAA5tO,GACA9W,KAAAkkP,cAAAh3H,SAAAp2G,GACA9W,KAAAkkP,cAAAY,iBAAAJ,EAAA5tO,GACA9W,KAAAikP,gBAAA/2H,SAAAp2G,IAKA9W,KAAAgkP,gBAAA72H,eACAntH,KAAAikP,gBAAA92H,eACAntH,KAAAkkP,cAAA/2H,eACAntH,KAAAqkP,aAAAG,GAEAO,SAAA,SAAA54H,GACA,IAOAC,EAPAZ,EAAAxrH,KAAA6rH,SAIA,YAFAO,EAAApsH,KAAA6rH,SAAAQ,qBAAA,SAEA5uH,OAEA0uH,IACAC,EAAAZ,EAAAc,aAAA3sH,EAAA,QACA6rH,EAAAe,aAGAr5C,WAEAk5C,EAAAl5C,SAAA,SAAAzqE,GACA,IAAA8iF,EAAA6gC,EAAA7gC,SAEA,IAAAA,EACA,SAGA,QAAAhuF,EAAAguF,EAAA9tF,OAAA,EAA6CF,GAAA,IAAQA,EACrD,GAAAguF,EAAAhuF,KAAAkL,EACA,SAIA,WAIA2jH,GAEA,KAGAA,EAAA,IAGA3iH,OAAA,SAAAhC,EAAAC,GACA,IAAAy8O,EAAAnkP,KAAAokP,UAEAD,EAAAp0O,MAAAu6I,QAAA,OAEA,IAAAvjJ,EAAA/G,KAAAwlJ,MAOA,GANA,MAAA/9I,IAAAV,EAAAU,SACA,MAAAC,IAAAX,EAAAW,UACAD,EAAAzH,KAAAumJ,SAAA,GACA7+I,EAAA1H,KAAAumJ,SAAA,GACA49F,EAAAp0O,MAAAu6I,QAAA,GAEAtqJ,KAAAimJ,SAAAx+I,GAAAzH,KAAAkmJ,UAAAx+I,EAAA,CACA1H,KAAAimJ,OAAAx+I,EACAzH,KAAAkmJ,QAAAx+I,EACA,IAAAs9O,EAAAb,EAAAp0O,MACAi1O,EAAAv9O,QAAA,KACAu9O,EAAAt9O,SAAA,KACA,IAAA8jH,EAAAxrH,KAAA6rH,SAEAL,EAAApyG,aAAA,QAAA3R,GACA+jH,EAAApyG,aAAA,SAAA1R,KAOAgF,SAAA,WACA,OAAA1M,KAAAimJ,QAMAt5I,UAAA,WACA,OAAA3M,KAAAkmJ,SAEAK,SAAA,SAAAoE,GACA,IAAA5jJ,EAAA/G,KAAAwlJ,MACArhD,EAAA,mBAAAwmD,GACAC,EAAA,+BAAAD,GACAE,EAAA,6BAAAF,GACAG,EAAA,iCAAAH,GAEA,SAAA5jJ,EAAAo9F,IAAA,SAAAp9F,EAAAo9F,GACA,OAAAx3E,WAAA5lB,EAAAo9F,IAGA,IAAAnxB,EAAAhzE,KAAAgzE,KAEA+3E,EAAArrJ,SAAAsrJ,YAAAC,iBAAAj4E,GACA,OAAAA,EAAA43E,IAAAvF,EAAA0F,EAAA5mD,KAAAkhD,EAAAryE,EAAAjjE,MAAAo0F,MAAAkhD,EAAA0F,EAAAF,KAAA,IAAAxF,EAAA0F,EAAAD,KAAA,MAEAh1I,QAAA,WACA9V,KAAAgzE,KAAA83C,UAAA,GACA9qH,KAAA6rH,SAAA7rH,KAAAokP,UAAApkP,KAAAuN,QAAA,MAEA2L,MAAA,WACAlZ,KAAAokP,WACApkP,KAAAgzE,KAAAi4C,YAAAjrH,KAAAokP,YAGA12O,cAAA,WAGA,OAFA1N,KAAAukC,UAEA,oCADAvkC,KAAA6rH,SAAAo5H,YAYArmP,EAAA,6JAAA2B,GAPA,IAAAgG,EAQAw9O,EAAA7nP,UAAAqE,IARAgG,EAQAhG,EAPA,WACAsiP,EAAA,2CAAAt8O,EAAA,SAQA,IAAA66B,EAAA2iN,EACA5rN,EAAA93B,QAAA+gC,iBCtWA,SAAA8jN,KAiJA,SAAAC,EAAAxrM,EAAA29E,EAAAjtD,EAAAD,GAMA,IALA,IAAAg7K,EAAA,EACAC,EAAA/tH,EAAA75H,OACA4sH,EAAA,EACAi7H,EAAA,EAEQF,EAAAC,EAA6BD,IAAA,CACrC,IAAAn3O,EAAAqpH,EAAA8tH,GAEA,GAAAn3O,EAAAulH,QAaK,CAGL,IAFA97E,EAAA,GAEAn6C,EAAA+nP,EAA0B/nP,EAAA+nP,EAAAr3O,EAAAof,MAA8B9vB,IACxDm6C,EAAAj2C,KAAAlE,GAGA0Q,EAAAypC,UACA4tM,GAAAr3O,EAAAof,UArBA,CAGA,IAFA,IAAAqqB,EAAA,GAEAn6C,EAAA8sH,EAA0B9sH,EAAA8sH,EAAAp8G,EAAAof,MAA8B9vB,IACxDm6C,EAAAj2C,KAAAlE,GAGA0Q,EAAAypC,UACA2yE,GAAAp8G,EAAAof,MAEApf,EAAA42O,QACAS,GAAAr3O,EAAAof,QAcA,OAAAiqG,EAjLA4tH,EAAAhpP,UAAA,CACAy9C,KAAA,SAAAywB,EAAAC,EAAA02C,GACAA,IACAA,EAAA,SAAA19G,EAAAC,GACA,OAAAD,IAAAC,IAIAtD,KAAA+gH,SACA,IAAAjzG,EAAA9N,KACAoqE,IAAAztE,QAGA,IAAA4oP,GAFAl7K,IAAA1tE,SAEAc,OACA+nP,EAAAp7K,EAAA3sE,OACAgoP,EAAA,EACAC,EAAAH,EAAAC,EACAG,EAAA,EACAt7H,QAAA,EACAiN,WAAA,KAGAguH,EAAAtlP,KAAA4lP,cAAAD,EAAA,GAAAt7K,EAAAD,EAAA,GAEA,GAAAu7K,EAAA,GAAAt7H,OAAA,GAAAk7H,GAAAD,EAAA,GAAAE,EAAA,CAGA,IAFA,IAAA9tM,EAAA,GAEAn6C,EAAA,EAAqBA,EAAA8sE,EAAA5sE,OAAmBF,IACxCm6C,EAAAj2C,KAAAlE,GAIA,QACAm6C,UACArqB,MAAAg9C,EAAA5sE,SAKA,SAAAooP,IACA,QAAAC,GAAA,EAAAL,EAA8CK,GAAAL,EAA4BK,GAAA,GAC1E,IAAAC,EACAC,EAAAL,EAAAG,EAAA,GACAG,EAAAN,EAAAG,EAAA,GACAR,GAAAW,IAAA57H,OAAA,GAAAy7H,EAEAE,IAEAL,EAAAG,EAAA,QAAAnyN,GAGA,IAAAuyN,EAAAF,KAAA37H,OAAA,EAAAk7H,EACAY,EAAAF,GAAA,GAAAX,KAAAE,EAEA,GAAAU,GAAAC,EAAA,CAqBA,IAZAD,GAAAC,GAAAH,EAAA37H,OAAA47H,EAAA57H,QACA07H,EAqHA,CACA17H,QAFAprG,EApHAgnO,GAsHA57H,OACAiN,WAAAr4G,EAAAq4G,WAAA36H,MAAA,IAtHAmR,EAAAs4O,cAAAL,EAAAzuH,gBAAA3jG,GAAA,MAEAoyN,EAAAC,GAEA37H,SACAv8G,EAAAs4O,cAAAL,EAAAzuH,YAAA,OAAA3jG,IAGA2xN,EAAAx3O,EAAA83O,cAAAG,EAAA17K,EAAAD,EAAA07K,GAEAC,EAAA17H,OAAA,GAAAk7H,GAAAD,EAAA,GAAAE,EACA,OAAAL,EAAAr3O,EAAAi4O,EAAAzuH,WAAAjtD,EAAAD,GAGAu7K,EAAAG,GAAAC,OAvBAJ,EAAAG,QAAAnyN,EA4HA,IAAA1U,EAjGAwmO,IAGA,KAAAA,GAAAC,GAAA,CACA,IAAArtL,EAAAwtL,IAEA,GAAAxtL,EACA,OAAAA,IAIA+tL,cAAA,SAAA9uH,EAAAutH,EAAArxH,GACA,IAAAlwD,EAAAg0D,IAAA75H,OAAA,GAEA6lE,KAAAuhL,WAAAvhL,EAAAkwD,YAGA8D,IAAA75H,OAAA,IACA4vB,MAAAi2C,EAAAj2C,MAAA,EACAw3N,QACArxH,WAGA8D,EAAA71H,KAAA,CACA4rB,MAAA,EACAw3N,QACArxH,aAIAoyH,cAAA,SAAAG,EAAA17K,EAAAD,EAAA07K,GAOA,IANA,IAAAP,EAAAl7K,EAAA5sE,OACA+nP,EAAAp7K,EAAA3sE,OACA4sH,EAAA07H,EAAA17H,OACAi7H,EAAAj7H,EAAAy7H,EACAO,EAAA,EAEAh8H,EAAA,EAAAk7H,GAAAD,EAAA,EAAAE,GAAAxlP,KAAA+gH,OAAA12C,EAAAggD,EAAA,GAAAjgD,EAAAk7K,EAAA,KACAj7H,IACAi7H,IACAe,IAUA,OAPAA,GACAN,EAAAzuH,WAAA71H,KAAA,CACA4rB,MAAAg5N,IAIAN,EAAA17H,SACAi7H,GAEAgB,SAAA,SAAAhnP,GACA,OAAAA,EAAA3C,SAEA+sB,KAAA,SAAApqB,GACA,OAAAA,EAAA3C,UAgDA,IAAA4mP,EAAA,IAAA2B,EAMA/sN,EAAA93B,QAJA,SAAA+pE,EAAAC,EAAAgN,GACA,OAAAksK,EAAA5pM,KAAAywB,EAAAC,EAAAgN,qBClMA,IAAAi0C,EAAgB5nH,EAAQ,KAExBG,EAAaH,EAAQ,KAErBm/O,EAAYn/O,EAAQ,KAgBpB,SAAA8/O,EAAAj4H,EAAAC,GACAF,EAAAjuH,KAAA2C,KAAAurH,EAAAC,EAAA,2DAGA3nH,EAAA9C,SAAAyiP,EAAAl4H,GASAk4H,EAAAtnP,UAAA4oP,iBAAA,SAAAJ,EAAA5tO,GACA,GAAAA,KAAA/G,MAAA,CACA,IAAAk9G,EAAAjtH,KACA6D,EAAAjF,KAAA,2BAAAqhB,GACA,GAAAnJ,EAAA/G,MAAAkQ,KAAA,WAAAnJ,EAAA/G,MAAAkQ,GAAA1gB,MAAA,WAAAuX,EAAA/G,MAAAkQ,GAAA1gB,MAAA,CACA,IAGAsH,EAHA6hK,EAAA5xJ,EAAA/G,MAAAkQ,GACAmsG,EAAAa,EAAAf,SAAA,GAIAw8C,EAAAvhK,MAEAN,EAAA6hK,EAAAvhK,KAEAilH,EAAAl5C,SAAAw1F,EAAAvhK,OAEA8lH,EAAAP,OAAA7lH,IAIAA,EAAAomH,EAAA98G,IAAAu4J,GAGAz7C,EAAAC,SAAAp2G,GACA,IAAA7P,EAAAJ,EAAA+S,aAAA,MACA8qO,EAAAtrO,aAAA6G,EAAA,QAAAhZ,EAAA,UAcAu8O,EAAAtnP,UAAAiU,IAAA,SAAAu4J,GACA,IAAA7hK,EAEA,cAAA6hK,EAAAnpK,KACAsH,EAAA7G,KAAAL,cAAA,sBACG,eAAA+oK,EAAAnpK,KAIH,OADAsjP,EAAA,0BACA,KAHAh8O,EAAA7G,KAAAL,cAAA,kBAeA,OAJA+oK,EAAAzhK,GAAAyhK,EAAAzhK,IAAAjH,KAAAisH,SACAplH,EAAAuS,aAAA,UAAApZ,KAAA4rH,MAAA,aAAA88C,EAAAzhK,IACAjH,KAAAumP,UAAA79E,EAAA7hK,GACA7G,KAAA0sH,OAAA7lH,GACAA,GASA28O,EAAAtnP,UAAAgP,OAAA,SAAAw9J,GACA,IAAAz7C,EAAAjtH,KACAsrH,EAAApvH,UAAAgP,OAAA7N,KAAA2C,KAAA0oK,EAAA,WACA,IAAAnpK,EAAAmpK,EAAAnpK,KACAutH,EAAA47C,EAAAvhK,KAAA2lH,QAEA,WAAAvtH,GAAA,mBAAAutH,GAAA,WAAAvtH,GAAA,mBAAAutH,EAEAG,EAAAs5H,UAAA79E,IAAAvhK,OAGA8lH,EAAAN,UAAA+7C,GACAz7C,EAAA98G,IAAAu4J,OAaA86E,EAAAtnP,UAAAqqP,UAAA,SAAA79E,EAAA7hK,GACA,cAAA6hK,EAAAnpK,KACAsH,EAAAuS,aAAA,KAAAsvJ,EAAA14J,GACAnJ,EAAAuS,aAAA,KAAAsvJ,EAAAz4J,GACApJ,EAAAuS,aAAA,KAAAsvJ,EAAAhhJ,IACA7gB,EAAAuS,aAAA,KAAAsvJ,EAAA9gJ,QACG,eAAA8gJ,EAAAnpK,KAMH,YADAsjP,EAAA,0BAJAh8O,EAAAuS,aAAA,KAAAsvJ,EAAA14J,GACAnJ,EAAAuS,aAAA,KAAAsvJ,EAAAz4J,GACApJ,EAAAuS,aAAA,IAAAsvJ,EAAA9qH,GAMA8qH,EAAAl1I,OAEA3sB,EAAAuS,aAAA,kCAGAvS,EAAAuS,aAAA,qCAIAvS,EAAAikH,UAAA,GAIA,IAFA,IAAAt2D,EAAAk0G,EAAAxmI,WAEA3kC,EAAA,EAAAC,EAAAg3D,EAAA/2D,OAAsCF,EAAAC,IAASD,EAAA,CAC/C,IAAA05D,EAAAj3D,KAAAL,cAAA,QACAs3D,EAAA79C,aAAA,aAAAo7C,EAAAj3D,GAAAiG,OAAA,KACAyzD,EAAA79C,aAAA,aAAAo7C,EAAAj3D,GAAA4iB,OACAtZ,EAAAkkH,YAAA9zD,GAKAyxG,EAAAvhK,KAAAN,GASA28O,EAAAtnP,UAAAgxH,SAAA,SAAAp2G,GACA,GAAAA,EAAA/G,MAAA,CACA,IAAA24J,EAAA5xJ,EAAA/G,MAAAyQ,KAEAkoJ,KAAAvhK,MACAmkH,EAAApvH,UAAAgxH,SAAA7vH,KAAA2C,KAAA0oK,EAAAvhK,OAGAuhK,EAAA5xJ,EAAA/G,MAAAwQ,SAEAmoJ,EAAAvhK,MACAmkH,EAAApvH,UAAAgxH,SAAA7vH,KAAA2C,KAAA0oK,EAAAvhK,QAKA,IAAAi6B,EAAAoiN,EACArrN,EAAA93B,QAAA+gC,mBC9LA,IAAAkqF,EAAgB5nH,EAAQ,KAExBG,EAAaH,EAAQ,KAErB4Z,EAAa5Z,EAAQ,KAgBrB,SAAA+/O,EAAAl4H,EAAAC,GACAF,EAAAjuH,KAAA2C,KAAAurH,EAAAC,EAAA,kCAGA3nH,EAAA9C,SAAA0iP,EAAAn4H,GAOAm4H,EAAAvnP,UAAAgP,OAAA,SAAA4L,GACA,IAAA2xG,EAAAzoH,KAAAstH,cAAAx2G,GAEA2xG,GACAzoH,KAAAumP,UAAA99H,EAAA3xG,EAAAqnE,aAAA,GAGA,IAAAjP,EAAAlvE,KAAAqtH,kBAAAv2G,GAEAo4D,GAGAlvE,KAAAumP,UAAAr3K,EAAAp4D,EAAAqnE,aAAA,GAGAn+E,KAAAktH,SAAAp2G,IAYA2sO,EAAAvnP,UAAAqqP,UAAA,SAAAhkC,EAAA1pF,EAAAlQ,GACA,GAAAkQ,KAAAp7H,OAAA,GAEA,IAEA+oP,EACAv/O,EAHAmlH,EAAApsH,KAAAksH,SAAA,GACAlO,EAAA6a,EAAA,GAGAhyH,EAAA8hH,EAAA,kBAEA3K,EAAAn3G,IAEAI,EAAA+2G,EAAAn3G,GAAA+S,aAAA,MACA4sO,EAAAxoI,EAAAn3G,GAEAulH,EAAAl5C,SAAAszK,IAGAp6H,EAAArB,YAAAy7H,KAIAv/O,EAAA,KAAAjH,KAAA4rH,MAAA,SAAA5rH,KAAAisH,SACAjsH,KAAAisH,QACAu6H,EAAAxmP,KAAAL,cAAA,aACAyZ,aAAA,KAAAnS,GACAmlH,EAAArB,YAAAy7H,GACAxoI,EAAAn3G,GAAA2/O,GAIA,IAAA/B,EAAAzkP,KAAAotH,YAAApP,GAEA,GAAAA,EAAAn3F,WAAAm3F,EAAAh1G,OAAAi9F,eAAA0iB,EAAA,CASA,IAAA9hG,EAAAxqB,MAAAH,UAAAS,MAAAU,KAAA2gH,EAAAn3F,WAEAvJ,EAAA0M,IAAAg0F,EAAAn3F,UAAAm3F,EAAAh1G,OAAAi9F,aAAA+X,EAAAn3F,WACA49N,EAAA7iN,MAAAo8E,GAEAA,EAAAn3F,iBAEA49N,EAAA7iN,MAAAo8E,GAGA,IAAA4zC,EAAA5xJ,KAAAstH,cAAAtP,GACAwoI,EAAA17H,UAAA,GAQA07H,EAAAz7H,YAAA6mC,EAAA60F,aACAlkC,EAAAnpM,aAAA,oBAAAnS,EAAA,KAEA4xH,EAAAp7H,OAAA,GAEAuC,KAAAumP,UAAAC,EAAA3tH,EAAAl8H,MAAA,GAAAgsH,QAIA45F,GACAA,EAAAnpM,aAAA,qBAWAqqO,EAAAvnP,UAAAgxH,SAAA,SAAAp2G,GACA,IAAAm2G,EAAAjtH,KAEA8W,EAAAqnE,aAAArnE,EAAAqnE,YAAA1gF,OAAA,GACAoG,EAAAjF,KAAAkY,EAAAqnE,YAAA,SAAA6/B,GACAA,EAAA72G,MACAmkH,EAAApvH,UAAAgxH,SAAA7vH,KAAA4vH,EAAAjP,EAAA72G,MAGA62G,EAAA0oI,UACAp7H,EAAApvH,UAAAgxH,SAAA7vH,KAAA4vH,EAAAjP,EAAA0oI,aAMA,IAAAtlN,EAAAqiN,EACAtrN,EAAA93B,QAAA+gC,mBC5JA,IAAAkqF,EAAgB5nH,EAAQ,KAkBxB,SAAAggP,EAAAn4H,EAAAC,GACAF,EAAAjuH,KAAA2C,KAAAurH,EAAAC,EAAA,6CAmKA,SAAAm7H,EAAA52O,GAEA,OAAAA,MAAAkvE,YAAAlvE,EAAAovE,eAAApvE,EAAAqvE,eAAArvE,EAAA6V,gBAAA7V,EAAA8V,mBAAA9V,EAAA+V,mBAtLapiB,EAAQ,KAoBrB3C,SAAA2iP,EAAAp4H,GASAo4H,EAAAxnP,UAAA4oP,iBAAA,SAAAJ,EAAA5tO,GACA,GAAAA,GAAA6vO,EAAA7vO,EAAA/G,OAAA,CACA,IAEAlJ,EAFAkJ,EAAA+G,EAAA/G,MAIA,GAAAA,EAAA62O,WAEA//O,EAAAkJ,EAAA62O,WACA5mP,KAAAksH,SAAA,GAEAh5C,SAAAnjE,EAAA62O,aAEA5mP,KAAA0sH,OAAA7lH,QAIAA,EAAA7G,KAAAmQ,IAAA2G,GAGA9W,KAAAktH,SAAAp2G,GACA,IAAA7P,EAAAJ,EAAA+S,aAAA,MACA8qO,EAAA30O,MAAAtT,OAAA,QAAAwK,EAAA,MAWAy8O,EAAAxnP,UAAAiU,IAAA,SAAA2G,GACA,IAAAjQ,EAAA7G,KAAAL,cAAA,UACAoQ,EAAA+G,EAAA/G,MAUA,OAJAA,EAAA82O,aAAA92O,EAAA82O,cAAA7mP,KAAAisH,SACAplH,EAAAuS,aAAA,UAAApZ,KAAA4rH,MAAA,WAAA77G,EAAA82O,cACA7mP,KAAAumP,UAAAzvO,EAAAjQ,GACA7G,KAAA0sH,OAAA7lH,GACAA,GASA68O,EAAAxnP,UAAAgP,OAAA,SAAAw5O,EAAA5tO,GACA,IAAA/G,EAAA+G,EAAA/G,MAEA,GAAA42O,EAAA52O,GAAA,CACA,IAAAk9G,EAAAjtH,KACAsrH,EAAApvH,UAAAgP,OAAA7N,KAAA2C,KAAA8W,EAAA,SAAA/G,GACAk9G,EAAAs5H,UAAAzvO,EAAA/G,EAAA62O,mBAIA5mP,KAAA+V,OAAA2uO,EAAA30O,IAQA2zO,EAAAxnP,UAAA6Z,OAAA,SAAA2uO,EAAA30O,GACA,MAAAA,EAAA82O,eACA7mP,KAAA2sH,UAAA58G,GACA20O,EAAA30O,MAAAtT,OAAA,KAWAinP,EAAAxnP,UAAAqqP,UAAA,SAAAzvO,EAAAjQ,GACA,IAAAigP,EAAAjgP,EAAAwlH,qBAAA,gBAGAy6H,EADA,IAAAA,EAAArpP,OACAuC,KAAAL,cAAA,gBAEAmnP,EAAA,GAGA,IAIApwL,EAAAI,EAAAiwL,EAAA5mO,EAJApQ,EAAA+G,EAAA/G,MACAssE,EAAAvlE,EAAA6lB,OAAA7lB,EAAA6lB,MAAA,MACA2/C,EAAAxlE,EAAA6lB,OAAA7lB,EAAA6lB,MAAA,MAIA,GAAA5sB,EAAAkvE,YAAAlvE,EAAAovE,eAAApvE,EAAAqvE,cACA1oB,EAAA3mD,EAAAovE,eAAA,EACAroB,EAAA/mD,EAAAqvE,eAAA,EACA2nK,EAAAh3O,EAAAkvE,WACA9+D,EAAApQ,EAAAmvE,gBACG,KAAAnvE,EAAA6V,eAQH,YADA5lB,KAAA2sH,UAAA9lH,EAAAkJ,GANA2mD,EAAA3mD,EAAA8V,mBAAA,EACAixC,EAAA/mD,EAAA+V,mBAAA,EACAihO,EAAAh3O,EAAA6V,eACAzF,EAAApQ,EAAA4V,gBAOAmhO,EAAA1tO,aAAA,KAAAs9C,EAAA2lB,GACAyqK,EAAA1tO,aAAA,KAAA09C,EAAAwlB,GACAwqK,EAAA1tO,aAAA,cAAA+G,GAGA,IAEA6mO,EAFAD,EAAA,EAAA1qK,EAEA,IADA0qK,EAAA,EAAAzqK,EAEAwqK,EAAA1tO,aAAA,eAAA4tO,GAEAngP,EAAAuS,aAAA,aACAvS,EAAAuS,aAAA,aACAvS,EAAAuS,aAAA,QAAAzK,KAAAg2C,KAAAoiM,EAAA,YACAlgP,EAAAuS,aAAA,SAAAzK,KAAAg2C,KAAAoiM,EAAA,YACAlgP,EAAAkkH,YAAA+7H,GAGA/2O,EAAA62O,WAAA//O,GASA68O,EAAAxnP,UAAAgxH,SAAA,SAAAp2G,GACA,IAAA/G,EAAA+G,EAAA/G,MAEAA,KAAA62O,YACAt7H,EAAApvH,UAAAgxH,SAAA7vH,KAAA2C,KAAA+P,EAAA62O,aASA,IAAAxlN,EAAAsiN,EACAvrN,EAAA93B,QAAA+gC,gCC1LAnlC,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAEAe,EAAA,aAAAszB,EAEA,IAAAszN,EAAAhrP,OAAAirP,QAAA,SAAAjpP,GACA,QAAAV,EAAA,EAAiBA,EAAA4B,UAAA1B,OAAsBF,IAAA,CACvC,IAAAL,EAAAiC,UAAA5B,GAEA,QAAAO,KAAAZ,EACAjB,OAAAC,UAAA6B,eAAAV,KAAAH,EAAAY,KACAG,EAAAH,GAAAZ,EAAAY,IAKA,OAAAG,GAGAkpP,EAAA,WACA,SAAAC,EAAAnpP,EAAAioB,GACA,QAAA3oB,EAAA,EAAmBA,EAAA2oB,EAAAzoB,OAAkBF,IAAA,CACrC,IAAA8pP,EAAAnhO,EAAA3oB,GACA8pP,EAAAvyN,WAAAuyN,EAAAvyN,aAAA,EACAuyN,EAAAryN,cAAA,EACA,UAAAqyN,MAAAtyN,UAAA,GACA94B,OAAAy3B,eAAAz1B,EAAAopP,EAAAvpP,IAAAupP,IAIA,gBAAAjzN,EAAAkzN,EAAAC,GAGA,OAFAD,GAAAF,EAAAhzN,EAAAl4B,UAAAorP,GACAC,GAAAH,EAAAhzN,EAAAmzN,GACAnzN,GAdA,GAkBAozN,EAAa9jP,EAAQ,GAErB+jP,EAAA5zN,EAAA2zN,GAIAE,EAAA7zN,EAFiBnwB,EAAQ,IAMzBikP,EAAA9zN,EAFqBnwB,EAAQ,OAI7BkkP,EAAkBlkP,EAAQ,MAE1BmkP,EAAankP,EAAQ,MAErB,SAAAmwB,EAAAh1B,GACA,OAAAA,KAAAk1B,WAAAl1B,EAAA,CACAm1B,QAAAn1B,GAkCA,IAAAipP,EAAA,SAAAC,GAGA,SAAAD,EAAA5hO,IAjCA,SAAAiO,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCAgCAC,CAAAt0B,KAAA8nP,GAEA,IAAAvzN,EA9BA,SAAAzmB,EAAAzQ,GACA,IAAAyQ,EACA,UAAA0mB,eAAA,6DAGA,OAAAn3B,GAAA,kBAAAA,GAAA,oBAAAA,EAAAyQ,EAAAzQ,EAyBAo3B,CAAAz0B,MAAA8nP,EAAApzN,WAAAz4B,OAAA04B,eAAAmzN,IAAAzqP,KAAA2C,KAAAkmB,IA6EA,OA3EAqO,EAAAyzN,mBAAA,WACA,OAAAzzN,EAAAK,WAAAjb,iBAAA4a,EAAA0zN,iBAAA1zN,EAAAK,WAAAttB,KAAAitB,EAAA0zN,eAAA1zN,EAAArO,MAAApf,MAAAytB,EAAArO,MAAAnf,OAGAwtB,EAAAze,QAAA,WACA,GAAAye,EAAA0zN,eAAA,CACA,KACA,EAAAL,EAAA1uO,OAAAqb,EAAA0zN,gBACS,MAAAvvO,GACTpM,QAAA47O,KAAAxvO,GAIA6b,EAAAK,WAAA9e,QAAAye,EAAA0zN,kBAIA1zN,EAAA4zN,SAAA,WACA,IAAAC,EAAA7zN,EAAArO,MACAmiO,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,aAEAC,EAAAh0N,EAAAi0N,kBAEAj0N,EAAAk0N,WAAAF,EAAAF,GAAA,IAGA,oBAAAC,GAAA/zN,EAAArO,MAAAoiO,aAAAC,GAEAh0N,EAAA0zN,iBACA,EAAAL,EAAA5oP,MAAAu1B,EAAA0zN,eAAA,WACA,IACAM,EAAA9+O,SACW,MAAAiP,GACXpM,QAAA47O,KAAAxvO,OAMA6b,EAAAk0N,WAAA,SAAAt0N,EAAAu0N,GACA,IAAAC,EAAA,SAAAniP,EAAAvH,GAEA,kBAAAuH,GAAA,oBAAAvH,GAGAk1B,EAAAvqB,GAAApD,EAAA,SAAA+gB,GACAtoB,EAAAsoB,EAAA4M,MAMA,QAAA3tB,KAAAkiP,EACAzsP,OAAAC,UAAA6B,eAAAV,KAAAqrP,EAAAliP,IACAmiP,EAAAniP,EAAAkiP,EAAAliP,KAKA+tB,EAAAi0N,gBAAA,WAEA,IAAAD,EAAAh0N,EAAAyzN,qBAMA,OAHAO,EAAAx8O,UAAAwoB,EAAArO,MAAAla,OAAAuoB,EAAArO,MAAAja,WAAA,EAAAsoB,EAAArO,MAAAha,aAAA,GAEAqoB,EAAArO,MAAA1O,YAAA+wO,EAAA/wO,YAAA+c,EAAArO,MAAA0iO,eAAA,MAA4FL,EAAA7wO,cAC5F6wO,GAGAh0N,EAAAK,WAAAL,EAAArO,MAAAoP,QAEAf,EAAA0zN,eAAA,KAEA1zN,EAgFA,OAnLA,SAAAM,EAAAxzB,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAgzB,UAAA,kEAAAhzB,GAGAwzB,EAAA34B,UAAAD,OAAA0V,OAAAtQ,KAAAnF,UAAA,CACAyB,YAAA,CACA2B,MAAAu1B,EACAC,YAAA,EACAC,UAAA,EACAC,cAAA,KAGA3zB,IAAApF,OAAAg5B,eAAAh5B,OAAAg5B,eAAAJ,EAAAxzB,GAAAwzB,EAAAH,UAAArzB,GAIA6zB,CAAA4yN,EAmKCN,EAAA10J,WA7EDq0J,EAAAW,EAAA,EACAhqP,IAAA,oBACAwB,MAAA,WACAU,KAAAmoP,aAGG,CACHrqP,IAAA,qBACAwB,MAAA,SAAAupP,GAKA,GAAAA,EAAA/hP,QAAA9G,KAAAkmB,MAAApf,SAAA,EAAA6gP,EAAA,SAAAkB,EAAA9hP,KAAA/G,KAAAkmB,MAAAnf,SAAA,EAAA4gP,EAAA,SAAAkB,EAAAR,SAAAroP,KAAAkmB,MAAAmiO,UAIA,OAHAroP,KAAA8V,eACA9V,KAAAmoP,WAMA,IAAAW,EAAA,iEAEA,OAAAnB,EAAA,YAAAE,EAAAkB,MAAA/oP,KAAAkmB,MAAA4iO,IAAA,EAAAjB,EAAAkB,MAAAF,EAAAC,MAKA,oBAAA9oP,KAAAkmB,MAAA8iO,iBAAAhpP,KAAAkmB,MAAA8iO,gBAAAH,EAAA7oP,KAAAkmB,QAAA,CAIA,IAAAqiO,EAAAvoP,KAAAwoP,kBAEA,OAAAb,EAAA,SAAAkB,EAAA94O,MAAA/P,KAAAkmB,MAAAnW,UAAA,EAAA43O,EAAA,SAAAkB,EAAAI,UAAAjpP,KAAAkmB,MAAA+iO,WACA,IACAV,EAAA9+O,SACS,MAAAiP,GACTpM,QAAA47O,KAAAxvO,OAKG,CACH5a,IAAA,uBACAwB,MAAA,WACAU,KAAA8V,YAMG,CACHhY,IAAA,SACAwB,MAAA,WACA,IAAA4pP,EAAAlpP,KAEAmpP,EAAAnpP,KAAAkmB,MACAnW,EAAAo5O,EAAAp5O,MACAk5O,EAAAE,EAAAF,UAEA90H,EAAA8yH,EAAA,CACAv/O,OAAA,KACOqI,GAGP,OAAA03O,EAAA,QAAA9nP,cAAA,OACAypP,IAAA,SAAA1wO,GACAwwO,EAAAjB,eAAAvvO,GAEA3I,MAAAokH,EACA80H,UAAA,qBAAAA,QAKAnB,EAnKA,GAsKAznP,EAAA,QAAAynP,EACAA,EAAAuB,UAAA,CACAr9O,OAAA07O,EAAA,QAAA4B,OAAAC,WAEAj0N,QAAAoyN,EAAA,QAAA4B,OAEAr9O,SAAAy7O,EAAA,QAAA8B,KACAt9O,WAAAw7O,EAAA,QAAA8B,KACAz5O,MAAA23O,EAAA,QAAA4B,OAEAL,UAAAvB,EAAA,QAAA/E,OACA77O,MAAA4gP,EAAA,QAAA/E,OACA2F,aAAAZ,EAAA,QAAAzoP,KACAuY,YAAAkwO,EAAA,QAAA8B,KACAZ,cAAAlB,EAAA,QAAA4B,OAEAjB,SAAAX,EAAA,QAAA4B,OAEAviP,KAAA2gP,EAAA,QAAAlgO,MAAA,CACAhgB,iBAAAkgP,EAAA,QAAAj3M,OACAlpC,SAAAmgP,EAAA,QAAA+B,MAAA,kBACAhiP,MAAAigP,EAAA,QAAAgC,UAAA,CAAAhC,EAAA,QAAAj3M,OAAAi3M,EAAA,QAAA+B,MAAA,WAAA91N,EAAA,WACAjsB,OAAAggP,EAAA,QAAAgC,UAAA,CAAAhC,EAAA,QAAAj3M,OAAAi3M,EAAA,QAAA+B,MAAA,WAAA91N,EAAA,aAEAq1N,gBAAAtB,EAAA,QAAAzoP,MAEA6oP,EAAA6B,aAAA,CACAr0N,QAAA,GACArpB,UAAA,EACAC,YAAA,EACA6D,MAAA,GACAk5O,UAAA,GACAniP,MAAA,KACAwhP,aAAA,aACA9wO,aAAA,EACAoxO,cAAA,KACAP,SAAA,GACAthP,KAAA,GACAiiP,gBAAA,WACA,yCCtSA,IAAA1qP,EAAAjC,MAAAiC,QACAsrP,EAAA3tP,OAAAmpG,KACA5pE,EAAAv/B,OAAAC,UAAA6B,eAEAo6B,EAAA93B,QAAA,SAAAwpP,EAAAxmP,EAAAC,GACA,GAAAD,IAAAC,EAAA,SAEA,GAAAD,GAAAC,GAAA,iBAAAD,GAAA,iBAAAC,EAAA,CACA,IAEA/F,EACAE,EACAK,EAJAgsP,EAAAxrP,EAAA+E,GACA0mP,EAAAzrP,EAAAgF,GAKA,GAAAwmP,GAAAC,EAAA,CAEA,IADAtsP,EAAA4F,EAAA5F,SACA6F,EAAA7F,OAAA,SAEA,IAAAF,EAAAE,EAAsB,IAAAF,KACtB,IAAAssP,EAAAxmP,EAAA9F,GAAA+F,EAAA/F,IAAA,SAGA,SAGA,GAAAusP,GAAAC,EAAA,SACA,IAAAC,EAAA3mP,aAAAkI,KACA0+O,EAAA3mP,aAAAiI,KACA,GAAAy+O,GAAAC,EAAA,SACA,GAAAD,GAAAC,EAAA,OAAA5mP,EAAA4jE,WAAA3jE,EAAA2jE,UACA,IAAAijL,EAAA7mP,aAAA8tJ,OACAg5F,EAAA7mP,aAAA6tJ,OACA,GAAA+4F,GAAAC,EAAA,SACA,GAAAD,GAAAC,EAAA,OAAA9mP,EAAAlH,YAAAmH,EAAAnH,WACA,IAAAipG,EAAAwkJ,EAAAvmP,GAEA,IADA5F,EAAA2nG,EAAA3nG,UACAmsP,EAAAtmP,GAAA7F,OAAA,SAEA,IAAAF,EAAAE,EAAoB,IAAAF,KACpB,IAAAi+B,EAAAn+B,KAAAiG,EAAA8hG,EAAA7nG,IAAA,SAGA,IAAAA,EAAAE,EAAoB,IAAAF,KAEpB,IAAAssP,EAAAxmP,EADAvF,EAAAsnG,EAAA7nG,IACA+F,EAAAxF,IAAA,SAGA,SAGA,OAAAuF,OAAAC,qCClDArH,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAEAe,EAAA6Y,MAAA7Y,EAAArB,UAAA20B,EAEA,IAAAy2N,EAAkB1mP,EAAQ,MAQ1BrD,EAAArB,KAAA,SAAAwtH,EAAA1tH,GACA,IAAAurP,GAAA,EAAAD,EAAAE,WAAA99H,GAIA,OAFA69H,EAAArrP,KAAAF,GAEA,WACAurP,EAAAE,OAAAzrP,KAcAuB,EAAA6Y,MAAA,SAAAszG,GACA,IAAA69H,GAAA,EAAAD,EAAAE,WAAA99H,IACA,EAAA49H,EAAAI,cAAAH,kCCnCApuP,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAEAe,EAAAmqP,aAAAnqP,EAAAiqP,eAAA32N,EAEA,IAQA90B,EARA4rP,EAAU/mP,EAAQ,MAElBgnP,GAMA7rP,EANA4rP,IAOA5rP,EAAAk1B,WAAAl1B,EAAA,CACAm1B,QAAAn1B,GANA8rP,EAAejnP,EAAQ,MAEvBknP,EAAgBlnP,EAAQ,KAaxB,IAAAmnP,EAAA,GAYAxqP,EAAAiqP,UAAA,SAAA99H,GACA,IAAAs+H,EAAAt+H,EAAA5yG,aAAAgxO,EAAAnsG,cAEA,GAAAqsG,GAAAD,EAAAC,GACA,OAAAD,EAAAC,GAIA,IAAApxC,GAAA,EAAAgxC,EAAA12N,WACAw4F,EAAApzG,aAAAwxO,EAAAnsG,aAAAi7D,GACA,IAAA2wC,GAAA,EAAAM,EAAAI,cAAAv+H,GAGA,OADAq+H,EAAAnxC,GAAA2wC,EACAA,GAQAhqP,EAAAmqP,aAAA,SAAAH,GACA,IAAAS,EAAAT,EAAA79H,QAAA5yG,aAAAgxO,EAAAnsG,cAEA4rG,EAAA79H,QAAAw+H,gBAAAJ,EAAAnsG,cAEA4rG,EAAAY,UAEAH,GAAAD,EAAAC,WACAD,EAAAC,kCCjEA7uP,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAOA,IAAA2H,EAAA,EAEA5G,EAAA2zB,QAAA,WACA,SAAA/sB,KAGAkxB,EAAA93B,UAAA,sCCdApE,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAEAe,EAAA0qP,kBAAAp3N,EAEA,IAAAu3N,EAAcxnP,EAAQ,MAEtBynP,EAAsBznP,EAAQ,MAe9BrD,EAAA0qP,aAHA,qBAAAK,eAAAD,EAAAJ,aAAAG,EAAAH,2CCnBA9uP,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAEAe,EAAA0qP,kBAAAp3N,EAEA,IAMA90B,EANAwsP,EAAgB3nP,EAAQ,KAExB4nP,GAIAzsP,EAJAwsP,IAKAxsP,EAAAk1B,WAAAl1B,EAAA,CACAm1B,QAAAn1B,GAJA+rP,EAAgBlnP,EAAQ,KAaxBrD,EAAA0qP,aAAA,SAAAv+H,GAEA,IAAA69H,OAAA12N,EAEA43N,EAAA,GAkCAC,GAAA,EAAAF,EAAAt3N,SAAA,WAEAu3N,EAAAhvP,QAAA,SAAAkvP,GACAA,EAAAj/H,OAuBAy+H,EAAA,WACAZ,KAAAz3K,aACAy3K,EAAAqB,iBAEArB,EAAAqB,gBAAA1gG,YAAAhzF,oBAAA,SAAAwzL,GAIAnB,EAAAz3K,WAAAq4C,YAAAo/H,GAEAA,OAAA12N,EACA43N,EAAA,KAuBA,OACA/+H,UACAxtH,KAnDA,SAAAF,GAEAurP,IACAA,EA1CA,WAEA,WAAAp/F,iBAAAz+B,GAAA5sG,WACA4sG,EAAAz8G,MAAA6P,SAAA,YAGA,IAAA/gB,EAAAa,SAAAC,cAAA,UAeA,OAbAd,EAAAwoB,OAAA,WACAxoB,EAAA6sP,gBAAA1gG,YAAA50F,iBAAA,SAAAo1L,GAEAA,KAGA3sP,EAAAua,aAAA,QAAAwxO,EAAAlsG,aACA7/I,EAAAua,aAAA,QAAAwxO,EAAAjsG,iBACA9/I,EAAAU,KAAA,YAEAitH,EAAAzB,YAAAlsH,GAEAA,EAAA2C,KAAA,cACA3C,EAqBA8sP,KAGA,IAAAJ,EAAA1qP,QAAA/B,IACAysP,EAAA9pP,KAAA3C,IA6CAmsP,UACAV,OAlBA,SAAAzrP,GACA,IAAAmvB,EAAAs9N,EAAA1qP,QAAA/B,IAEA,IAAAmvB,GACAs9N,EAAAv1O,OAAAiY,EAAA,GAKA,IAAAs9N,EAAA9tP,QAAA4sP,GACAY,qCCpHAhvP,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAEAe,EAAA0qP,kBAAAp3N,EAEA,IAIA90B,EAJAwsP,EAAgB3nP,EAAQ,KAExB4nP,GAEAzsP,EAFAwsP,IAGAxsP,EAAAk1B,WAAAl1B,EAAA,CACAm1B,QAAAn1B,GAIAwB,EAAA0qP,aAAA,SAAAv+H,GAEA,IAAA69H,OAAA12N,EAEA43N,EAAA,GAKAC,GAAA,EAAAF,EAAAt3N,SAAA,WAEAu3N,EAAAhvP,QAAA,SAAAkvP,GACAA,EAAAj/H,OAoCAy+H,EAAA,WACAZ,EAAA3wO,aACA6xO,EAAA,GACAlB,OAAA12N,GAsBA,OACA64F,UACAxtH,KAzCA,SAAAF,GACAurP,IACAA,EAhBA,WACA,IAAAA,EAAA,IAAAe,eAAAI,GAKA,OAHAnB,EAAAuB,QAAAp/H,GAEAg/H,IACAnB,EAUAsB,KAGA,IAAAJ,EAAA1qP,QAAA/B,IACAysP,EAAA9pP,KAAA3C,IAoCAmsP,UACAV,OAlBA,SAAAzrP,GACA,IAAAmvB,EAAAs9N,EAAA1qP,QAAA/B,IAEA,IAAAmvB,GACAs9N,EAAAv1O,OAAAiY,EAAA,GAKA,IAAAs9N,EAAA9tP,QAAA4sP,GACAY,qCCpFAhvP,OAAAy3B,eAAArzB,EAAA,cACAf,OAAA,IAIAe,EAAA0oP,KAAA,SAAAlqP,EAAAumG,GACA,IAAAxnD,EAAA,GAIA,OAHAwnD,EAAA7oG,QAAA,SAAAuB,GACA8/C,EAAA9/C,GAAAe,EAAAf,KAEA8/C","file":"static/js/4.6fbf1930.chunk.js","sourcesContent":["/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function createCanvas() {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function get(key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function set(key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function each(cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function removeKey(key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function prepareAndUpdate(payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function update(payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function updateTransform(payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function updateView(payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function updateVisual(payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function updateLayout(payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function getComponentByElement(el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\n\nvar ___ec_export = require(\"./export\");\n\n(function () {\n  for (var key in ___ec_export) {\n    if (___ec_export.hasOwnProperty(key)) {\n      exports[key] = ___ec_export[key];\n    }\n  }\n})();","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function onload(img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _echarts = require('echarts');\n\nvar _echarts2 = _interopRequireDefault(_echarts);\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // export the Component the echarts Object.\n\n\nvar EchartsReact = function (_EchartsReactCore) {\n  _inherits(EchartsReact, _EchartsReactCore);\n\n  function EchartsReact(props) {\n    _classCallCheck(this, EchartsReact);\n\n    var _this = _possibleConstructorReturn(this, (EchartsReact.__proto__ || Object.getPrototypeOf(EchartsReact)).call(this, props));\n\n    _this.echartsLib = _echarts2['default'];\n    return _this;\n  }\n\n  return EchartsReact;\n}(_core2['default']);\n\nexports['default'] = EchartsReact;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['exports', 'echarts'], factory);\n  } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    // CommonJS\n    factory(exports, require('echarts'));\n  } else {\n    // Browser globals\n    factory({}, root.echarts);\n  }\n})(this, function (exports, echarts) {\n  var log = function log(msg) {\n    if (typeof console !== 'undefined') {\n      console && console.error && console.error(msg);\n    }\n  };\n\n  if (!echarts) {\n    log('ECharts is not Loaded');\n    return;\n  }\n\n  var colorPalette = ['#2ec7c9', '#b6a2de', '#5ab1ef', '#ffb980', '#d87a80', '#8d98b3', '#e5cf0d', '#97b552', '#95706d', '#dc69aa', '#07a2a4', '#9a7fd1', '#588dd5', '#f5994e', '#c05050', '#59678c', '#c9ab00', '#7eb00a', '#6f5553', '#c14089'];\n  var theme = {\n    color: colorPalette,\n    title: {\n      textStyle: {\n        fontWeight: 'normal',\n        color: '#008acd'\n      }\n    },\n    visualMap: {\n      itemWidth: 15,\n      color: ['#5ab1ef', '#e0ffff']\n    },\n    toolbox: {\n      iconStyle: {\n        normal: {\n          borderColor: colorPalette[0]\n        }\n      }\n    },\n    tooltip: {\n      backgroundColor: 'rgba(50,50,50,0.5)',\n      axisPointer: {\n        type: 'line',\n        lineStyle: {\n          color: '#008acd'\n        },\n        crossStyle: {\n          color: '#008acd'\n        },\n        shadowStyle: {\n          color: 'rgba(200,200,200,0.2)'\n        }\n      }\n    },\n    dataZoom: {\n      dataBackgroundColor: '#efefff',\n      fillerColor: 'rgba(182,162,222,0.2)',\n      handleColor: '#008acd'\n    },\n    grid: {\n      borderColor: '#eee'\n    },\n    categoryAxis: {\n      axisLine: {\n        lineStyle: {\n          color: '#008acd'\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: ['#eee']\n        }\n      }\n    },\n    valueAxis: {\n      axisLine: {\n        lineStyle: {\n          color: '#008acd'\n        }\n      },\n      splitArea: {\n        show: true,\n        areaStyle: {\n          color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']\n        }\n      },\n      splitLine: {\n        lineStyle: {\n          color: ['#eee']\n        }\n      }\n    },\n    timeline: {\n      lineStyle: {\n        color: '#008acd'\n      },\n      controlStyle: {\n        normal: {\n          color: '#008acd'\n        },\n        emphasis: {\n          color: '#008acd'\n        }\n      },\n      symbol: 'emptyCircle',\n      symbolSize: 3\n    },\n    line: {\n      smooth: true,\n      symbol: 'emptyCircle',\n      symbolSize: 3\n    },\n    candlestick: {\n      itemStyle: {\n        normal: {\n          color: '#d87a80',\n          color0: '#2ec7c9',\n          lineStyle: {\n            color: '#d87a80',\n            color0: '#2ec7c9'\n          }\n        }\n      }\n    },\n    scatter: {\n      symbol: 'circle',\n      symbolSize: 4\n    },\n    map: {\n      label: {\n        normal: {\n          textStyle: {\n            color: '#d87a80'\n          }\n        }\n      },\n      itemStyle: {\n        normal: {\n          borderColor: '#eee',\n          areaColor: '#ddd'\n        },\n        emphasis: {\n          areaColor: '#fe994e'\n        }\n      }\n    },\n    graph: {\n      color: colorPalette\n    },\n    gauge: {\n      axisLine: {\n        lineStyle: {\n          color: [[0.2, '#2ec7c9'], [0.8, '#5ab1ef'], [1, '#d87a80']],\n          width: 10\n        }\n      },\n      axisTick: {\n        splitNumber: 10,\n        length: 15,\n        lineStyle: {\n          color: 'auto'\n        }\n      },\n      splitLine: {\n        length: 22,\n        lineStyle: {\n          color: 'auto'\n        }\n      },\n      pointer: {\n        width: 5\n      }\n    }\n  };\n  echarts.registerTheme('macarons', theme);\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\n\n\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\n\n\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function wrapVar(varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n/**\n * @module echarts/core/BoundingRect\n */\n\n\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function union(other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function calculateTransform(b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function intersect(b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function contain(x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function clone() {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function copy(other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function plain() {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function brush(ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function buildPath(ctx, shapeCfg, inBundle) {},\n  createPathProxy: function createPathProxy() {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function getBoundingRect() {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function contain(x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function dirty(dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function animateShape(loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function attrKV(key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function setShape(key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function getLineScale() {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function Sub(opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function $constructor(option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function mergeOption(option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function optionUpdated(newCptOption, isInit) {},\n  getDefaultOption: function getDefaultOption() {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function getReferringComponents(mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\n\n\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function mergeOption(option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function get(path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function getShallow(key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function isEmpty() {\n    return this.option == null;\n  },\n  restoreData: function restoreData() {},\n  // Pending\n  clone: function clone() {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function setReadOnly(properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function parsePath(path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function customizeGetParent(getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar _getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function mergeOption(newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function fillDataTextStyle(data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function getInitialData() {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function appendData(params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function getData(dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function setData(data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function getSource() {\n    return _getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function getRawData() {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function getBaseAxis() {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function restoreData() {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function getColorFromPalette(name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function coordDimToDataDim(coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function getProgressive() {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\n\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function List(dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function setItemDataAndSeriesIndex(child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\n\n\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function line(x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function rect(x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function roundRect(x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function square(x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function circle(x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function diamond(x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function pin(x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function arrow(x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function triangle(x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function beforeBrush() {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function buildPath(ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function create(ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function update(ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function getCoordinateSystems() {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\n\n\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n      var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n      var isBaseAxisAndHasBarSeries;\n      zrUtil.each(barSeriesModels, function (seriesModel) {\n        isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n      });\n\n      if (isBaseAxisAndHasBarSeries) {\n        // Calculate placement of bars on axis\n        var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n        var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n        min = adjustedScale.min;\n        max = adjustedScale.max;\n      }\n    }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function ExtendedClass() {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function init(ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function render(seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function remove(ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function dispose() {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function progress(params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function progress(params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\n\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\n\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar _getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar _calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function Axis(dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function contain(coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function getExtent() {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function getPixelPrecision(dataExtent) {\n    return _getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function setExtent(start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function dataToCoord(data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function coordToData(coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function pointToData(point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function getTicksCoords(opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function getViewLabels() {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function getLabelModel() {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function getTickModel() {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function getBandWidth() {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function calculateCategoryInterval() {\n    return _calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function Eventful() {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function one(event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function on(event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function isSilent(event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function off(event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function trigger(type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function triggerWithContext(type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\n\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function count() {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function getItem(idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function count() {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function getItem(idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function appendData() {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function count() {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function getItem(idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function appendData(newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function count() {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function getItem(idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function appendData(newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function clean() {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function objectRows(dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function original(dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function objectRows(dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function original(dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function typedArray(dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function cb() {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function add(func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function update(func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function remove(func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function execute() {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function reset(seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize,\n        symbolKeepAspect: keepAspect\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function AxisBuilder(axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function hasBuilder(name) {\n    return !!builders[name];\n  },\n  add: function add(name) {\n    builders[name].call(this);\n  },\n  getGroup: function getGroup() {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function axisLine() {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function axisTickLabel() {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function axisName() {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function formatter() {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\n\n\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n\n    _updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function updateAxisPointer(axisModel, ecModel, api, payload, force) {\n    _updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove(ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose(ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction _updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function VisualMapping(option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function mapValueToVisual(value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function getNormalizer() {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function getColorMapper() {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function linear(normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function piecewise(normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function applyVisual(value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function piecewise(normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function applyVisual(value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function linear(normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function piecewise(normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function linear(value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function piecewise(value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function category(value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\n\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function PathProxy(notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function setScale(sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function getContext() {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function beginPath(ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function moveTo(x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function lineTo(x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function arc(cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function arcTo(x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function rect(x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function closePath() {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function fill(ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function stroke(ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function setLineDash(lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function setLineDashOffset(offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function len() {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function setData(data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function appendPath(path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function addData(cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function _expandData() {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function _needsDash() {\n    return this._lineDash;\n  },\n  _dashedLineTo: function _dashedLineTo(x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function _dashedBezierTo(x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function _dashedQuadraticTo(x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function toStatic() {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function getBoundingRect() {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function rebuildPath(ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\n\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\n\n\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function getMin(origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function getMax(origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function getNeedCrossZero() {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function setRange(rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function resetRange() {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\n\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function log() {};\n\nif (debugMode === 1) {\n  log = function log() {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function log() {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\n\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function brush(ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function getBoundingRect() {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\n\n\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function beforeBrush(ctx) {},\n  afterBrush: function afterBrush(ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function brush(ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function getBoundingRect() {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function contain(x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function traverse(cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function rectContain(x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function dirty() {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function animateStyle(loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function attrKV(key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function setStyle(key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function useStyle(obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\n\nvar Text = function Text(opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function brush(ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function getBoundingRect() {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\n\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\n\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function reset(seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\n\n\necharts.extendComponentView({\n  type: 'grid',\n  render: function render(gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function reset(seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\n\n\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function doInit(rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function _giveAxisProxies() {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function _resetTarget() {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function _judgeAutoMode() {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function _autoSetAxisIndex() {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function _autoSetOrient() {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function _isSeriesHasAllAxesTypeOf(seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function _setDefaultThrottle(rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function getFirstTargetAxisModel() {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function eachTargetAxis(callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function getAxisProxy(dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function getAxisModel(dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function setRawRange(opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function getPercentRange() {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function getValueRange(axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function findRepresentativeAxisProxy(axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function getRangePropMode() {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function getTargetCoordInfo() {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\n\n\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function ZRender(id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function getId() {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function add(el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function remove(el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function configLayer(zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function setBackgroundColor(backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function refreshImmediately() {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function refresh() {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function flush() {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function addHover(el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function removeHover(el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function clearHover() {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function refreshHover() {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function refreshHoverImmediately() {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function resize(opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function clearAnimation() {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function getWidth() {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function getHeight() {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function pathToImage(e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function setCursorStyle(cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function findHover(x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function on(eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function off(eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function trigger(eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function clear() {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function dispose() {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\n\n\nvar Group = function Group(opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function children() {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function childAt(idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function childOfName(name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function childCount() {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function add(child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function addBefore(child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function _doAdd(child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function remove(child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function removeAll() {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function eachChild(cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function traverse(cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function addChildrenToStorage(storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function delChildrenFromStorage(storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function dirty() {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function getBoundingRect(includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\"); // TODO: Have not support 'start', 'end' yet.\n\n\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function Gradient(colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function addColorStop(offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar Component = function Component() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function init(ecModel, api) {},\n  render: function render(componentModel, ecModel, api, payload) {},\n  dispose: function dispose() {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var clazzUtil = require(\"../util/clazz\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\n\n\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function setExtent(start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function unionExtent(other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function getInterval() {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function setInterval(interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function getTicks() {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function getLabel(data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function niceTicks(splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function niceExtent(opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function reset(seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function onEmphasis() {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function onNormal() {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\n\n\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function optionUpdated() {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function getCategories(rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function getOrdinalMeta() {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function getTargetSeries(ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function reset(seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function create(ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function getFilledRegions(originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\n\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\n\n\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\n\n\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function Creater() {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        return;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/component/dataset\");\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/sunburst\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function Transformable(opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\n\n\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function getDataParams(dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function getFormattedLabel(dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function getRawValue(idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function formatTooltip() {// Empty function\n  }\n};\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\n\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function reset(s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\n\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\n\n\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function updateSelectedMap(targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function select(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function unSelect(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function toggleSelected(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function isSelected(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\n\n\nvar TreeNode = function TreeNode(name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function isRemoved() {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function eachNode(options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function updateDepthAndHeight(depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function getNodeById(id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function contains(node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function getAncestors(includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function getValue(dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function setLayout(layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function getLayout() {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function getLevelModel() {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function getLeavesModel() {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function setVisual(key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function getVisual(key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function getRawIndex() {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function getId() {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function isAncestorOf(node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function isDescendantOf(node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function eachNode(options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function getNodeByDataIndex(dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function getNodeByName(name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function update() {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function clearLayouts() {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function enableBrush(brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function setPanels(panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function mount(opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function eachCover(cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function updateCovers(brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function unmount() {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function dispose() {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function mousedown(e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function mousemove(e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function createCover(controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function createCover(controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      return localTrack;\n    },\n    endCreating: function endCreating(controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function createCover(controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function render(axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function remove(api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function dispose(api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function determineAnimation(axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function createPointerEl(group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function createLabelEl(group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function updatePointerEl(group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function updateLabelEl(group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function _renderHandle(value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function onmousemove(e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function _moveHandleToValue(value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function _onHandleDragMove(dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function _doDispatchAxisPointer() {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function _onHandleDragEnd(moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function clear(api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function doClear() {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function buildLabel(xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function create(ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function mergeOption(newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function getData() {\n    return this._data;\n  },\n  setData: function setData(data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function init() {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function render(markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function renderSeries() {}\n});\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar matrix = require(\"../core/matrix\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\"); // TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\n\n\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    if (typeof val === 'string' && val.indexOf('NaN') > -1) {\n      console.log(val);\n    }\n\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = !isText && style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale); // stroke then fill for text; fill then stroke for others\n\n    attr(svgEl, 'paint-order', isText ? 'stroke' : 'fill');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function svgTextDrawRectText(el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    } // Text rotation, but no element transform\n\n\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = textRect.width / 2 + x;\n      y = textRect.height / 2 + y;\n    } else if (origin) {\n      x = origin[0] + x;\n      y = origin[1] + y;\n    }\n\n    var rotate = -style.textRotation || 0;\n    var transform = matrix.create(); // Apply textRotate to element matrix\n\n    matrix.rotate(transform, el.transform, rotate);\n    setTransform(textSvgEl, transform);\n  }\n\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\n\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {number}          zrId      zrender instance id\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n  this._zrId = zrId;\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this._domName = domName || '_dom';\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element[this._domName] && defs.contains(element[this._domName])) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate(element);\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element[this._domName] = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n\n  if (defs && element[this._domName]) {\n    defs.removeChild(element[this._domName]);\n    element[this._domName] = null;\n  }\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\n\n\nvar Element = function Element(opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function drift(dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function beforeUpdate() {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function afterUpdate() {},\n\n  /**\n   * Update each frame\n   */\n  update: function update() {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function traverse(cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function attrKV(key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function hide() {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function show() {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function attr(key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function setClipPath(clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function removeClipPath() {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function addSelfToZr(zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function removeSelfFromZr(zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n/**\n * @module echarts/animation/Animator\n */\n\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function onframe(target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function Animator(target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function when(time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function during(callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function pause() {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function resume() {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function isPaused() {\n    return !!this._paused;\n  },\n  _doneCallback: function _doneCallback() {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function start(easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function oneTrackDone() {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function stop(forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function delay(time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function done(cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function getClips() {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function LinkedList() {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function Entry(val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function LRU(maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function Style(opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function bind(ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function hasFill() {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function hasStroke() {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function extendFrom(otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function set(obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function clone() {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function getGradient(ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var Pattern = function Pattern(image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\nvar tmpRect = new BoundingRect();\n\nvar RectText = function RectText() {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function drawRectText(ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\n\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function init(option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function setOption(option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function resetOption(type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function mergeOption(newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function getOption() {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function getTheme() {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function getComponent(mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function queryComponents(condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function findComponents(condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function eachComponent(mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function getSeriesByName(name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function getSeriesByIndex(seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function getSeriesByType(subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function getSeries() {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function getSeriesCount() {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function eachSeries(cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function eachRawSeries(cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function eachSeriesByType(subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function eachRawSeriesByType(subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function isSeriesFiltered(seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function getCurrentSeriesIndices() {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function filterSeries(cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function restoreData(payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\n\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var env = require(\"../../core/env\"); // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\n\n\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\n\n\nvar LinearGradient = function LinearGradient(x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function clearColorPalette() {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function getColorFromPalette(name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\n\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function cartesian2d(seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function singleAxis(seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function polar(seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function geo(seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function parallel(seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\n\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function optionUpdated() {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\n\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\n\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\n\n\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\n\n\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\n\n\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function getBoundingRect() {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function contain(coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\n\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\n\n\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption() {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function restoreData() {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\n\n\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function getMarkerPosition(value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\n\n\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function setBoundingRect(x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function getBoundingRect() {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function setViewRect(x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function setCenter(centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function setZoom(zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function getDefaultCenter() {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function getCenter() {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function getZoom() {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function getRoamTransform() {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function _updateCenterAndZoom() {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function _updateTransform() {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function getViewRect() {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function getViewRectAfterRoam() {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function containPoint(point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function draw(mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function remove() {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function _updateController(mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateTransform'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\n\n\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\n\n\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function render(parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function dispose(ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function _throttledDispatchExpand(opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function _dispatchExpand(opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function mousedown(e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function mouseup(e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function mousemove(e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\n\n\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\n\n\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function key(d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function sortKeys(order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function entries(array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    return createListSimply(this, {\n      coordDimensions: [{\n        name: baseAxisDim,\n        type: getDimensionTypeByAxis(baseAxisType),\n        ordinalMeta: ordinalMeta,\n        otherDims: {\n          tooltip: false,\n          itemName: 0\n        },\n        dimsDef: ['base']\n      }, {\n        name: otherAxisDim,\n        type: getDimensionTypeByAxis(otherAxisType),\n        dimsDef: defaultValueDimensions.slice()\n      }],\n      dimensionsCount: defaultValueDimensions.length + 1\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function getBaseAxis() {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\n\n\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function reset(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.extendComponentView({\n  type: 'single'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\n\n\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\n\n\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function dispatchAction(payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function getHandleTransform(value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function updateHandleTransform(transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function line(axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function shadow(axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function init(option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function mergeOption(option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function optionUpdated() {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function _updateData(ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function getData() {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function select(name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function unSelect(name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function toggleSelected(name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function isSelected(name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function getContentGroup() {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function resetInner() {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function renderInner(itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function _createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function layoutInner(legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\n\n\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function grid(foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function geo(foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function grid() {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function geo() {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function rect(to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function polygon(to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function rect(values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function polygon(values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function getTargetSeries(ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function overallReset(ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setRawRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      }, true);\n    });\n  }\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function resetVisual(supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function getTargetSeriesIndices() {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function eachTargetSeries(callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function isTargetSeries(seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function formatValueText(value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function resetExtent() {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function getDataDimension(list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function getExtent() {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function completeVisualOption() {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function resetItemSize() {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function isCategory() {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\n\n\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function get(visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function init(ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function render(visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function renderBackground(group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function getControllerVisual(targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function positionGroup(group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\n\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function doCreateNode(tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function doCreateNode(tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nexports.default = function (fn) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n  var timer = null;\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(_this, args);\n    }, delay);\n  };\n};\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar SizeSensorId = exports.SizeSensorId = 'size-sensor-id';\nvar SensorStyle = exports.SensorStyle = 'display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;opacity:0';\nvar SensorClassName = exports.SensorClassName = 'size-sensor-object';","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function Handler(storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function setHandlerProxy(proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function mousemove(event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function mouseout(event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function resize(event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function dispatch(eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function dispose() {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function setCursorStyle(cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function dispatchToElement(targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function findHover(x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function _dragStart(e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function _drag(e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function _dragEnd(e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\"); // Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\n\n\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function Storage() {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function traverse(cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function getDisplayList(update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function updateDisplayList(includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function _updateAndAddDisplayable(el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function addRoot(el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function delRoot(el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function addToStorage(el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function delFromStorage(el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function dispose() {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\n\nvar Animatable = function Animatable() {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function animate(path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function stopAnimation(forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function animateTo(target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function _animateToShallow(path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function step(globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function restart(globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function fire(eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function pause() {\n    this._paused = true;\n  },\n  resume: function resume() {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function linear(k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function quadraticIn(k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function quadraticOut(k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function quadraticInOut(k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function cubicIn(k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function cubicOut(k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function cubicInOut(k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function quarticIn(k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function quarticOut(k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function quarticInOut(k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function quinticIn(k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function quinticOut(k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function quinticInOut(k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function sinusoidalIn(k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function sinusoidalOut(k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function sinusoidalInOut(k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function exponentialIn(k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function exponentialOut(k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function exponentialInOut(k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function circularIn(k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function circularOut(k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function circularInOut(k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function elasticIn(k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function elasticOut(k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function elasticInOut(k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function backIn(k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function backOut(k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function backInOut(k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function bounceIn(k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function bounceOut(k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function bounceInOut(k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function Painter(root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function getType() {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function isSingleCanvas() {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function getViewportRoot() {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function getViewportRootOffset() {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function refresh(paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function addHover(el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function removeHover(el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function clearHover(el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function refreshHover() {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function getHoverLayer() {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function _paintList(list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function _compositeManually() {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function _doPaintList(list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function _doPaintEl(el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function getLayer(zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function insertLayer(zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function eachLayer(cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function eachBuiltinLayer(cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function eachOtherLayer(cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function getLayers() {\n    return this._layers;\n  },\n  _updateLayerStatus: function _updateLayerStatus(list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function clear() {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function _clearLayer(layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function setBackgroundColor(backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function configLayer(zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function delLayer(zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function resize(width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function clearLayer(zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function dispose() {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function getRenderedCanvas(opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function getWidth() {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function getHeight() {\n    return this._height;\n  },\n  _getSize: function _getSize(whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function pathToImage(path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function Layer(id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function getElementCount() {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function initContext() {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function createBackBuffer() {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function resize(width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function clear(clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\n\n\nvar Animation = function Animation(options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function addClip(clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function addAnimator(animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function removeClip(clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function removeAnimator(animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function _update() {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function _startLoop() {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function start() {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function stop() {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function pause() {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function resume() {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function clear() {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function isFinished() {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function animate(target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function mousemove(event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function mouseout(event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function touchstart(event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function touchmove(event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function touchend(event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function pointerdown(event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function pointermove(event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function pointerup(event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function pointerout(event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n/**\n * Only implements needed gestures for mobile.\n */\n\n\nvar GestureMgr = function GestureMgr() {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function recognize(event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function clear() {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function _doTrack(event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function _recognize(event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function pinch(track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar _default = {\n  getLineStyle: function getLineStyle(excludes) {\n    var style = _getLineStyle(this, excludes);\n\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function getLineDash(lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\n\nvar _default = {\n  getAreaStyle: function getAreaStyle(excludes, includes) {\n    return _getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function getTextColor(isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function getFont() {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function getTextRect(text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\"); // command chars\n\n\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function vRatio(u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function vAngle(u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var curve = require(\"../core/curve\");\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\n\n\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function buildPath(ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\n\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\n\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function pointAt(p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function pointAt(t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function tangentAt(t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n\n\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"./Path\"); // CompoundPath to improve performance\n\n\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function _updatePathDirty() {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function beforeBrush() {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function afterBrush() {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function getBoundingRect() {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\n\n\nvar RadialGradient = function RadialGradient(x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\n\nvar _default = {\n  getItemStyle: function getItemStyle(excludes, includes) {\n    var style = _getItemStyle(this, excludes, includes);\n\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function getBorderLineDash() {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function getBoxLayoutParams() {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function setOption(rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function mountOption(isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function getTimelineOption(ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function getMediaOption(ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\n\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\n\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function dataEach(data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\n\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function axisCommon() {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\n\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\n\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\n\n\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function init(ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function parse(val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function contain(rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function normalize(val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function scale(val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function getTicks() {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function getLabel(n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function count() {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function unionExtentFromData(data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function getOrdinalMeta() {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\n\n\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function getLabel(val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function niceExtent(opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function niceTicks(approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function parse(val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\n\n\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function $constructor() {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function getTicks() {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function scale(val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function setExtent(start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function getExtent() {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function unionExtent(extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function unionExtentFromData(data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function niceTicks(approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function niceExtent(opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, forSymbol, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y; // Avoid float number rounding error for symbol on the edge of axis extent.\n  // See #7913 and `test/dataZoom-clip.html`.\n\n  if (forSymbol) {\n    x -= 0.5;\n    width += 0.5;\n    y -= 0.5;\n    height += 0.5;\n  } else {\n    var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n    var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n    if (isHorizontal) {\n      y -= expandSize;\n      height += expandSize * 2;\n    } else {\n      x -= expandSize;\n      width += expandSize * 2;\n    }\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, forSymbol, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent().slice();\n  radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180; // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  if (forSymbol) {\n    radiusExtent[0] -= 0.5;\n    radiusExtent[1] += 0.5;\n  }\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(radiusExtent[0], 1),\n      r: round(radiusExtent[1], 1),\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, forSymbol, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, forSymbol, seriesModel) : createGridClipShape(coordSys, hasAnimation, forSymbol, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function init() {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, false, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: createClipShape(coordSys, false, true, seriesModel)\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function dispose() {},\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function _newPolyline(points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function _newPolygon(points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function _updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function remove(ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function average(frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function sum(frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function max(frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function min(frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function nearest(frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function indexSampler(frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function reset(seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function clampData(data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function getOtherAxis(axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function Cartesian(name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function getAxis(dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function getAxes() {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function getAxesByScale(scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function addAxis(axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function dataToCoord(val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function coordToData(val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function _dataCoordConvert(input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar Axis2D = function Axis2D(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function getGlobalExtent(asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function getOtherAxis() {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function remove() {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function _splitLine(axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function _splitArea(axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function reset(seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","var BaseBarSeries = require(\"./BaseBarSeries\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function getProgressive() {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function render(seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function _updateDrawMode(seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function _renderNormal(seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function _renderLarge(seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function _incrementalRenderLarge(params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function remove(ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function _clear(ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function cartesian2d(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function polar(data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function cartesian2d(data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function polar(data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function buildPath(ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar _default = {\n  getBarItemStyle: function getBarItemStyle(excludes) {\n    var style = _getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function init(option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function mergeOption(newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function _createSelectableList() {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function getDataParams(dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function _defaultLabelLine(option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function init() {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function dispose() {},\n  _createClipPath: function _createClipPath(cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function containPoint(point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\n\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\n\n\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  getProgressive: function getProgressive() {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n      // progressive: null\n\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data);\n    this._finished = true;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _updateSymbolDraw: function _updateSymbolDraw(data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function dispose() {}\n});","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\n\n\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  buildPath: function buildPath(path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function afterBrush(ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function findDataIndex(x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental) {\n  var hostModel = data.hostModel; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n  // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\n\n\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\n\n\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function optionUpdated() {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function render(radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function _buildAxes(radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function _buildSplitLineAndArea(radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function init(option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function render(seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function remove() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n\n    for (var i = 0; i < axes.length; i++) {\n      data.each(data.mapDimension(axes[i].dim), pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\n\n\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function init(option) {\n    // this._fillOption(option, this.getMapType());\n    // this.option = option;\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function getInitialData(option) {\n    return createListSimply(this, ['value']);\n  },\n  mergeOption: function mergeOption(newOption) {\n    // this._fillOption(newOption, this.getMapType());\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  _createSelectableList: function _createSelectableList() {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    targetList = geoCreator.getFilledRegions(targetList, this.getMapType(), this.option.nameMap);\n    return targetList;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function getHostGeoModel() {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function getMapType() {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function _fillOption(option, mapName) {// Shallow clone\n    // option = zrUtil.extend({}, option);\n    // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n    // return option;\n  },\n  getRawValue: function getRawValue(dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function getRegionModel(regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function getTooltipPosition(dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Geo fix functions\n\n\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function containCoord(coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function loadGeoJson(geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n    var scale = rawTransformable.scale;\n    scale[1] = -scale[1];\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function getRegion(name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function getRegionByCoord(coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function addGeoCoord(name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function getGeoCoord(name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function getBoundingRect() {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\n\n\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function render(mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function remove() {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function dispose() {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function _renderSymbols(mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function onEmphasis() {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function onNormal() {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\n\n\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Create data struct and define tree view's series model\n */\n\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function getInitialData(option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function getOrient() {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  This file used to draw tree view\n */\n\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function dispose() {},\n  remove: function remove() {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function optionUpdated() {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function getDataParams(dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function setLayoutInfo(layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function mapIdToIndex(id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function getViewRoot() {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function resetViewRoot(viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function getItemStyleNormal(model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function init(o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function render(seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function _giveContainerGroup(layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function _doRender(containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function _doAnimation(containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0 // Others.\n\n            }\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function _resetController(api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function _clearController() {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function _onPan(dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function _onZoom(scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function _initEvents(containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function _renderBreadcrumb(seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function dispose() {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function _zoomToNode(targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function _rootToNode(targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function findTarget(x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function render(seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function _prepare(targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function _renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\n\n\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function add(el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function done(callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function start() {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\n\n\nvar noop = function noop() {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(visualSymbol('graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function init(option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function mergeOption(option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function mergeDefaultAndTheme(option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function getGraph() {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function getEdgeData() {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function getCategoriesData() {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function _updateCategoriesData() {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function isAnimationEnabled() {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle'\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      curveness: 0,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\n\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function Graph(directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function degree() {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function inDegree() {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function outDegree() {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function createGraphDataProxyMixin(hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function getValue(dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function setVisual(key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function getVisual(key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function setLayout(layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function getLayout() {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function getGraphicEl() {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function getRawIndex() {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function init(ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function dispose() {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function focusNodeAdjacency(seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function unfocusNodeAdjacency(seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function _startForceLayoutIteration(forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function _updateController(seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function _updateNodeAndLinkScale() {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function _getNodeGlobalScale(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function updateLayout(seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\n\n\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function pointAt(t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function tangentAt(t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function warmUp() {\n      friction = 0.5;\n    },\n    setFixed: function setFixed(idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function setUnfixed(idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function step(cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Where to create the simple view coordinate system\n\n\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function getInitialData(option, ecModel) {\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    }\n\n    option.data = dataOpt;\n    return createListSimply(this, ['value']);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      color: 'auto'\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function render(seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function dispose() {},\n  _renderMain: function _renderMain(seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function getColor(percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function _renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function _renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('emphasis.itemStyle').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function _renderTitle(seriesModel, ecModel, api, getColor, posInfo) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get(valueDim, 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: data.getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function _renderDetail(seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var data = seriesModel.getData();\n      var value = data.get(data.mapDimension('value'), 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(dataColor('funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(dataFilter('funnel'));","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function init(option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _defaultLabelLine: function _defaultLabelLine(option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  // Overwrite\n  getDataParams: function getDataParams(dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var valueDim = data.mapDimension('value');\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      show: true,\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    labelLine: {\n      show: true,\n      length: 20,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      // color: 各异,\n      borderColor: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function remove() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function dispose() {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function getLinePoints(idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n      var height = itemModel.get('itemStyle.height');\n\n      if (height == null) {\n        height = itemHeight;\n      } else {\n        height = parsePercent(height, viewRect.height);\n\n        if (sort === 'ascending') {\n          height = -height;\n        }\n      }\n\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + height);\n      y += height + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(parallelVisual);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\n\n\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function _init(parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function update(ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function containPoint(point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function getModel() {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function _updateAxesFromSeries(parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function resize(parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function getRect() {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function _makeLayoutInfo() {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function _layoutAxes() {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function getAxis(dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function dataToPoint(value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function eachActiveState(data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function hasAxisBrushed() {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function axisCoordToPoint(coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function getAxisLayout(dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function getSlidedAxisExpandWindow(point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\n\n\nvar ParallelAxis = function ParallelAxis(dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function isHorizontal() {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function init() {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function contains(model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function setAxisExpand(opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function _initDimensions() {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function getAreaSelectStyle() {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function setActiveIntervals(intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function getActiveState(value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\n\n\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function _refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function _onBrush(coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function getInitialData(option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function getRawIndicesByActiveState(activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function init() {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function dispose() {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function reset(seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\n\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function getInitialData(option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function setNodePosition(dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function getGraph() {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function getEdgeData() {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\n\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function render(seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n      var y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n      var y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    var draggable = seriesModel.get('draggable');\n\n    if (draggable) {\n      nodeData.eachItemGraphicEl(function (el, dataIndex) {\n        el.drift = function (dx, dy) {\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      });\n    }\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function dispose() {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragNode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file The layout algorithm of sankey view\n * @author Deqing Li(annong035@gmail.com)\n */\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n * \n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  while (zeroIndegrees.length) {\n    zrUtil.each(zeroIndegrees, function (node) {\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n      zrUtil.each(node.outEdges, function (edge) {\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0) {\n          nextNode.push(targetNode);\n        }\n      });\n    });\n    ++x;\n    zeroIndegrees = nextNode;\n    nextNode = [];\n  }\n\n  for (var i = 0; i < remainEdges.length; i++) {}\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // If the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\n\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n        var itemModel = node.getModel();\n        var customColor = itemModel.get('itemStyle.color');\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'min',\n    defaultTooltip: true\n  }, {\n    name: 'Q1',\n    defaultTooltip: true\n  }, {\n    name: 'median',\n    defaultTooltip: true\n  }, {\n    name: 'Q3',\n    defaultTooltip: true\n  }, {\n    name: 'max',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\n\n\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function remove(ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar borderColorQuery = ['itemStyle', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\n  var vDimIdx = 1 - cDimIdx;\n  var coordDims = ['x', 'y'];\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\n  var vDims = data.mapDimension(coordDims[vDimIdx], true);\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n    var axisDimVal = data.get(cDim, dataIndex);\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\n    var ends = [];\n    addBodyEnd(ends, end2, 0);\n    addBodyEnd(ends, end4, 1);\n    ends.push(end1, end2, end5, end4);\n    layEndLine(ends, end1);\n    layEndLine(ends, end5);\n    layEndLine(ends, median);\n    data.setItemLayout(dataIndex, {\n      initBaseline: median[vDimIdx],\n      ends: ends\n    });\n  }\n\n  function getPoint(axisDimVal, dimIdx, dataIndex) {\n    var val = data.get(dimIdx, dataIndex);\n    var p = [];\n    p[cDimIdx] = axisDimVal;\n    p[vDimIdx] = val;\n    var point;\n\n    if (isNaN(axisDimVal) || isNaN(val)) {\n      point = [NaN, NaN];\n    } else {\n      point = coordSys.dataToPoint(p);\n      point[cDimIdx] += offset;\n    }\n\n    return point;\n  }\n\n  function addBodyEnd(ends, point, start) {\n    var point1 = point.slice();\n    var point2 = point.slice();\n    point1[cDimIdx] += halfWidth;\n    point2[cDimIdx] -= halfWidth;\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\n  }\n\n  function layEndLine(ends, endCenter) {\n    var from = endCenter.slice();\n    var to = endCenter.slice();\n    from[cDimIdx] -= halfWidth;\n    to[cDimIdx] += halfWidth;\n    ends.push(from, to);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: [{\n    name: 'open',\n    defaultTooltip: true\n  }, {\n    name: 'close',\n    defaultTooltip: true\n  }, {\n    name: 'lowest',\n    defaultTooltip: true\n  }, {\n    name: 'highest',\n    defaultTooltip: true\n  }],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      color: '#c23531',\n      // 阳线 positive\n      color0: '#314656',\n      // 阴线 negative     '#c23531', '#314656'\n      borderWidth: 1,\n      // FIXME\n      // ec2中使用的是lineStyle.color 和 lineStyle.color0\n      borderColor: '#c23531',\n      borderColor0: '#314656'\n    },\n    emphasis: {\n      itemStyle: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    large: true,\n    largeThreshold: 600,\n    progressive: 5e3,\n    progressiveThreshold: 1e4,\n    progressiveChunkMode: 'mod',\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function getShadowDim() {\n    return 'open';\n  },\n  brushSelector: function brushSelector(dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return itemLayout && selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function render(seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function _updateDrawMode(seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function _renderNormal(seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox'); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function _renderLarge(seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderNormal: function _incrementalRenderNormal(params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function _incrementalRenderLarge(params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function remove(ecModel) {\n    this._clear();\n  },\n  _clear: function _clear() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","var _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\n\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve2 = _util.retrieve2;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  reset: function reset(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var cDimIdx = 0;\n    var vDimIdx = 1;\n    var coordDims = ['x', 'y'];\n    var cDim = data.mapDimension(coordDims[cDimIdx]);\n    var vDims = data.mapDimension(coordDims[vDimIdx], true);\n    var openDim = vDims[0];\n    var closeDim = vDims[1];\n    var lowestDim = vDims[2];\n    var highestDim = vDims[3];\n    data.setLayout({\n      candleWidth: candleWidth,\n      // The value is experimented visually.\n      isSimpleBox: candleWidth <= 1.3\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    return {\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\n    };\n\n    function normalProgress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n        var ocLow = Math.min(openVal, closeVal);\n        var ocHigh = Math.max(openVal, closeVal);\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\n        var highestPoint = getPoint(highestVal, axisDimVal);\n        var ends = [];\n        addBodyEnd(ends, ocHighPoint, 0);\n        addBodyEnd(ends, ocLowPoint, 1);\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\n        data.setItemLayout(dataIndex, {\n          sign: getSign(data, dataIndex, openVal, closeVal, closeDim),\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\n          // open point.\n          ends: ends,\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\n        });\n      }\n\n      function getPoint(val, axisDimVal) {\n        var p = [];\n        p[cDimIdx] = axisDimVal;\n        p[vDimIdx] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(ends, point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\n      }\n\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\n        var pmin = getPoint(lowestVal, axisDimVal);\n        var pmax = getPoint(highestVal, axisDimVal);\n        pmin[cDimIdx] -= candleWidth / 2;\n        pmax[cDimIdx] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\n        return point;\n      }\n    }\n\n    function largeProgress(params, data) {\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\n      var points = new LargeArr(params.count * 5);\n      var offset = 0;\n      var point;\n      var tmpIn = [];\n      var tmpOut = [];\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var axisDimVal = data.get(cDim, dataIndex);\n        var openVal = data.get(openDim, dataIndex);\n        var closeVal = data.get(closeDim, dataIndex);\n        var lowestVal = data.get(lowestDim, dataIndex);\n        var highestVal = data.get(highestDim, dataIndex);\n\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\n          points[offset++] = NaN;\n          offset += 4;\n          continue;\n        }\n\n        points[offset++] = getSign(data, dataIndex, openVal, closeVal, closeDim);\n        tmpIn[cDimIdx] = axisDimVal;\n        tmpIn[vDimIdx] = lowestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[0] : NaN;\n        points[offset++] = point ? point[1] : NaN;\n        tmpIn[vDimIdx] = highestVal;\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n        points[offset++] = point ? point[1] : NaN;\n      }\n\n      data.setLayout('largePoints', points);\n    }\n  }\n};\n\nfunction getSign(data, dataIndex, openVal, closeVal, closeDim) {\n  var sign;\n\n  if (openVal > closeVal) {\n    sign = -1;\n  } else if (openVal < closeVal) {\n    sign = 1;\n  } else {\n    sign = dataIndex > 0 // If close === open, compare with close of last record\n    ? data.get(closeDim, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\n    1;\n  }\n\n  return sign;\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(visualSymbol('effectScatter', 'circle'));\necharts.registerLayout(layoutPoints('effectScatter'));","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     opacity: 1\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function init() {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    this.group.dirty();\n    var res = pointsLayout().reset(seriesModel);\n\n    if (res.progress) {\n      res.progress({\n        start: 0,\n        end: data.count()\n      }, data);\n    }\n\n    this._symbolDraw.updateLayout(data);\n  },\n  _updateGroupTransform: function _updateGroupTransform(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.getRoamTransform) {\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\n      this.group.decomposeTransform();\n    }\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\n\n\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function onEmphasis() {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function onNormal() {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function init(option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function mergeOption(option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function appendData(params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function _getCoordsFromItemModel(idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function getLineCoordsCount(idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function getLineCoords(idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function _processFlatCoordsArray(data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function preventIncremental() {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function getProgressive() {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function init() {},\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function _updateLineDraw(data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function _showEffect(seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function _clearLayer(api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function remove(ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\n\n\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\n\n\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function buildPath(path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function findDataIndex(x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function reset(seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function preventIncremental() {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function render(seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function _renderOnCartesianAndCalendar(seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function _renderOnGeo(geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\n\n\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function update(data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function _getBrush() {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function _getGradient(data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","var BaseBarSeries = require(\"./BaseBarSeries\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function getInitialData(option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function render(seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function remove(ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\n\n\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function _init(axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function update(ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function resize(axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function getRect() {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function _adjustAxis() {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function _updateAxisTransform(axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function getAxis() {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function getAxes() {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function getTooltipAxes() {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar SingleAxis = function SingleAxis(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function render(axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function _splitLine(axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function render(globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove(ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose(ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function getHandleTransform(value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function updateHandleTransform(transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function line(axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function shadow(axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\n\n\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function init(option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function fixData(data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function getLayerSeries() {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n    var timeDim = data.mapDimension('single');\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get(timeDim, index1) - data.get(timeDim, index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function getAxisTooltipData(dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\n\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function init() {\n    this._layers = [];\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function dispose() {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\n\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function getInitialData(option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function optionUpdated() {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function getDataParams(dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function getViewRoot() {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function resetViewRoot(viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function init() {},\n  render: function render(seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function event(e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function dispose() {},\n\n  /**\n   * @private\n   */\n  _initEvents: function _initEvents() {\n    var that = this;\n\n    var event = function event(e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              window.open(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function _rootToNode(node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function containPoint(point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout();\n\n  if (!layout) {\n    console.log(node.getLayout());\n  }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, 'normal', null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function onEmphasis() {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function onNormal() {\n    that.onNormal();\n  };\n\n  var onDownplay = function onDownplay() {\n    that.onDownplay();\n  };\n\n  var onHighlight = function onHighlight() {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\n\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function renderNode(node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle;\n          restAngle -= minAngle;\n        } else {\n          valueSumLargerThanMinAngle += value;\n        }\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar getLayoutOnAxis = _barGrid.getLayoutOnAxis;\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['emphasis', 'itemStyle'];\nvar LABEL_NORMAL = ['label'];\nvar LABEL_EMPHASIS = ['emphasis', 'label']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function render(customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    this.group.removeAll();\n    data.diff(oldData).add(function (newIdx) {\n      createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(customSeries, ecModel, api) {\n    this.group.removeAll();\n    this._data = null;\n  },\n  incrementalRender: function incrementalRender(params, customSeries, ecModel, api) {\n    var data = customSeries.getData();\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n\n    function setIncrementalAndHoverLayer(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.useHoverLayer = true;\n      }\n    }\n\n    for (var idx = params.start; idx < params.end; idx++) {\n      var el = createOrUpdate(null, idx, renderItem(idx), customSeries, this.group, data);\n      el.traverse(setIncrementalAndHoverLayer);\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n    graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n      autoColor: currVisualColor,\n      isRectText: true\n    });\n    itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n    graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n      isRectText: true\n    }, true);\n    itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), getDefaultLabel(data, dataIndexInside)) : null;\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n  return el;\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function coord(data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// -------------\n// Preprocessor\n// -------------\n\n\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function _flatten(optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function useElOptionsToUpdate() {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function _updateElements(graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function _relocate(graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function _clear() {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\n\n\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function setScrollDataIndex(scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function getOrient() {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\n\n\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function init() {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function resetInner() {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function renderInner(itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function layoutInner(legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function _pageGo(to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function _updatePageInfoView(legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function _getPageInfo(legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\n\n\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\n\n\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function init(ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function render(tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function _initGlobalListener() {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function _keepShow() {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function manuallyShowTip(tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function manuallyHideTip(tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function _manuallyAxisShowTip(tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function _tryShow(e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function _showOrMove(tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function _showAxisTooltip(dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function _showSeriesItemTooltip(e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function _showComponentItemTooltip(e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function _showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function _updatePosition(tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function _updateContentNotChangedOnAxis(dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function _hide(dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function dispose(ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function update() {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function show(tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function setContent(content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function setEnterable(enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function getSize() {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function moveTo(x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function hide() {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function hideLater(time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function isShow() {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\n\n\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          // angleAxis must be clamped.\n          var angleSpan = valueAxis.dataToAngle(value, true) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\n\n\nvar Polar = function Polar(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function getAxis(dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function getAxes() {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function getAxesByScale(scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function getAngleAxis() {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function getRadiusAxis() {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function getOtherAxis(axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function getTooltipAxes(dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function pointToCoord(point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function coordToPoint(coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function findAxisModel(axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function render(angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function _axisLine(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function _axisTick(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function _axisLabel(angleAxisModel, polar, ticksAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function _splitLine(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function _splitArea(angleAxisModel, polar, ticksAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function render(radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function _splitLine(radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function _splitArea(radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function line(axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function shadow(axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function init(option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function optionUpdated() {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function getRegionModel(name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function getFormattedLabel(name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function init(ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function render(geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function dispose() {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function rect(area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function polygon(area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\n\n\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function point(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function point(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function point(itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function setAreas(areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function setBrushOption(brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function init(ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function render(brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: updateController,\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function _onBrush(areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\n\n\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\nproto.render = proto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\n\n\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function getDimensionsInfo() {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function getRangeInfo() {\n    return this._rangeInfo;\n  },\n  getModel: function getModel() {\n    return this._model;\n  },\n  getRect: function getRect() {\n    return this._rect;\n  },\n  getCellWidth: function getCellWidth() {\n    return this._sw;\n  },\n  getCellHeight: function getCellHeight() {\n    return this._sh;\n  },\n  getOrient: function getOrient() {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function getFirstDayOfWeek() {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function getDateInfo(date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function getNextNDay(date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function update(ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function dataToPoint(data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function pointToData(point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function dataToRect(data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function pointToDate(point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function _initRangeOption() {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function _getRangeInfo(range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function _getDateByWeeksAndDay(nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function render(calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function _renderDayRect(calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function _renderLines(calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function _getEdgesPoints(points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function _drawSplitline(points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function _getLinePointsOfOneWeek(calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function _formatterLabel(formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function _yearTextPositionControl(textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function _renderYearText(calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function _monthTextPositionControl(point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function _renderMonthText(calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function _weekTextPositionControl(point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function _renderWeekText(calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\n\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function render(titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function AxisProxy(dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function hostedBy(dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function getDataValueWindow() {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function getDataPercentWindow() {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function getTargetSeriesModels() {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function getAxisModel() {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function getOtherAxisModel() {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function getMinMaxSpan() {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function calculateDataWindow(opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function reset(dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function restore(dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function filterData(dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n    // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function _buildView() {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function _resetLocation() {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function _positionGroup() {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function _getViewExtent() {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function _renderBackground() {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function _renderDataShadow() {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function _prepareDataShadowInfo() {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function _renderHandle() {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function onmousemove(e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function onmousemove(e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function _resetInterval() {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function _updateInterval(handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function _updateView(nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function _updateDataInfo(nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function _formatLabel(value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function _showDataInfo(showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function _onDragMove(handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function _onDragEnd() {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function _onClickPanelClick(e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function _dispatchZoomAction() {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function _findCoordRect() {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hance the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function containsPoint(e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function _onPan(coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function _onZoom(coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  }\n});\nvar getDirectionInfo = {\n  grid: function grid(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function polar(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function singleAxis(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\n\n\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  batch.length && record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {}; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\n\n\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function resetItemSize() {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function _resetRange() {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function completeVisualOption() {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function setSelected(selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function getSelected() {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function getValueState(value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function findTargetDataIndices(range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function getVisualMeta(getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function init() {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function doRender(visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function _buildView() {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function _renderEndsText(group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function _renderBar(targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function _createHandle(barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function onmousemove(e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function _createIndicator(barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function _dragHandle(handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function _resetInterval() {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function _updateInterval(handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function _updateView(forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function _createBarVisual(dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function _makeColorGradient(dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function _createBarPoints(handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function _createBarGroup(itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function _updateHandle(handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function _showIndicator(cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function _enableHoverLinkToSeries() {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function _enableHoverLinkFromSeries() {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function _doHoverLinkToSeries(cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function _hoverLinkFromSeriesMouseOver(e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function _hideIndicator() {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function _clearHoverLinkToSeries() {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function _clearHoverLinkFromSeries() {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function _applyTransform(vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function _dispatchHighDown(type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function onmousemove(e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function completeVisualOption() {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function _resetSelected(newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function getSelectedMapKey(piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function getPieceList() {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function _determineMode() {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function setSelected(selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function getValueState(value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function findTargetDataIndices(pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function getRepresentValue(piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function getVisualMeta(getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function splitNumber() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function categories() {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function pieces() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function doRender() {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function _enableHoverLink(itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function _getItemAlign() {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function _renderEndsText(group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function _getViewData() {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function _createItemSymbol(group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function _onItemClick(piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end'\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar markLineTransform = function markLineTransform(seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\n\n\nvar markAreaTransform = function markAreaTransform(seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function setCurrentIndex(currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function getCurrentIndex() {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function isIndexMax() {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function setPlayState(state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function getPlayState() {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function _initData() {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function getData() {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function getCategories() {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function init(ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clearTimer();\n  },\n  _layout: function _layout(timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function _position(layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function _createAxis(layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function _createGroup(name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function _renderAxisLine(layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function _renderAxisTick(layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function _renderAxisLabel(layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function _renderControl(layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function _renderCurrentPointer(layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function onCreate(pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function onUpdate(pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function _handlePlayClick(nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function _handlePointerDrag(dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function _handlePointerDragend(e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function _pointerChangeTimeline(mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function _doPlayStop() {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function _toAxisCoord(vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function _findNearestTick(axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function _clearTimer() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function _changeTimeline(nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar TimelineAxis = function TimelineAxis(dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function getLabelModel() {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function isHorizontal() {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function optionUpdated() {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5' // textStyle: {},\n        // feature\n\n      }\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function render(toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function updateView(toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function remove(ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function dispose(ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function line(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function bar(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function stack(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function tiled(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function generateNewSeriesTypes(seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\n\n\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function zoom() {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function back() {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\"); // http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\n\n\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function initRootElStyle(el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function encodeHtmlAttribute(s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function rgb2Str(r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function append(parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function remove(parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function getZIndex(zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function parsePercent(value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function setColorAndOpacity(el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function getColorAndAlpha(color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function updateFillNode(el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function updateStrokeNode(el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function updateFillAndStroke(vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function pathDataToString(path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function isImage(img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function getFontStyle(fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function drawRectText(vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function removeRectText(vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function appendRectText(vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function getType() {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function getViewportRoot() {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function getViewportRootOffset() {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function refresh() {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function _paintList(list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function resize(width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function dispose() {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function getWidth() {\n    return this._width;\n  },\n  getHeight: function getHeight() {\n    return this._height;\n  },\n  clear: function clear() {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function _getWidth() {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function _getHeight() {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar ShadowManager = require(\"./helper/ShadowManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function SVGPainter(root, storage, opts, zrId) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(zrId, svgRoot);\n  this.clipPathManager = new ClippathManager(zrId, svgRoot);\n  this.shadowManager = new ShadowManager(zrId, svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function getType() {\n    return 'svg';\n  },\n  getViewportRoot: function getViewportRoot() {\n    return this._viewport;\n  },\n  getViewportRootOffset: function getViewportRootOffset() {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function refresh() {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  setBackgroundColor: function setBackgroundColor(backgroundColor) {\n    // TODO gradient\n    this._viewport.style.background = backgroundColor;\n  },\n  _paintList: function _paintList(list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    this.shadowManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n      var svgElement = getSvgElement(displayable) || getTextSvgElement(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient and shadow\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n            this.shadowManager.update(svgElement, displayable);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.addWithoutUpdate(prevSvgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.shadowManager.markUsed(displayable);\n          this.shadowManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this.shadowManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function _getDefs(isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function resize(width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function getWidth() {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function getHeight() {\n    return this._height;\n  },\n  _getSize: function _getSize(whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function dispose() {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function clear() {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToDataUrl: function pathToDataUrl() {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:image/svg+xml;charset=UTF-8,' + html;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function diff(oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function equals(a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function extractCommon(basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function tokenize(value) {\n    return value.slice();\n  },\n  join: function join(value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\n\n\nfunction GradientManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\n\n\nfunction ClippathManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr' + this._zrId + '-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    clipPathEl.innerHTML = '';\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n/**\n * @file Manages SVG shadow elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG shadow elements.\n *\n * @class\n * @extends Definable\n * @param   {number}     zrId    zrender instance id\n * @param   {SVGElement} svgRoot root of SVG document\n */\n\n\nfunction ShadowManager(zrId, svgRoot) {\n  Definable.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom');\n}\n\nzrUtil.inherits(ShadowManager, Definable);\n/**\n * Create new shadow DOM for fill or stroke if not exist,\n * but will not update shadow if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nShadowManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && hasShadow(displayable.style)) {\n    var style = displayable.style; // Create dom in <defs> if not exists\n\n    var dom;\n\n    if (style._shadowDom) {\n      // Gradient exists\n      dom = style._shadowDom;\n      var defs = this.getDefs(true);\n\n      if (!defs.contains(style._shadowDom)) {\n        // _shadowDom is no longer in defs, recreate\n        this.addDom(dom);\n      }\n    } else {\n      // New dom\n      dom = this.add(displayable);\n    }\n\n    this.markUsed(displayable);\n    var id = dom.getAttribute('id');\n    svgElement.style.filter = 'url(#' + id + ')';\n  }\n};\n/**\n * Add a new shadow tag in <defs>\n *\n * @param {Displayable} displayable  zrender displayable element\n * @return {SVGFilterElement} created DOM\n */\n\n\nShadowManager.prototype.add = function (displayable) {\n  var dom = this.createElement('filter');\n  var style = displayable.style; // Set dom id with shadow id, since each shadow instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n  style._shadowDomId = style._shadowDomId || this.nextId++;\n  dom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + style._shadowDomId);\n  this.updateDom(displayable, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update shadow.\n *\n * @param {Displayable} displayable  zrender displayable element\n */\n\n\nShadowManager.prototype.update = function (svgElement, displayable) {\n  var style = displayable.style;\n\n  if (hasShadow(style)) {\n    var that = this;\n    Definable.prototype.update.call(this, displayable, function (style) {\n      that.updateDom(displayable, style._shadowDom);\n    });\n  } else {\n    // Remove shadow\n    this.remove(svgElement, style);\n  }\n};\n/**\n * Remove DOM and clear parent filter\n */\n\n\nShadowManager.prototype.remove = function (svgElement, style) {\n  if (style._shadowDomId != null) {\n    this.removeDom(style);\n    svgElement.style.filter = '';\n  }\n};\n/**\n * Update shadow dom\n *\n * @param {Displayable} displayable  zrender displayable element\n * @param {SVGFilterElement} dom DOM to update\n */\n\n\nShadowManager.prototype.updateDom = function (displayable, dom) {\n  var domChild = dom.getElementsByTagName('feDropShadow');\n\n  if (domChild.length === 0) {\n    domChild = this.createElement('feDropShadow');\n  } else {\n    domChild = domChild[0];\n  }\n\n  var style = displayable.style;\n  var scaleX = displayable.scale ? displayable.scale[0] || 1 : 1;\n  var scaleY = displayable.scale ? displayable.scale[1] || 1 : 1; // TODO: textBoxShadowBlur is not supported yet\n\n  var offsetX, offsetY, blur, color;\n\n  if (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY) {\n    offsetX = style.shadowOffsetX || 0;\n    offsetY = style.shadowOffsetY || 0;\n    blur = style.shadowBlur;\n    color = style.shadowColor;\n  } else if (style.textShadowBlur) {\n    offsetX = style.textShadowOffsetX || 0;\n    offsetY = style.textShadowOffsetY || 0;\n    blur = style.textShadowBlur;\n    color = style.textShadowColor;\n  } else {\n    // Remove shadow\n    this.removeDom(dom, style);\n    return;\n  }\n\n  domChild.setAttribute('dx', offsetX / scaleX);\n  domChild.setAttribute('dy', offsetY / scaleY);\n  domChild.setAttribute('flood-color', color); // Divide by two here so that it looks the same as in canvas\n  // See: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-shadowblur\n\n  var stdDx = blur / 2 / scaleX;\n  var stdDy = blur / 2 / scaleY;\n  var stdDeviation = stdDx + ' ' + stdDy;\n  domChild.setAttribute('stdDeviation', stdDeviation); // Fix filter clipping problem\n\n  dom.setAttribute('x', '-100%');\n  dom.setAttribute('y', '-100%');\n  dom.setAttribute('width', Math.ceil(blur / 2 * 200) + '%');\n  dom.setAttribute('height', Math.ceil(blur / 2 * 200) + '%');\n  dom.appendChild(domChild); // Store dom element in shadow, to avoid creating multiple\n  // dom instances for the same shadow element\n\n  style._shadowDom = dom;\n};\n/**\n * Mark a single shadow to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nShadowManager.prototype.markUsed = function (displayable) {\n  var style = displayable.style;\n\n  if (style && style._shadowDom) {\n    Definable.prototype.markUsed.call(this, style._shadowDom);\n  }\n};\n\nfunction hasShadow(style) {\n  // TODO: textBoxShadowBlur is not supported yet\n  return style && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY || style.textShadowBlur || style.textShadowOffsetX || style.textShadowOffsetY);\n}\n\nvar _default = ShadowManager;\nmodule.exports = _default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _fastDeepEqual = require('fast-deep-equal');\n\nvar _fastDeepEqual2 = _interopRequireDefault(_fastDeepEqual);\n\nvar _sizeSensor = require('size-sensor');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EchartsReactCore = function (_Component) {\n  _inherits(EchartsReactCore, _Component);\n\n  function EchartsReactCore(props) {\n    _classCallCheck(this, EchartsReactCore);\n\n    var _this = _possibleConstructorReturn(this, (EchartsReactCore.__proto__ || Object.getPrototypeOf(EchartsReactCore)).call(this, props));\n\n    _this.getEchartsInstance = function () {\n      return _this.echartsLib.getInstanceByDom(_this.echartsElement) || _this.echartsLib.init(_this.echartsElement, _this.props.theme, _this.props.opts);\n    };\n\n    _this.dispose = function () {\n      if (_this.echartsElement) {\n        try {\n          (0, _sizeSensor.clear)(_this.echartsElement);\n        } catch (e) {\n          console.warn(e);\n        } // dispose echarts instance\n\n\n        _this.echartsLib.dispose(_this.echartsElement);\n      }\n    };\n\n    _this.rerender = function () {\n      var _this$props = _this.props,\n          onEvents = _this$props.onEvents,\n          onChartReady = _this$props.onChartReady;\n\n      var echartObj = _this.renderEchartDom();\n\n      _this.bindEvents(echartObj, onEvents || {}); // on chart ready\n\n\n      if (typeof onChartReady === 'function') _this.props.onChartReady(echartObj); // on resize\n\n      if (_this.echartsElement) {\n        (0, _sizeSensor.bind)(_this.echartsElement, function () {\n          try {\n            echartObj.resize();\n          } catch (e) {\n            console.warn(e);\n          }\n        });\n      }\n    };\n\n    _this.bindEvents = function (instance, events) {\n      var _bindEvent = function _bindEvent(eventName, func) {\n        // ignore the event config which not satisfy\n        if (typeof eventName === 'string' && typeof func === 'function') {\n          // binding event\n          // instance.off(eventName); // 已经 dispose 在重建，所以无需 off 操作\n          instance.on(eventName, function (param) {\n            func(param, instance);\n          });\n        }\n      }; // loop and bind\n\n\n      for (var eventName in events) {\n        if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n          _bindEvent(eventName, events[eventName]);\n        }\n      }\n    };\n\n    _this.renderEchartDom = function () {\n      // init the echart object\n      var echartObj = _this.getEchartsInstance(); // set the echart option\n\n\n      echartObj.setOption(_this.props.option, _this.props.notMerge || false, _this.props.lazyUpdate || false); // set loading mask\n\n      if (_this.props.showLoading) echartObj.showLoading(_this.props.loadingOption || null);else echartObj.hideLoading();\n      return echartObj;\n    };\n\n    _this.echartsLib = _this.props.echarts; // the echarts object.\n\n    _this.echartsElement = null; // echarts div element\n\n    return _this;\n  } // first add\n\n\n  _createClass(EchartsReactCore, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.rerender();\n    } // update\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // 以下属性修改的时候，需要 dispose 之后再新建\n      // 1. 切换 theme 的时候\n      // 2. 修改 opts 的时候\n      // 3. 修改 onEvents 的时候，这样可以取消所以之前绑定的事件 issue #151\n      if (prevProps.theme !== this.props.theme || !(0, _fastDeepEqual2['default'])(prevProps.opts, this.props.opts) || !(0, _fastDeepEqual2['default'])(prevProps.onEvents, this.props.onEvents)) {\n        this.dispose();\n        this.rerender(); // 重建\n\n        return;\n      } // 当这些属性保持不变的时候，不 setOption\n\n\n      var pickKeys = ['option', 'notMerge', 'lazyUpdate', 'showLoading', 'loadingOption'];\n\n      if ((0, _fastDeepEqual2['default'])((0, _utils.pick)(this.props, pickKeys), (0, _utils.pick)(prevProps, pickKeys))) {\n        return;\n      } // 判断是否需要 setOption，由开发者自己来确定。默认为 true\n\n\n      if (typeof this.props.shouldSetOption === 'function' && !this.props.shouldSetOption(prevProps, this.props)) {\n        return;\n      }\n\n      var echartObj = this.renderEchartDom(); // 样式修改的时候，可能会导致大小变化，所以触发一下 resize\n\n      if (!(0, _fastDeepEqual2['default'])(prevProps.style, this.props.style) || !(0, _fastDeepEqual2['default'])(prevProps.className, this.props.className)) {\n        try {\n          echartObj.resize();\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    } // remove\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.dispose();\n    } // return the echart object\n    // dispose echarts and clear size-sensor\n    // bind the events\n    // render the dom\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          style = _props.style,\n          className = _props.className;\n\n      var newStyle = _extends({\n        height: 300\n      }, style); // for render\n\n\n      return _react2['default'].createElement('div', {\n        ref: function ref(e) {\n          _this2.echartsElement = e;\n        },\n        style: newStyle,\n        className: 'echarts-for-react ' + className\n      });\n    }\n  }]);\n\n  return EchartsReactCore;\n}(_react.Component);\n\nexports['default'] = EchartsReactCore;\nEchartsReactCore.propTypes = {\n  option: _propTypes2['default'].object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  echarts: _propTypes2['default'].object,\n  // eslint-disable-line react/forbid-prop-types\n  notMerge: _propTypes2['default'].bool,\n  lazyUpdate: _propTypes2['default'].bool,\n  style: _propTypes2['default'].object,\n  // eslint-disable-line react/forbid-prop-types\n  className: _propTypes2['default'].string,\n  theme: _propTypes2['default'].string,\n  onChartReady: _propTypes2['default'].func,\n  showLoading: _propTypes2['default'].bool,\n  loadingOption: _propTypes2['default'].object,\n  // eslint-disable-line react/forbid-prop-types\n  onEvents: _propTypes2['default'].object,\n  // eslint-disable-line react/forbid-prop-types\n  opts: _propTypes2['default'].shape({\n    devicePixelRatio: _propTypes2['default'].number,\n    renderer: _propTypes2['default'].oneOf(['canvas', 'svg']),\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].oneOf([null, undefined, 'auto'])]),\n    height: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].oneOf([null, undefined, 'auto'])])\n  }),\n  shouldSetOption: _propTypes2['default'].func\n};\nEchartsReactCore.defaultProps = {\n  echarts: {},\n  notMerge: false,\n  lazyUpdate: false,\n  style: {},\n  className: '',\n  theme: null,\n  onChartReady: function onChartReady() {},\n  showLoading: false,\n  loadingOption: null,\n  onEvents: {},\n  opts: {},\n  shouldSetOption: function shouldSetOption() {\n    return true;\n  }\n};","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a),\n        arrB = isArray(b),\n        i,\n        length,\n        key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n    var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    var keys = keyList(a);\n    length = keys.length;\n    if (length !== keyList(b).length) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (!hasProp.call(b, keys[i])) return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = exports.bind = undefined;\n\nvar _sensorPool = require('./sensorPool');\n/**\n * 对外暴露的 bind 方法\n * @param {*} element\n * @param {*} cb\n */\n\n\nvar bind = exports.bind = function bind(element, cb) {\n  var sensor = (0, _sensorPool.getSensor)(element); // 绑定新的方法\n\n  sensor.bind(cb); // 返回 unbind 方法\n\n  return function () {\n    sensor.unbind(cb);\n  };\n};\n/**\n * 清空一个 element 中的所有监听\n * @param element\n */\n\n/**\n * Created by hustcc on 18/6/9.[高考时间]\n * Contract: i@hust.cc\n */\n\n\nvar clear = exports.clear = function clear(element) {\n  var sensor = (0, _sensorPool.getSensor)(element);\n  (0, _sensorPool.removeSensor)(sensor);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSensor = exports.getSensor = undefined;\n\nvar _id = require('./id');\n\nvar _id2 = _interopRequireDefault(_id);\n\nvar _sensors = require('./sensors');\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * all the sensor objects.\n * 传感器池子\n */\n\n\nvar Sensors = {};\n/**\n * 获取 sensor\n * @param element\n * @returns {*}\n */\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar getSensor = exports.getSensor = function getSensor(element) {\n  var sensorId = element.getAttribute(_constant.SizeSensorId); // 1. 已经存在，则直接取这个 sensor\n\n  if (sensorId && Sensors[sensorId]) {\n    return Sensors[sensorId];\n  } // 2. 不存在则创建\n\n\n  var newId = (0, _id2.default)();\n  element.setAttribute(_constant.SizeSensorId, newId);\n  var sensor = (0, _sensors.createSensor)(element); // 添加到池子中\n\n  Sensors[newId] = sensor;\n  return sensor;\n};\n/**\n * 移除 sensor\n * @param sensor\n */\n\n\nvar removeSensor = exports.removeSensor = function removeSensor(sensor) {\n  var sensorId = sensor.element.getAttribute(_constant.SizeSensorId); // 移除 attribute\n\n  sensor.element.removeAttribute(_constant.SizeSensorId); // 移除 sensor 对应的 事件 和 dom 结构\n\n  sensor.destroy(); // 存在则从 pool 中移除\n\n  if (sensorId && Sensors[sensorId]) {\n    delete Sensors[sensorId];\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar id = 1;\n\nexports.default = function () {\n  return \"\" + id++;\n};\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = undefined;\n\nvar _object = require('./object');\n\nvar _resizeObserver = require('./resizeObserver');\n/**\n * 传感器使用策略\n */\n\n/**\n * Created by hustcc on 18/7/5.\n * Contract: i@hust.cc\n */\n\n\nvar createSensorFunc = function createSensorFunc() {\n  return typeof ResizeObserver !== 'undefined' ? _resizeObserver.createSensor : _object.createSensor;\n};\n\nvar createSensor = exports.createSensor = createSensorFunc();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = undefined;\n\nvar _debounce = require('../debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _constant = require('../constant');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\n\nvar createSensor = exports.createSensor = function createSensor(element) {\n  // 感应器\n  var sensor = undefined; // callback\n\n  var listeners = [];\n  /**\n   * 创建 sensor 的 object DOM\n   * @returns {HTMLObjectElement}\n   */\n\n  var newSensor = function newSensor() {\n    // 调整样式\n    if (getComputedStyle(element).position === 'static') {\n      element.style.position = 'relative';\n    }\n\n    var obj = document.createElement('object');\n\n    obj.onload = function () {\n      obj.contentDocument.defaultView.addEventListener('resize', resizeListener); // 直接触发一次 resize\n\n      resizeListener();\n    };\n\n    obj.setAttribute('style', _constant.SensorStyle);\n    obj.setAttribute('class', _constant.SensorClassName);\n    obj.type = 'text/html'; // 添加到 dom 结构中\n\n    element.appendChild(obj); // 对于 ie 需要滞后，否则白屏，所以放到后面\n\n    obj.data = 'about:blank';\n    return obj;\n  };\n  /**\n   * 统一触发 listeners\n   */\n\n\n  var resizeListener = (0, _debounce2.default)(function () {\n    // 依次触发执行\n    listeners.forEach(function (listener) {\n      listener(element);\n    });\n  });\n  /**\n   * 监听某一个 callback\n   * @param cb\n   */\n\n  var bind = function bind(cb) {\n    // 如果不存在 sensor，则创建一个 object\n    if (!sensor) {\n      sensor = newSensor();\n    }\n\n    if (listeners.indexOf(cb) === -1) {\n      listeners.push(cb);\n    }\n  };\n  /**\n   * 完全 destroy\n   */\n\n\n  var destroy = function destroy() {\n    if (sensor && sensor.parentNode) {\n      if (sensor.contentDocument) {\n        // 移除事件\n        sensor.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n      } // 移除 dom\n\n\n      sensor.parentNode.removeChild(sensor); // 初始化\n\n      sensor = undefined;\n      listeners = [];\n    }\n  };\n  /**\n   * 取消绑定\n   * @param cb\n   */\n\n\n  var unbind = function unbind(cb) {\n    var idx = listeners.indexOf(cb);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    } // 不存在 listener，并且存在 sensor object\n    // 则移除 object\n\n\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = undefined;\n\nvar _debounce = require('../debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar createSensor = exports.createSensor = function createSensor(element) {\n  // 感应器\n  var sensor = undefined; // callback\n\n  var listeners = [];\n  /**\n   * 统一触发 listeners\n   */\n\n  var resizeListener = (0, _debounce2.default)(function () {\n    // 依次触发执行\n    listeners.forEach(function (listener) {\n      listener(element);\n    });\n  });\n  /**\n   * 创建 sensor 的 object DOM\n   * @returns {HTMLObjectElement}\n   */\n\n  var newSensor = function newSensor() {\n    var sensor = new ResizeObserver(resizeListener); // 监听 element\n\n    sensor.observe(element); // 直接触发一次\n\n    resizeListener();\n    return sensor;\n  };\n  /**\n   * 监听某一个 callback\n   * @param cb\n   */\n\n\n  var bind = function bind(cb) {\n    if (!sensor) {\n      sensor = newSensor();\n    }\n\n    if (listeners.indexOf(cb) === -1) {\n      listeners.push(cb);\n    }\n  };\n  /**\n   * 完全 destroy\n   */\n\n\n  var destroy = function destroy() {\n    sensor.disconnect();\n    listeners = [];\n    sensor = undefined;\n  };\n  /**\n   * 取消绑定\n   * @param cb\n   */\n\n\n  var unbind = function unbind(cb) {\n    var idx = listeners.indexOf(cb);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    } // 不存在 listener，并且存在 sensor object\n    // 则移除 object\n\n\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n};\n/**\n * Created by hustcc on 18/7/5.\n * Contract: i@hust.cc\n */","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable import/prefer-default-export */\n\nvar pick = exports.pick = function pick(obj, keys) {\n  var r = {};\n  keys.forEach(function (key) {\n    r[key] = obj[key];\n  });\n  return r;\n};"],"sourceRoot":""}